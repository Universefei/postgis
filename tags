!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	regress/sfcgal/tickets.sql	/^CREATE TABLE A ( geom geometry(MultiPolygon, 4326),$/;"	t
A	regress/tickets.sql	/^CREATE TABLE A ( geom geometry(MultiPolygon, 4326),$/;"	t
A.geog	regress/sfcgal/tickets.sql	/^                 geog geography(MultiPolygon, 4326) );$/;"	F
A.geog	regress/tickets.sql	/^                 geog geography(MultiPolygon, 4326) );$/;"	F
A.geom	regress/sfcgal/tickets.sql	/^CREATE TABLE A ( geom geometry(MultiPolygon, 4326),$/;"	F
A.geom	regress/tickets.sql	/^CREATE TABLE A ( geom geometry(MultiPolygon, 4326),$/;"	F
ABORT_ON_AUTH_FAILURE	extras/WFS_locks/WFS_locks.c	8;"	d	file:
ABORT_ON_AUTH_FAILURE	postgis/long_xact.c	22;"	d	file:
ABOVE	postgis/gserialized_gist_nd.c	1045;"	d	file:
ADDLIST	postgis/gserialized_gist_2d.c	2004;"	d	file:
ADD_OPEN_GIS_GEOMETRY_COLUMN_STATEMENT	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAO.java	/^    public static final String ADD_OPEN_GIS_GEOMETRY_COLUMN_STATEMENT = $/;"	f	interface:PostGisGeometryDAO
ALL	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    public static String ALL = "ALL", ONLY10 = "ONLY10", EQUAL10 = "EQUAL10";$/;"	f	class:JtsTestParser
ALL	java/jdbc/src/examples/TestParser.java	/^    public static String ALL = "ALL", ONLY10 = "ONLY10", EQUAL10 = "EQUAL10";$/;"	f	class:TestParser
ALLTYPES	java/jdbc/src/org/postgis/Geometry.java	/^	public static final String[] ALLTYPES = new String[] {$/;"	f	class:Geometry
APPEND_MODE	loader/shp2pgsql-gui.c	/^	APPEND_MODE,$/;"	e	enum:__anon58	file:
ARR_OVERHEAD_NONULLS	libpgcommon/pgsql_compat.h	11;"	d
AddPJHashEntry	libpgcommon/lwgeom_transform.c	/^static void AddPJHashEntry(MemoryContext mcxt, projPJ projection)$/;"	f	file:
AddPrepGeomHashEntry	postgis/lwgeom_geos_prepared.c	/^AddPrepGeomHashEntry(PrepGeomHashEntry pghe)$/;"	f	file:
AddToPROJ4Cache	libpgcommon/lwgeom_transform.c	/^void AddToPROJ4Cache(Proj4Cache cache, int srid, int other_srid) {$/;"	f
AddToPROJ4SRSCache	libpgcommon/lwgeom_transform.c	/^AddToPROJ4SRSCache(PROJ4PortalCache *PROJ4Cache, int srid, int other_srid)$/;"	f	file:
ApplicationGeoLayerException	java/ejb2/src/com/geodetix/geo/exception/ApplicationGeoLayerException.java	/^    public ApplicationGeoLayerException() {$/;"	m	class:ApplicationGeoLayerException
ApplicationGeoLayerException	java/ejb2/src/com/geodetix/geo/exception/ApplicationGeoLayerException.java	/^    public ApplicationGeoLayerException(Exception e) {$/;"	m	class:ApplicationGeoLayerException
ApplicationGeoLayerException	java/ejb2/src/com/geodetix/geo/exception/ApplicationGeoLayerException.java	/^    public ApplicationGeoLayerException(String msg) {$/;"	m	class:ApplicationGeoLayerException
ApplicationGeoLayerException	java/ejb2/src/com/geodetix/geo/exception/ApplicationGeoLayerException.java	/^public class ApplicationGeoLayerException extends Exception {$/;"	c
Array	doc/html/jquery.js	/^(function(){var l=this,g,y=l.jQuery,p=l.$,o=l.jQuery=l.$=function(E,F){return new o.fn.init(E,F)},D=\/^[^<]*(<(.|\\s)+>)[^>]*$|^#([\\w-]+)$\/,f=\/^.[^:#\\[\\.,]*$\/;o.fn=o.prototype={init:function(E,H){E=E||document;if(E.nodeType){this[0]=E;this.length=1;this.context=E;return this}if(typeof E==="string"){var G=D.exec(E);if(G&&(G[1]||!H)){if(G[1]){E=o.clean([G[1]],H)}else{var I=document.getElementById(G[3]);if(I&&I.id!=G[3]){return o().find(E)}var F=o(I||[]);F.context=document;F.selector=E;return F}}else{return o(H).find(E)}}else{if(o.isFunction(E)){return o(document).ready(E)}}if(E.selector&&E.context){this.selector=E.selector;this.context=E.context}return this.setArray(o.isArray(E)?E:o.makeArray(E))},selector:"",jquery:"1.3.2",size:function(){return this.length},get:function(E){return E===g?Array.prototype.slice.call(this):this[E]},pushStack:function(F,H,E){var G=o(F);G.prevObject=this;G.context=this.context;if(H==="find"){G.selector=this.selector+(this.selector?" ":"")+E}else{if(H){G.selector=this.selector+"."+H+"("+E+")"}}return G},setArray:function(E){this.length=0;Array.prototype.push.apply(this,E);return this},each:function(F,E){return o.each(this,F,E)},index:function(E){return o.inArray(E&&E.jquery?E[0]:E,this)},attr:function(F,H,G){var E=F;if(typeof F==="string"){if(H===g){return this[0]&&o[G||"attr"](this[0],F)}else{E={};E[F]=H}}return this.each(function(I){for(F in E){o.attr(G?this.style:this,F,o.prop(this,E[F],G,I,F))}})},css:function(E,F){if((E=="width"||E=="height")&&parseFloat(F)<0){F=g}return this.attr(E,F,"curCSS")},text:function(F){if(typeof F!=="object"&&F!=null){return this.empty().append((this[0]&&this[0].ownerDocument||document).createTextNode(F))}var E="";o.each(F||this,function(){o.each(this.childNodes,function(){if(this.nodeType!=8){E+=this.nodeType!=1?this.nodeValue:o.fn.text([this])}})});return E},wrapAll:function(E){if(this[0]){var F=o(E,this[0].ownerDocument).clone();if(this[0].parentNode){F.insertBefore(this[0])}F.map(function(){var G=this;while(G.firstChild){G=G.firstChild}return G}).append(this)}return this},wrapInner:function(E){return this.each(function(){o(this).contents().wrapAll(E)})},wrap:function(E){return this.each(function(){o(this).wrapAll(E)})},append:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.appendChild(E)}})},prepend:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.insertBefore(E,this.firstChild)}})},before:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this)})},after:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this.nextSibling)})},end:function(){return this.prevObject||o([])},push:[].push,sort:[].sort,splice:[].splice,find:function(E){if(this.length===1){var F=this.pushStack([],"find",E);F.length=0;o.find(E,this[0],F);return F}else{return this.pushStack(o.unique(o.map(this,function(G){return o.find(E,G)})),"find",E)}},clone:function(G){var E=this.map(function(){if(!o.support.noCloneEvent&&!o.isXMLDoc(this)){var I=this.outerHTML;if(!I){var J=this.ownerDocument.createElement("div");J.appendChild(this.cloneNode(true));I=J.innerHTML}return o.clean([I.replace(\/ jQuery\\d+="(?:\\d+|null)"\/g,"").replace(\/^\\s*\/,"")])[0]}else{return this.cloneNode(true)}});if(G===true){var H=this.find("*").andSelf(),F=0;E.find("*").andSelf().each(function(){if(this.nodeName!==H[F].nodeName){return}var I=o.data(H[F],"events");for(var K in I){for(var J in I[K]){o.event.add(this,K,I[K][J],I[K][J].data)}}F++})}return E},filter:function(E){return this.pushStack(o.isFunction(E)&&o.grep(this,function(G,F){return E.call(G,F)})||o.multiFilter(E,o.grep(this,function(F){return F.nodeType===1})),"filter",E)},closest:function(E){var G=o.expr.match.POS.test(E)?o(E):null,F=0;return this.map(function(){var H=this;while(H&&H.ownerDocument){if(G?G.index(H)>-1:o(H).is(E)){o.data(H,"closest",F);return H}H=H.parentNode;F++}})},not:function(E){if(typeof E==="string"){if(f.test(E)){return this.pushStack(o.multiFilter(E,this,true),"not",E)}else{E=o.multiFilter(E,this)}}var F=E.length&&E[E.length-1]!==g&&!E.nodeType;return this.filter(function(){return F?o.inArray(this,E)<0:this!=E})},add:function(E){return this.pushStack(o.unique(o.merge(this.get(),typeof E==="string"?o(E):o.makeArray(E))))},is:function(E){return !!E&&o.multiFilter(E,this).length>0},hasClass:function(E){return !!E&&this.is("."+E)},val:function(K){if(K===g){var E=this[0];if(E){if(o.nodeName(E,"option")){return(E.attributes.value||{}).specified?E.value:E.text}if(o.nodeName(E,"select")){var I=E.selectedIndex,L=[],M=E.options,H=E.type=="select-one";if(I<0){return null}for(var F=H?I:0,J=H?I+1:M.length;F<J;F++){var G=M[F];if(G.selected){K=o(G).val();if(H){return K}L.push(K)}}return L}return(E.value||"").replace(\/\\r\/g,"")}return g}if(typeof K==="number"){K+=""}return this.each(function(){if(this.nodeType!=1){return}if(o.isArray(K)&&\/radio|checkbox\/.test(this.type)){this.checked=(o.inArray(this.value,K)>=0||o.inArray(this.name,K)>=0)}else{if(o.nodeName(this,"select")){var N=o.makeArray(K);o("option",this).each(function(){this.selected=(o.inArray(this.value,N)>=0||o.inArray(this.text,N)>=0)});if(!N.length){this.selectedIndex=-1}}else{this.value=K}}})},html:function(E){return E===g?(this[0]?this[0].innerHTML.replace(\/ jQuery\\d+="(?:\\d+|null)"\/g,""):null):this.empty().append(E)},replaceWith:function(E){return this.after(E).remove()},eq:function(E){return this.slice(E,+E+1)},slice:function(){return this.pushStack(Array.prototype.slice.apply(this,arguments),"slice",Array.prototype.slice.call(arguments).join(","))},map:function(E){return this.pushStack(o.map(this,function(G,F){return E.call(G,F,G)}))},andSelf:function(){return this.add(this.prevObject)},domManip:function(J,M,L){if(this[0]){var I=(this[0].ownerDocument||this[0]).createDocumentFragment(),F=o.clean(J,(this[0].ownerDocument||this[0]),I),H=I.firstChild;if(H){for(var G=0,E=this.length;G<E;G++){L.call(K(this[G],H),this.length>1||G>0?I.cloneNode(true):I)}}if(F){o.each(F,z)}}return this;function K(N,O){return M&&o.nodeName(N,"table")&&o.nodeName(O,"tr")?(N.getElementsByTagName("tbody")[0]||N.appendChild(N.ownerDocument.createElement("tbody"))):N}}};o.fn.init.prototype=o.fn;function z(E,F){if(F.src){o.ajax({url:F.src,async:false,dataType:"script"})}else{o.globalEval(F.text||F.textContent||F.innerHTML||"")}if(F.parentNode){F.parentNode.removeChild(F)}}function e(){return +new Date}o.extend=o.fn.extend=function(){var J=arguments[0]||{},H=1,I=arguments.length,E=false,G;if(typeof J==="boolean"){E=J;J=arguments[1]||{};H=2}if(typeof J!=="object"&&!o.isFunction(J)){J={}}if(I==H){J=this;--H}for(;H<I;H++){if((G=arguments[H])!=null){for(var F in G){var K=J[F],L=G[F];if(J===L){continue}if(E&&L&&typeof L==="object"&&!L.nodeType){J[F]=o.extend(E,K||(L.length!=null?[]:{}),L)}else{if(L!==g){J[F]=L}}}}}return J};var b=\/z-?index|font-?weight|opacity|zoom|line-?height\/i,q=document.defaultView||{},s=Object.prototype.toString;o.extend({noConflict:function(E){l.$=p;if(E){l.jQuery=y}return o},isFunction:function(E){return s.call(E)==="[object Function]"},isArray:function(E){return s.call(E)==="[object Array]"},isXMLDoc:function(E){return E.nodeType===9&&E.documentElement.nodeName!=="HTML"||!!E.ownerDocument&&o.isXMLDoc(E.ownerDocument)},globalEval:function(G){if(G&&\/\\S\/.test(G)){var F=document.getElementsByTagName("head")[0]||document.documentElement,E=document.createElement("script");E.type="text\/javascript";if(o.support.scriptEval){E.appendChild(document.createTextNode(G))}else{E.text=G}F.insertBefore(E,F.firstChild);F.removeChild(E)}},nodeName:function(F,E){return F.nodeName&&F.nodeName.toUpperCase()==E.toUpperCase()},each:function(G,K,F){var E,H=0,I=G.length;if(F){if(I===g){for(E in G){if(K.apply(G[E],F)===false){break}}}else{for(;H<I;){if(K.apply(G[H++],F)===false){break}}}}else{if(I===g){for(E in G){if(K.call(G[E],E,G[E])===false){break}}}else{for(var J=G[0];H<I&&K.call(J,H,J)!==false;J=G[++H]){}}}return G},prop:function(H,I,G,F,E){if(o.isFunction(I)){I=I.call(H,F)}return typeof I==="number"&&G=="curCSS"&&!b.test(E)?I+"px":I},className:{add:function(E,F){o.each((F||"").split(\/\\s+\/),function(G,H){if(E.nodeType==1&&!o.className.has(E.className,H)){E.className+=(E.className?" ":"")+H}})},remove:function(E,F){if(E.nodeType==1){E.className=F!==g?o.grep(E.className.split(\/\\s+\/),function(G){return !o.className.has(F,G)}).join(" "):""}},has:function(F,E){return F&&o.inArray(E,(F.className||F).toString().split(\/\\s+\/))>-1}},swap:function(H,G,I){var E={};for(var F in G){E[F]=H.style[F];H.style[F]=G[F]}I.call(H);for(var F in G){H.style[F]=E[F]}},css:function(H,F,J,E){if(F=="width"||F=="height"){var L,G={position:"absolute",visibility:"hidden",display:"block"},K=F=="width"?["Left","Right"]:["Top","Bottom"];function I(){L=F=="width"?H.offsetWidth:H.offsetHeight;if(E==="border"){return}o.each(K,function(){if(!E){L-=parseFloat(o.curCSS(H,"padding"+this,true))||0}if(E==="margin"){L+=parseFloat(o.curCSS(H,"margin"+this,true))||0}else{L-=parseFloat(o.curCSS(H,"border"+this+"Width",true))||0}})}if(H.offsetWidth!==0){I()}else{o.swap(H,G,I)}return Math.max(0,Math.round(L))}return o.curCSS(H,F,J)},curCSS:function(I,F,G){var L,E=I.style;if(F=="opacity"&&!o.support.opacity){L=o.attr(E,"opacity");return L==""?"1":L}if(F.match(\/float\/i)){F=w}if(!G&&E&&E[F]){L=E[F]}else{if(q.getComputedStyle){if(F.match(\/float\/i)){F="float"}F=F.replace(\/([A-Z])\/g,"-$1").toLowerCase();var M=q.getComputedStyle(I,null);if(M){L=M.getPropertyValue(F)}if(F=="opacity"&&L==""){L="1"}}else{if(I.currentStyle){var J=F.replace(\/\\-(\\w)\/g,function(N,O){return O.toUpperCase()});L=I.currentStyle[F]||I.currentStyle[J];if(!\/^\\d+(px)?$\/i.test(L)&&\/^\\d\/.test(L)){var H=E.left,K=I.runtimeStyle.left;I.runtimeStyle.left=I.currentStyle.left;E.left=L||0;L=E.pixelLeft+"px";E.left=H;I.runtimeStyle.left=K}}}}return L},clean:function(F,K,I){K=K||document;if(typeof K.createElement==="undefined"){K=K.ownerDocument||K[0]&&K[0].ownerDocument||document}if(!I&&F.length===1&&typeof F[0]==="string"){var H=\/^<(\\w+)\\s*\\\/?>$\/.exec(F[0]);if(H){return[K.createElement(H[1])]}}var G=[],E=[],L=K.createElement("div");o.each(F,function(P,S){if(typeof S==="number"){S+=""}if(!S){return}if(typeof S==="string"){S=S.replace(\/(<(\\w+)[^>]*?)\\\/>\/g,function(U,V,T){return T.match(\/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$\/i)?U:V+"><\/"+T+">"});var O=S.replace(\/^\\s+\/,"").substring(0,10).toLowerCase();var Q=!O.indexOf("<opt")&&[1,"<select multiple='multiple'>","<\/select>"]||!O.indexOf("<leg")&&[1,"<fieldset>","<\/fieldset>"]||O.match(\/^<(thead|tbody|tfoot|colg|cap)\/)&&[1,"<table>","<\/table>"]||!O.indexOf("<tr")&&[2,"<table><tbody>","<\/tbody><\/table>"]||(!O.indexOf("<td")||!O.indexOf("<th"))&&[3,"<table><tbody><tr>","<\/tr><\/tbody><\/table>"]||!O.indexOf("<col")&&[2,"<table><tbody><\/tbody><colgroup>","<\/colgroup><\/table>"]||!o.support.htmlSerialize&&[1,"div<div>","<\/div>"]||[0,"",""];L.innerHTML=Q[1]+S+Q[2];while(Q[0]--){L=L.lastChild}if(!o.support.tbody){var R=\/<tbody\/i.test(S),N=!O.indexOf("<table")&&!R?L.firstChild&&L.firstChild.childNodes:Q[1]=="<table>"&&!R?L.childNodes:[];for(var M=N.length-1;M>=0;--M){if(o.nodeName(N[M],"tbody")&&!N[M].childNodes.length){N[M].parentNode.removeChild(N[M])}}}if(!o.support.leadingWhitespace&&\/^\\s\/.test(S)){L.insertBefore(K.createTextNode(S.match(\/^\\s*\/)[0]),L.firstChild)}S=o.makeArray(L.childNodes)}if(S.nodeType){G.push(S)}else{G=o.merge(G,S)}});if(I){for(var J=0;G[J];J++){if(o.nodeName(G[J],"script")&&(!G[J].type||G[J].type.toLowerCase()==="text\/javascript")){E.push(G[J].parentNode?G[J].parentNode.removeChild(G[J]):G[J])}else{if(G[J].nodeType===1){G.splice.apply(G,[J+1,0].concat(o.makeArray(G[J].getElementsByTagName("script"))))}I.appendChild(G[J])}}return E}return G},attr:function(J,G,K){if(!J||J.nodeType==3||J.nodeType==8){return g}var H=!o.isXMLDoc(J),L=K!==g;G=H&&o.props[G]||G;if(J.tagName){var F=\/href|src|style\/.test(G);if(G=="selected"&&J.parentNode){J.parentNode.selectedIndex}if(G in J&&H&&!F){if(L){if(G=="type"&&o.nodeName(J,"input")&&J.parentNode){throw"type property can't be changed"}J[G]=K}if(o.nodeName(J,"form")&&J.getAttributeNode(G)){return J.getAttributeNode(G).nodeValue}if(G=="tabIndex"){var I=J.getAttributeNode("tabIndex");return I&&I.specified?I.value:J.nodeName.match(\/(button|input|object|select|textarea)\/i)?0:J.nodeName.match(\/^(a|area)$\/i)&&J.href?0:g}return J[G]}if(!o.support.style&&H&&G=="style"){return o.attr(J.style,"cssText",K)}if(L){J.setAttribute(G,""+K)}var E=!o.support.hrefNormalized&&H&&F?J.getAttribute(G,2):J.getAttribute(G);return E===null?g:E}if(!o.support.opacity&&G=="opacity"){if(L){J.zoom=1;J.filter=(J.filter||"").replace(\/alpha\\([^)]*\\)\/,"")+(parseInt(K)+""=="NaN"?"":"alpha(opacity="+K*100+")")}return J.filter&&J.filter.indexOf("opacity=")>=0?(parseFloat(J.filter.match(\/opacity=([^)]*)\/)[1])\/100)+"":""}G=G.replace(\/-([a-z])\/ig,function(M,N){return N.toUpperCase()});if(L){J[G]=K}return J[G]},trim:function(E){return(E||"").replace(\/^\\s+|\\s+$\/g,"")},makeArray:function(G){var E=[];if(G!=null){var F=G.length;if(F==null||typeof G==="string"||o.isFunction(G)||G.setInterval){E[0]=G}else{while(F){E[--F]=G[F]}}}return E},inArray:function(G,H){for(var E=0,F=H.length;E<F;E++){if(H[E]===G){return E}}return -1},merge:function(H,E){var F=0,G,I=H.length;if(!o.support.getAll){while((G=E[F++])!=null){if(G.nodeType!=8){H[I++]=G}}}else{while((G=E[F++])!=null){H[I++]=G}}return H},unique:function(K){var F=[],E={};try{for(var G=0,H=K.length;G<H;G++){var J=o.data(K[G]);if(!E[J]){E[J]=true;F.push(K[G])}}}catch(I){F=K}return F},grep:function(F,J,E){var G=[];for(var H=0,I=F.length;H<I;H++){if(!E!=!J(F[H],H)){G.push(F[H])}}return G},map:function(E,J){var F=[];for(var G=0,H=E.length;G<H;G++){var I=J(E[G],G);if(I!=null){F[F.length]=I}}return F.concat.apply([],F)}});var C=navigator.userAgent.toLowerCase();o.browser={version:(C.match(\/.+(?:rv|it|ra|ie)[\\\/: ]([\\d.]+)\/)||[0,"0"])[1],safari:\/webkit\/.test(C),opera:\/opera\/.test(C),msie:\/msie\/.test(C)&&!\/opera\/.test(C),mozilla:\/mozilla\/.test(C)&&!\/(compatible|webkit)\/.test(C)};o.each({parent:function(E){return E.parentNode},parents:function(E){return o.dir(E,"parentNode")},next:function(E){return o.nth(E,2,"nextSibling")},prev:function(E){return o.nth(E,2,"previousSibling")},nextAll:function(E){return o.dir(E,"nextSibling")},prevAll:function(E){return o.dir(E,"previousSibling")},siblings:function(E){return o.sibling(E.parentNode.firstChild,E)},children:function(E){return o.sibling(E.firstChild)},contents:function(E){return o.nodeName(E,"iframe")?E.contentDocument||E.contentWindow.document:o.makeArray(E.childNodes)}},function(E,F){o.fn[E]=function(G){var H=o.map(this,F);if(G&&typeof G=="string"){H=o.multiFilter(G,H)}return this.pushStack(o.unique(H),E,G)}});o.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(E,F){o.fn[E]=function(G){var J=[],L=o(G);for(var K=0,H=L.length;K<H;K++){$/;"	c
Array.push	doc/html/jquery.js	/^(function(){var l=this,g,y=l.jQuery,p=l.$,o=l.jQuery=l.$=function(E,F){return new o.fn.init(E,F)},D=\/^[^<]*(<(.|\\s)+>)[^>]*$|^#([\\w-]+)$\/,f=\/^.[^:#\\[\\.,]*$\/;o.fn=o.prototype={init:function(E,H){E=E||document;if(E.nodeType){this[0]=E;this.length=1;this.context=E;return this}if(typeof E==="string"){var G=D.exec(E);if(G&&(G[1]||!H)){if(G[1]){E=o.clean([G[1]],H)}else{var I=document.getElementById(G[3]);if(I&&I.id!=G[3]){return o().find(E)}var F=o(I||[]);F.context=document;F.selector=E;return F}}else{return o(H).find(E)}}else{if(o.isFunction(E)){return o(document).ready(E)}}if(E.selector&&E.context){this.selector=E.selector;this.context=E.context}return this.setArray(o.isArray(E)?E:o.makeArray(E))},selector:"",jquery:"1.3.2",size:function(){return this.length},get:function(E){return E===g?Array.prototype.slice.call(this):this[E]},pushStack:function(F,H,E){var G=o(F);G.prevObject=this;G.context=this.context;if(H==="find"){G.selector=this.selector+(this.selector?" ":"")+E}else{if(H){G.selector=this.selector+"."+H+"("+E+")"}}return G},setArray:function(E){this.length=0;Array.prototype.push.apply(this,E);return this},each:function(F,E){return o.each(this,F,E)},index:function(E){return o.inArray(E&&E.jquery?E[0]:E,this)},attr:function(F,H,G){var E=F;if(typeof F==="string"){if(H===g){return this[0]&&o[G||"attr"](this[0],F)}else{E={};E[F]=H}}return this.each(function(I){for(F in E){o.attr(G?this.style:this,F,o.prop(this,E[F],G,I,F))}})},css:function(E,F){if((E=="width"||E=="height")&&parseFloat(F)<0){F=g}return this.attr(E,F,"curCSS")},text:function(F){if(typeof F!=="object"&&F!=null){return this.empty().append((this[0]&&this[0].ownerDocument||document).createTextNode(F))}var E="";o.each(F||this,function(){o.each(this.childNodes,function(){if(this.nodeType!=8){E+=this.nodeType!=1?this.nodeValue:o.fn.text([this])}})});return E},wrapAll:function(E){if(this[0]){var F=o(E,this[0].ownerDocument).clone();if(this[0].parentNode){F.insertBefore(this[0])}F.map(function(){var G=this;while(G.firstChild){G=G.firstChild}return G}).append(this)}return this},wrapInner:function(E){return this.each(function(){o(this).contents().wrapAll(E)})},wrap:function(E){return this.each(function(){o(this).wrapAll(E)})},append:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.appendChild(E)}})},prepend:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.insertBefore(E,this.firstChild)}})},before:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this)})},after:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this.nextSibling)})},end:function(){return this.prevObject||o([])},push:[].push,sort:[].sort,splice:[].splice,find:function(E){if(this.length===1){var F=this.pushStack([],"find",E);F.length=0;o.find(E,this[0],F);return F}else{return this.pushStack(o.unique(o.map(this,function(G){return o.find(E,G)})),"find",E)}},clone:function(G){var E=this.map(function(){if(!o.support.noCloneEvent&&!o.isXMLDoc(this)){var I=this.outerHTML;if(!I){var J=this.ownerDocument.createElement("div");J.appendChild(this.cloneNode(true));I=J.innerHTML}return o.clean([I.replace(\/ jQuery\\d+="(?:\\d+|null)"\/g,"").replace(\/^\\s*\/,"")])[0]}else{return this.cloneNode(true)}});if(G===true){var H=this.find("*").andSelf(),F=0;E.find("*").andSelf().each(function(){if(this.nodeName!==H[F].nodeName){return}var I=o.data(H[F],"events");for(var K in I){for(var J in I[K]){o.event.add(this,K,I[K][J],I[K][J].data)}}F++})}return E},filter:function(E){return this.pushStack(o.isFunction(E)&&o.grep(this,function(G,F){return E.call(G,F)})||o.multiFilter(E,o.grep(this,function(F){return F.nodeType===1})),"filter",E)},closest:function(E){var G=o.expr.match.POS.test(E)?o(E):null,F=0;return this.map(function(){var H=this;while(H&&H.ownerDocument){if(G?G.index(H)>-1:o(H).is(E)){o.data(H,"closest",F);return H}H=H.parentNode;F++}})},not:function(E){if(typeof E==="string"){if(f.test(E)){return this.pushStack(o.multiFilter(E,this,true),"not",E)}else{E=o.multiFilter(E,this)}}var F=E.length&&E[E.length-1]!==g&&!E.nodeType;return this.filter(function(){return F?o.inArray(this,E)<0:this!=E})},add:function(E){return this.pushStack(o.unique(o.merge(this.get(),typeof E==="string"?o(E):o.makeArray(E))))},is:function(E){return !!E&&o.multiFilter(E,this).length>0},hasClass:function(E){return !!E&&this.is("."+E)},val:function(K){if(K===g){var E=this[0];if(E){if(o.nodeName(E,"option")){return(E.attributes.value||{}).specified?E.value:E.text}if(o.nodeName(E,"select")){var I=E.selectedIndex,L=[],M=E.options,H=E.type=="select-one";if(I<0){return null}for(var F=H?I:0,J=H?I+1:M.length;F<J;F++){var G=M[F];if(G.selected){K=o(G).val();if(H){return K}L.push(K)}}return L}return(E.value||"").replace(\/\\r\/g,"")}return g}if(typeof K==="number"){K+=""}return this.each(function(){if(this.nodeType!=1){return}if(o.isArray(K)&&\/radio|checkbox\/.test(this.type)){this.checked=(o.inArray(this.value,K)>=0||o.inArray(this.name,K)>=0)}else{if(o.nodeName(this,"select")){var N=o.makeArray(K);o("option",this).each(function(){this.selected=(o.inArray(this.value,N)>=0||o.inArray(this.text,N)>=0)});if(!N.length){this.selectedIndex=-1}}else{this.value=K}}})},html:function(E){return E===g?(this[0]?this[0].innerHTML.replace(\/ jQuery\\d+="(?:\\d+|null)"\/g,""):null):this.empty().append(E)},replaceWith:function(E){return this.after(E).remove()},eq:function(E){return this.slice(E,+E+1)},slice:function(){return this.pushStack(Array.prototype.slice.apply(this,arguments),"slice",Array.prototype.slice.call(arguments).join(","))},map:function(E){return this.pushStack(o.map(this,function(G,F){return E.call(G,F,G)}))},andSelf:function(){return this.add(this.prevObject)},domManip:function(J,M,L){if(this[0]){var I=(this[0].ownerDocument||this[0]).createDocumentFragment(),F=o.clean(J,(this[0].ownerDocument||this[0]),I),H=I.firstChild;if(H){for(var G=0,E=this.length;G<E;G++){L.call(K(this[G],H),this.length>1||G>0?I.cloneNode(true):I)}}if(F){o.each(F,z)}}return this;function K(N,O){return M&&o.nodeName(N,"table")&&o.nodeName(O,"tr")?(N.getElementsByTagName("tbody")[0]||N.appendChild(N.ownerDocument.createElement("tbody"))):N}}};o.fn.init.prototype=o.fn;function z(E,F){if(F.src){o.ajax({url:F.src,async:false,dataType:"script"})}else{o.globalEval(F.text||F.textContent||F.innerHTML||"")}if(F.parentNode){F.parentNode.removeChild(F)}}function e(){return +new Date}o.extend=o.fn.extend=function(){var J=arguments[0]||{},H=1,I=arguments.length,E=false,G;if(typeof J==="boolean"){E=J;J=arguments[1]||{};H=2}if(typeof J!=="object"&&!o.isFunction(J)){J={}}if(I==H){J=this;--H}for(;H<I;H++){if((G=arguments[H])!=null){for(var F in G){var K=J[F],L=G[F];if(J===L){continue}if(E&&L&&typeof L==="object"&&!L.nodeType){J[F]=o.extend(E,K||(L.length!=null?[]:{}),L)}else{if(L!==g){J[F]=L}}}}}return J};var b=\/z-?index|font-?weight|opacity|zoom|line-?height\/i,q=document.defaultView||{},s=Object.prototype.toString;o.extend({noConflict:function(E){l.$=p;if(E){l.jQuery=y}return o},isFunction:function(E){return s.call(E)==="[object Function]"},isArray:function(E){return s.call(E)==="[object Array]"},isXMLDoc:function(E){return E.nodeType===9&&E.documentElement.nodeName!=="HTML"||!!E.ownerDocument&&o.isXMLDoc(E.ownerDocument)},globalEval:function(G){if(G&&\/\\S\/.test(G)){var F=document.getElementsByTagName("head")[0]||document.documentElement,E=document.createElement("script");E.type="text\/javascript";if(o.support.scriptEval){E.appendChild(document.createTextNode(G))}else{E.text=G}F.insertBefore(E,F.firstChild);F.removeChild(E)}},nodeName:function(F,E){return F.nodeName&&F.nodeName.toUpperCase()==E.toUpperCase()},each:function(G,K,F){var E,H=0,I=G.length;if(F){if(I===g){for(E in G){if(K.apply(G[E],F)===false){break}}}else{for(;H<I;){if(K.apply(G[H++],F)===false){break}}}}else{if(I===g){for(E in G){if(K.call(G[E],E,G[E])===false){break}}}else{for(var J=G[0];H<I&&K.call(J,H,J)!==false;J=G[++H]){}}}return G},prop:function(H,I,G,F,E){if(o.isFunction(I)){I=I.call(H,F)}return typeof I==="number"&&G=="curCSS"&&!b.test(E)?I+"px":I},className:{add:function(E,F){o.each((F||"").split(\/\\s+\/),function(G,H){if(E.nodeType==1&&!o.className.has(E.className,H)){E.className+=(E.className?" ":"")+H}})},remove:function(E,F){if(E.nodeType==1){E.className=F!==g?o.grep(E.className.split(\/\\s+\/),function(G){return !o.className.has(F,G)}).join(" "):""}},has:function(F,E){return F&&o.inArray(E,(F.className||F).toString().split(\/\\s+\/))>-1}},swap:function(H,G,I){var E={};for(var F in G){E[F]=H.style[F];H.style[F]=G[F]}I.call(H);for(var F in G){H.style[F]=E[F]}},css:function(H,F,J,E){if(F=="width"||F=="height"){var L,G={position:"absolute",visibility:"hidden",display:"block"},K=F=="width"?["Left","Right"]:["Top","Bottom"];function I(){L=F=="width"?H.offsetWidth:H.offsetHeight;if(E==="border"){return}o.each(K,function(){if(!E){L-=parseFloat(o.curCSS(H,"padding"+this,true))||0}if(E==="margin"){L+=parseFloat(o.curCSS(H,"margin"+this,true))||0}else{L-=parseFloat(o.curCSS(H,"border"+this+"Width",true))||0}})}if(H.offsetWidth!==0){I()}else{o.swap(H,G,I)}return Math.max(0,Math.round(L))}return o.curCSS(H,F,J)},curCSS:function(I,F,G){var L,E=I.style;if(F=="opacity"&&!o.support.opacity){L=o.attr(E,"opacity");return L==""?"1":L}if(F.match(\/float\/i)){F=w}if(!G&&E&&E[F]){L=E[F]}else{if(q.getComputedStyle){if(F.match(\/float\/i)){F="float"}F=F.replace(\/([A-Z])\/g,"-$1").toLowerCase();var M=q.getComputedStyle(I,null);if(M){L=M.getPropertyValue(F)}if(F=="opacity"&&L==""){L="1"}}else{if(I.currentStyle){var J=F.replace(\/\\-(\\w)\/g,function(N,O){return O.toUpperCase()});L=I.currentStyle[F]||I.currentStyle[J];if(!\/^\\d+(px)?$\/i.test(L)&&\/^\\d\/.test(L)){var H=E.left,K=I.runtimeStyle.left;I.runtimeStyle.left=I.currentStyle.left;E.left=L||0;L=E.pixelLeft+"px";E.left=H;I.runtimeStyle.left=K}}}}return L},clean:function(F,K,I){K=K||document;if(typeof K.createElement==="undefined"){K=K.ownerDocument||K[0]&&K[0].ownerDocument||document}if(!I&&F.length===1&&typeof F[0]==="string"){var H=\/^<(\\w+)\\s*\\\/?>$\/.exec(F[0]);if(H){return[K.createElement(H[1])]}}var G=[],E=[],L=K.createElement("div");o.each(F,function(P,S){if(typeof S==="number"){S+=""}if(!S){return}if(typeof S==="string"){S=S.replace(\/(<(\\w+)[^>]*?)\\\/>\/g,function(U,V,T){return T.match(\/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$\/i)?U:V+"><\/"+T+">"});var O=S.replace(\/^\\s+\/,"").substring(0,10).toLowerCase();var Q=!O.indexOf("<opt")&&[1,"<select multiple='multiple'>","<\/select>"]||!O.indexOf("<leg")&&[1,"<fieldset>","<\/fieldset>"]||O.match(\/^<(thead|tbody|tfoot|colg|cap)\/)&&[1,"<table>","<\/table>"]||!O.indexOf("<tr")&&[2,"<table><tbody>","<\/tbody><\/table>"]||(!O.indexOf("<td")||!O.indexOf("<th"))&&[3,"<table><tbody><tr>","<\/tr><\/tbody><\/table>"]||!O.indexOf("<col")&&[2,"<table><tbody><\/tbody><colgroup>","<\/colgroup><\/table>"]||!o.support.htmlSerialize&&[1,"div<div>","<\/div>"]||[0,"",""];L.innerHTML=Q[1]+S+Q[2];while(Q[0]--){L=L.lastChild}if(!o.support.tbody){var R=\/<tbody\/i.test(S),N=!O.indexOf("<table")&&!R?L.firstChild&&L.firstChild.childNodes:Q[1]=="<table>"&&!R?L.childNodes:[];for(var M=N.length-1;M>=0;--M){if(o.nodeName(N[M],"tbody")&&!N[M].childNodes.length){N[M].parentNode.removeChild(N[M])}}}if(!o.support.leadingWhitespace&&\/^\\s\/.test(S)){L.insertBefore(K.createTextNode(S.match(\/^\\s*\/)[0]),L.firstChild)}S=o.makeArray(L.childNodes)}if(S.nodeType){G.push(S)}else{G=o.merge(G,S)}});if(I){for(var J=0;G[J];J++){if(o.nodeName(G[J],"script")&&(!G[J].type||G[J].type.toLowerCase()==="text\/javascript")){E.push(G[J].parentNode?G[J].parentNode.removeChild(G[J]):G[J])}else{if(G[J].nodeType===1){G.splice.apply(G,[J+1,0].concat(o.makeArray(G[J].getElementsByTagName("script"))))}I.appendChild(G[J])}}return E}return G},attr:function(J,G,K){if(!J||J.nodeType==3||J.nodeType==8){return g}var H=!o.isXMLDoc(J),L=K!==g;G=H&&o.props[G]||G;if(J.tagName){var F=\/href|src|style\/.test(G);if(G=="selected"&&J.parentNode){J.parentNode.selectedIndex}if(G in J&&H&&!F){if(L){if(G=="type"&&o.nodeName(J,"input")&&J.parentNode){throw"type property can't be changed"}J[G]=K}if(o.nodeName(J,"form")&&J.getAttributeNode(G)){return J.getAttributeNode(G).nodeValue}if(G=="tabIndex"){var I=J.getAttributeNode("tabIndex");return I&&I.specified?I.value:J.nodeName.match(\/(button|input|object|select|textarea)\/i)?0:J.nodeName.match(\/^(a|area)$\/i)&&J.href?0:g}return J[G]}if(!o.support.style&&H&&G=="style"){return o.attr(J.style,"cssText",K)}if(L){J.setAttribute(G,""+K)}var E=!o.support.hrefNormalized&&H&&F?J.getAttribute(G,2):J.getAttribute(G);return E===null?g:E}if(!o.support.opacity&&G=="opacity"){if(L){J.zoom=1;J.filter=(J.filter||"").replace(\/alpha\\([^)]*\\)\/,"")+(parseInt(K)+""=="NaN"?"":"alpha(opacity="+K*100+")")}return J.filter&&J.filter.indexOf("opacity=")>=0?(parseFloat(J.filter.match(\/opacity=([^)]*)\/)[1])\/100)+"":""}G=G.replace(\/-([a-z])\/ig,function(M,N){return N.toUpperCase()});if(L){J[G]=K}return J[G]},trim:function(E){return(E||"").replace(\/^\\s+|\\s+$\/g,"")},makeArray:function(G){var E=[];if(G!=null){var F=G.length;if(F==null||typeof G==="string"||o.isFunction(G)||G.setInterval){E[0]=G}else{while(F){E[--F]=G[F]}}}return E},inArray:function(G,H){for(var E=0,F=H.length;E<F;E++){if(H[E]===G){return E}}return -1},merge:function(H,E){var F=0,G,I=H.length;if(!o.support.getAll){while((G=E[F++])!=null){if(G.nodeType!=8){H[I++]=G}}}else{while((G=E[F++])!=null){H[I++]=G}}return H},unique:function(K){var F=[],E={};try{for(var G=0,H=K.length;G<H;G++){var J=o.data(K[G]);if(!E[J]){E[J]=true;F.push(K[G])}}}catch(I){F=K}return F},grep:function(F,J,E){var G=[];for(var H=0,I=F.length;H<I;H++){if(!E!=!J(F[H],H)){G.push(F[H])}}return G},map:function(E,J){var F=[];for(var G=0,H=E.length;G<H;G++){var I=J(E[G],G);if(I!=null){F[F.length]=I}}return F.concat.apply([],F)}});var C=navigator.userAgent.toLowerCase();o.browser={version:(C.match(\/.+(?:rv|it|ra|ie)[\\\/: ]([\\d.]+)\/)||[0,"0"])[1],safari:\/webkit\/.test(C),opera:\/opera\/.test(C),msie:\/msie\/.test(C)&&!\/opera\/.test(C),mozilla:\/mozilla\/.test(C)&&!\/(compatible|webkit)\/.test(C)};o.each({parent:function(E){return E.parentNode},parents:function(E){return o.dir(E,"parentNode")},next:function(E){return o.nth(E,2,"nextSibling")},prev:function(E){return o.nth(E,2,"previousSibling")},nextAll:function(E){return o.dir(E,"nextSibling")},prevAll:function(E){return o.dir(E,"previousSibling")},siblings:function(E){return o.sibling(E.parentNode.firstChild,E)},children:function(E){return o.sibling(E.firstChild)},contents:function(E){return o.nodeName(E,"iframe")?E.contentDocument||E.contentWindow.document:o.makeArray(E.childNodes)}},function(E,F){o.fn[E]=function(G){var H=o.map(this,F);if(G&&typeof G=="string"){H=o.multiFilter(G,H)}return this.pushStack(o.unique(H),E,G)}});o.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(E,F){o.fn[E]=function(G){var J=[],L=o(G);for(var K=0,H=L.length;K<H;K++){$/;"	m
Atof	loader/shapefil.h	/^    double     (*Atof)  ( const char *str );$/;"	m	struct:__anon63
BANDTYPE_FLAGS_MASK	raster/rt_core/rt_serialize.h	36;"	d
BANDTYPE_FLAG_HASNODATA	raster/rt_core/rt_serialize.h	39;"	d
BANDTYPE_FLAG_ISNODATA	raster/rt_core/rt_serialize.h	40;"	d
BANDTYPE_FLAG_OFFDB	raster/rt_core/rt_serialize.h	38;"	d
BANDTYPE_FLAG_RESERVED3	raster/rt_core/rt_serialize.h	41;"	d
BANDTYPE_HAS_NODATA	raster/rt_core/rt_serialize.h	45;"	d
BANDTYPE_IS_NODATA	raster/rt_core/rt_serialize.h	46;"	d
BANDTYPE_IS_OFFDB	raster/rt_core/rt_serialize.h	44;"	d
BANDTYPE_PIXTYPE	raster/rt_core/rt_serialize.h	43;"	d
BANDTYPE_PIXTYPE_MASK	raster/rt_core/rt_serialize.h	37;"	d
BEGIN	liblwgeom/lwin_wkt_lex.c	144;"	d	file:
BELOW	postgis/gserialized_gist_nd.c	1044;"	d	file:
BOX2DF	libpgcommon/gserialized_gist.h	/^} BOX2DF;$/;"	t	typeref:struct:__anon4
BOX2D_above	postgis/lwgeom_box.c	/^Datum BOX2D_above(PG_FUNCTION_ARGS)$/;"	f
BOX2D_above	postgis/lwgeom_box.c	/^PG_FUNCTION_INFO_V1(BOX2D_above);$/;"	v
BOX2D_below	postgis/lwgeom_box.c	/^Datum BOX2D_below(PG_FUNCTION_ARGS)$/;"	f
BOX2D_below	postgis/lwgeom_box.c	/^PG_FUNCTION_INFO_V1(BOX2D_below);$/;"	v
BOX2D_combine	postgis/lwgeom_box.c	/^Datum BOX2D_combine(PG_FUNCTION_ARGS)$/;"	f
BOX2D_combine	postgis/lwgeom_box.c	/^PG_FUNCTION_INFO_V1(BOX2D_combine);$/;"	v
BOX2D_construct	postgis/lwgeom_box.c	/^Datum BOX2D_construct(PG_FUNCTION_ARGS)$/;"	f
BOX2D_construct	postgis/lwgeom_box.c	/^PG_FUNCTION_INFO_V1(BOX2D_construct);$/;"	v
BOX2D_contain	postgis/lwgeom_box.c	/^Datum BOX2D_contain(PG_FUNCTION_ARGS)$/;"	f
BOX2D_contain	postgis/lwgeom_box.c	/^PG_FUNCTION_INFO_V1(BOX2D_contain);$/;"	v
BOX2D_contained	postgis/lwgeom_box.c	/^Datum BOX2D_contained(PG_FUNCTION_ARGS)$/;"	f
BOX2D_contained	postgis/lwgeom_box.c	/^PG_FUNCTION_INFO_V1(BOX2D_contained);$/;"	v
BOX2D_expand	postgis/lwgeom_box.c	/^Datum BOX2D_expand(PG_FUNCTION_ARGS)$/;"	f
BOX2D_expand	postgis/lwgeom_box.c	/^PG_FUNCTION_INFO_V1(BOX2D_expand);$/;"	v
BOX2D_in	postgis/lwgeom_box.c	/^Datum BOX2D_in(PG_FUNCTION_ARGS)$/;"	f
BOX2D_in	postgis/lwgeom_box.c	/^PG_FUNCTION_INFO_V1(BOX2D_in);$/;"	v
BOX2D_intersects	postgis/lwgeom_box.c	/^Datum BOX2D_intersects(PG_FUNCTION_ARGS)$/;"	f
BOX2D_intersects	postgis/lwgeom_box.c	/^PG_FUNCTION_INFO_V1(BOX2D_intersects);$/;"	v
BOX2D_left	postgis/lwgeom_box.c	/^Datum BOX2D_left(PG_FUNCTION_ARGS)$/;"	f
BOX2D_left	postgis/lwgeom_box.c	/^PG_FUNCTION_INFO_V1(BOX2D_left);$/;"	v
BOX2D_out	postgis/lwgeom_box.c	/^Datum BOX2D_out(PG_FUNCTION_ARGS)$/;"	f
BOX2D_out	postgis/lwgeom_box.c	/^PG_FUNCTION_INFO_V1(BOX2D_out);$/;"	v
BOX2D_overabove	postgis/lwgeom_box.c	/^Datum BOX2D_overabove(PG_FUNCTION_ARGS)$/;"	f
BOX2D_overabove	postgis/lwgeom_box.c	/^PG_FUNCTION_INFO_V1(BOX2D_overabove);$/;"	v
BOX2D_overbelow	postgis/lwgeom_box.c	/^Datum BOX2D_overbelow(PG_FUNCTION_ARGS)$/;"	f
BOX2D_overbelow	postgis/lwgeom_box.c	/^PG_FUNCTION_INFO_V1(BOX2D_overbelow);$/;"	v
BOX2D_overlap	postgis/lwgeom_box.c	/^Datum BOX2D_overlap(PG_FUNCTION_ARGS)$/;"	f
BOX2D_overlap	postgis/lwgeom_box.c	/^PG_FUNCTION_INFO_V1(BOX2D_overlap);$/;"	v
BOX2D_overleft	postgis/lwgeom_box.c	/^Datum BOX2D_overleft(PG_FUNCTION_ARGS)$/;"	f
BOX2D_overleft	postgis/lwgeom_box.c	/^PG_FUNCTION_INFO_V1(BOX2D_overleft);$/;"	v
BOX2D_overright	postgis/lwgeom_box.c	/^Datum BOX2D_overright(PG_FUNCTION_ARGS)$/;"	f
BOX2D_overright	postgis/lwgeom_box.c	/^PG_FUNCTION_INFO_V1(BOX2D_overright);$/;"	v
BOX2D_right	postgis/lwgeom_box.c	/^Datum BOX2D_right(PG_FUNCTION_ARGS)$/;"	f
BOX2D_right	postgis/lwgeom_box.c	/^PG_FUNCTION_INFO_V1(BOX2D_right);$/;"	v
BOX2D_same	postgis/lwgeom_box.c	/^Datum BOX2D_same(PG_FUNCTION_ARGS)$/;"	f
BOX2D_same	postgis/lwgeom_box.c	/^PG_FUNCTION_INFO_V1(BOX2D_same);$/;"	v
BOX2D_to_BOX3D	postgis/lwgeom_box.c	/^Datum BOX2D_to_BOX3D(PG_FUNCTION_ARGS)$/;"	f
BOX2D_to_BOX3D	postgis/lwgeom_box.c	/^PG_FUNCTION_INFO_V1(BOX2D_to_BOX3D);$/;"	v
BOX2D_to_LWGEOM	postgis/lwgeom_box.c	/^Datum BOX2D_to_LWGEOM(PG_FUNCTION_ARGS)$/;"	f
BOX2D_to_LWGEOM	postgis/lwgeom_box.c	/^PG_FUNCTION_INFO_V1(BOX2D_to_LWGEOM);$/;"	v
BOX2D_union	postgis/lwgeom_box.c	/^Datum BOX2D_union(PG_FUNCTION_ARGS)$/;"	f
BOX2D_union	postgis/lwgeom_box.c	/^PG_FUNCTION_INFO_V1(BOX2D_union);$/;"	v
BOX3D_combine	postgis/lwgeom_box3d.c	/^Datum BOX3D_combine(PG_FUNCTION_ARGS)$/;"	f
BOX3D_combine	postgis/lwgeom_box3d.c	/^PG_FUNCTION_INFO_V1(BOX3D_combine);$/;"	v
BOX3D_construct	postgis/lwgeom_box3d.c	/^Datum BOX3D_construct(PG_FUNCTION_ARGS)$/;"	f
BOX3D_construct	postgis/lwgeom_box3d.c	/^PG_FUNCTION_INFO_V1(BOX3D_construct);$/;"	v
BOX3D_expand	postgis/lwgeom_box3d.c	/^Datum BOX3D_expand(PG_FUNCTION_ARGS)$/;"	f
BOX3D_expand	postgis/lwgeom_box3d.c	/^PG_FUNCTION_INFO_V1(BOX3D_expand);$/;"	v
BOX3D_in	postgis/lwgeom_box3d.c	/^Datum BOX3D_in(PG_FUNCTION_ARGS)$/;"	f
BOX3D_in	postgis/lwgeom_box3d.c	/^PG_FUNCTION_INFO_V1(BOX3D_in);$/;"	v
BOX3D_out	postgis/lwgeom_box3d.c	/^Datum BOX3D_out(PG_FUNCTION_ARGS)$/;"	f
BOX3D_out	postgis/lwgeom_box3d.c	/^PG_FUNCTION_INFO_V1(BOX3D_out);$/;"	v
BOX3D_to_BOX	postgis/lwgeom_box3d.c	/^Datum BOX3D_to_BOX(PG_FUNCTION_ARGS)$/;"	f
BOX3D_to_BOX	postgis/lwgeom_box3d.c	/^PG_FUNCTION_INFO_V1(BOX3D_to_BOX);$/;"	v
BOX3D_to_BOX2D	postgis/lwgeom_box3d.c	/^Datum BOX3D_to_BOX2D(PG_FUNCTION_ARGS)$/;"	f
BOX3D_to_BOX2D	postgis/lwgeom_box3d.c	/^PG_FUNCTION_INFO_V1(BOX3D_to_BOX2D);$/;"	v
BOX3D_to_LWGEOM	postgis/lwgeom_box3d.c	/^Datum BOX3D_to_LWGEOM(PG_FUNCTION_ARGS)$/;"	f
BOX3D_to_LWGEOM	postgis/lwgeom_box3d.c	/^PG_FUNCTION_INFO_V1(BOX3D_to_LWGEOM);$/;"	v
BOX3D_xmax	postgis/lwgeom_box3d.c	/^Datum BOX3D_xmax(PG_FUNCTION_ARGS)$/;"	f
BOX3D_xmax	postgis/lwgeom_box3d.c	/^PG_FUNCTION_INFO_V1(BOX3D_xmax);$/;"	v
BOX3D_xmin	postgis/lwgeom_box3d.c	/^Datum BOX3D_xmin(PG_FUNCTION_ARGS)$/;"	f
BOX3D_xmin	postgis/lwgeom_box3d.c	/^PG_FUNCTION_INFO_V1(BOX3D_xmin);$/;"	v
BOX3D_ymax	postgis/lwgeom_box3d.c	/^Datum BOX3D_ymax(PG_FUNCTION_ARGS)$/;"	f
BOX3D_ymax	postgis/lwgeom_box3d.c	/^PG_FUNCTION_INFO_V1(BOX3D_ymax);$/;"	v
BOX3D_ymin	postgis/lwgeom_box3d.c	/^Datum BOX3D_ymin(PG_FUNCTION_ARGS)$/;"	f
BOX3D_ymin	postgis/lwgeom_box3d.c	/^PG_FUNCTION_INFO_V1(BOX3D_ymin);$/;"	v
BOX3D_zmax	postgis/lwgeom_box3d.c	/^Datum BOX3D_zmax(PG_FUNCTION_ARGS)$/;"	f
BOX3D_zmax	postgis/lwgeom_box3d.c	/^PG_FUNCTION_INFO_V1(BOX3D_zmax);$/;"	v
BOX3D_zmin	postgis/lwgeom_box3d.c	/^Datum BOX3D_zmin(PG_FUNCTION_ARGS)$/;"	f
BOX3D_zmin	postgis/lwgeom_box3d.c	/^PG_FUNCTION_INFO_V1(BOX3D_zmin);$/;"	v
BOXEN2D	java/jdbc/src/examples/TestBoxes.java	/^    public static final String[] BOXEN2D = new String[]{"BOX(1 2,3 4)"};$/;"	f	class:TestBoxes
BOXEN3D	java/jdbc/src/examples/TestBoxes.java	/^    public static final String[] BOXEN3D = new String[]{$/;"	f	class:TestBoxes
BTREE_SRID_MISMATCH_SEVERITY	postgis/lwgeom_btree.c	42;"	d	file:
BUFSIZE	liblwgeom/lwout_geojson.c	704;"	d	file:
BinaryByteGetter	java/jdbc/src/org/postgis/binary/ByteGetter.java	/^        public BinaryByteGetter(byte[] array) {$/;"	m	class:ByteGetter.BinaryByteGetter
BinaryByteGetter	java/jdbc/src/org/postgis/binary/ByteGetter.java	/^    public static class BinaryByteGetter extends ByteGetter {$/;"	c	class:ByteGetter
BinaryByteSetter	java/jdbc/src/org/postgis/binary/ByteSetter.java	/^        public BinaryByteSetter(int length) {$/;"	m	class:ByteSetter.BinaryByteSetter
BinaryByteSetter	java/jdbc/src/org/postgis/binary/ByteSetter.java	/^    public static class BinaryByteSetter extends ByteSetter {$/;"	c	class:ByteSetter
BinaryParser	java/jdbc/src/org/postgis/binary/BinaryParser.java	/^public class BinaryParser {$/;"	c
BinaryWriter	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^public class BinaryWriter {$/;"	c
ByteCopy	loader/shpopen.c	282;"	d	file:
ByteGetter	java/jdbc/src/org/postgis/binary/ByteGetter.java	/^public abstract class ByteGetter {$/;"	c
ByteSetter	java/jdbc/src/org/postgis/binary/ByteSetter.java	/^public abstract class ByteSetter {$/;"	c
C	doc/html/jquery.js	/^(function(){var l=this,g,y=l.jQuery,p=l.$,o=l.jQuery=l.$=function(E,F){return new o.fn.init(E,F)},D=\/^[^<]*(<(.|\\s)+>)[^>]*$|^#([\\w-]+)$\/,f=\/^.[^:#\\[\\.,]*$\/;o.fn=o.prototype={init:function(E,H){E=E||document;if(E.nodeType){this[0]=E;this.length=1;this.context=E;return this}if(typeof E==="string"){var G=D.exec(E);if(G&&(G[1]||!H)){if(G[1]){E=o.clean([G[1]],H)}else{var I=document.getElementById(G[3]);if(I&&I.id!=G[3]){return o().find(E)}var F=o(I||[]);F.context=document;F.selector=E;return F}}else{return o(H).find(E)}}else{if(o.isFunction(E)){return o(document).ready(E)}}if(E.selector&&E.context){this.selector=E.selector;this.context=E.context}return this.setArray(o.isArray(E)?E:o.makeArray(E))},selector:"",jquery:"1.3.2",size:function(){return this.length},get:function(E){return E===g?Array.prototype.slice.call(this):this[E]},pushStack:function(F,H,E){var G=o(F);G.prevObject=this;G.context=this.context;if(H==="find"){G.selector=this.selector+(this.selector?" ":"")+E}else{if(H){G.selector=this.selector+"."+H+"("+E+")"}}return G},setArray:function(E){this.length=0;Array.prototype.push.apply(this,E);return this},each:function(F,E){return o.each(this,F,E)},index:function(E){return o.inArray(E&&E.jquery?E[0]:E,this)},attr:function(F,H,G){var E=F;if(typeof F==="string"){if(H===g){return this[0]&&o[G||"attr"](this[0],F)}else{E={};E[F]=H}}return this.each(function(I){for(F in E){o.attr(G?this.style:this,F,o.prop(this,E[F],G,I,F))}})},css:function(E,F){if((E=="width"||E=="height")&&parseFloat(F)<0){F=g}return this.attr(E,F,"curCSS")},text:function(F){if(typeof F!=="object"&&F!=null){return this.empty().append((this[0]&&this[0].ownerDocument||document).createTextNode(F))}var E="";o.each(F||this,function(){o.each(this.childNodes,function(){if(this.nodeType!=8){E+=this.nodeType!=1?this.nodeValue:o.fn.text([this])}})});return E},wrapAll:function(E){if(this[0]){var F=o(E,this[0].ownerDocument).clone();if(this[0].parentNode){F.insertBefore(this[0])}F.map(function(){var G=this;while(G.firstChild){G=G.firstChild}return G}).append(this)}return this},wrapInner:function(E){return this.each(function(){o(this).contents().wrapAll(E)})},wrap:function(E){return this.each(function(){o(this).wrapAll(E)})},append:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.appendChild(E)}})},prepend:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.insertBefore(E,this.firstChild)}})},before:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this)})},after:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this.nextSibling)})},end:function(){return this.prevObject||o([])},push:[].push,sort:[].sort,splice:[].splice,find:function(E){if(this.length===1){var F=this.pushStack([],"find",E);F.length=0;o.find(E,this[0],F);return F}else{return this.pushStack(o.unique(o.map(this,function(G){return o.find(E,G)})),"find",E)}},clone:function(G){var E=this.map(function(){if(!o.support.noCloneEvent&&!o.isXMLDoc(this)){var I=this.outerHTML;if(!I){var J=this.ownerDocument.createElement("div");J.appendChild(this.cloneNode(true));I=J.innerHTML}return o.clean([I.replace(\/ jQuery\\d+="(?:\\d+|null)"\/g,"").replace(\/^\\s*\/,"")])[0]}else{return this.cloneNode(true)}});if(G===true){var H=this.find("*").andSelf(),F=0;E.find("*").andSelf().each(function(){if(this.nodeName!==H[F].nodeName){return}var I=o.data(H[F],"events");for(var K in I){for(var J in I[K]){o.event.add(this,K,I[K][J],I[K][J].data)}}F++})}return E},filter:function(E){return this.pushStack(o.isFunction(E)&&o.grep(this,function(G,F){return E.call(G,F)})||o.multiFilter(E,o.grep(this,function(F){return F.nodeType===1})),"filter",E)},closest:function(E){var G=o.expr.match.POS.test(E)?o(E):null,F=0;return this.map(function(){var H=this;while(H&&H.ownerDocument){if(G?G.index(H)>-1:o(H).is(E)){o.data(H,"closest",F);return H}H=H.parentNode;F++}})},not:function(E){if(typeof E==="string"){if(f.test(E)){return this.pushStack(o.multiFilter(E,this,true),"not",E)}else{E=o.multiFilter(E,this)}}var F=E.length&&E[E.length-1]!==g&&!E.nodeType;return this.filter(function(){return F?o.inArray(this,E)<0:this!=E})},add:function(E){return this.pushStack(o.unique(o.merge(this.get(),typeof E==="string"?o(E):o.makeArray(E))))},is:function(E){return !!E&&o.multiFilter(E,this).length>0},hasClass:function(E){return !!E&&this.is("."+E)},val:function(K){if(K===g){var E=this[0];if(E){if(o.nodeName(E,"option")){return(E.attributes.value||{}).specified?E.value:E.text}if(o.nodeName(E,"select")){var I=E.selectedIndex,L=[],M=E.options,H=E.type=="select-one";if(I<0){return null}for(var F=H?I:0,J=H?I+1:M.length;F<J;F++){var G=M[F];if(G.selected){K=o(G).val();if(H){return K}L.push(K)}}return L}return(E.value||"").replace(\/\\r\/g,"")}return g}if(typeof K==="number"){K+=""}return this.each(function(){if(this.nodeType!=1){return}if(o.isArray(K)&&\/radio|checkbox\/.test(this.type)){this.checked=(o.inArray(this.value,K)>=0||o.inArray(this.name,K)>=0)}else{if(o.nodeName(this,"select")){var N=o.makeArray(K);o("option",this).each(function(){this.selected=(o.inArray(this.value,N)>=0||o.inArray(this.text,N)>=0)});if(!N.length){this.selectedIndex=-1}}else{this.value=K}}})},html:function(E){return E===g?(this[0]?this[0].innerHTML.replace(\/ jQuery\\d+="(?:\\d+|null)"\/g,""):null):this.empty().append(E)},replaceWith:function(E){return this.after(E).remove()},eq:function(E){return this.slice(E,+E+1)},slice:function(){return this.pushStack(Array.prototype.slice.apply(this,arguments),"slice",Array.prototype.slice.call(arguments).join(","))},map:function(E){return this.pushStack(o.map(this,function(G,F){return E.call(G,F,G)}))},andSelf:function(){return this.add(this.prevObject)},domManip:function(J,M,L){if(this[0]){var I=(this[0].ownerDocument||this[0]).createDocumentFragment(),F=o.clean(J,(this[0].ownerDocument||this[0]),I),H=I.firstChild;if(H){for(var G=0,E=this.length;G<E;G++){L.call(K(this[G],H),this.length>1||G>0?I.cloneNode(true):I)}}if(F){o.each(F,z)}}return this;function K(N,O){return M&&o.nodeName(N,"table")&&o.nodeName(O,"tr")?(N.getElementsByTagName("tbody")[0]||N.appendChild(N.ownerDocument.createElement("tbody"))):N}}};o.fn.init.prototype=o.fn;function z(E,F){if(F.src){o.ajax({url:F.src,async:false,dataType:"script"})}else{o.globalEval(F.text||F.textContent||F.innerHTML||"")}if(F.parentNode){F.parentNode.removeChild(F)}}function e(){return +new Date}o.extend=o.fn.extend=function(){var J=arguments[0]||{},H=1,I=arguments.length,E=false,G;if(typeof J==="boolean"){E=J;J=arguments[1]||{};H=2}if(typeof J!=="object"&&!o.isFunction(J)){J={}}if(I==H){J=this;--H}for(;H<I;H++){if((G=arguments[H])!=null){for(var F in G){var K=J[F],L=G[F];if(J===L){continue}if(E&&L&&typeof L==="object"&&!L.nodeType){J[F]=o.extend(E,K||(L.length!=null?[]:{}),L)}else{if(L!==g){J[F]=L}}}}}return J};var b=\/z-?index|font-?weight|opacity|zoom|line-?height\/i,q=document.defaultView||{},s=Object.prototype.toString;o.extend({noConflict:function(E){l.$=p;if(E){l.jQuery=y}return o},isFunction:function(E){return s.call(E)==="[object Function]"},isArray:function(E){return s.call(E)==="[object Array]"},isXMLDoc:function(E){return E.nodeType===9&&E.documentElement.nodeName!=="HTML"||!!E.ownerDocument&&o.isXMLDoc(E.ownerDocument)},globalEval:function(G){if(G&&\/\\S\/.test(G)){var F=document.getElementsByTagName("head")[0]||document.documentElement,E=document.createElement("script");E.type="text\/javascript";if(o.support.scriptEval){E.appendChild(document.createTextNode(G))}else{E.text=G}F.insertBefore(E,F.firstChild);F.removeChild(E)}},nodeName:function(F,E){return F.nodeName&&F.nodeName.toUpperCase()==E.toUpperCase()},each:function(G,K,F){var E,H=0,I=G.length;if(F){if(I===g){for(E in G){if(K.apply(G[E],F)===false){break}}}else{for(;H<I;){if(K.apply(G[H++],F)===false){break}}}}else{if(I===g){for(E in G){if(K.call(G[E],E,G[E])===false){break}}}else{for(var J=G[0];H<I&&K.call(J,H,J)!==false;J=G[++H]){}}}return G},prop:function(H,I,G,F,E){if(o.isFunction(I)){I=I.call(H,F)}return typeof I==="number"&&G=="curCSS"&&!b.test(E)?I+"px":I},className:{add:function(E,F){o.each((F||"").split(\/\\s+\/),function(G,H){if(E.nodeType==1&&!o.className.has(E.className,H)){E.className+=(E.className?" ":"")+H}})},remove:function(E,F){if(E.nodeType==1){E.className=F!==g?o.grep(E.className.split(\/\\s+\/),function(G){return !o.className.has(F,G)}).join(" "):""}},has:function(F,E){return F&&o.inArray(E,(F.className||F).toString().split(\/\\s+\/))>-1}},swap:function(H,G,I){var E={};for(var F in G){E[F]=H.style[F];H.style[F]=G[F]}I.call(H);for(var F in G){H.style[F]=E[F]}},css:function(H,F,J,E){if(F=="width"||F=="height"){var L,G={position:"absolute",visibility:"hidden",display:"block"},K=F=="width"?["Left","Right"]:["Top","Bottom"];function I(){L=F=="width"?H.offsetWidth:H.offsetHeight;if(E==="border"){return}o.each(K,function(){if(!E){L-=parseFloat(o.curCSS(H,"padding"+this,true))||0}if(E==="margin"){L+=parseFloat(o.curCSS(H,"margin"+this,true))||0}else{L-=parseFloat(o.curCSS(H,"border"+this+"Width",true))||0}})}if(H.offsetWidth!==0){I()}else{o.swap(H,G,I)}return Math.max(0,Math.round(L))}return o.curCSS(H,F,J)},curCSS:function(I,F,G){var L,E=I.style;if(F=="opacity"&&!o.support.opacity){L=o.attr(E,"opacity");return L==""?"1":L}if(F.match(\/float\/i)){F=w}if(!G&&E&&E[F]){L=E[F]}else{if(q.getComputedStyle){if(F.match(\/float\/i)){F="float"}F=F.replace(\/([A-Z])\/g,"-$1").toLowerCase();var M=q.getComputedStyle(I,null);if(M){L=M.getPropertyValue(F)}if(F=="opacity"&&L==""){L="1"}}else{if(I.currentStyle){var J=F.replace(\/\\-(\\w)\/g,function(N,O){return O.toUpperCase()});L=I.currentStyle[F]||I.currentStyle[J];if(!\/^\\d+(px)?$\/i.test(L)&&\/^\\d\/.test(L)){var H=E.left,K=I.runtimeStyle.left;I.runtimeStyle.left=I.currentStyle.left;E.left=L||0;L=E.pixelLeft+"px";E.left=H;I.runtimeStyle.left=K}}}}return L},clean:function(F,K,I){K=K||document;if(typeof K.createElement==="undefined"){K=K.ownerDocument||K[0]&&K[0].ownerDocument||document}if(!I&&F.length===1&&typeof F[0]==="string"){var H=\/^<(\\w+)\\s*\\\/?>$\/.exec(F[0]);if(H){return[K.createElement(H[1])]}}var G=[],E=[],L=K.createElement("div");o.each(F,function(P,S){if(typeof S==="number"){S+=""}if(!S){return}if(typeof S==="string"){S=S.replace(\/(<(\\w+)[^>]*?)\\\/>\/g,function(U,V,T){return T.match(\/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$\/i)?U:V+"><\/"+T+">"});var O=S.replace(\/^\\s+\/,"").substring(0,10).toLowerCase();var Q=!O.indexOf("<opt")&&[1,"<select multiple='multiple'>","<\/select>"]||!O.indexOf("<leg")&&[1,"<fieldset>","<\/fieldset>"]||O.match(\/^<(thead|tbody|tfoot|colg|cap)\/)&&[1,"<table>","<\/table>"]||!O.indexOf("<tr")&&[2,"<table><tbody>","<\/tbody><\/table>"]||(!O.indexOf("<td")||!O.indexOf("<th"))&&[3,"<table><tbody><tr>","<\/tr><\/tbody><\/table>"]||!O.indexOf("<col")&&[2,"<table><tbody><\/tbody><colgroup>","<\/colgroup><\/table>"]||!o.support.htmlSerialize&&[1,"div<div>","<\/div>"]||[0,"",""];L.innerHTML=Q[1]+S+Q[2];while(Q[0]--){L=L.lastChild}if(!o.support.tbody){var R=\/<tbody\/i.test(S),N=!O.indexOf("<table")&&!R?L.firstChild&&L.firstChild.childNodes:Q[1]=="<table>"&&!R?L.childNodes:[];for(var M=N.length-1;M>=0;--M){if(o.nodeName(N[M],"tbody")&&!N[M].childNodes.length){N[M].parentNode.removeChild(N[M])}}}if(!o.support.leadingWhitespace&&\/^\\s\/.test(S)){L.insertBefore(K.createTextNode(S.match(\/^\\s*\/)[0]),L.firstChild)}S=o.makeArray(L.childNodes)}if(S.nodeType){G.push(S)}else{G=o.merge(G,S)}});if(I){for(var J=0;G[J];J++){if(o.nodeName(G[J],"script")&&(!G[J].type||G[J].type.toLowerCase()==="text\/javascript")){E.push(G[J].parentNode?G[J].parentNode.removeChild(G[J]):G[J])}else{if(G[J].nodeType===1){G.splice.apply(G,[J+1,0].concat(o.makeArray(G[J].getElementsByTagName("script"))))}I.appendChild(G[J])}}return E}return G},attr:function(J,G,K){if(!J||J.nodeType==3||J.nodeType==8){return g}var H=!o.isXMLDoc(J),L=K!==g;G=H&&o.props[G]||G;if(J.tagName){var F=\/href|src|style\/.test(G);if(G=="selected"&&J.parentNode){J.parentNode.selectedIndex}if(G in J&&H&&!F){if(L){if(G=="type"&&o.nodeName(J,"input")&&J.parentNode){throw"type property can't be changed"}J[G]=K}if(o.nodeName(J,"form")&&J.getAttributeNode(G)){return J.getAttributeNode(G).nodeValue}if(G=="tabIndex"){var I=J.getAttributeNode("tabIndex");return I&&I.specified?I.value:J.nodeName.match(\/(button|input|object|select|textarea)\/i)?0:J.nodeName.match(\/^(a|area)$\/i)&&J.href?0:g}return J[G]}if(!o.support.style&&H&&G=="style"){return o.attr(J.style,"cssText",K)}if(L){J.setAttribute(G,""+K)}var E=!o.support.hrefNormalized&&H&&F?J.getAttribute(G,2):J.getAttribute(G);return E===null?g:E}if(!o.support.opacity&&G=="opacity"){if(L){J.zoom=1;J.filter=(J.filter||"").replace(\/alpha\\([^)]*\\)\/,"")+(parseInt(K)+""=="NaN"?"":"alpha(opacity="+K*100+")")}return J.filter&&J.filter.indexOf("opacity=")>=0?(parseFloat(J.filter.match(\/opacity=([^)]*)\/)[1])\/100)+"":""}G=G.replace(\/-([a-z])\/ig,function(M,N){return N.toUpperCase()});if(L){J[G]=K}return J[G]},trim:function(E){return(E||"").replace(\/^\\s+|\\s+$\/g,"")},makeArray:function(G){var E=[];if(G!=null){var F=G.length;if(F==null||typeof G==="string"||o.isFunction(G)||G.setInterval){E[0]=G}else{while(F){E[--F]=G[F]}}}return E},inArray:function(G,H){for(var E=0,F=H.length;E<F;E++){if(H[E]===G){return E}}return -1},merge:function(H,E){var F=0,G,I=H.length;if(!o.support.getAll){while((G=E[F++])!=null){if(G.nodeType!=8){H[I++]=G}}}else{while((G=E[F++])!=null){H[I++]=G}}return H},unique:function(K){var F=[],E={};try{for(var G=0,H=K.length;G<H;G++){var J=o.data(K[G]);if(!E[J]){E[J]=true;F.push(K[G])}}}catch(I){F=K}return F},grep:function(F,J,E){var G=[];for(var H=0,I=F.length;H<I;H++){if(!E!=!J(F[H],H)){G.push(F[H])}}return G},map:function(E,J){var F=[];for(var G=0,H=E.length;G<H;G++){var I=J(E[G],G);if(I!=null){F[F.length]=I}}return F.concat.apply([],F)}});var C=navigator.userAgent.toLowerCase();o.browser={version:(C.match(\/.+(?:rv|it|ra|ie)[\\\/: ]([\\d.]+)\/)||[0,"0"])[1],safari:\/webkit\/.test(C),opera:\/opera\/.test(C),msie:\/msie\/.test(C)&&!\/opera\/.test(C),mozilla:\/mozilla\/.test(C)&&!\/(compatible|webkit)\/.test(C)};o.each({parent:function(E){return E.parentNode},parents:function(E){return o.dir(E,"parentNode")},next:function(E){return o.nth(E,2,"nextSibling")},prev:function(E){return o.nth(E,2,"previousSibling")},nextAll:function(E){return o.dir(E,"nextSibling")},prevAll:function(E){return o.dir(E,"previousSibling")},siblings:function(E){return o.sibling(E.parentNode.firstChild,E)},children:function(E){return o.sibling(E.firstChild)},contents:function(E){return o.nodeName(E,"iframe")?E.contentDocument||E.contentWindow.document:o.makeArray(E.childNodes)}},function(E,F){o.fn[E]=function(G){var H=o.map(this,F);if(G&&typeof G=="string"){H=o.multiFilter(G,H)}return this.pushStack(o.unique(H),E,G)}});o.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(E,F){o.fn[E]=function(G){var J=[],L=o(G);for(var K=0,H=L.length;K<H;K++){$/;"	v
CC	extras/WFS_locks/Makefile	/^CC = gcc$/;"	m
CFLAGS	extras/wkb_reader/Makefile	/^CFLAGS=-I`pg_config --includedir` -L`pg_config --libdir` -lpq$/;"	m
CG_SEGMENT_INTERSECTION_TYPE	liblwgeom/liblwgeom_internal.h	/^enum CG_SEGMENT_INTERSECTION_TYPE {$/;"	g
CHECK_BINPTR_POSITION	raster/rt_core/rt_serialize.h	58;"	d
CHECK_BINPTR_POSITION	raster/rt_core/rt_serialize.h	66;"	d
CHECK_LWGEOM_ZM	liblwgeom/lwcollection.c	20;"	d	file:
CHECK_POLY_RINGS_ZM	liblwgeom/lwpoly.c	23;"	d	file:
CHECK_RING_IS_CLOSE	postgis/lwgeom_functions_analytic.c	234;"	d	file:
CIRCULARSTRING_TOK	liblwgeom/lwin_wkt_parse.c	/^     CIRCULARSTRING_TOK = 268,$/;"	e	enum:yytokentype	file:
CIRCULARSTRING_TOK	liblwgeom/lwin_wkt_parse.c	235;"	d	file:
CIRCULARSTRING_TOK	liblwgeom/lwin_wkt_parse.h	/^     CIRCULARSTRING_TOK = 268,$/;"	e	enum:yytokentype
CIRCULARSTRING_TOK	liblwgeom/lwin_wkt_parse.h	76;"	d
CIRC_CACHE_ENTRY	libpgcommon/lwgeom_cache.h	27;"	d
CIRC_NODE	liblwgeom/lwgeodetic_tree.h	/^} CIRC_NODE;$/;"	t	typeref:struct:circ_node
CIRC_NODE_SIZE	liblwgeom/lwgeodetic_tree.h	7;"	d
CM_EXACT	raster/rt_core/librtcore.h	/^		CM_EXACT,$/;"	e	enum:rt_colormap_t::__anon40
CM_INTERPOLATE	raster/rt_core/librtcore.h	/^		CM_INTERPOLATE,$/;"	e	enum:rt_colormap_t::__anon40
CM_NEAREST	raster/rt_core/librtcore.h	/^		CM_NEAREST$/;"	e	enum:rt_colormap_t::__anon40
COLLECTION_TOK	liblwgeom/lwin_wkt_parse.c	/^     COLLECTION_TOK = 269,$/;"	e	enum:yytokentype	file:
COLLECTION_TOK	liblwgeom/lwin_wkt_parse.c	236;"	d	file:
COLLECTION_TOK	liblwgeom/lwin_wkt_parse.h	/^     COLLECTION_TOK = 269,$/;"	e	enum:yytokentype
COLLECTION_TOK	liblwgeom/lwin_wkt_parse.h	77;"	d
COMMA_TOK	liblwgeom/lwin_wkt_parse.c	/^     COMMA_TOK = 272,$/;"	e	enum:yytokentype	file:
COMMA_TOK	liblwgeom/lwin_wkt_parse.c	239;"	d	file:
COMMA_TOK	liblwgeom/lwin_wkt_parse.h	/^     COMMA_TOK = 272,$/;"	e	enum:yytokentype
COMMA_TOK	liblwgeom/lwin_wkt_parse.h	80;"	d
COMPOUNDCURVE_TOK	liblwgeom/lwin_wkt_parse.c	/^     COMPOUNDCURVE_TOK = 267,$/;"	e	enum:yytokentype	file:
COMPOUNDCURVE_TOK	liblwgeom/lwin_wkt_parse.c	234;"	d	file:
COMPOUNDCURVE_TOK	liblwgeom/lwin_wkt_parse.h	/^     COMPOUNDCURVE_TOK = 267,$/;"	e	enum:yytokentype
COMPOUNDCURVE_TOK	liblwgeom/lwin_wkt_parse.h	75;"	d
CREATE_MODE	loader/shp2pgsql-gui.c	/^	CREATE_MODE,$/;"	e	enum:__anon58	file:
CSEQUAL	raster/loader/raster2pgsql.h	49;"	d
CURVEPOLYGON_TOK	liblwgeom/lwin_wkt_parse.c	/^     CURVEPOLYGON_TOK = 266,$/;"	e	enum:yytokentype	file:
CURVEPOLYGON_TOK	liblwgeom/lwin_wkt_parse.c	233;"	d	file:
CURVEPOLYGON_TOK	liblwgeom/lwin_wkt_parse.h	/^     CURVEPOLYGON_TOK = 266,$/;"	e	enum:yytokentype
CURVEPOLYGON_TOK	liblwgeom/lwin_wkt_parse.h	74;"	d
CUTINTS	java/jdbc/src/org/postgis/Point.java	/^    public static final boolean CUTINTS = true;$/;"	f	class:Point
CircTreeAllocator	postgis/geography_measurement_trees.c	/^CircTreeAllocator(void)$/;"	f	file:
CircTreeBuilder	postgis/geography_measurement_trees.c	/^CircTreeBuilder(const LWGEOM* lwgeom, GeomCache* cache)$/;"	f	file:
CircTreeCacheMethods	postgis/geography_measurement_trees.c	/^static GeomCacheMethods CircTreeCacheMethods =$/;"	v	file:
CircTreeFreer	postgis/geography_measurement_trees.c	/^CircTreeFreer(GeomCache* cache)$/;"	f	file:
CircTreeGeomCache	postgis/geography_measurement_trees.c	/^} CircTreeGeomCache;$/;"	t	typeref:struct:__anon11	file:
CircTreePIP	postgis/geography_measurement_trees.c	/^CircTreePIP(const CIRC_NODE* tree1, const GSERIALIZED* g1, const LWGEOM* lwgeom2)$/;"	f	file:
Client	java/ejb2/src/com/geodetix/geo/client/Client.java	/^    public Client(GeometryFacade geometryFacade) {$/;"	m	class:Client
Client	java/ejb2/src/com/geodetix/geo/client/Client.java	/^public class Client {$/;"	c
CommonEntry	postgis/gserialized_gist_2d.c	/^} CommonEntry;$/;"	t	typeref:struct:__anon17	file:
ComposedGeom	java/jdbc/src/org/postgis/ComposedGeom.java	/^    protected ComposedGeom(int type, Geometry[] geoms) {$/;"	m	class:ComposedGeom
ComposedGeom	java/jdbc/src/org/postgis/ComposedGeom.java	/^    protected ComposedGeom(int type, String value, boolean haveM) throws SQLException {$/;"	m	class:ComposedGeom
ComposedGeom	java/jdbc/src/org/postgis/ComposedGeom.java	/^    public ComposedGeom(int type) {$/;"	m	class:ComposedGeom
ComposedGeom	java/jdbc/src/org/postgis/ComposedGeom.java	/^public abstract class ComposedGeom extends Geometry {$/;"	c
Connection	java/jdbc/stubs/org/postgresql/Connection.java	/^public abstract class Connection {$/;"	c
ConsiderSplitContext	postgis/gserialized_gist_2d.c	/^} ConsiderSplitContext;$/;"	t	typeref:struct:__anon18	file:
ContainsExpression	java/ejb3/src/org/postgis/hibernate/ContainsExpression.java	/^	public ContainsExpression(String propertyName, Geometry geom)$/;"	m	class:ContainsExpression
ContainsExpression	java/ejb3/src/org/postgis/hibernate/ContainsExpression.java	/^public class ContainsExpression implements Criterion{$/;"	c
CreatePJHash	libpgcommon/lwgeom_transform.c	/^static HTAB *CreatePJHash(void)$/;"	f	file:
CreatePrepGeomHash	postgis/lwgeom_geos_prepared.c	/^CreatePrepGeomHash(void)$/;"	f	file:
DATASOURCE_NAME	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAO.java	/^    public static final String DATASOURCE_NAME = "java:\/postgis-ejb2-ds";$/;"	f	interface:PostGisGeometryDAO
DBFAddField	loader/dbfopen.c	/^DBFAddField(DBFHandle psDBF, const char * pszFieldName, $/;"	f
DBFAddNativeFieldType	loader/dbfopen.c	/^DBFAddNativeFieldType(DBFHandle psDBF, const char * pszFieldName, $/;"	f
DBFAlterFieldDefn	loader/dbfopen.c	/^DBFAlterFieldDefn( DBFHandle psDBF, int iField, const char * pszFieldName,$/;"	f
DBFCloneEmpty	loader/dbfopen.c	/^DBFCloneEmpty(DBFHandle psDBF, const char * pszFilename ) $/;"	f
DBFClose	loader/dbfopen.c	/^DBFClose(DBFHandle psDBF)$/;"	f
DBFCreate	loader/dbfopen.c	/^DBFCreate( const char * pszFilename )$/;"	f
DBFCreateEx	loader/dbfopen.c	/^DBFCreateEx( const char * pszFilename, const char* pszCodePage )$/;"	f
DBFCreateLL	loader/dbfopen.c	/^DBFCreateLL( const char * pszFilename, const char * pszCodePage, SAHooks *psHooks )$/;"	f
DBFDeleteField	loader/dbfopen.c	/^DBFDeleteField(DBFHandle psDBF, int iField)$/;"	f
DBFFieldType	loader/shapefil.h	/^} DBFFieldType;$/;"	t	typeref:enum:__anon68
DBFFlushRecord	loader/dbfopen.c	/^static int DBFFlushRecord( DBFHandle psDBF )$/;"	f	file:
DBFGetCodePage	loader/dbfopen.c	/^DBFGetCodePage(DBFHandle psDBF )$/;"	f
DBFGetFieldCount	loader/dbfopen.c	/^DBFGetFieldCount( DBFHandle psDBF )$/;"	f
DBFGetFieldIndex	loader/dbfopen.c	/^DBFGetFieldIndex(DBFHandle psDBF, const char *pszFieldName)$/;"	f
DBFGetFieldInfo	loader/dbfopen.c	/^DBFGetFieldInfo( DBFHandle psDBF, int iField, char * pszFieldName,$/;"	f
DBFGetNativeFieldType	loader/dbfopen.c	/^DBFGetNativeFieldType( DBFHandle psDBF, int iField )$/;"	f
DBFGetNullCharacter	loader/dbfopen.c	/^static char DBFGetNullCharacter(char chType)$/;"	f	file:
DBFGetRecordCount	loader/dbfopen.c	/^DBFGetRecordCount( DBFHandle psDBF )$/;"	f
DBFHandle	loader/shapefil.h	/^typedef DBFInfo * DBFHandle;$/;"	t
DBFInfo	loader/shapefil.h	/^} DBFInfo;$/;"	t	typeref:struct:__anon67
DBFIsAttributeNULL	loader/dbfopen.c	/^DBFIsAttributeNULL( DBFHandle psDBF, int iRecord, int iField )$/;"	f
DBFIsRecordDeleted	loader/dbfopen.c	/^int SHPAPI_CALL DBFIsRecordDeleted( DBFHandle psDBF, int iShape )$/;"	f
DBFIsValueNULL	loader/dbfopen.c	/^static int DBFIsValueNULL( char chType, const char* pszValue )$/;"	f	file:
DBFLoadRecord	loader/dbfopen.c	/^static int DBFLoadRecord( DBFHandle psDBF, int iRecord )$/;"	f	file:
DBFMarkRecordDeleted	loader/dbfopen.c	/^int SHPAPI_CALL DBFMarkRecordDeleted( DBFHandle psDBF, int iShape, $/;"	f
DBFOpen	loader/dbfopen.c	/^DBFOpen( const char * pszFilename, const char * pszAccess )$/;"	f
DBFOpenLL	loader/dbfopen.c	/^DBFOpenLL( const char * pszFilename, const char * pszAccess, SAHooks *psHooks )$/;"	f
DBFReadAttribute	loader/dbfopen.c	/^static void *DBFReadAttribute(DBFHandle psDBF, int hEntity, int iField,$/;"	f	file:
DBFReadDoubleAttribute	loader/dbfopen.c	/^DBFReadDoubleAttribute( DBFHandle psDBF, int iRecord, int iField )$/;"	f
DBFReadIntegerAttribute	loader/dbfopen.c	/^DBFReadIntegerAttribute( DBFHandle psDBF, int iRecord, int iField )$/;"	f
DBFReadLogicalAttribute	loader/dbfopen.c	/^DBFReadLogicalAttribute( DBFHandle psDBF, int iRecord, int iField )$/;"	f
DBFReadStringAttribute	loader/dbfopen.c	/^DBFReadStringAttribute( DBFHandle psDBF, int iRecord, int iField )$/;"	f
DBFReadTuple	loader/dbfopen.c	/^DBFReadTuple(DBFHandle psDBF, int hEntity )$/;"	f
DBFReorderFields	loader/dbfopen.c	/^DBFReorderFields( DBFHandle psDBF, int* panMap )$/;"	f
DBFUpdateHeader	loader/dbfopen.c	/^DBFUpdateHeader( DBFHandle psDBF )$/;"	f
DBFWriteAttribute	loader/dbfopen.c	/^static int DBFWriteAttribute(DBFHandle psDBF, int hEntity, int iField,$/;"	f	file:
DBFWriteAttributeDirectly	loader/dbfopen.c	/^DBFWriteAttributeDirectly(DBFHandle psDBF, int hEntity, int iField,$/;"	f
DBFWriteDoubleAttribute	loader/dbfopen.c	/^DBFWriteDoubleAttribute( DBFHandle psDBF, int iRecord, int iField,$/;"	f
DBFWriteHeader	loader/dbfopen.c	/^static void DBFWriteHeader(DBFHandle psDBF)$/;"	f	file:
DBFWriteIntegerAttribute	loader/dbfopen.c	/^DBFWriteIntegerAttribute( DBFHandle psDBF, int iRecord, int iField,$/;"	f
DBFWriteLogicalAttribute	loader/dbfopen.c	/^DBFWriteLogicalAttribute( DBFHandle psDBF, int iRecord, int iField,$/;"	f
DBFWriteNULLAttribute	loader/dbfopen.c	/^DBFWriteNULLAttribute( DBFHandle psDBF, int iRecord, int iField )$/;"	f
DBFWriteStringAttribute	loader/dbfopen.c	/^DBFWriteStringAttribute( DBFHandle psDBF, int iRecord, int iField,$/;"	f
DBFWriteTuple	loader/dbfopen.c	/^DBFWriteTuple(DBFHandle psDBF, int hEntity, void * pRawTuple )$/;"	f
DBL_EQ	raster/rt_core/librtcore.h	2172;"	d
DBL_NEQ	raster/rt_core/librtcore.h	2171;"	d
DEBUG	java/jdbc/src/examples/TestJava2d.java	/^    private static final boolean DEBUG = true;$/;"	f	class:TestJava2d	file:
DEFAULTS_DIR	extras/template_gis/Makefile	/^DEFAULTS_DIR=$(DESTDIR)$(datadir)\/default$/;"	m
DEFAULT_ND_JOINSEL	postgis/gserialized_estimate.c	139;"	d	file:
DEFAULT_ND_SEL	postgis/gserialized_estimate.c	138;"	d	file:
DELETE_MODE	loader/shp2pgsql-gui.c	/^	DELETE_MODE,$/;"	e	enum:__anon58	file:
DIMENSIONALITY_TOK	liblwgeom/lwin_wkt_parse.c	/^     DIMENSIONALITY_TOK = 279,$/;"	e	enum:yytokentype	file:
DIMENSIONALITY_TOK	liblwgeom/lwin_wkt_parse.c	246;"	d	file:
DIMENSIONALITY_TOK	liblwgeom/lwin_wkt_parse.h	/^     DIMENSIONALITY_TOK = 279,$/;"	e	enum:yytokentype
DIMENSIONALITY_TOK	liblwgeom/lwin_wkt_parse.h	87;"	d
DISABLE_MULTIPATCH_MEASURE	loader/shapefil.h	167;"	d
DIST2DTEST	liblwgeom/cunit/cu_measures.c	31;"	d	file:
DISTANCE_ORDER	liblwgeom/lwgeodetic.h	/^} DISTANCE_ORDER;$/;"	t	typeref:struct:__anon23
DISTPTS	liblwgeom/measures.h	/^} DISTPTS;$/;"	t	typeref:struct:__anon29
DISTPTS3D	liblwgeom/measures3d.h	/^} DISTPTS3D;$/;"	t	typeref:struct:__anon31
DIST_MAX	liblwgeom/liblwgeom_internal.h	68;"	d
DIST_MIN	liblwgeom/liblwgeom_internal.h	69;"	d
DOCSUFFIX	doc/po/it_IT/Makefile	/^DOCSUFFIX=-it$/;"	m
DOCSUFFIX	doc/po/pt_BR/Makefile	/^DOCSUFFIX=-br$/;"	m
DOT	liblwgeom/measures3d.h	16;"	d
DOUBLE_TOK	liblwgeom/lwin_wkt_parse.c	/^     DOUBLE_TOK = 278,$/;"	e	enum:yytokentype	file:
DOUBLE_TOK	liblwgeom/lwin_wkt_parse.c	245;"	d	file:
DOUBLE_TOK	liblwgeom/lwin_wkt_parse.h	/^     DOUBLE_TOK = 278,$/;"	e	enum:yytokentype
DOUBLE_TOK	liblwgeom/lwin_wkt_parse.h	86;"	d
DROP_TABLE_STATEMENT	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAO.java	/^    public static final String DROP_TABLE_STATEMENT = $/;"	f	interface:PostGisGeometryDAO
DUSE_VERSION	extras/WFS_locks/Makefile	/^	cpp -P -traditional-cpp -DUSE_VERSION=$(USE_VERSION) $< | sed -e 's:@MODULE_FILENAME@:$(MODULE_FILENAME):g' | grep -v '^#' > $@$/;"	m
DeleteFromPROJ4Cache	libpgcommon/lwgeom_transform.c	/^void DeleteFromPROJ4Cache(Proj4Cache cache, int srid) {$/;"	f
DeleteFromPROJ4SRSCache	libpgcommon/lwgeom_transform.c	/^static void DeleteFromPROJ4SRSCache(PROJ4PortalCache *PROJ4Cache, int srid)$/;"	f	file:
DeletePJHashEntry	libpgcommon/lwgeom_transform.c	/^static void DeletePJHashEntry(MemoryContext mcxt)$/;"	f	file:
DeletePrepGeomHashEntry	postgis/lwgeom_geos_prepared.c	/^DeletePrepGeomHashEntry(MemoryContext mcxt)$/;"	f	file:
DriverWrapper	java/jdbc/src/org/postgis/DriverWrapper.java	/^    public DriverWrapper() throws SQLException {$/;"	m	class:DriverWrapper
DriverWrapper	java/jdbc/src/org/postgis/DriverWrapper.java	/^public class DriverWrapper extends Driver {$/;"	c
DriverWrapperAutoprobe	java/jdbc/src/org/postgis/DriverWrapperAutoprobe.java	/^    public DriverWrapperAutoprobe() throws SQLException {$/;"	m	class:DriverWrapperAutoprobe
DriverWrapperAutoprobe	java/jdbc/src/org/postgis/DriverWrapperAutoprobe.java	/^public class DriverWrapperAutoprobe extends DriverWrapper {$/;"	c
DriverWrapperLW	java/jdbc/src/org/postgis/DriverWrapperLW.java	/^    public DriverWrapperLW() throws SQLException {$/;"	m	class:DriverWrapperLW
DriverWrapperLW	java/jdbc/src/org/postgis/DriverWrapperLW.java	/^public class DriverWrapperLW extends DriverWrapper {$/;"	c
E	doc/html/jquery.js	/^(function(){var l=this,g,y=l.jQuery,p=l.$,o=l.jQuery=l.$=function(E,F){return new o.fn.init(E,F)},D=\/^[^<]*(<(.|\\s)+>)[^>]*$|^#([\\w-]+)$\/,f=\/^.[^:#\\[\\.,]*$\/;o.fn=o.prototype={init:function(E,H){E=E||document;if(E.nodeType){this[0]=E;this.length=1;this.context=E;return this}if(typeof E==="string"){var G=D.exec(E);if(G&&(G[1]||!H)){if(G[1]){E=o.clean([G[1]],H)}else{var I=document.getElementById(G[3]);if(I&&I.id!=G[3]){return o().find(E)}var F=o(I||[]);F.context=document;F.selector=E;return F}}else{return o(H).find(E)}}else{if(o.isFunction(E)){return o(document).ready(E)}}if(E.selector&&E.context){this.selector=E.selector;this.context=E.context}return this.setArray(o.isArray(E)?E:o.makeArray(E))},selector:"",jquery:"1.3.2",size:function(){return this.length},get:function(E){return E===g?Array.prototype.slice.call(this):this[E]},pushStack:function(F,H,E){var G=o(F);G.prevObject=this;G.context=this.context;if(H==="find"){G.selector=this.selector+(this.selector?" ":"")+E}else{if(H){G.selector=this.selector+"."+H+"("+E+")"}}return G},setArray:function(E){this.length=0;Array.prototype.push.apply(this,E);return this},each:function(F,E){return o.each(this,F,E)},index:function(E){return o.inArray(E&&E.jquery?E[0]:E,this)},attr:function(F,H,G){var E=F;if(typeof F==="string"){if(H===g){return this[0]&&o[G||"attr"](this[0],F)}else{E={};E[F]=H}}return this.each(function(I){for(F in E){o.attr(G?this.style:this,F,o.prop(this,E[F],G,I,F))}})},css:function(E,F){if((E=="width"||E=="height")&&parseFloat(F)<0){F=g}return this.attr(E,F,"curCSS")},text:function(F){if(typeof F!=="object"&&F!=null){return this.empty().append((this[0]&&this[0].ownerDocument||document).createTextNode(F))}var E="";o.each(F||this,function(){o.each(this.childNodes,function(){if(this.nodeType!=8){E+=this.nodeType!=1?this.nodeValue:o.fn.text([this])}})});return E},wrapAll:function(E){if(this[0]){var F=o(E,this[0].ownerDocument).clone();if(this[0].parentNode){F.insertBefore(this[0])}F.map(function(){var G=this;while(G.firstChild){G=G.firstChild}return G}).append(this)}return this},wrapInner:function(E){return this.each(function(){o(this).contents().wrapAll(E)})},wrap:function(E){return this.each(function(){o(this).wrapAll(E)})},append:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.appendChild(E)}})},prepend:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.insertBefore(E,this.firstChild)}})},before:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this)})},after:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this.nextSibling)})},end:function(){return this.prevObject||o([])},push:[].push,sort:[].sort,splice:[].splice,find:function(E){if(this.length===1){var F=this.pushStack([],"find",E);F.length=0;o.find(E,this[0],F);return F}else{return this.pushStack(o.unique(o.map(this,function(G){return o.find(E,G)})),"find",E)}},clone:function(G){var E=this.map(function(){if(!o.support.noCloneEvent&&!o.isXMLDoc(this)){var I=this.outerHTML;if(!I){var J=this.ownerDocument.createElement("div");J.appendChild(this.cloneNode(true));I=J.innerHTML}return o.clean([I.replace(\/ jQuery\\d+="(?:\\d+|null)"\/g,"").replace(\/^\\s*\/,"")])[0]}else{return this.cloneNode(true)}});if(G===true){var H=this.find("*").andSelf(),F=0;E.find("*").andSelf().each(function(){if(this.nodeName!==H[F].nodeName){return}var I=o.data(H[F],"events");for(var K in I){for(var J in I[K]){o.event.add(this,K,I[K][J],I[K][J].data)}}F++})}return E},filter:function(E){return this.pushStack(o.isFunction(E)&&o.grep(this,function(G,F){return E.call(G,F)})||o.multiFilter(E,o.grep(this,function(F){return F.nodeType===1})),"filter",E)},closest:function(E){var G=o.expr.match.POS.test(E)?o(E):null,F=0;return this.map(function(){var H=this;while(H&&H.ownerDocument){if(G?G.index(H)>-1:o(H).is(E)){o.data(H,"closest",F);return H}H=H.parentNode;F++}})},not:function(E){if(typeof E==="string"){if(f.test(E)){return this.pushStack(o.multiFilter(E,this,true),"not",E)}else{E=o.multiFilter(E,this)}}var F=E.length&&E[E.length-1]!==g&&!E.nodeType;return this.filter(function(){return F?o.inArray(this,E)<0:this!=E})},add:function(E){return this.pushStack(o.unique(o.merge(this.get(),typeof E==="string"?o(E):o.makeArray(E))))},is:function(E){return !!E&&o.multiFilter(E,this).length>0},hasClass:function(E){return !!E&&this.is("."+E)},val:function(K){if(K===g){var E=this[0];if(E){if(o.nodeName(E,"option")){return(E.attributes.value||{}).specified?E.value:E.text}if(o.nodeName(E,"select")){var I=E.selectedIndex,L=[],M=E.options,H=E.type=="select-one";if(I<0){return null}for(var F=H?I:0,J=H?I+1:M.length;F<J;F++){var G=M[F];if(G.selected){K=o(G).val();if(H){return K}L.push(K)}}return L}return(E.value||"").replace(\/\\r\/g,"")}return g}if(typeof K==="number"){K+=""}return this.each(function(){if(this.nodeType!=1){return}if(o.isArray(K)&&\/radio|checkbox\/.test(this.type)){this.checked=(o.inArray(this.value,K)>=0||o.inArray(this.name,K)>=0)}else{if(o.nodeName(this,"select")){var N=o.makeArray(K);o("option",this).each(function(){this.selected=(o.inArray(this.value,N)>=0||o.inArray(this.text,N)>=0)});if(!N.length){this.selectedIndex=-1}}else{this.value=K}}})},html:function(E){return E===g?(this[0]?this[0].innerHTML.replace(\/ jQuery\\d+="(?:\\d+|null)"\/g,""):null):this.empty().append(E)},replaceWith:function(E){return this.after(E).remove()},eq:function(E){return this.slice(E,+E+1)},slice:function(){return this.pushStack(Array.prototype.slice.apply(this,arguments),"slice",Array.prototype.slice.call(arguments).join(","))},map:function(E){return this.pushStack(o.map(this,function(G,F){return E.call(G,F,G)}))},andSelf:function(){return this.add(this.prevObject)},domManip:function(J,M,L){if(this[0]){var I=(this[0].ownerDocument||this[0]).createDocumentFragment(),F=o.clean(J,(this[0].ownerDocument||this[0]),I),H=I.firstChild;if(H){for(var G=0,E=this.length;G<E;G++){L.call(K(this[G],H),this.length>1||G>0?I.cloneNode(true):I)}}if(F){o.each(F,z)}}return this;function K(N,O){return M&&o.nodeName(N,"table")&&o.nodeName(O,"tr")?(N.getElementsByTagName("tbody")[0]||N.appendChild(N.ownerDocument.createElement("tbody"))):N}}};o.fn.init.prototype=o.fn;function z(E,F){if(F.src){o.ajax({url:F.src,async:false,dataType:"script"})}else{o.globalEval(F.text||F.textContent||F.innerHTML||"")}if(F.parentNode){F.parentNode.removeChild(F)}}function e(){return +new Date}o.extend=o.fn.extend=function(){var J=arguments[0]||{},H=1,I=arguments.length,E=false,G;if(typeof J==="boolean"){E=J;J=arguments[1]||{};H=2}if(typeof J!=="object"&&!o.isFunction(J)){J={}}if(I==H){J=this;--H}for(;H<I;H++){if((G=arguments[H])!=null){for(var F in G){var K=J[F],L=G[F];if(J===L){continue}if(E&&L&&typeof L==="object"&&!L.nodeType){J[F]=o.extend(E,K||(L.length!=null?[]:{}),L)}else{if(L!==g){J[F]=L}}}}}return J};var b=\/z-?index|font-?weight|opacity|zoom|line-?height\/i,q=document.defaultView||{},s=Object.prototype.toString;o.extend({noConflict:function(E){l.$=p;if(E){l.jQuery=y}return o},isFunction:function(E){return s.call(E)==="[object Function]"},isArray:function(E){return s.call(E)==="[object Array]"},isXMLDoc:function(E){return E.nodeType===9&&E.documentElement.nodeName!=="HTML"||!!E.ownerDocument&&o.isXMLDoc(E.ownerDocument)},globalEval:function(G){if(G&&\/\\S\/.test(G)){var F=document.getElementsByTagName("head")[0]||document.documentElement,E=document.createElement("script");E.type="text\/javascript";if(o.support.scriptEval){E.appendChild(document.createTextNode(G))}else{E.text=G}F.insertBefore(E,F.firstChild);F.removeChild(E)}},nodeName:function(F,E){return F.nodeName&&F.nodeName.toUpperCase()==E.toUpperCase()},each:function(G,K,F){var E,H=0,I=G.length;if(F){if(I===g){for(E in G){if(K.apply(G[E],F)===false){break}}}else{for(;H<I;){if(K.apply(G[H++],F)===false){break}}}}else{if(I===g){for(E in G){if(K.call(G[E],E,G[E])===false){break}}}else{for(var J=G[0];H<I&&K.call(J,H,J)!==false;J=G[++H]){}}}return G},prop:function(H,I,G,F,E){if(o.isFunction(I)){I=I.call(H,F)}return typeof I==="number"&&G=="curCSS"&&!b.test(E)?I+"px":I},className:{add:function(E,F){o.each((F||"").split(\/\\s+\/),function(G,H){if(E.nodeType==1&&!o.className.has(E.className,H)){E.className+=(E.className?" ":"")+H}})},remove:function(E,F){if(E.nodeType==1){E.className=F!==g?o.grep(E.className.split(\/\\s+\/),function(G){return !o.className.has(F,G)}).join(" "):""}},has:function(F,E){return F&&o.inArray(E,(F.className||F).toString().split(\/\\s+\/))>-1}},swap:function(H,G,I){var E={};for(var F in G){E[F]=H.style[F];H.style[F]=G[F]}I.call(H);for(var F in G){H.style[F]=E[F]}},css:function(H,F,J,E){if(F=="width"||F=="height"){var L,G={position:"absolute",visibility:"hidden",display:"block"},K=F=="width"?["Left","Right"]:["Top","Bottom"];function I(){L=F=="width"?H.offsetWidth:H.offsetHeight;if(E==="border"){return}o.each(K,function(){if(!E){L-=parseFloat(o.curCSS(H,"padding"+this,true))||0}if(E==="margin"){L+=parseFloat(o.curCSS(H,"margin"+this,true))||0}else{L-=parseFloat(o.curCSS(H,"border"+this+"Width",true))||0}})}if(H.offsetWidth!==0){I()}else{o.swap(H,G,I)}return Math.max(0,Math.round(L))}return o.curCSS(H,F,J)},curCSS:function(I,F,G){var L,E=I.style;if(F=="opacity"&&!o.support.opacity){L=o.attr(E,"opacity");return L==""?"1":L}if(F.match(\/float\/i)){F=w}if(!G&&E&&E[F]){L=E[F]}else{if(q.getComputedStyle){if(F.match(\/float\/i)){F="float"}F=F.replace(\/([A-Z])\/g,"-$1").toLowerCase();var M=q.getComputedStyle(I,null);if(M){L=M.getPropertyValue(F)}if(F=="opacity"&&L==""){L="1"}}else{if(I.currentStyle){var J=F.replace(\/\\-(\\w)\/g,function(N,O){return O.toUpperCase()});L=I.currentStyle[F]||I.currentStyle[J];if(!\/^\\d+(px)?$\/i.test(L)&&\/^\\d\/.test(L)){var H=E.left,K=I.runtimeStyle.left;I.runtimeStyle.left=I.currentStyle.left;E.left=L||0;L=E.pixelLeft+"px";E.left=H;I.runtimeStyle.left=K}}}}return L},clean:function(F,K,I){K=K||document;if(typeof K.createElement==="undefined"){K=K.ownerDocument||K[0]&&K[0].ownerDocument||document}if(!I&&F.length===1&&typeof F[0]==="string"){var H=\/^<(\\w+)\\s*\\\/?>$\/.exec(F[0]);if(H){return[K.createElement(H[1])]}}var G=[],E=[],L=K.createElement("div");o.each(F,function(P,S){if(typeof S==="number"){S+=""}if(!S){return}if(typeof S==="string"){S=S.replace(\/(<(\\w+)[^>]*?)\\\/>\/g,function(U,V,T){return T.match(\/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$\/i)?U:V+"><\/"+T+">"});var O=S.replace(\/^\\s+\/,"").substring(0,10).toLowerCase();var Q=!O.indexOf("<opt")&&[1,"<select multiple='multiple'>","<\/select>"]||!O.indexOf("<leg")&&[1,"<fieldset>","<\/fieldset>"]||O.match(\/^<(thead|tbody|tfoot|colg|cap)\/)&&[1,"<table>","<\/table>"]||!O.indexOf("<tr")&&[2,"<table><tbody>","<\/tbody><\/table>"]||(!O.indexOf("<td")||!O.indexOf("<th"))&&[3,"<table><tbody><tr>","<\/tr><\/tbody><\/table>"]||!O.indexOf("<col")&&[2,"<table><tbody><\/tbody><colgroup>","<\/colgroup><\/table>"]||!o.support.htmlSerialize&&[1,"div<div>","<\/div>"]||[0,"",""];L.innerHTML=Q[1]+S+Q[2];while(Q[0]--){L=L.lastChild}if(!o.support.tbody){var R=\/<tbody\/i.test(S),N=!O.indexOf("<table")&&!R?L.firstChild&&L.firstChild.childNodes:Q[1]=="<table>"&&!R?L.childNodes:[];for(var M=N.length-1;M>=0;--M){if(o.nodeName(N[M],"tbody")&&!N[M].childNodes.length){N[M].parentNode.removeChild(N[M])}}}if(!o.support.leadingWhitespace&&\/^\\s\/.test(S)){L.insertBefore(K.createTextNode(S.match(\/^\\s*\/)[0]),L.firstChild)}S=o.makeArray(L.childNodes)}if(S.nodeType){G.push(S)}else{G=o.merge(G,S)}});if(I){for(var J=0;G[J];J++){if(o.nodeName(G[J],"script")&&(!G[J].type||G[J].type.toLowerCase()==="text\/javascript")){E.push(G[J].parentNode?G[J].parentNode.removeChild(G[J]):G[J])}else{if(G[J].nodeType===1){G.splice.apply(G,[J+1,0].concat(o.makeArray(G[J].getElementsByTagName("script"))))}I.appendChild(G[J])}}return E}return G},attr:function(J,G,K){if(!J||J.nodeType==3||J.nodeType==8){return g}var H=!o.isXMLDoc(J),L=K!==g;G=H&&o.props[G]||G;if(J.tagName){var F=\/href|src|style\/.test(G);if(G=="selected"&&J.parentNode){J.parentNode.selectedIndex}if(G in J&&H&&!F){if(L){if(G=="type"&&o.nodeName(J,"input")&&J.parentNode){throw"type property can't be changed"}J[G]=K}if(o.nodeName(J,"form")&&J.getAttributeNode(G)){return J.getAttributeNode(G).nodeValue}if(G=="tabIndex"){var I=J.getAttributeNode("tabIndex");return I&&I.specified?I.value:J.nodeName.match(\/(button|input|object|select|textarea)\/i)?0:J.nodeName.match(\/^(a|area)$\/i)&&J.href?0:g}return J[G]}if(!o.support.style&&H&&G=="style"){return o.attr(J.style,"cssText",K)}if(L){J.setAttribute(G,""+K)}var E=!o.support.hrefNormalized&&H&&F?J.getAttribute(G,2):J.getAttribute(G);return E===null?g:E}if(!o.support.opacity&&G=="opacity"){if(L){J.zoom=1;J.filter=(J.filter||"").replace(\/alpha\\([^)]*\\)\/,"")+(parseInt(K)+""=="NaN"?"":"alpha(opacity="+K*100+")")}return J.filter&&J.filter.indexOf("opacity=")>=0?(parseFloat(J.filter.match(\/opacity=([^)]*)\/)[1])\/100)+"":""}G=G.replace(\/-([a-z])\/ig,function(M,N){return N.toUpperCase()});if(L){J[G]=K}return J[G]},trim:function(E){return(E||"").replace(\/^\\s+|\\s+$\/g,"")},makeArray:function(G){var E=[];if(G!=null){var F=G.length;if(F==null||typeof G==="string"||o.isFunction(G)||G.setInterval){E[0]=G}else{while(F){E[--F]=G[F]}}}return E},inArray:function(G,H){for(var E=0,F=H.length;E<F;E++){if(H[E]===G){return E}}return -1},merge:function(H,E){var F=0,G,I=H.length;if(!o.support.getAll){while((G=E[F++])!=null){if(G.nodeType!=8){H[I++]=G}}}else{while((G=E[F++])!=null){H[I++]=G}}return H},unique:function(K){var F=[],E={};try{for(var G=0,H=K.length;G<H;G++){var J=o.data(K[G]);if(!E[J]){E[J]=true;F.push(K[G])}}}catch(I){F=K}return F},grep:function(F,J,E){var G=[];for(var H=0,I=F.length;H<I;H++){if(!E!=!J(F[H],H)){G.push(F[H])}}return G},map:function(E,J){var F=[];for(var G=0,H=E.length;G<H;G++){var I=J(E[G],G);if(I!=null){F[F.length]=I}}return F.concat.apply([],F)}});var C=navigator.userAgent.toLowerCase();o.browser={version:(C.match(\/.+(?:rv|it|ra|ie)[\\\/: ]([\\d.]+)\/)||[0,"0"])[1],safari:\/webkit\/.test(C),opera:\/opera\/.test(C),msie:\/msie\/.test(C)&&!\/opera\/.test(C),mozilla:\/mozilla\/.test(C)&&!\/(compatible|webkit)\/.test(C)};o.each({parent:function(E){return E.parentNode},parents:function(E){return o.dir(E,"parentNode")},next:function(E){return o.nth(E,2,"nextSibling")},prev:function(E){return o.nth(E,2,"previousSibling")},nextAll:function(E){return o.dir(E,"nextSibling")},prevAll:function(E){return o.dir(E,"previousSibling")},siblings:function(E){return o.sibling(E.parentNode.firstChild,E)},children:function(E){return o.sibling(E.firstChild)},contents:function(E){return o.nodeName(E,"iframe")?E.contentDocument||E.contentWindow.document:o.makeArray(E.childNodes)}},function(E,F){o.fn[E]=function(G){var H=o.map(this,F);if(G&&typeof G=="string"){H=o.multiFilter(G,H)}return this.pushStack(o.unique(H),E,G)}});o.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(E,F){o.fn[E]=function(G){var J=[],L=o(G);for(var K=0,H=L.length;K<H;K++){$/;"	v
ECHO	liblwgeom/lwin_wkt_lex.c	762;"	d	file:
EJB_CREATE_STATEMENT	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAO.java	/^    public static final String EJB_CREATE_STATEMENT = $/;"	f	interface:PostGisGeometryDAO
EJB_LOAD_STATEMENT	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAO.java	/^    public static final String EJB_LOAD_STATEMENT = $/;"	f	interface:PostGisGeometryDAO
EJB_REMOVE_STATEMENT	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAO.java	/^    public static final String EJB_REMOVE_STATEMENT = $/;"	f	interface:PostGisGeometryDAO
EJB_STORE_STATEMENT	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAO.java	/^    public static final String EJB_STORE_STATEMENT = $/;"	f	interface:PostGisGeometryDAO
EMPTY	java/jdbc/src/org/postgis/ComposedGeom.java	/^    public static final Geometry[] EMPTY = new Geometry[0];$/;"	f	class:ComposedGeom
EMPTY_TOK	liblwgeom/lwin_wkt_parse.c	/^     EMPTY_TOK = 273,$/;"	e	enum:yytokentype	file:
EMPTY_TOK	liblwgeom/lwin_wkt_parse.c	240;"	d	file:
EMPTY_TOK	liblwgeom/lwin_wkt_parse.h	/^     EMPTY_TOK = 273,$/;"	e	enum:yytokentype
EMPTY_TOK	liblwgeom/lwin_wkt_parse.h	81;"	d
ENCODING_DEFAULT	loader/shp2pgsql-core.h	78;"	d
END_PREC_SET__ENDIANESS	liblwgeom/lwout_twkb.h	25;"	d
END_PREC_SET__METHOD	liblwgeom/lwout_twkb.h	26;"	d
END_PREC_SET__PRECISION	liblwgeom/lwout_twkb.h	27;"	d
EOB_ACT_CONTINUE_SCAN	liblwgeom/lwin_wkt_lex.c	184;"	d	file:
EOB_ACT_END_OF_FILE	liblwgeom/lwin_wkt_lex.c	185;"	d	file:
EOB_ACT_LAST_MATCH	liblwgeom/lwin_wkt_lex.c	186;"	d	file:
EPSILON	liblwgeom/box2d.c	8;"	d	file:
EPSILON_SQLMM	liblwgeom/liblwgeom_internal.h	127;"	d
EQUAL10	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    public static String ALL = "ALL", ONLY10 = "ONLY10", EQUAL10 = "EQUAL10";$/;"	f	class:JtsTestParser
EQUAL10	java/jdbc/src/examples/TestParser.java	/^    public static String ALL = "ALL", ONLY10 = "ONLY10", EQUAL10 = "EQUAL10";$/;"	f	class:TestParser
ERR	loader/getopt.c	33;"	d	file:
ERRMSGLEN	extras/WFS_locks/WFS_locks.c	36;"	d	file:
ERRMSGLEN	postgis/long_xact.c	51;"	d	file:
ERRMSG_MAXLEN	libpgcommon/lwgeom_pg.c	155;"	d	file:
ERRMSG_MAXLEN	raster/rt_pg/rtpostgis.c	235;"	d	file:
ES_ERROR	raster/rt_core/librtcore.h	/^	ES_ERROR = 1 \/* generic error *\/$/;"	e	enum:__anon35
ES_NONE	raster/rt_core/librtcore.h	/^	ES_NONE = 0, \/* no error *\/$/;"	e	enum:__anon35
ET_CUSTOM	raster/rt_core/librtcore.h	/^	ET_CUSTOM$/;"	e	enum:__anon37
ET_FIRST	raster/rt_core/librtcore.h	/^	ET_FIRST,$/;"	e	enum:__anon37
ET_INTERSECTION	raster/rt_core/librtcore.h	/^	ET_INTERSECTION = 0,$/;"	e	enum:__anon37
ET_LAST	raster/rt_core/librtcore.h	/^	ET_LAST,$/;"	e	enum:__anon37
ET_SECOND	raster/rt_core/librtcore.h	/^	ET_SECOND,$/;"	e	enum:__anon37
ET_UNION	raster/rt_core/librtcore.h	/^	ET_UNION,$/;"	e	enum:__anon37
EXIT_SUCCESS	liblwgeom/lwin_wkt_parse.c	401;"	d	file:
EXIT_SUCCESS	liblwgeom/lwin_wkt_parse.c	429;"	d	file:
EXPORT_FILENAME_COLUMN	loader/shp2pgsql-gui.c	/^	EXPORT_FILENAME_COLUMN,$/;"	e	enum:__anon59	file:
EXPORT_GEOMETRY_COLUMN	loader/shp2pgsql-gui.c	/^	EXPORT_GEOMETRY_COLUMN,$/;"	e	enum:__anon59	file:
EXPORT_GEOMETRY_LISTSTORE_COLUMN	loader/shp2pgsql-gui.c	/^	EXPORT_GEOMETRY_LISTSTORE_COLUMN,$/;"	e	enum:__anon59	file:
EXPORT_N_COLUMNS	loader/shp2pgsql-gui.c	/^	EXPORT_N_COLUMNS$/;"	e	enum:__anon59	file:
EXPORT_POINTER_COLUMN	loader/shp2pgsql-gui.c	/^	EXPORT_POINTER_COLUMN,$/;"	e	enum:__anon59	file:
EXPORT_REMOVE_COLUMN	loader/shp2pgsql-gui.c	/^	EXPORT_REMOVE_COLUMN,$/;"	e	enum:__anon59	file:
EXPORT_SCHEMA_COLUMN	loader/shp2pgsql-gui.c	/^	EXPORT_SCHEMA_COLUMN,$/;"	e	enum:__anon59	file:
EXPORT_TABLE_COLUMN	loader/shp2pgsql-gui.c	/^	EXPORT_TABLE_COLUMN,$/;"	e	enum:__anon59	file:
Error	loader/shapefil.h	/^    void       (*Error) ( const char *message );$/;"	m	struct:__anon63
EventHandler	java/jdbc/src/examples/TestJava2d.java	/^    public static class EventHandler implements WindowListener {$/;"	c	class:TestJava2d
F	doc/html/jquery.js	/^(function(){var l=this,g,y=l.jQuery,p=l.$,o=l.jQuery=l.$=function(E,F){return new o.fn.init(E,F)},D=\/^[^<]*(<(.|\\s)+>)[^>]*$|^#([\\w-]+)$\/,f=\/^.[^:#\\[\\.,]*$\/;o.fn=o.prototype={init:function(E,H){E=E||document;if(E.nodeType){this[0]=E;this.length=1;this.context=E;return this}if(typeof E==="string"){var G=D.exec(E);if(G&&(G[1]||!H)){if(G[1]){E=o.clean([G[1]],H)}else{var I=document.getElementById(G[3]);if(I&&I.id!=G[3]){return o().find(E)}var F=o(I||[]);F.context=document;F.selector=E;return F}}else{return o(H).find(E)}}else{if(o.isFunction(E)){return o(document).ready(E)}}if(E.selector&&E.context){this.selector=E.selector;this.context=E.context}return this.setArray(o.isArray(E)?E:o.makeArray(E))},selector:"",jquery:"1.3.2",size:function(){return this.length},get:function(E){return E===g?Array.prototype.slice.call(this):this[E]},pushStack:function(F,H,E){var G=o(F);G.prevObject=this;G.context=this.context;if(H==="find"){G.selector=this.selector+(this.selector?" ":"")+E}else{if(H){G.selector=this.selector+"."+H+"("+E+")"}}return G},setArray:function(E){this.length=0;Array.prototype.push.apply(this,E);return this},each:function(F,E){return o.each(this,F,E)},index:function(E){return o.inArray(E&&E.jquery?E[0]:E,this)},attr:function(F,H,G){var E=F;if(typeof F==="string"){if(H===g){return this[0]&&o[G||"attr"](this[0],F)}else{E={};E[F]=H}}return this.each(function(I){for(F in E){o.attr(G?this.style:this,F,o.prop(this,E[F],G,I,F))}})},css:function(E,F){if((E=="width"||E=="height")&&parseFloat(F)<0){F=g}return this.attr(E,F,"curCSS")},text:function(F){if(typeof F!=="object"&&F!=null){return this.empty().append((this[0]&&this[0].ownerDocument||document).createTextNode(F))}var E="";o.each(F||this,function(){o.each(this.childNodes,function(){if(this.nodeType!=8){E+=this.nodeType!=1?this.nodeValue:o.fn.text([this])}})});return E},wrapAll:function(E){if(this[0]){var F=o(E,this[0].ownerDocument).clone();if(this[0].parentNode){F.insertBefore(this[0])}F.map(function(){var G=this;while(G.firstChild){G=G.firstChild}return G}).append(this)}return this},wrapInner:function(E){return this.each(function(){o(this).contents().wrapAll(E)})},wrap:function(E){return this.each(function(){o(this).wrapAll(E)})},append:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.appendChild(E)}})},prepend:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.insertBefore(E,this.firstChild)}})},before:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this)})},after:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this.nextSibling)})},end:function(){return this.prevObject||o([])},push:[].push,sort:[].sort,splice:[].splice,find:function(E){if(this.length===1){var F=this.pushStack([],"find",E);F.length=0;o.find(E,this[0],F);return F}else{return this.pushStack(o.unique(o.map(this,function(G){return o.find(E,G)})),"find",E)}},clone:function(G){var E=this.map(function(){if(!o.support.noCloneEvent&&!o.isXMLDoc(this)){var I=this.outerHTML;if(!I){var J=this.ownerDocument.createElement("div");J.appendChild(this.cloneNode(true));I=J.innerHTML}return o.clean([I.replace(\/ jQuery\\d+="(?:\\d+|null)"\/g,"").replace(\/^\\s*\/,"")])[0]}else{return this.cloneNode(true)}});if(G===true){var H=this.find("*").andSelf(),F=0;E.find("*").andSelf().each(function(){if(this.nodeName!==H[F].nodeName){return}var I=o.data(H[F],"events");for(var K in I){for(var J in I[K]){o.event.add(this,K,I[K][J],I[K][J].data)}}F++})}return E},filter:function(E){return this.pushStack(o.isFunction(E)&&o.grep(this,function(G,F){return E.call(G,F)})||o.multiFilter(E,o.grep(this,function(F){return F.nodeType===1})),"filter",E)},closest:function(E){var G=o.expr.match.POS.test(E)?o(E):null,F=0;return this.map(function(){var H=this;while(H&&H.ownerDocument){if(G?G.index(H)>-1:o(H).is(E)){o.data(H,"closest",F);return H}H=H.parentNode;F++}})},not:function(E){if(typeof E==="string"){if(f.test(E)){return this.pushStack(o.multiFilter(E,this,true),"not",E)}else{E=o.multiFilter(E,this)}}var F=E.length&&E[E.length-1]!==g&&!E.nodeType;return this.filter(function(){return F?o.inArray(this,E)<0:this!=E})},add:function(E){return this.pushStack(o.unique(o.merge(this.get(),typeof E==="string"?o(E):o.makeArray(E))))},is:function(E){return !!E&&o.multiFilter(E,this).length>0},hasClass:function(E){return !!E&&this.is("."+E)},val:function(K){if(K===g){var E=this[0];if(E){if(o.nodeName(E,"option")){return(E.attributes.value||{}).specified?E.value:E.text}if(o.nodeName(E,"select")){var I=E.selectedIndex,L=[],M=E.options,H=E.type=="select-one";if(I<0){return null}for(var F=H?I:0,J=H?I+1:M.length;F<J;F++){var G=M[F];if(G.selected){K=o(G).val();if(H){return K}L.push(K)}}return L}return(E.value||"").replace(\/\\r\/g,"")}return g}if(typeof K==="number"){K+=""}return this.each(function(){if(this.nodeType!=1){return}if(o.isArray(K)&&\/radio|checkbox\/.test(this.type)){this.checked=(o.inArray(this.value,K)>=0||o.inArray(this.name,K)>=0)}else{if(o.nodeName(this,"select")){var N=o.makeArray(K);o("option",this).each(function(){this.selected=(o.inArray(this.value,N)>=0||o.inArray(this.text,N)>=0)});if(!N.length){this.selectedIndex=-1}}else{this.value=K}}})},html:function(E){return E===g?(this[0]?this[0].innerHTML.replace(\/ jQuery\\d+="(?:\\d+|null)"\/g,""):null):this.empty().append(E)},replaceWith:function(E){return this.after(E).remove()},eq:function(E){return this.slice(E,+E+1)},slice:function(){return this.pushStack(Array.prototype.slice.apply(this,arguments),"slice",Array.prototype.slice.call(arguments).join(","))},map:function(E){return this.pushStack(o.map(this,function(G,F){return E.call(G,F,G)}))},andSelf:function(){return this.add(this.prevObject)},domManip:function(J,M,L){if(this[0]){var I=(this[0].ownerDocument||this[0]).createDocumentFragment(),F=o.clean(J,(this[0].ownerDocument||this[0]),I),H=I.firstChild;if(H){for(var G=0,E=this.length;G<E;G++){L.call(K(this[G],H),this.length>1||G>0?I.cloneNode(true):I)}}if(F){o.each(F,z)}}return this;function K(N,O){return M&&o.nodeName(N,"table")&&o.nodeName(O,"tr")?(N.getElementsByTagName("tbody")[0]||N.appendChild(N.ownerDocument.createElement("tbody"))):N}}};o.fn.init.prototype=o.fn;function z(E,F){if(F.src){o.ajax({url:F.src,async:false,dataType:"script"})}else{o.globalEval(F.text||F.textContent||F.innerHTML||"")}if(F.parentNode){F.parentNode.removeChild(F)}}function e(){return +new Date}o.extend=o.fn.extend=function(){var J=arguments[0]||{},H=1,I=arguments.length,E=false,G;if(typeof J==="boolean"){E=J;J=arguments[1]||{};H=2}if(typeof J!=="object"&&!o.isFunction(J)){J={}}if(I==H){J=this;--H}for(;H<I;H++){if((G=arguments[H])!=null){for(var F in G){var K=J[F],L=G[F];if(J===L){continue}if(E&&L&&typeof L==="object"&&!L.nodeType){J[F]=o.extend(E,K||(L.length!=null?[]:{}),L)}else{if(L!==g){J[F]=L}}}}}return J};var b=\/z-?index|font-?weight|opacity|zoom|line-?height\/i,q=document.defaultView||{},s=Object.prototype.toString;o.extend({noConflict:function(E){l.$=p;if(E){l.jQuery=y}return o},isFunction:function(E){return s.call(E)==="[object Function]"},isArray:function(E){return s.call(E)==="[object Array]"},isXMLDoc:function(E){return E.nodeType===9&&E.documentElement.nodeName!=="HTML"||!!E.ownerDocument&&o.isXMLDoc(E.ownerDocument)},globalEval:function(G){if(G&&\/\\S\/.test(G)){var F=document.getElementsByTagName("head")[0]||document.documentElement,E=document.createElement("script");E.type="text\/javascript";if(o.support.scriptEval){E.appendChild(document.createTextNode(G))}else{E.text=G}F.insertBefore(E,F.firstChild);F.removeChild(E)}},nodeName:function(F,E){return F.nodeName&&F.nodeName.toUpperCase()==E.toUpperCase()},each:function(G,K,F){var E,H=0,I=G.length;if(F){if(I===g){for(E in G){if(K.apply(G[E],F)===false){break}}}else{for(;H<I;){if(K.apply(G[H++],F)===false){break}}}}else{if(I===g){for(E in G){if(K.call(G[E],E,G[E])===false){break}}}else{for(var J=G[0];H<I&&K.call(J,H,J)!==false;J=G[++H]){}}}return G},prop:function(H,I,G,F,E){if(o.isFunction(I)){I=I.call(H,F)}return typeof I==="number"&&G=="curCSS"&&!b.test(E)?I+"px":I},className:{add:function(E,F){o.each((F||"").split(\/\\s+\/),function(G,H){if(E.nodeType==1&&!o.className.has(E.className,H)){E.className+=(E.className?" ":"")+H}})},remove:function(E,F){if(E.nodeType==1){E.className=F!==g?o.grep(E.className.split(\/\\s+\/),function(G){return !o.className.has(F,G)}).join(" "):""}},has:function(F,E){return F&&o.inArray(E,(F.className||F).toString().split(\/\\s+\/))>-1}},swap:function(H,G,I){var E={};for(var F in G){E[F]=H.style[F];H.style[F]=G[F]}I.call(H);for(var F in G){H.style[F]=E[F]}},css:function(H,F,J,E){if(F=="width"||F=="height"){var L,G={position:"absolute",visibility:"hidden",display:"block"},K=F=="width"?["Left","Right"]:["Top","Bottom"];function I(){L=F=="width"?H.offsetWidth:H.offsetHeight;if(E==="border"){return}o.each(K,function(){if(!E){L-=parseFloat(o.curCSS(H,"padding"+this,true))||0}if(E==="margin"){L+=parseFloat(o.curCSS(H,"margin"+this,true))||0}else{L-=parseFloat(o.curCSS(H,"border"+this+"Width",true))||0}})}if(H.offsetWidth!==0){I()}else{o.swap(H,G,I)}return Math.max(0,Math.round(L))}return o.curCSS(H,F,J)},curCSS:function(I,F,G){var L,E=I.style;if(F=="opacity"&&!o.support.opacity){L=o.attr(E,"opacity");return L==""?"1":L}if(F.match(\/float\/i)){F=w}if(!G&&E&&E[F]){L=E[F]}else{if(q.getComputedStyle){if(F.match(\/float\/i)){F="float"}F=F.replace(\/([A-Z])\/g,"-$1").toLowerCase();var M=q.getComputedStyle(I,null);if(M){L=M.getPropertyValue(F)}if(F=="opacity"&&L==""){L="1"}}else{if(I.currentStyle){var J=F.replace(\/\\-(\\w)\/g,function(N,O){return O.toUpperCase()});L=I.currentStyle[F]||I.currentStyle[J];if(!\/^\\d+(px)?$\/i.test(L)&&\/^\\d\/.test(L)){var H=E.left,K=I.runtimeStyle.left;I.runtimeStyle.left=I.currentStyle.left;E.left=L||0;L=E.pixelLeft+"px";E.left=H;I.runtimeStyle.left=K}}}}return L},clean:function(F,K,I){K=K||document;if(typeof K.createElement==="undefined"){K=K.ownerDocument||K[0]&&K[0].ownerDocument||document}if(!I&&F.length===1&&typeof F[0]==="string"){var H=\/^<(\\w+)\\s*\\\/?>$\/.exec(F[0]);if(H){return[K.createElement(H[1])]}}var G=[],E=[],L=K.createElement("div");o.each(F,function(P,S){if(typeof S==="number"){S+=""}if(!S){return}if(typeof S==="string"){S=S.replace(\/(<(\\w+)[^>]*?)\\\/>\/g,function(U,V,T){return T.match(\/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$\/i)?U:V+"><\/"+T+">"});var O=S.replace(\/^\\s+\/,"").substring(0,10).toLowerCase();var Q=!O.indexOf("<opt")&&[1,"<select multiple='multiple'>","<\/select>"]||!O.indexOf("<leg")&&[1,"<fieldset>","<\/fieldset>"]||O.match(\/^<(thead|tbody|tfoot|colg|cap)\/)&&[1,"<table>","<\/table>"]||!O.indexOf("<tr")&&[2,"<table><tbody>","<\/tbody><\/table>"]||(!O.indexOf("<td")||!O.indexOf("<th"))&&[3,"<table><tbody><tr>","<\/tr><\/tbody><\/table>"]||!O.indexOf("<col")&&[2,"<table><tbody><\/tbody><colgroup>","<\/colgroup><\/table>"]||!o.support.htmlSerialize&&[1,"div<div>","<\/div>"]||[0,"",""];L.innerHTML=Q[1]+S+Q[2];while(Q[0]--){L=L.lastChild}if(!o.support.tbody){var R=\/<tbody\/i.test(S),N=!O.indexOf("<table")&&!R?L.firstChild&&L.firstChild.childNodes:Q[1]=="<table>"&&!R?L.childNodes:[];for(var M=N.length-1;M>=0;--M){if(o.nodeName(N[M],"tbody")&&!N[M].childNodes.length){N[M].parentNode.removeChild(N[M])}}}if(!o.support.leadingWhitespace&&\/^\\s\/.test(S)){L.insertBefore(K.createTextNode(S.match(\/^\\s*\/)[0]),L.firstChild)}S=o.makeArray(L.childNodes)}if(S.nodeType){G.push(S)}else{G=o.merge(G,S)}});if(I){for(var J=0;G[J];J++){if(o.nodeName(G[J],"script")&&(!G[J].type||G[J].type.toLowerCase()==="text\/javascript")){E.push(G[J].parentNode?G[J].parentNode.removeChild(G[J]):G[J])}else{if(G[J].nodeType===1){G.splice.apply(G,[J+1,0].concat(o.makeArray(G[J].getElementsByTagName("script"))))}I.appendChild(G[J])}}return E}return G},attr:function(J,G,K){if(!J||J.nodeType==3||J.nodeType==8){return g}var H=!o.isXMLDoc(J),L=K!==g;G=H&&o.props[G]||G;if(J.tagName){var F=\/href|src|style\/.test(G);if(G=="selected"&&J.parentNode){J.parentNode.selectedIndex}if(G in J&&H&&!F){if(L){if(G=="type"&&o.nodeName(J,"input")&&J.parentNode){throw"type property can't be changed"}J[G]=K}if(o.nodeName(J,"form")&&J.getAttributeNode(G)){return J.getAttributeNode(G).nodeValue}if(G=="tabIndex"){var I=J.getAttributeNode("tabIndex");return I&&I.specified?I.value:J.nodeName.match(\/(button|input|object|select|textarea)\/i)?0:J.nodeName.match(\/^(a|area)$\/i)&&J.href?0:g}return J[G]}if(!o.support.style&&H&&G=="style"){return o.attr(J.style,"cssText",K)}if(L){J.setAttribute(G,""+K)}var E=!o.support.hrefNormalized&&H&&F?J.getAttribute(G,2):J.getAttribute(G);return E===null?g:E}if(!o.support.opacity&&G=="opacity"){if(L){J.zoom=1;J.filter=(J.filter||"").replace(\/alpha\\([^)]*\\)\/,"")+(parseInt(K)+""=="NaN"?"":"alpha(opacity="+K*100+")")}return J.filter&&J.filter.indexOf("opacity=")>=0?(parseFloat(J.filter.match(\/opacity=([^)]*)\/)[1])\/100)+"":""}G=G.replace(\/-([a-z])\/ig,function(M,N){return N.toUpperCase()});if(L){J[G]=K}return J[G]},trim:function(E){return(E||"").replace(\/^\\s+|\\s+$\/g,"")},makeArray:function(G){var E=[];if(G!=null){var F=G.length;if(F==null||typeof G==="string"||o.isFunction(G)||G.setInterval){E[0]=G}else{while(F){E[--F]=G[F]}}}return E},inArray:function(G,H){for(var E=0,F=H.length;E<F;E++){if(H[E]===G){return E}}return -1},merge:function(H,E){var F=0,G,I=H.length;if(!o.support.getAll){while((G=E[F++])!=null){if(G.nodeType!=8){H[I++]=G}}}else{while((G=E[F++])!=null){H[I++]=G}}return H},unique:function(K){var F=[],E={};try{for(var G=0,H=K.length;G<H;G++){var J=o.data(K[G]);if(!E[J]){E[J]=true;F.push(K[G])}}}catch(I){F=K}return F},grep:function(F,J,E){var G=[];for(var H=0,I=F.length;H<I;H++){if(!E!=!J(F[H],H)){G.push(F[H])}}return G},map:function(E,J){var F=[];for(var G=0,H=E.length;G<H;G++){var I=J(E[G],G);if(I!=null){F[F.length]=I}}return F.concat.apply([],F)}});var C=navigator.userAgent.toLowerCase();o.browser={version:(C.match(\/.+(?:rv|it|ra|ie)[\\\/: ]([\\d.]+)\/)||[0,"0"])[1],safari:\/webkit\/.test(C),opera:\/opera\/.test(C),msie:\/msie\/.test(C)&&!\/opera\/.test(C),mozilla:\/mozilla\/.test(C)&&!\/(compatible|webkit)\/.test(C)};o.each({parent:function(E){return E.parentNode},parents:function(E){return o.dir(E,"parentNode")},next:function(E){return o.nth(E,2,"nextSibling")},prev:function(E){return o.nth(E,2,"previousSibling")},nextAll:function(E){return o.dir(E,"nextSibling")},prevAll:function(E){return o.dir(E,"previousSibling")},siblings:function(E){return o.sibling(E.parentNode.firstChild,E)},children:function(E){return o.sibling(E.firstChild)},contents:function(E){return o.nodeName(E,"iframe")?E.contentDocument||E.contentWindow.document:o.makeArray(E.childNodes)}},function(E,F){o.fn[E]=function(G){var H=o.map(this,F);if(G&&typeof G=="string"){H=o.multiFilter(G,H)}return this.pushStack(o.unique(H),E,G)}});o.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(E,F){o.fn[E]=function(G){var J=[],L=o(G);for(var K=0,H=L.length;K<H;K++){$/;"	v
FALLBACK_ND_JOINSEL	postgis/gserialized_estimate.c	145;"	d	file:
FALLBACK_ND_SEL	postgis/gserialized_estimate.c	144;"	d	file:
FALSE	extras/wkb_reader/wkbtest.h	16;"	d
FALSE	loader/dbfopen.c	169;"	d	file:
FALSE	loader/shpopen.c	278;"	d	file:
FClose	loader/shapefil.h	/^    int        (*FClose)( SAFile file );$/;"	m	struct:__anon63
FFlush	loader/shapefil.h	/^    int        (*FFlush)( SAFile file );$/;"	m	struct:__anon63
FIContext	libpgcommon/lwgeom_cache.c	/^FIContext(FunctionCallInfoData* fcinfo)$/;"	f	file:
FIND_BY_POLYGON_STATEMENT	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAO.java	/^    public static final String FIND_BY_POLYGON_STATEMENT = $/;"	f	interface:PostGisGeometryDAO
FIND_BY_PRIMARY_KEY_STATEMENT	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAO.java	/^    public static final String FIND_BY_PRIMARY_KEY_STATEMENT = $/;"	f	interface:PostGisGeometryDAO
FLEXINT_H	liblwgeom/lwin_wkt_lex.c	49;"	d	file:
FLEX_BETA	liblwgeom/lwin_wkt_lex.c	33;"	d	file:
FLEX_SCANNER	liblwgeom/lwin_wkt_lex.c	28;"	d	file:
FLT_EQ	raster/rt_core/librtcore.h	2170;"	d
FLT_NEQ	raster/rt_core/librtcore.h	2169;"	d
FORCE_OUTPUT_2D	loader/shp2pgsql-core.h	45;"	d
FORCE_OUTPUT_3DM	loader/shp2pgsql-core.h	47;"	d
FORCE_OUTPUT_3DZ	loader/shp2pgsql-core.h	46;"	d
FORCE_OUTPUT_4D	loader/shp2pgsql-core.h	48;"	d
FORCE_OUTPUT_DISABLE	loader/shp2pgsql-core.h	44;"	d
FOpen	loader/shapefil.h	/^    SAFile     (*FOpen) ( const char *filename, const char *access);$/;"	m	struct:__anon63
FP_ABS	liblwgeom/liblwgeom_internal.h	47;"	d
FP_CONTAINS	liblwgeom/liblwgeom_internal.h	58;"	d
FP_CONTAINS_BOTTOM	liblwgeom/liblwgeom_internal.h	55;"	d
FP_CONTAINS_EXCL	liblwgeom/liblwgeom_internal.h	57;"	d
FP_CONTAINS_INCL	liblwgeom/liblwgeom_internal.h	56;"	d
FP_CONTAINS_TOP	liblwgeom/liblwgeom_internal.h	54;"	d
FP_EQUALS	liblwgeom/liblwgeom_internal.h	48;"	d
FP_GT	liblwgeom/liblwgeom_internal.h	52;"	d
FP_GTEQ	liblwgeom/liblwgeom_internal.h	53;"	d
FP_IS_ZERO	liblwgeom/liblwgeom_internal.h	44;"	d
FP_LT	liblwgeom/liblwgeom_internal.h	50;"	d
FP_LTEQ	liblwgeom/liblwgeom_internal.h	51;"	d
FP_MAX	liblwgeom/liblwgeom_internal.h	45;"	d
FP_MIN	liblwgeom/liblwgeom_internal.h	46;"	d
FP_NEQUALS	liblwgeom/liblwgeom_internal.h	49;"	d
FP_TOLERANCE	liblwgeom/liblwgeom_internal.h	43;"	d
FPeq	liblwgeom/box2d.c	11;"	d	file:
FRead	loader/shapefil.h	/^    SAOffset   (*FRead) ( void *p, SAOffset size, SAOffset nmemb, SAFile file);$/;"	m	struct:__anon63
FSeek	loader/shapefil.h	/^    SAOffset   (*FSeek) ( SAFile file, SAOffset offset, int whence );$/;"	m	struct:__anon63
FTDate	loader/shapefil.h	/^  FTDate,$/;"	e	enum:__anon68
FTDouble	loader/shapefil.h	/^  FTDouble,$/;"	e	enum:__anon68
FTInteger	loader/shapefil.h	/^  FTInteger,$/;"	e	enum:__anon68
FTInvalid	loader/shapefil.h	/^  FTInvalid$/;"	e	enum:__anon68
FTLogical	loader/shapefil.h	/^  FTLogical,$/;"	e	enum:__anon68
FTString	loader/shapefil.h	/^  FTString,$/;"	e	enum:__anon68
FTell	loader/shapefil.h	/^    SAOffset   (*FTell) ( SAFile file );$/;"	m	struct:__anon63
FULL	java/jdbc/src/org/postgis/Version.java	/^    public static final String FULL = "PostGIS JDBC V" + MAJOR + "." + MINOR + "." + MICRO;$/;"	f	class:Version
FWrite	loader/shapefil.h	/^    SAOffset   (*FWrite)( void *p, SAOffset size, SAOffset nmemb, SAFile file);$/;"	m	struct:__anon63
Face	liblwgeom/lwgeom_geos.c	/^} Face;$/;"	t	typeref:struct:Face_t	file:
Face_t	liblwgeom/lwgeom_geos.c	/^typedef struct Face_t {$/;"	s	file:
FindPolygons	loader/shp2pgsql-core.c	/^FindPolygons(SHPObject *obj, Ring ***Out)$/;"	f
GEOGRAPHIC_EDGE	liblwgeom/lwgeodetic.h	/^} GEOGRAPHIC_EDGE;$/;"	t	typeref:struct:__anon22
GEOGRAPHIC_POINT	liblwgeom/lwgeodetic.h	/^} GEOGRAPHIC_POINT;$/;"	t	typeref:struct:__anon21
GEOGRAPHY_DEFAULT	loader/shp2pgsql-core.h	73;"	d
GEOMDUMPNODE	postgis/lwgeom_dump.c	/^GEOMDUMPNODE;$/;"	t	typeref:struct:GEOMDUMPNODE_T	file:
GEOMDUMPNODE_T	postgis/lwgeom_dump.c	/^typedef struct GEOMDUMPNODE_T$/;"	s	file:
GEOMDUMPSTATE	postgis/lwgeom_dump.c	/^GEOMDUMPSTATE;$/;"	t	typeref:struct:GEOMDUMPSTATE	file:
GEOMDUMPSTATE	postgis/lwgeom_dump.c	/^typedef struct GEOMDUMPSTATE$/;"	s	file:
GEOMETRYCOLLECTION	java/jdbc/src/org/postgis/Geometry.java	/^	public static final int GEOMETRYCOLLECTION = 7;$/;"	f	class:Geometry
GEOMETRY_DEFAULT	loader/shp2pgsql-core.h	72;"	d
GEOMTYPE_STRUCT_ARRAY_LEN	liblwgeom/g_util.c	113;"	d	file:
GEOS2LWGEOM	liblwgeom/lwgeom_geos.c	/^GEOS2LWGEOM(const GEOSGeometry *geom, char want3d)$/;"	f
GEOS2POSTGIS	postgis/lwgeom_geos.c	/^GEOS2POSTGIS(GEOSGeom geom, char want3d)$/;"	f
GEOS_C_INCLUDED	liblwgeom/lwgeom_geos.h	16;"	d
GEOSnoop	postgis/lwgeom_geos.c	/^Datum GEOSnoop(PG_FUNCTION_ARGS)$/;"	f
GEOSnoop	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(GEOSnoop);$/;"	v
GET_FLOAT_WORD	liblwgeom/lwgeom_api.c	41;"	d	file:
GIDX	libpgcommon/gserialized_gist.h	/^} GIDX;$/;"	t	typeref:struct:__anon3
GIDX_GET_MAX	libpgcommon/gserialized_gist.h	76;"	d
GIDX_GET_MIN	libpgcommon/gserialized_gist.h	74;"	d
GIDX_MAX_SIZE	libpgcommon/gserialized_gist.h	26;"	d
GIDX_NDIMS	libpgcommon/gserialized_gist.h	72;"	d
GIDX_SET_MAX	libpgcommon/gserialized_gist.h	80;"	d
GIDX_SET_MIN	libpgcommon/gserialized_gist.h	78;"	d
GIDX_SIZE	libpgcommon/gserialized_gist.h	82;"	d
GISVERSIONS	java/jdbc/src/examples/VersionPrinter.java	/^    public static String[] GISVERSIONS = {$/;"	f	class:VersionPrinter
GML32_NS	postgis/lwgeom_in_gml.c	64;"	d	file:
GML_NS	postgis/lwgeom_in_gml.c	63;"	d	file:
GSR_CONTAINS	raster/rt_core/librtcore.h	/^	GSR_CONTAINS,$/;"	e	enum:__anon38
GSR_CONTAINSPROPERLY	raster/rt_core/librtcore.h	/^	GSR_CONTAINSPROPERLY,$/;"	e	enum:__anon38
GSR_COVEREDBY	raster/rt_core/librtcore.h	/^	GSR_COVEREDBY$/;"	e	enum:__anon38
GSR_COVERS	raster/rt_core/librtcore.h	/^	GSR_COVERS,$/;"	e	enum:__anon38
GSR_OVERLAPS	raster/rt_core/librtcore.h	/^	GSR_OVERLAPS = 0,$/;"	e	enum:__anon38
GSR_TOUCHES	raster/rt_core/librtcore.h	/^	GSR_TOUCHES,$/;"	e	enum:__anon38
GUI_RCSID	loader/shp2pgsql-gui.c	32;"	d	file:
GenerateLineStringGeometry	loader/shp2pgsql-core.c	/^GenerateLineStringGeometry(SHPLOADERSTATE *state, SHPObject *obj, char **geometry)$/;"	f
GeneratePointGeometry	loader/shp2pgsql-core.c	/^GeneratePointGeometry(SHPLOADERSTATE *state, SHPObject *obj, char **geometry, int force_multi)$/;"	f
GeneratePolygonGeometry	loader/shp2pgsql-core.c	/^GeneratePolygonGeometry(SHPLOADERSTATE *state, SHPObject *obj, char **geometry)$/;"	f
GenericCache	libpgcommon/lwgeom_cache.c	/^} GenericCache;$/;"	t	typeref:struct:__anon5	file:
GenericCacheCollection	libpgcommon/lwgeom_cache.c	/^} GenericCacheCollection;$/;"	t	typeref:struct:__anon6	file:
GeoCollID	java/jdbc/src/org/postgis/GeometryCollection.java	/^    public static final String GeoCollID = "GEOMETRYCOLLECTION";$/;"	f	class:GeometryCollection
GeomCache	libpgcommon/lwgeom_cache.h	/^} GeomCache;$/;"	t	typeref:struct:__anon1
GeomCacheAllocator	libpgcommon/lwgeom_cache.h	/^	GeomCache* (*GeomCacheAllocator)(void); \/* Allocate the kind of cache object you use (GeomCache+some extra space) *\/$/;"	m	struct:__anon2
GeomCacheMethods	libpgcommon/lwgeom_cache.h	/^} GeomCacheMethods;$/;"	t	typeref:struct:__anon2
GeomIndexBuilder	libpgcommon/lwgeom_cache.h	/^	int (*GeomIndexBuilder)(const LWGEOM* lwgeom, GeomCache* cache); \/* Build an index\/tree and add it to your cache *\/$/;"	m	struct:__anon2
GeomIndexFreer	libpgcommon/lwgeom_cache.h	/^	int (*GeomIndexFreer)(GeomCache* cache); \/* Free the index\/tree in your cache *\/$/;"	m	struct:__anon2
Geometry	java/jdbc/src/org/postgis/Geometry.java	/^	protected Geometry(int type) {$/;"	m	class:Geometry
Geometry	java/jdbc/src/org/postgis/Geometry.java	/^public abstract class Geometry implements Serializable {$/;"	c
GeometryBean	java/ejb2/src/com/geodetix/geo/ejb/GeometryBean.java	/^public abstract class GeometryBean implements javax.ejb.EntityBean {$/;"	c
GeometryCollection	java/jdbc/src/org/postgis/GeometryCollection.java	/^    public GeometryCollection() {$/;"	m	class:GeometryCollection
GeometryCollection	java/jdbc/src/org/postgis/GeometryCollection.java	/^    public GeometryCollection(Geometry[] geoms) {$/;"	m	class:GeometryCollection
GeometryCollection	java/jdbc/src/org/postgis/GeometryCollection.java	/^    public GeometryCollection(String value) throws SQLException {$/;"	m	class:GeometryCollection
GeometryCollection	java/jdbc/src/org/postgis/GeometryCollection.java	/^    public GeometryCollection(String value, boolean haveM) throws SQLException {$/;"	m	class:GeometryCollection
GeometryCollection	java/jdbc/src/org/postgis/GeometryCollection.java	/^public class GeometryCollection extends ComposedGeom {$/;"	c
GeometryCollectionPathIterator	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        public GeometryCollectionPathIterator(GeometryCollection _coll, AffineTransform _at) {$/;"	m	class:JTSShape.GeometryCollectionPathIterator
GeometryCollectionPathIterator	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^    public static class GeometryCollectionPathIterator extends GeometryPathIterator {$/;"	c	class:JTSShape
GeometryFacadeBean	java/ejb2/src/com/geodetix/geo/ejb/GeometryFacadeBean.java	/^public abstract class GeometryFacadeBean implements SessionBean {$/;"	c
GeometryPathIterator	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        GeometryPathIterator(AffineTransform _at) {$/;"	m	class:JTSShape.GeometryPathIterator
GeometryPathIterator	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^    public static abstract class GeometryPathIterator implements PathIterator {$/;"	c	class:JTSShape
GeometryType	java/ejb3/src/org/postgis/hibernate/GeometryType.java	/^public class GeometryType implements UserType {$/;"	c
GetCircTreeGeomCache	postgis/geography_measurement_trees.c	/^GetCircTreeGeomCache(FunctionCallInfoData* fcinfo, const GSERIALIZED* g1, const GSERIALIZED* g2)$/;"	f	file:
GetGenericCacheCollection	libpgcommon/lwgeom_cache.c	/^GetGenericCacheCollection(FunctionCallInfoData* fcinfo)$/;"	f	file:
GetGeomCache	libpgcommon/lwgeom_cache.c	/^GetGeomCache(FunctionCallInfoData* fcinfo, const GeomCacheMethods* cache_methods, const GSERIALIZED* g1, const GSERIALIZED* g2)$/;"	f
GetPJHashEntry	libpgcommon/lwgeom_transform.c	/^static projPJ GetPJHashEntry(MemoryContext mcxt)$/;"	f	file:
GetPROJ4Cache	libpgcommon/lwgeom_transform.c	/^Proj4Cache GetPROJ4Cache(FunctionCallInfo fcinfo) {$/;"	f
GetPROJ4SRSCache	libpgcommon/lwgeom_cache.c	/^GetPROJ4SRSCache(FunctionCallInfoData* fcinfo)$/;"	f
GetPrepGeomCache	postgis/lwgeom_geos_prepared.c	/^GetPrepGeomCache(FunctionCallInfoData* fcinfo, GSERIALIZED* g1, GSERIALIZED* g2)$/;"	f
GetPrepGeomHashEntry	postgis/lwgeom_geos_prepared.c	/^GetPrepGeomHashEntry(MemoryContext mcxt)$/;"	f	file:
GetProj4String	libpgcommon/lwgeom_transform.c	/^static char* GetProj4String(int srid)$/;"	f	file:
GetProj4StringSPI	libpgcommon/lwgeom_transform.c	/^char* GetProj4StringSPI(int srid)$/;"	f
GetProjectionFromPROJ4Cache	libpgcommon/lwgeom_transform.c	/^projPJ GetProjectionFromPROJ4Cache(Proj4Cache cache, int srid)$/;"	f
GetProjectionFromPROJ4SRSCache	libpgcommon/lwgeom_transform.c	/^GetProjectionFromPROJ4SRSCache(PROJ4PortalCache *PROJ4Cache, int srid)$/;"	f	file:
GetProjectionsUsingFCInfo	libpgcommon/lwgeom_transform.c	/^GetProjectionsUsingFCInfo(FunctionCallInfo fcinfo, int srid1, int srid2, projPJ *pj1, projPJ *pj2)$/;"	f
GetRtreeCache	postgis/lwgeom_rtree.c	/^GetRtreeCache(FunctionCallInfoData* fcinfo, GSERIALIZED* g1)$/;"	f
GisCanvas	java/jdbc/src/examples/TestJava2d.java	/^        public GisCanvas(Shape[] geometries) {$/;"	m	class:TestJava2d.GisCanvas
GisCanvas	java/jdbc/src/examples/TestJava2d.java	/^    public static class GisCanvas extends Canvas {$/;"	c	class:TestJava2d
HOME_CREATE_NON_OPENGIS_TABLE_STATEMENT	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAO.java	/^    public static final String HOME_CREATE_NON_OPENGIS_TABLE_STATEMENT = $/;"	f	interface:PostGisGeometryDAO
HOME_CREATE_OPENGIS_TABLE_STATEMENT	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAO.java	/^    public static final String HOME_CREATE_OPENGIS_TABLE_STATEMENT = $/;"	f	interface:PostGisGeometryDAO
HomogenizeBuffer	liblwgeom/lwhomogenize.c	/^} HomogenizeBuffer;$/;"	t	typeref:struct:__anon27	file:
IMPORT_FILENAME_COLUMN	loader/shp2pgsql-gui.c	/^	IMPORT_FILENAME_COLUMN,$/;"	e	enum:__anon56	file:
IMPORT_GEOMETRY_COLUMN	loader/shp2pgsql-gui.c	/^	IMPORT_GEOMETRY_COLUMN,$/;"	e	enum:__anon56	file:
IMPORT_MODE_COLUMN	loader/shp2pgsql-gui.c	/^	IMPORT_MODE_COLUMN,$/;"	e	enum:__anon56	file:
IMPORT_N_COLUMNS	loader/shp2pgsql-gui.c	/^	IMPORT_N_COLUMNS$/;"	e	enum:__anon56	file:
IMPORT_POINTER_COLUMN	loader/shp2pgsql-gui.c	/^	IMPORT_POINTER_COLUMN,$/;"	e	enum:__anon56	file:
IMPORT_REMOVE_COLUMN	loader/shp2pgsql-gui.c	/^	IMPORT_REMOVE_COLUMN,$/;"	e	enum:__anon56	file:
IMPORT_SCHEMA_COLUMN	loader/shp2pgsql-gui.c	/^	IMPORT_SCHEMA_COLUMN,$/;"	e	enum:__anon56	file:
IMPORT_SRID_COLUMN	loader/shp2pgsql-gui.c	/^	IMPORT_SRID_COLUMN,$/;"	e	enum:__anon56	file:
IMPORT_TABLE_COLUMN	loader/shp2pgsql-gui.c	/^	IMPORT_TABLE_COLUMN,$/;"	e	enum:__anon56	file:
INITIAL	liblwgeom/lwin_wkt_lex.c	677;"	d	file:
INT16_MAX	liblwgeom/lwin_wkt_lex.c	92;"	d	file:
INT16_MIN	liblwgeom/lwin_wkt_lex.c	83;"	d	file:
INT32_MAX	liblwgeom/lwin_wkt_lex.c	95;"	d	file:
INT32_MIN	liblwgeom/lwin_wkt_lex.c	86;"	d	file:
INT8_MAX	liblwgeom/lwin_wkt_lex.c	89;"	d	file:
INT8_MIN	liblwgeom/lwin_wkt_lex.c	80;"	d	file:
IngestMDB	java/ejb3/src/org/postgis/ejb/mdb/IngestMDB.java	/^public class IngestMDB implements MessageListener {$/;"	c
IntersectsExpression	java/ejb3/src/org/postgis/hibernate/IntersectsExpression.java	/^	public IntersectsExpression(String propertyName, Geometry geom)$/;"	m	class:IntersectsExpression
IntersectsExpression	java/ejb3/src/org/postgis/hibernate/IntersectsExpression.java	/^public class IntersectsExpression implements Criterion{$/;"	c
IntervalIsContained	postgis/lwgeom_rtree.c	/^IntervalIsContained(RTREE_INTERVAL* interval, double value)$/;"	f	file:
IsInPROJ4Cache	libpgcommon/lwgeom_transform.c	/^IsInPROJ4Cache(Proj4Cache PROJ4Cache, int srid) {$/;"	f
IsInPROJ4SRSCache	libpgcommon/lwgeom_transform.c	/^IsInPROJ4SRSCache(PROJ4PortalCache *PROJ4Cache, int srid)$/;"	f	file:
IsPROJ4LibPathSet	libpgcommon/lwgeom_transform.c	/^static bool IsPROJ4LibPathSet = false;$/;"	v	file:
JTSShape	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^    public JTSShape(Geometry _geom) {$/;"	m	class:JTSShape
JTSShape	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^    public JTSShape(JtsGeometry _geom) {$/;"	m	class:JTSShape
JTSShape	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^public class JTSShape implements Shape {$/;"	c
Java2DWrapper	java/jdbc/src/org/postgis/java2d/Java2DWrapper.java	/^    public Java2DWrapper() {$/;"	m	class:Java2DWrapper
Java2DWrapper	java/jdbc/src/org/postgis/java2d/Java2DWrapper.java	/^public class Java2DWrapper extends Driver {$/;"	c
JtsBinaryParser	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryParser.java	/^public class JtsBinaryParser {$/;"	c
JtsBinaryWriter	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^public class JtsBinaryWriter {$/;"	c
JtsGeometry	java/jdbc/jtssrc/org/postgis/jts/JtsGeometry.java	/^    public JtsGeometry() {$/;"	m	class:JtsGeometry
JtsGeometry	java/jdbc/jtssrc/org/postgis/jts/JtsGeometry.java	/^    public JtsGeometry(Geometry geom) {$/;"	m	class:JtsGeometry
JtsGeometry	java/jdbc/jtssrc/org/postgis/jts/JtsGeometry.java	/^    public JtsGeometry(String value) throws SQLException {$/;"	m	class:JtsGeometry
JtsGeometry	java/jdbc/jtssrc/org/postgis/jts/JtsGeometry.java	/^public class JtsGeometry extends PGobject {$/;"	c
JtsGisWrapper	java/jdbc/jtssrc/org/postgis/jts/JtsGisWrapper.java	/^    public JtsGisWrapper() {$/;"	m	class:JtsGisWrapper
JtsGisWrapper	java/jdbc/jtssrc/org/postgis/jts/JtsGisWrapper.java	/^public class JtsGisWrapper extends Driver {$/;"	c
JtsTestParser	java/jdbc/jtssrc/examples/JtsTestParser.java	/^public class JtsTestParser {$/;"	c
JtsWrapper	java/jdbc/jtssrc/org/postgis/jts/JtsWrapper.java	/^    public JtsWrapper() {$/;"	m	class:JtsWrapper
JtsWrapper	java/jdbc/jtssrc/org/postgis/jts/JtsWrapper.java	/^public class JtsWrapper extends Driver {$/;"	c
K	doc/html/jquery.js	/^(function(){var l=this,g,y=l.jQuery,p=l.$,o=l.jQuery=l.$=function(E,F){return new o.fn.init(E,F)},D=\/^[^<]*(<(.|\\s)+>)[^>]*$|^#([\\w-]+)$\/,f=\/^.[^:#\\[\\.,]*$\/;o.fn=o.prototype={init:function(E,H){E=E||document;if(E.nodeType){this[0]=E;this.length=1;this.context=E;return this}if(typeof E==="string"){var G=D.exec(E);if(G&&(G[1]||!H)){if(G[1]){E=o.clean([G[1]],H)}else{var I=document.getElementById(G[3]);if(I&&I.id!=G[3]){return o().find(E)}var F=o(I||[]);F.context=document;F.selector=E;return F}}else{return o(H).find(E)}}else{if(o.isFunction(E)){return o(document).ready(E)}}if(E.selector&&E.context){this.selector=E.selector;this.context=E.context}return this.setArray(o.isArray(E)?E:o.makeArray(E))},selector:"",jquery:"1.3.2",size:function(){return this.length},get:function(E){return E===g?Array.prototype.slice.call(this):this[E]},pushStack:function(F,H,E){var G=o(F);G.prevObject=this;G.context=this.context;if(H==="find"){G.selector=this.selector+(this.selector?" ":"")+E}else{if(H){G.selector=this.selector+"."+H+"("+E+")"}}return G},setArray:function(E){this.length=0;Array.prototype.push.apply(this,E);return this},each:function(F,E){return o.each(this,F,E)},index:function(E){return o.inArray(E&&E.jquery?E[0]:E,this)},attr:function(F,H,G){var E=F;if(typeof F==="string"){if(H===g){return this[0]&&o[G||"attr"](this[0],F)}else{E={};E[F]=H}}return this.each(function(I){for(F in E){o.attr(G?this.style:this,F,o.prop(this,E[F],G,I,F))}})},css:function(E,F){if((E=="width"||E=="height")&&parseFloat(F)<0){F=g}return this.attr(E,F,"curCSS")},text:function(F){if(typeof F!=="object"&&F!=null){return this.empty().append((this[0]&&this[0].ownerDocument||document).createTextNode(F))}var E="";o.each(F||this,function(){o.each(this.childNodes,function(){if(this.nodeType!=8){E+=this.nodeType!=1?this.nodeValue:o.fn.text([this])}})});return E},wrapAll:function(E){if(this[0]){var F=o(E,this[0].ownerDocument).clone();if(this[0].parentNode){F.insertBefore(this[0])}F.map(function(){var G=this;while(G.firstChild){G=G.firstChild}return G}).append(this)}return this},wrapInner:function(E){return this.each(function(){o(this).contents().wrapAll(E)})},wrap:function(E){return this.each(function(){o(this).wrapAll(E)})},append:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.appendChild(E)}})},prepend:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.insertBefore(E,this.firstChild)}})},before:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this)})},after:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this.nextSibling)})},end:function(){return this.prevObject||o([])},push:[].push,sort:[].sort,splice:[].splice,find:function(E){if(this.length===1){var F=this.pushStack([],"find",E);F.length=0;o.find(E,this[0],F);return F}else{return this.pushStack(o.unique(o.map(this,function(G){return o.find(E,G)})),"find",E)}},clone:function(G){var E=this.map(function(){if(!o.support.noCloneEvent&&!o.isXMLDoc(this)){var I=this.outerHTML;if(!I){var J=this.ownerDocument.createElement("div");J.appendChild(this.cloneNode(true));I=J.innerHTML}return o.clean([I.replace(\/ jQuery\\d+="(?:\\d+|null)"\/g,"").replace(\/^\\s*\/,"")])[0]}else{return this.cloneNode(true)}});if(G===true){var H=this.find("*").andSelf(),F=0;E.find("*").andSelf().each(function(){if(this.nodeName!==H[F].nodeName){return}var I=o.data(H[F],"events");for(var K in I){for(var J in I[K]){o.event.add(this,K,I[K][J],I[K][J].data)}}F++})}return E},filter:function(E){return this.pushStack(o.isFunction(E)&&o.grep(this,function(G,F){return E.call(G,F)})||o.multiFilter(E,o.grep(this,function(F){return F.nodeType===1})),"filter",E)},closest:function(E){var G=o.expr.match.POS.test(E)?o(E):null,F=0;return this.map(function(){var H=this;while(H&&H.ownerDocument){if(G?G.index(H)>-1:o(H).is(E)){o.data(H,"closest",F);return H}H=H.parentNode;F++}})},not:function(E){if(typeof E==="string"){if(f.test(E)){return this.pushStack(o.multiFilter(E,this,true),"not",E)}else{E=o.multiFilter(E,this)}}var F=E.length&&E[E.length-1]!==g&&!E.nodeType;return this.filter(function(){return F?o.inArray(this,E)<0:this!=E})},add:function(E){return this.pushStack(o.unique(o.merge(this.get(),typeof E==="string"?o(E):o.makeArray(E))))},is:function(E){return !!E&&o.multiFilter(E,this).length>0},hasClass:function(E){return !!E&&this.is("."+E)},val:function(K){if(K===g){var E=this[0];if(E){if(o.nodeName(E,"option")){return(E.attributes.value||{}).specified?E.value:E.text}if(o.nodeName(E,"select")){var I=E.selectedIndex,L=[],M=E.options,H=E.type=="select-one";if(I<0){return null}for(var F=H?I:0,J=H?I+1:M.length;F<J;F++){var G=M[F];if(G.selected){K=o(G).val();if(H){return K}L.push(K)}}return L}return(E.value||"").replace(\/\\r\/g,"")}return g}if(typeof K==="number"){K+=""}return this.each(function(){if(this.nodeType!=1){return}if(o.isArray(K)&&\/radio|checkbox\/.test(this.type)){this.checked=(o.inArray(this.value,K)>=0||o.inArray(this.name,K)>=0)}else{if(o.nodeName(this,"select")){var N=o.makeArray(K);o("option",this).each(function(){this.selected=(o.inArray(this.value,N)>=0||o.inArray(this.text,N)>=0)});if(!N.length){this.selectedIndex=-1}}else{this.value=K}}})},html:function(E){return E===g?(this[0]?this[0].innerHTML.replace(\/ jQuery\\d+="(?:\\d+|null)"\/g,""):null):this.empty().append(E)},replaceWith:function(E){return this.after(E).remove()},eq:function(E){return this.slice(E,+E+1)},slice:function(){return this.pushStack(Array.prototype.slice.apply(this,arguments),"slice",Array.prototype.slice.call(arguments).join(","))},map:function(E){return this.pushStack(o.map(this,function(G,F){return E.call(G,F,G)}))},andSelf:function(){return this.add(this.prevObject)},domManip:function(J,M,L){if(this[0]){var I=(this[0].ownerDocument||this[0]).createDocumentFragment(),F=o.clean(J,(this[0].ownerDocument||this[0]),I),H=I.firstChild;if(H){for(var G=0,E=this.length;G<E;G++){L.call(K(this[G],H),this.length>1||G>0?I.cloneNode(true):I)}}if(F){o.each(F,z)}}return this;function K(N,O){return M&&o.nodeName(N,"table")&&o.nodeName(O,"tr")?(N.getElementsByTagName("tbody")[0]||N.appendChild(N.ownerDocument.createElement("tbody"))):N}}};o.fn.init.prototype=o.fn;function z(E,F){if(F.src){o.ajax({url:F.src,async:false,dataType:"script"})}else{o.globalEval(F.text||F.textContent||F.innerHTML||"")}if(F.parentNode){F.parentNode.removeChild(F)}}function e(){return +new Date}o.extend=o.fn.extend=function(){var J=arguments[0]||{},H=1,I=arguments.length,E=false,G;if(typeof J==="boolean"){E=J;J=arguments[1]||{};H=2}if(typeof J!=="object"&&!o.isFunction(J)){J={}}if(I==H){J=this;--H}for(;H<I;H++){if((G=arguments[H])!=null){for(var F in G){var K=J[F],L=G[F];if(J===L){continue}if(E&&L&&typeof L==="object"&&!L.nodeType){J[F]=o.extend(E,K||(L.length!=null?[]:{}),L)}else{if(L!==g){J[F]=L}}}}}return J};var b=\/z-?index|font-?weight|opacity|zoom|line-?height\/i,q=document.defaultView||{},s=Object.prototype.toString;o.extend({noConflict:function(E){l.$=p;if(E){l.jQuery=y}return o},isFunction:function(E){return s.call(E)==="[object Function]"},isArray:function(E){return s.call(E)==="[object Array]"},isXMLDoc:function(E){return E.nodeType===9&&E.documentElement.nodeName!=="HTML"||!!E.ownerDocument&&o.isXMLDoc(E.ownerDocument)},globalEval:function(G){if(G&&\/\\S\/.test(G)){var F=document.getElementsByTagName("head")[0]||document.documentElement,E=document.createElement("script");E.type="text\/javascript";if(o.support.scriptEval){E.appendChild(document.createTextNode(G))}else{E.text=G}F.insertBefore(E,F.firstChild);F.removeChild(E)}},nodeName:function(F,E){return F.nodeName&&F.nodeName.toUpperCase()==E.toUpperCase()},each:function(G,K,F){var E,H=0,I=G.length;if(F){if(I===g){for(E in G){if(K.apply(G[E],F)===false){break}}}else{for(;H<I;){if(K.apply(G[H++],F)===false){break}}}}else{if(I===g){for(E in G){if(K.call(G[E],E,G[E])===false){break}}}else{for(var J=G[0];H<I&&K.call(J,H,J)!==false;J=G[++H]){}}}return G},prop:function(H,I,G,F,E){if(o.isFunction(I)){I=I.call(H,F)}return typeof I==="number"&&G=="curCSS"&&!b.test(E)?I+"px":I},className:{add:function(E,F){o.each((F||"").split(\/\\s+\/),function(G,H){if(E.nodeType==1&&!o.className.has(E.className,H)){E.className+=(E.className?" ":"")+H}})},remove:function(E,F){if(E.nodeType==1){E.className=F!==g?o.grep(E.className.split(\/\\s+\/),function(G){return !o.className.has(F,G)}).join(" "):""}},has:function(F,E){return F&&o.inArray(E,(F.className||F).toString().split(\/\\s+\/))>-1}},swap:function(H,G,I){var E={};for(var F in G){E[F]=H.style[F];H.style[F]=G[F]}I.call(H);for(var F in G){H.style[F]=E[F]}},css:function(H,F,J,E){if(F=="width"||F=="height"){var L,G={position:"absolute",visibility:"hidden",display:"block"},K=F=="width"?["Left","Right"]:["Top","Bottom"];function I(){L=F=="width"?H.offsetWidth:H.offsetHeight;if(E==="border"){return}o.each(K,function(){if(!E){L-=parseFloat(o.curCSS(H,"padding"+this,true))||0}if(E==="margin"){L+=parseFloat(o.curCSS(H,"margin"+this,true))||0}else{L-=parseFloat(o.curCSS(H,"border"+this+"Width",true))||0}})}if(H.offsetWidth!==0){I()}else{o.swap(H,G,I)}return Math.max(0,Math.round(L))}return o.curCSS(H,F,J)},curCSS:function(I,F,G){var L,E=I.style;if(F=="opacity"&&!o.support.opacity){L=o.attr(E,"opacity");return L==""?"1":L}if(F.match(\/float\/i)){F=w}if(!G&&E&&E[F]){L=E[F]}else{if(q.getComputedStyle){if(F.match(\/float\/i)){F="float"}F=F.replace(\/([A-Z])\/g,"-$1").toLowerCase();var M=q.getComputedStyle(I,null);if(M){L=M.getPropertyValue(F)}if(F=="opacity"&&L==""){L="1"}}else{if(I.currentStyle){var J=F.replace(\/\\-(\\w)\/g,function(N,O){return O.toUpperCase()});L=I.currentStyle[F]||I.currentStyle[J];if(!\/^\\d+(px)?$\/i.test(L)&&\/^\\d\/.test(L)){var H=E.left,K=I.runtimeStyle.left;I.runtimeStyle.left=I.currentStyle.left;E.left=L||0;L=E.pixelLeft+"px";E.left=H;I.runtimeStyle.left=K}}}}return L},clean:function(F,K,I){K=K||document;if(typeof K.createElement==="undefined"){K=K.ownerDocument||K[0]&&K[0].ownerDocument||document}if(!I&&F.length===1&&typeof F[0]==="string"){var H=\/^<(\\w+)\\s*\\\/?>$\/.exec(F[0]);if(H){return[K.createElement(H[1])]}}var G=[],E=[],L=K.createElement("div");o.each(F,function(P,S){if(typeof S==="number"){S+=""}if(!S){return}if(typeof S==="string"){S=S.replace(\/(<(\\w+)[^>]*?)\\\/>\/g,function(U,V,T){return T.match(\/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$\/i)?U:V+"><\/"+T+">"});var O=S.replace(\/^\\s+\/,"").substring(0,10).toLowerCase();var Q=!O.indexOf("<opt")&&[1,"<select multiple='multiple'>","<\/select>"]||!O.indexOf("<leg")&&[1,"<fieldset>","<\/fieldset>"]||O.match(\/^<(thead|tbody|tfoot|colg|cap)\/)&&[1,"<table>","<\/table>"]||!O.indexOf("<tr")&&[2,"<table><tbody>","<\/tbody><\/table>"]||(!O.indexOf("<td")||!O.indexOf("<th"))&&[3,"<table><tbody><tr>","<\/tr><\/tbody><\/table>"]||!O.indexOf("<col")&&[2,"<table><tbody><\/tbody><colgroup>","<\/colgroup><\/table>"]||!o.support.htmlSerialize&&[1,"div<div>","<\/div>"]||[0,"",""];L.innerHTML=Q[1]+S+Q[2];while(Q[0]--){L=L.lastChild}if(!o.support.tbody){var R=\/<tbody\/i.test(S),N=!O.indexOf("<table")&&!R?L.firstChild&&L.firstChild.childNodes:Q[1]=="<table>"&&!R?L.childNodes:[];for(var M=N.length-1;M>=0;--M){if(o.nodeName(N[M],"tbody")&&!N[M].childNodes.length){N[M].parentNode.removeChild(N[M])}}}if(!o.support.leadingWhitespace&&\/^\\s\/.test(S)){L.insertBefore(K.createTextNode(S.match(\/^\\s*\/)[0]),L.firstChild)}S=o.makeArray(L.childNodes)}if(S.nodeType){G.push(S)}else{G=o.merge(G,S)}});if(I){for(var J=0;G[J];J++){if(o.nodeName(G[J],"script")&&(!G[J].type||G[J].type.toLowerCase()==="text\/javascript")){E.push(G[J].parentNode?G[J].parentNode.removeChild(G[J]):G[J])}else{if(G[J].nodeType===1){G.splice.apply(G,[J+1,0].concat(o.makeArray(G[J].getElementsByTagName("script"))))}I.appendChild(G[J])}}return E}return G},attr:function(J,G,K){if(!J||J.nodeType==3||J.nodeType==8){return g}var H=!o.isXMLDoc(J),L=K!==g;G=H&&o.props[G]||G;if(J.tagName){var F=\/href|src|style\/.test(G);if(G=="selected"&&J.parentNode){J.parentNode.selectedIndex}if(G in J&&H&&!F){if(L){if(G=="type"&&o.nodeName(J,"input")&&J.parentNode){throw"type property can't be changed"}J[G]=K}if(o.nodeName(J,"form")&&J.getAttributeNode(G)){return J.getAttributeNode(G).nodeValue}if(G=="tabIndex"){var I=J.getAttributeNode("tabIndex");return I&&I.specified?I.value:J.nodeName.match(\/(button|input|object|select|textarea)\/i)?0:J.nodeName.match(\/^(a|area)$\/i)&&J.href?0:g}return J[G]}if(!o.support.style&&H&&G=="style"){return o.attr(J.style,"cssText",K)}if(L){J.setAttribute(G,""+K)}var E=!o.support.hrefNormalized&&H&&F?J.getAttribute(G,2):J.getAttribute(G);return E===null?g:E}if(!o.support.opacity&&G=="opacity"){if(L){J.zoom=1;J.filter=(J.filter||"").replace(\/alpha\\([^)]*\\)\/,"")+(parseInt(K)+""=="NaN"?"":"alpha(opacity="+K*100+")")}return J.filter&&J.filter.indexOf("opacity=")>=0?(parseFloat(J.filter.match(\/opacity=([^)]*)\/)[1])\/100)+"":""}G=G.replace(\/-([a-z])\/ig,function(M,N){return N.toUpperCase()});if(L){J[G]=K}return J[G]},trim:function(E){return(E||"").replace(\/^\\s+|\\s+$\/g,"")},makeArray:function(G){var E=[];if(G!=null){var F=G.length;if(F==null||typeof G==="string"||o.isFunction(G)||G.setInterval){E[0]=G}else{while(F){E[--F]=G[F]}}}return E},inArray:function(G,H){for(var E=0,F=H.length;E<F;E++){if(H[E]===G){return E}}return -1},merge:function(H,E){var F=0,G,I=H.length;if(!o.support.getAll){while((G=E[F++])!=null){if(G.nodeType!=8){H[I++]=G}}}else{while((G=E[F++])!=null){H[I++]=G}}return H},unique:function(K){var F=[],E={};try{for(var G=0,H=K.length;G<H;G++){var J=o.data(K[G]);if(!E[J]){E[J]=true;F.push(K[G])}}}catch(I){F=K}return F},grep:function(F,J,E){var G=[];for(var H=0,I=F.length;H<I;H++){if(!E!=!J(F[H],H)){G.push(F[H])}}return G},map:function(E,J){var F=[];for(var G=0,H=E.length;G<H;G++){var I=J(E[G],G);if(I!=null){F[F.length]=I}}return F.concat.apply([],F)}});var C=navigator.userAgent.toLowerCase();o.browser={version:(C.match(\/.+(?:rv|it|ra|ie)[\\\/: ]([\\d.]+)\/)||[0,"0"])[1],safari:\/webkit\/.test(C),opera:\/opera\/.test(C),msie:\/msie\/.test(C)&&!\/opera\/.test(C),mozilla:\/mozilla\/.test(C)&&!\/(compatible|webkit)\/.test(C)};o.each({parent:function(E){return E.parentNode},parents:function(E){return o.dir(E,"parentNode")},next:function(E){return o.nth(E,2,"nextSibling")},prev:function(E){return o.nth(E,2,"previousSibling")},nextAll:function(E){return o.dir(E,"nextSibling")},prevAll:function(E){return o.dir(E,"previousSibling")},siblings:function(E){return o.sibling(E.parentNode.firstChild,E)},children:function(E){return o.sibling(E.firstChild)},contents:function(E){return o.nodeName(E,"iframe")?E.contentDocument||E.contentWindow.document:o.makeArray(E.childNodes)}},function(E,F){o.fn[E]=function(G){var H=o.map(this,F);if(G&&typeof G=="string"){H=o.multiFilter(G,H)}return this.pushStack(o.unique(H),E,G)}});o.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(E,F){o.fn[E]=function(G){var J=[],L=o(G);for(var K=0,H=L.length;K<H;K++){$/;"	f
KBsort	postgis/gserialized_gist_2d.c	/^KBsort;$/;"	t	typeref:struct:__anon20	file:
KML_NS	postgis/lwgeom_in_kml.c	54;"	d	file:
KOROTKOV_SPLIT	postgis/gserialized_gist_2d.c	49;"	d	file:
LAST	postgis/lwgeom_dump.c	52;"	d	file:
LATITUDE	java/ejb3/src/org/postgis/ejb/mdb/IngestMDB.java	/^	public static final String LATITUDE = "LAT";$/;"	f	class:IngestMDB
LAYERSTYLE	doc/html/image_src/styles.h	/^typedef struct layerStyle LAYERSTYLE;$/;"	t	typeref:struct:layerStyle
LBRACKET_TOK	liblwgeom/lwin_wkt_parse.c	/^     LBRACKET_TOK = 271,$/;"	e	enum:yytokentype	file:
LBRACKET_TOK	liblwgeom/lwin_wkt_parse.c	238;"	d	file:
LBRACKET_TOK	liblwgeom/lwin_wkt_parse.h	/^     LBRACKET_TOK = 271,$/;"	e	enum:yytokentype
LBRACKET_TOK	liblwgeom/lwin_wkt_parse.h	79;"	d
LIBRTCORE_H_INCLUDED	raster/rt_core/librtcore.h	60;"	d
LIBRTCORE_INTERNAL_H_INCLUDED	raster/rt_core/librtcore_internal.h	32;"	d
LIMIT_RATIO	postgis/gserialized_gist_2d.c	43;"	d	file:
LIMIT_RATIO	postgis/gserialized_gist_nd.c	41;"	d	file:
LINEARRING	java/jdbc/src/org/postgis/Geometry.java	/^	public static final int LINEARRING = 0;$/;"	f	class:Geometry
LINESTRING	java/jdbc/src/org/postgis/Geometry.java	/^	public static final int LINESTRING = 2;$/;"	f	class:Geometry
LINESTRING_TOK	liblwgeom/lwin_wkt_parse.c	/^     LINESTRING_TOK = 259,$/;"	e	enum:yytokentype	file:
LINESTRING_TOK	liblwgeom/lwin_wkt_parse.c	226;"	d	file:
LINESTRING_TOK	liblwgeom/lwin_wkt_parse.h	/^     LINESTRING_TOK = 259,$/;"	e	enum:yytokentype
LINESTRING_TOK	liblwgeom/lwin_wkt_parse.h	67;"	d
LINUX	raster/rt_core/librtcore.h	65;"	d
LINUX	raster/rt_core/librtcore.h	75;"	d
LISTSTRUCT	liblwgeom/measures.h	/^} LISTSTRUCT;$/;"	t	typeref:struct:__anon30
LOADER_MODE_COMBO_COLUMNS	loader/shp2pgsql-gui.c	/^	LOADER_MODE_COMBO_COLUMNS$/;"	e	enum:__anon57	file:
LOADER_MODE_COMBO_OPTION_CHAR	loader/shp2pgsql-gui.c	/^	LOADER_MODE_COMBO_OPTION_CHAR,$/;"	e	enum:__anon57	file:
LOADER_MODE_COMBO_TEXT	loader/shp2pgsql-gui.c	/^	LOADER_MODE_COMBO_TEXT,$/;"	e	enum:__anon57	file:
LONGITUDE	java/ejb3/src/org/postgis/ejb/mdb/IngestMDB.java	/^	public static final String LONGITUDE = "LON";$/;"	f	class:IngestMDB
LWDEBUG	liblwgeom/lwgeom_log.h	31;"	d
LWDEBUG	liblwgeom/lwgeom_log.h	50;"	d
LWDEBUGF	liblwgeom/lwgeom_log.h	39;"	d
LWDEBUGF	liblwgeom/lwgeom_log.h	55;"	d
LWGEOM2GEOS	liblwgeom/lwgeom_geos.c	/^LWGEOM2GEOS(const LWGEOM *lwgeom)$/;"	f
LWGEOM2SFCGAL	liblwgeom/lwgeom_sfcgal.c	/^LWGEOM2SFCGAL(const LWGEOM* geom)$/;"	f
LWGEOMFromWKB	postgis/lwgeom_inout.c	/^Datum LWGEOMFromWKB(PG_FUNCTION_ARGS)$/;"	f
LWGEOMFromWKB	postgis/lwgeom_inout.c	/^PG_FUNCTION_INFO_V1(LWGEOMFromWKB);$/;"	v
LWGEOM_BACKEND_API_H_	postgis/lwgeom_backend_api.h	15;"	d
LWGEOM_CACHE_H_	libpgcommon/lwgeom_cache.h	14;"	d
LWGEOM_GEOS_ERRMSG_MAXSIZE	liblwgeom/lwgeom_geos.c	24;"	d	file:
LWGEOM_GEOS_H_	postgis/lwgeom_geos.h	14;"	d
LWGEOM_GEOS_PREPARED_H_	postgis/lwgeom_geos_prepared.h	14;"	d
LWGEOM_GEOS_buildArea	liblwgeom/lwgeom_geos.c	/^LWGEOM_GEOS_buildArea(const GEOSGeometry* geom_in)$/;"	f
LWGEOM_GEOS_getPointN	liblwgeom/lwgeom_geos_clean.c	/^LWGEOM_GEOS_getPointN(const GEOSGeometry* g_in, uint32_t n)$/;"	f
LWGEOM_GEOS_makeValid	liblwgeom/lwgeom_geos_clean.c	/^LWGEOM_GEOS_makeValid(const GEOSGeometry* gin)$/;"	f	file:
LWGEOM_GEOS_makeValidCollection	liblwgeom/lwgeom_geos_clean.c	/^LWGEOM_GEOS_makeValidCollection(const GEOSGeometry* gin)$/;"	f	file:
LWGEOM_GEOS_makeValidLine	liblwgeom/lwgeom_geos_clean.c	/^LWGEOM_GEOS_makeValidLine(const GEOSGeometry* gin)$/;"	f	file:
LWGEOM_GEOS_makeValidMultiLine	liblwgeom/lwgeom_geos_clean.c	/^LWGEOM_GEOS_makeValidMultiLine(const GEOSGeometry* gin)$/;"	f	file:
LWGEOM_GEOS_makeValidPolygon	liblwgeom/lwgeom_geos_clean.c	/^LWGEOM_GEOS_makeValidPolygon(const GEOSGeometry* gin)$/;"	f	file:
LWGEOM_GEOS_nodeLines	liblwgeom/lwgeom_geos_clean.c	/^LWGEOM_GEOS_nodeLines(const GEOSGeometry* lines)$/;"	f	file:
LWGEOM_LOG_H	liblwgeom/lwgeom_log.h	21;"	d
LWGEOM_NUM_BACKENDS	postgis/lwgeom_backend_api.c	51;"	d	file:
LWGEOM_NUM_BACKENDS	postgis/lwgeom_backend_api.c	53;"	d	file:
LWGEOM_PROFILE_BUILDAREA	liblwgeom/lwgeom_geos.c	22;"	d	file:
LWGEOM_PROFILE_MAKEVALID	liblwgeom/lwgeom_geos_clean.c	48;"	d	file:
LWGEOM_addBBOX	postgis/lwgeom_inout.c	/^Datum LWGEOM_addBBOX(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_addBBOX	postgis/lwgeom_inout.c	/^PG_FUNCTION_INFO_V1(LWGEOM_addBBOX);$/;"	v
LWGEOM_addpoint	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_addpoint(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_addpoint	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_addpoint);$/;"	v
LWGEOM_affine	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_affine(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_affine	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_affine);$/;"	v
LWGEOM_area_polygon	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_area_polygon(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_area_polygon	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_area_polygon);$/;"	v
LWGEOM_asBinary	postgis/lwgeom_ogc.c	/^Datum LWGEOM_asBinary(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_asBinary	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(LWGEOM_asBinary);$/;"	v
LWGEOM_asEWKT	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_asEWKT(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_asEWKT	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_asEWKT);$/;"	v
LWGEOM_asGML	postgis/lwgeom_export.c	/^Datum LWGEOM_asGML(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_asGML	postgis/lwgeom_export.c	/^PG_FUNCTION_INFO_V1(LWGEOM_asGML);$/;"	v
LWGEOM_asGeoJson	postgis/lwgeom_export.c	/^Datum LWGEOM_asGeoJson(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_asGeoJson	postgis/lwgeom_export.c	/^PG_FUNCTION_INFO_V1(LWGEOM_asGeoJson);$/;"	v
LWGEOM_asHEXEWKB	postgis/lwgeom_inout.c	/^Datum LWGEOM_asHEXEWKB(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_asHEXEWKB	postgis/lwgeom_inout.c	/^PG_FUNCTION_INFO_V1(LWGEOM_asHEXEWKB);$/;"	v
LWGEOM_asKML	postgis/lwgeom_export.c	/^Datum LWGEOM_asKML(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_asKML	postgis/lwgeom_export.c	/^PG_FUNCTION_INFO_V1(LWGEOM_asKML);$/;"	v
LWGEOM_asSVG	postgis/lwgeom_export.c	/^Datum LWGEOM_asSVG(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_asSVG	postgis/lwgeom_export.c	/^PG_FUNCTION_INFO_V1(LWGEOM_asSVG);$/;"	v
LWGEOM_asText	postgis/lwgeom_ogc.c	/^Datum LWGEOM_asText(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_asText	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(LWGEOM_asText);$/;"	v
LWGEOM_asX3D	postgis/lwgeom_export.c	/^Datum LWGEOM_asX3D(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_asX3D	postgis/lwgeom_export.c	/^PG_FUNCTION_INFO_V1(LWGEOM_asX3D);$/;"	v
LWGEOM_azimuth	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_azimuth(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_azimuth	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_azimuth);$/;"	v
LWGEOM_closestpoint	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_closestpoint(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_closestpoint	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_closestpoint);$/;"	v
LWGEOM_closestpoint3d	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_closestpoint3d(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_closestpoint3d	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_closestpoint3d);$/;"	v
LWGEOM_collect	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_collect(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_collect	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_collect);$/;"	v
LWGEOM_collect_garray	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_collect_garray(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_collect_garray	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_collect_garray);$/;"	v
LWGEOM_curve_segmentize	postgis/lwgeom_sqlmm.c	/^Datum LWGEOM_curve_segmentize(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_curve_segmentize	postgis/lwgeom_sqlmm.c	/^PG_FUNCTION_INFO_V1(LWGEOM_curve_segmentize);$/;"	v
LWGEOM_dfullywithin	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_dfullywithin(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_dfullywithin	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_dfullywithin);$/;"	v
LWGEOM_dfullywithin3d	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_dfullywithin3d(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_dfullywithin3d	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_dfullywithin3d);$/;"	v
LWGEOM_dimension	postgis/lwgeom_ogc.c	/^Datum LWGEOM_dimension(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_dimension	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(LWGEOM_dimension);$/;"	v
LWGEOM_distance_ellipsoid	postgis/lwgeom_spheroid.c	/^Datum LWGEOM_distance_ellipsoid(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_distance_ellipsoid	postgis/lwgeom_spheroid.c	/^PG_FUNCTION_INFO_V1(LWGEOM_distance_ellipsoid);$/;"	v
LWGEOM_distance_sphere	postgis/lwgeom_spheroid.c	/^Datum LWGEOM_distance_sphere(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_distance_sphere	postgis/lwgeom_spheroid.c	/^PG_FUNCTION_INFO_V1(LWGEOM_distance_sphere);$/;"	v
LWGEOM_dropBBOX	postgis/lwgeom_inout.c	/^Datum LWGEOM_dropBBOX(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_dropBBOX	postgis/lwgeom_inout.c	/^PG_FUNCTION_INFO_V1(LWGEOM_dropBBOX);$/;"	v
LWGEOM_dump	postgis/lwgeom_dump.c	/^Datum LWGEOM_dump(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_dump	postgis/lwgeom_dump.c	/^PG_FUNCTION_INFO_V1(LWGEOM_dump);$/;"	v
LWGEOM_dump_rings	postgis/lwgeom_dump.c	/^Datum LWGEOM_dump_rings(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_dump_rings	postgis/lwgeom_dump.c	/^PG_FUNCTION_INFO_V1(LWGEOM_dump_rings);$/;"	v
LWGEOM_dumppoints	postgis/lwgeom_dumppoints.c	/^Datum LWGEOM_dumppoints(PG_FUNCTION_ARGS) {$/;"	f
LWGEOM_dumppoints	postgis/lwgeom_dumppoints.c	/^PG_FUNCTION_INFO_V1(LWGEOM_dumppoints);$/;"	v
LWGEOM_dwithin	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_dwithin(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_dwithin	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_dwithin);$/;"	v
LWGEOM_dwithin3d	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_dwithin3d(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_dwithin3d	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_dwithin3d);$/;"	v
LWGEOM_endpoint_linestring	postgis/lwgeom_ogc.c	/^Datum LWGEOM_endpoint_linestring(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_endpoint_linestring	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(LWGEOM_endpoint_linestring);$/;"	v
LWGEOM_envelope	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_envelope(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_envelope	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_envelope);$/;"	v
LWGEOM_expand	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_expand(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_expand	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_expand);$/;"	v
LWGEOM_exteriorring_polygon	postgis/lwgeom_ogc.c	/^Datum LWGEOM_exteriorring_polygon(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_exteriorring_polygon	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(LWGEOM_exteriorring_polygon);$/;"	v
LWGEOM_force_2d	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_force_2d(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_force_2d	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_force_2d);$/;"	v
LWGEOM_force_3dm	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_force_3dm(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_force_3dm	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_force_3dm);$/;"	v
LWGEOM_force_3dz	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_force_3dz(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_force_3dz	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_force_3dz);$/;"	v
LWGEOM_force_4d	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_force_4d(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_force_4d	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_force_4d);$/;"	v
LWGEOM_force_clockwise_poly	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_force_clockwise_poly(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_force_clockwise_poly	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_force_clockwise_poly);$/;"	v
LWGEOM_force_collection	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_force_collection(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_force_collection	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_force_collection);$/;"	v
LWGEOM_force_curve	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_force_curve(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_force_curve	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_force_curve);$/;"	v
LWGEOM_force_multi	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_force_multi(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_force_multi	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_force_multi);$/;"	v
LWGEOM_force_sfs	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_force_sfs(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_force_sfs	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_force_sfs);$/;"	v
LWGEOM_from_WKB	postgis/lwgeom_ogc.c	/^Datum LWGEOM_from_WKB(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_from_WKB	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(LWGEOM_from_WKB);$/;"	v
LWGEOM_from_bytea	postgis/lwgeom_inout.c	/^Datum LWGEOM_from_bytea(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_from_bytea	postgis/lwgeom_inout.c	/^PG_FUNCTION_INFO_V1(LWGEOM_from_bytea);$/;"	v
LWGEOM_from_text	postgis/lwgeom_ogc.c	/^Datum LWGEOM_from_text(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_from_text	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(LWGEOM_from_text);$/;"	v
LWGEOM_geometryn_collection	postgis/lwgeom_ogc.c	/^Datum LWGEOM_geometryn_collection(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_geometryn_collection	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(LWGEOM_geometryn_collection);$/;"	v
LWGEOM_getTYPE	postgis/lwgeom_ogc.c	/^Datum LWGEOM_getTYPE(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_getTYPE	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(LWGEOM_getTYPE);$/;"	v
LWGEOM_get_srid	postgis/lwgeom_ogc.c	/^Datum LWGEOM_get_srid(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_get_srid	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(LWGEOM_get_srid);$/;"	v
LWGEOM_hasBBOX	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_hasBBOX(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_hasBBOX	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_hasBBOX);$/;"	v
LWGEOM_has_arc	postgis/lwgeom_sqlmm.c	/^Datum LWGEOM_has_arc(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_has_arc	postgis/lwgeom_sqlmm.c	/^PG_FUNCTION_INFO_V1(LWGEOM_has_arc);$/;"	v
LWGEOM_hasm	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_hasm(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_hasm	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_hasm);$/;"	v
LWGEOM_hasz	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_hasz(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_hasz	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_hasz);$/;"	v
LWGEOM_in	postgis/lwgeom_inout.c	/^Datum LWGEOM_in(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_in	postgis/lwgeom_inout.c	/^PG_FUNCTION_INFO_V1(LWGEOM_in);$/;"	v
LWGEOM_inside_circle_point	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_inside_circle_point(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_inside_circle_point	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_inside_circle_point);$/;"	v
LWGEOM_interiorringn_polygon	postgis/lwgeom_ogc.c	/^Datum LWGEOM_interiorringn_polygon(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_interiorringn_polygon	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(LWGEOM_interiorringn_polygon);$/;"	v
LWGEOM_isclosed	postgis/lwgeom_ogc.c	/^Datum LWGEOM_isclosed(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_isclosed	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(LWGEOM_isclosed);$/;"	v
LWGEOM_isempty	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_isempty(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_isempty	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_isempty);$/;"	v
LWGEOM_length2d_ellipsoid	postgis/lwgeom_spheroid.c	/^Datum LWGEOM_length2d_ellipsoid(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_length2d_ellipsoid	postgis/lwgeom_spheroid.c	/^PG_FUNCTION_INFO_V1(LWGEOM_length2d_ellipsoid);$/;"	v
LWGEOM_length2d_linestring	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_length2d_linestring(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_length2d_linestring	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_length2d_linestring);$/;"	v
LWGEOM_length_ellipsoid_linestring	postgis/lwgeom_spheroid.c	/^Datum LWGEOM_length_ellipsoid_linestring(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_length_ellipsoid_linestring	postgis/lwgeom_spheroid.c	/^PG_FUNCTION_INFO_V1(LWGEOM_length_ellipsoid_linestring);$/;"	v
LWGEOM_length_linestring	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_length_linestring(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_length_linestring	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_length_linestring);$/;"	v
LWGEOM_line_desegmentize	postgis/lwgeom_sqlmm.c	/^Datum LWGEOM_line_desegmentize(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_line_desegmentize	postgis/lwgeom_sqlmm.c	/^PG_FUNCTION_INFO_V1(LWGEOM_line_desegmentize);$/;"	v
LWGEOM_line_from_mpoint	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_line_from_mpoint(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_line_from_mpoint	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_line_from_mpoint);$/;"	v
LWGEOM_line_interpolate_point	postgis/lwgeom_functions_analytic.c	/^Datum LWGEOM_line_interpolate_point(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_line_interpolate_point	postgis/lwgeom_functions_analytic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_line_interpolate_point);$/;"	v
LWGEOM_line_locate_point	postgis/lwgeom_functions_lrs.c	/^Datum LWGEOM_line_locate_point(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_line_locate_point	postgis/lwgeom_functions_lrs.c	/^PG_FUNCTION_INFO_V1(LWGEOM_line_locate_point);$/;"	v
LWGEOM_line_substring	postgis/lwgeom_functions_analytic.c	/^Datum LWGEOM_line_substring(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_line_substring	postgis/lwgeom_functions_analytic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_line_substring);$/;"	v
LWGEOM_locate_between_m	postgis/lwgeom_functions_lrs.c	/^Datum LWGEOM_locate_between_m(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_locate_between_m	postgis/lwgeom_functions_lrs.c	/^PG_FUNCTION_INFO_V1(LWGEOM_locate_between_m);$/;"	v
LWGEOM_longestline2d	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_longestline2d(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_longestline2d	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_longestline2d);$/;"	v
LWGEOM_longestline3d	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_longestline3d(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_longestline3d	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_longestline3d);$/;"	v
LWGEOM_longitude_shift	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_longitude_shift(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_longitude_shift	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_longitude_shift);$/;"	v
LWGEOM_m_point	postgis/lwgeom_ogc.c	/^Datum LWGEOM_m_point(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_m_point	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(LWGEOM_m_point);$/;"	v
LWGEOM_makeline	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_makeline(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_makeline	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_makeline);$/;"	v
LWGEOM_makeline_garray	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_makeline_garray(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_makeline_garray	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_makeline_garray);$/;"	v
LWGEOM_makepoint	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_makepoint(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_makepoint	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_makepoint);$/;"	v
LWGEOM_makepoint3dm	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_makepoint3dm(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_makepoint3dm	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_makepoint3dm);$/;"	v
LWGEOM_makepoly	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_makepoly(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_makepoly	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_makepoly);$/;"	v
LWGEOM_maxdistance2d_linestring	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_maxdistance2d_linestring(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_maxdistance2d_linestring	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_maxdistance2d_linestring);$/;"	v
LWGEOM_maxdistance3d	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_maxdistance3d(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_maxdistance3d	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_maxdistance3d);$/;"	v
LWGEOM_mem_size	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_mem_size(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_mem_size	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_mem_size);$/;"	v
LWGEOM_mindistance2d	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_mindistance2d(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_mindistance2d	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_mindistance2d);$/;"	v
LWGEOM_mindistance3d	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_mindistance3d(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_mindistance3d	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_mindistance3d);$/;"	v
LWGEOM_ndims	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_ndims(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_ndims	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_ndims);$/;"	v
LWGEOM_noop	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_noop(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_noop	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_noop);$/;"	v
LWGEOM_npoints	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_npoints(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_npoints	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_npoints);$/;"	v
LWGEOM_nrings	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_nrings(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_nrings	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_nrings);$/;"	v
LWGEOM_numgeometries_collection	postgis/lwgeom_ogc.c	/^Datum LWGEOM_numgeometries_collection(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_numgeometries_collection	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(LWGEOM_numgeometries_collection);$/;"	v
LWGEOM_numinteriorrings_polygon	postgis/lwgeom_ogc.c	/^Datum LWGEOM_numinteriorrings_polygon(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_numinteriorrings_polygon	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(LWGEOM_numinteriorrings_polygon);$/;"	v
LWGEOM_numpoints_linestring	postgis/lwgeom_ogc.c	/^Datum LWGEOM_numpoints_linestring(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_numpoints_linestring	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(LWGEOM_numpoints_linestring);$/;"	v
LWGEOM_out	postgis/lwgeom_inout.c	/^Datum LWGEOM_out(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_out	postgis/lwgeom_inout.c	/^PG_FUNCTION_INFO_V1(LWGEOM_out);$/;"	v
LWGEOM_perimeter2d_poly	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_perimeter2d_poly(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_perimeter2d_poly	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_perimeter2d_poly);$/;"	v
LWGEOM_perimeter_poly	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_perimeter_poly(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_perimeter_poly	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_perimeter_poly);$/;"	v
LWGEOM_pointn_linestring	postgis/lwgeom_ogc.c	/^Datum LWGEOM_pointn_linestring(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_pointn_linestring	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(LWGEOM_pointn_linestring);$/;"	v
LWGEOM_recv	postgis/lwgeom_inout.c	/^Datum LWGEOM_recv(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_recv	postgis/lwgeom_inout.c	/^PG_FUNCTION_INFO_V1(LWGEOM_recv);$/;"	v
LWGEOM_removepoint	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_removepoint(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_removepoint	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_removepoint);$/;"	v
LWGEOM_reverse	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_reverse(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_reverse	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_reverse);$/;"	v
LWGEOM_same	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_same(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_same	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_same);$/;"	v
LWGEOM_segmentize2d	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_segmentize2d(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_segmentize2d	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_segmentize2d);$/;"	v
LWGEOM_send	postgis/lwgeom_inout.c	/^Datum LWGEOM_send(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_send	postgis/lwgeom_inout.c	/^PG_FUNCTION_INFO_V1(LWGEOM_send);$/;"	v
LWGEOM_set_srid	postgis/lwgeom_ogc.c	/^Datum LWGEOM_set_srid(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_set_srid	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(LWGEOM_set_srid);$/;"	v
LWGEOM_setpoint_linestring	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_setpoint_linestring(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_setpoint_linestring	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_setpoint_linestring);$/;"	v
LWGEOM_shortestline2d	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_shortestline2d(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_shortestline2d	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_shortestline2d);$/;"	v
LWGEOM_shortestline3d	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_shortestline3d(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_shortestline3d	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_shortestline3d);$/;"	v
LWGEOM_simplify2d	postgis/lwgeom_functions_analytic.c	/^Datum LWGEOM_simplify2d(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_simplify2d	postgis/lwgeom_functions_analytic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_simplify2d);$/;"	v
LWGEOM_snaptogrid	postgis/lwgeom_functions_analytic.c	/^Datum LWGEOM_snaptogrid(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_snaptogrid	postgis/lwgeom_functions_analytic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_snaptogrid);$/;"	v
LWGEOM_snaptogrid_pointoff	postgis/lwgeom_functions_analytic.c	/^Datum LWGEOM_snaptogrid_pointoff(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_snaptogrid_pointoff	postgis/lwgeom_functions_analytic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_snaptogrid_pointoff);$/;"	v
LWGEOM_startpoint_linestring	postgis/lwgeom_ogc.c	/^Datum LWGEOM_startpoint_linestring(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_startpoint_linestring	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(LWGEOM_startpoint_linestring);$/;"	v
LWGEOM_summary	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_summary(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_summary	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_summary);$/;"	v
LWGEOM_to_BOX	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_to_BOX(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_to_BOX	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_to_BOX);$/;"	v
LWGEOM_to_BOX2D	postgis/lwgeom_box.c	/^Datum LWGEOM_to_BOX2D(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_to_BOX2D	postgis/lwgeom_box.c	/^PG_FUNCTION_INFO_V1(LWGEOM_to_BOX2D);$/;"	v
LWGEOM_to_BOX3D	postgis/lwgeom_box3d.c	/^Datum LWGEOM_to_BOX3D(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_to_BOX3D	postgis/lwgeom_box3d.c	/^PG_FUNCTION_INFO_V1(LWGEOM_to_BOX3D);$/;"	v
LWGEOM_to_bytea	postgis/lwgeom_inout.c	/^Datum LWGEOM_to_bytea(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_to_bytea	postgis/lwgeom_inout.c	/^PG_FUNCTION_INFO_V1(LWGEOM_to_bytea);$/;"	v
LWGEOM_to_latlon	postgis/lwgeom_inout.c	/^Datum LWGEOM_to_latlon(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_to_latlon	postgis/lwgeom_inout.c	/^PG_FUNCTION_INFO_V1(LWGEOM_to_latlon);$/;"	v
LWGEOM_to_text	postgis/lwgeom_inout.c	/^Datum LWGEOM_to_text(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_to_text	postgis/lwgeom_inout.c	/^PG_FUNCTION_INFO_V1(LWGEOM_to_text);$/;"	v
LWGEOM_x_point	postgis/lwgeom_ogc.c	/^Datum LWGEOM_x_point(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_x_point	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(LWGEOM_x_point);$/;"	v
LWGEOM_y_point	postgis/lwgeom_ogc.c	/^Datum LWGEOM_y_point(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_y_point	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(LWGEOM_y_point);$/;"	v
LWGEOM_z_point	postgis/lwgeom_ogc.c	/^Datum LWGEOM_z_point(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_z_point	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(LWGEOM_z_point);$/;"	v
LWGEOM_zmflag	postgis/lwgeom_functions_basic.c	/^Datum LWGEOM_zmflag(PG_FUNCTION_ARGS)$/;"	f
LWGEOM_zmflag	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(LWGEOM_zmflag);$/;"	v
LW_BOUNDARY	liblwgeom/liblwgeom_internal.h	142;"	d
LW_INSIDE	liblwgeom/liblwgeom_internal.h	141;"	d
LW_OUTSIDE	liblwgeom/liblwgeom_internal.h	143;"	d
LineString	java/jdbc/src/org/postgis/LineString.java	/^    public LineString() {$/;"	m	class:LineString
LineString	java/jdbc/src/org/postgis/LineString.java	/^    public LineString(Point[] points) {$/;"	m	class:LineString
LineString	java/jdbc/src/org/postgis/LineString.java	/^    public LineString(String value) throws SQLException {$/;"	m	class:LineString
LineString	java/jdbc/src/org/postgis/LineString.java	/^    public LineString(String value, boolean haveM) throws SQLException {$/;"	m	class:LineString
LineString	java/jdbc/src/org/postgis/LineString.java	/^public class LineString extends PointComposedGeom {$/;"	c
LineStringPathIterator	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        public LineStringPathIterator(LineString ls, AffineTransform _at) {$/;"	m	class:JTSShape.LineStringPathIterator
LineStringPathIterator	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^    public static class LineStringPathIterator extends GeometryPathIterator {$/;"	c	class:JTSShape
LinearRing	java/jdbc/src/org/postgis/LinearRing.java	/^    protected LinearRing(String value, boolean haveM) throws SQLException {$/;"	m	class:LinearRing
LinearRing	java/jdbc/src/org/postgis/LinearRing.java	/^    public LinearRing(Point[] points) {$/;"	m	class:LinearRing
LinearRing	java/jdbc/src/org/postgis/LinearRing.java	/^    public LinearRing(String value) throws SQLException {$/;"	m	class:LinearRing
LinearRing	java/jdbc/src/org/postgis/LinearRing.java	/^public class LinearRing extends PointComposedGeom {$/;"	c
MAJOR	java/jdbc/src/org/postgis/Version.java	/^    public static final int MAJOR;$/;"	f	class:Version
MAN1_INSTALL	extras/template_gis/Makefile	/^MAN1_INSTALL=$(INSTALL_DATA) $(MAN1) $(MAN1_TARGET)$/;"	m
MAN1_TARGET	extras/template_gis/Makefile	/^MAN1_TARGET=$(MAN1_TARGETDIR)\/$(MAN1)$/;"	m
MAN1_TARGETDIR	extras/template_gis/Makefile	/^MAN1_TARGETDIR=$(DESTDIR)$(mandir)\/man1$/;"	m
MAN1_UNINSTALL	extras/template_gis/Makefile	/^MAN1_UNINSTALL=rm -f $(MAN1_TARGET)$/;"	m
MANPAGES1	extras/template_gis/Makefile	/^MANPAGES1:=$(wildcard *.1)$/;"	m
MAX	loader/shpopen.c	285;"	d	file:
MAXDEPTH	postgis/lwgeom_dump.c	42;"	d	file:
MAXDEPTH	postgis/lwgeom_dumppoints.c	32;"	d	file:
MAXFIELDNAMELEN	loader/shp2pgsql-core.h	66;"	d
MAXFLOAT	liblwgeom/liblwgeom_internal.h	64;"	d
MAXNAMELEN	raster/loader/raster2pgsql.h	56;"	d
MAXOVFACTOR	raster/loader/raster2pgsql.h	60;"	d
MAXTILESIZE	raster/loader/raster2pgsql.h	69;"	d
MAXVALUELEN	loader/shp2pgsql-core.h	67;"	d
MAX_CUNIT_ERROR_LENGTH	liblwgeom/cunit/cu_tester.h	13;"	d
MAX_CUNIT_MSG_LENGTH	raster/test/cunit/cu_tester.h	18;"	d
MAX_DBF_FIELD_SIZE	loader/pgsql2shp-core.c	42;"	d	file:
MAX_DBL_CHARLEN	raster/rt_pg/rtpostgis.h	68;"	d
MAX_DEFAULT_TREE_DEPTH	loader/shapefil.h	428;"	d
MAX_DIGS_DOUBLE	doc/html/image_src/generator.c	43;"	d	file:
MAX_DIGS_DOUBLE	postgis/lwgeom_box3d.c	24;"	d	file:
MAX_DIGS_DOUBLE	postgis/lwgeom_spheroid.c	33;"	d	file:
MAX_DOUBLE_PRECISION	doc/html/image_src/generator.c	42;"	d	file:
MAX_INT_CHARLEN	raster/rt_pg/rtpostgis.h	69;"	d
MAX_SUBNODE	loader/shapefil.h	425;"	d
MCURVE_TOK	liblwgeom/lwin_wkt_parse.c	/^     MCURVE_TOK = 265,$/;"	e	enum:yytokentype	file:
MCURVE_TOK	liblwgeom/lwin_wkt_parse.c	232;"	d	file:
MCURVE_TOK	liblwgeom/lwin_wkt_parse.h	/^     MCURVE_TOK = 265,$/;"	e	enum:yytokentype
MCURVE_TOK	liblwgeom/lwin_wkt_parse.h	73;"	d
MICRO	java/jdbc/src/org/postgis/Version.java	/^    public static final String MICRO;$/;"	f	class:Version
MIN	loader/shpopen.c	284;"	d	file:
MINOR	java/jdbc/src/org/postgis/Version.java	/^    public static final int MINOR;$/;"	f	class:Version
MINOVFACTOR	raster/loader/raster2pgsql.h	59;"	d
MIN_DIMENSION_WIDTH	postgis/gserialized_estimate.c	133;"	d	file:
MLINESTRING_TOK	liblwgeom/lwin_wkt_parse.c	/^     MLINESTRING_TOK = 262,$/;"	e	enum:yytokentype	file:
MLINESTRING_TOK	liblwgeom/lwin_wkt_parse.c	229;"	d	file:
MLINESTRING_TOK	liblwgeom/lwin_wkt_parse.h	/^     MLINESTRING_TOK = 262,$/;"	e	enum:yytokentype
MLINESTRING_TOK	liblwgeom/lwin_wkt_parse.h	70;"	d
MODULE_FILENAME	extras/WFS_locks/Makefile	/^MODULE_FILENAME = $(PWD)\/libWFS_locks.so$/;"	m
MPOINT_TOK	liblwgeom/lwin_wkt_parse.c	/^     MPOINT_TOK = 261,$/;"	e	enum:yytokentype	file:
MPOINT_TOK	liblwgeom/lwin_wkt_parse.c	228;"	d	file:
MPOINT_TOK	liblwgeom/lwin_wkt_parse.h	/^     MPOINT_TOK = 261,$/;"	e	enum:yytokentype
MPOINT_TOK	liblwgeom/lwin_wkt_parse.h	69;"	d
MPOLYGON_TOK	liblwgeom/lwin_wkt_parse.c	/^     MPOLYGON_TOK = 263,$/;"	e	enum:yytokentype	file:
MPOLYGON_TOK	liblwgeom/lwin_wkt_parse.c	230;"	d	file:
MPOLYGON_TOK	liblwgeom/lwin_wkt_parse.h	/^     MPOLYGON_TOK = 263,$/;"	e	enum:yytokentype
MPOLYGON_TOK	liblwgeom/lwin_wkt_parse.h	71;"	d
MSDOS	raster/rt_core/librtcore.h	84;"	d
MSDOS	raster/rt_core/librtcore.h	93;"	d
MSURFACE_TOK	liblwgeom/lwin_wkt_parse.c	/^     MSURFACE_TOK = 264,$/;"	e	enum:yytokentype	file:
MSURFACE_TOK	liblwgeom/lwin_wkt_parse.c	231;"	d	file:
MSURFACE_TOK	liblwgeom/lwin_wkt_parse.h	/^     MSURFACE_TOK = 264,$/;"	e	enum:yytokentype
MSURFACE_TOK	liblwgeom/lwin_wkt_parse.h	72;"	d
MULTILINESTRING	java/jdbc/src/org/postgis/Geometry.java	/^	public static final int MULTILINESTRING = 5;$/;"	f	class:Geometry
MULTIPOINT	java/jdbc/src/org/postgis/Geometry.java	/^	public static final int MULTIPOINT = 4;$/;"	f	class:Geometry
MULTIPOLYGON	java/jdbc/src/org/postgis/Geometry.java	/^	public static final int MULTIPOLYGON = 6;$/;"	f	class:Geometry
MULTITYPE	liblwgeom/lwgeom.c	/^static uint8_t MULTITYPE[NUMTYPES] =$/;"	v	file:
MapAlgebra4Union	raster/scripts/plpgsql/st_union.sql	/^CREATE OR REPLACE FUNCTION MapAlgebra4Union(rast1 raster, $/;"	f
MapAlgebra4UnionFinal1	raster/scripts/plpgsql/st_union.sql	/^CREATE OR REPLACE FUNCTION MapAlgebra4UnionFinal1(rast rastexpr)$/;"	f
MapAlgebra4UnionFinal3	raster/scripts/plpgsql/st_union.sql	/^CREATE OR REPLACE FUNCTION MapAlgebra4UnionFinal3(rast rastexpr)$/;"	f
MaxX	raster/rt_core/librtcore.h	/^	double MaxX;$/;"	m	struct:__anon34
MaxY	raster/rt_core/librtcore.h	/^	double MaxY;$/;"	m	struct:__anon34
MinX	raster/rt_core/librtcore.h	/^	double MinX;$/;"	m	struct:__anon34
MinY	raster/rt_core/librtcore.h	/^	double MinY;$/;"	m	struct:__anon34
MultiLineString	java/jdbc/src/org/postgis/MultiLineString.java	/^    public MultiLineString() {$/;"	m	class:MultiLineString
MultiLineString	java/jdbc/src/org/postgis/MultiLineString.java	/^    public MultiLineString(LineString[] lines) {$/;"	m	class:MultiLineString
MultiLineString	java/jdbc/src/org/postgis/MultiLineString.java	/^    public MultiLineString(String value) throws SQLException {$/;"	m	class:MultiLineString
MultiLineString	java/jdbc/src/org/postgis/MultiLineString.java	/^    public MultiLineString(String value, boolean haveM) throws SQLException {$/;"	m	class:MultiLineString
MultiLineString	java/jdbc/src/org/postgis/MultiLineString.java	/^public class MultiLineString extends ComposedGeom {$/;"	c
MultiPoint	java/jdbc/src/org/postgis/MultiPoint.java	/^    protected MultiPoint(String value, boolean haveM) throws SQLException {$/;"	m	class:MultiPoint
MultiPoint	java/jdbc/src/org/postgis/MultiPoint.java	/^    public MultiPoint() {$/;"	m	class:MultiPoint
MultiPoint	java/jdbc/src/org/postgis/MultiPoint.java	/^    public MultiPoint(Point[] points) {$/;"	m	class:MultiPoint
MultiPoint	java/jdbc/src/org/postgis/MultiPoint.java	/^    public MultiPoint(String value) throws SQLException {$/;"	m	class:MultiPoint
MultiPoint	java/jdbc/src/org/postgis/MultiPoint.java	/^public class MultiPoint extends PointComposedGeom {$/;"	c
MultiPolygon	java/jdbc/src/org/postgis/MultiPolygon.java	/^    protected MultiPolygon(String value, boolean haveM) throws SQLException {$/;"	m	class:MultiPolygon
MultiPolygon	java/jdbc/src/org/postgis/MultiPolygon.java	/^    public MultiPolygon() {$/;"	m	class:MultiPolygon
MultiPolygon	java/jdbc/src/org/postgis/MultiPolygon.java	/^    public MultiPolygon(Polygon[] polygons) {$/;"	m	class:MultiPolygon
MultiPolygon	java/jdbc/src/org/postgis/MultiPolygon.java	/^    public MultiPolygon(String value) throws SQLException {$/;"	m	class:MultiPolygon
MultiPolygon	java/jdbc/src/org/postgis/MultiPolygon.java	/^public class MultiPolygon extends ComposedGeom {$/;"	c
NAME	java/ejb3/src/org/postgis/ejb/mdb/IngestMDB.java	/^	public static final String NAME = "NAME";$/;"	f	class:IngestMDB
NAMESPACE	java/ejb3/src/org/postgis/hibernate/PostGISDialect.java	/^	public static String NAMESPACE = "spatial.";$/;"	f	class:PostGISDialect
NAN	liblwgeom/lwgeodetic.h	23;"	d
NDR	java/jdbc/src/org/postgis/binary/ValueGetter.java	/^        public NDR(ByteGetter data) {$/;"	m	class:ValueGetter.NDR
NDR	java/jdbc/src/org/postgis/binary/ValueGetter.java	/^    public static class NDR extends ValueGetter {$/;"	c	class:ValueGetter
NDR	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^        public NDR(ByteSetter data) {$/;"	m	class:ValueSetter.NDR
NDR	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^    public static class NDR extends ValueSetter {$/;"	c	class:ValueSetter
NDR	liblwgeom/liblwgeom_internal.h	151;"	d
NDR	raster/scripts/python/raster2pgsql.py	/^NDR = 1 # Little-endian$/;"	v
ND_BOX	postgis/gserialized_estimate.c	/^} ND_BOX;$/;"	t	typeref:struct:ND_BOX_T	file:
ND_BOX_T	postgis/gserialized_estimate.c	/^typedef struct ND_BOX_T$/;"	s	file:
ND_DIMS	postgis/gserialized_estimate.c	125;"	d	file:
ND_IBOX	postgis/gserialized_estimate.c	/^} ND_IBOX;$/;"	t	typeref:struct:ND_IBOX_T	file:
ND_IBOX_T	postgis/gserialized_estimate.c	/^typedef struct ND_IBOX_T$/;"	s	file:
ND_STATS	postgis/gserialized_estimate.c	/^} ND_STATS;$/;"	t	typeref:struct:ND_STATS_T	file:
ND_STATS_T	postgis/gserialized_estimate.c	/^typedef struct ND_STATS_T$/;"	s	file:
NOMINMAX	loader/safileio.c	73;"	d	file:
NOSHELLS	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^    final static LinearRing[] NOSHELLS = {};$/;"	f	class:JTSShape
NO_M_VALUE	liblwgeom/liblwgeom_internal.h	77;"	d
NO_VALUE	liblwgeom/liblwgeom_internal.h	75;"	d
NO_Z_VALUE	liblwgeom/liblwgeom_internal.h	76;"	d
NUMBER	java/jdbc/src/org/postgis/binary/ValueGetter.java	/^        public static final byte NUMBER = 0;$/;"	f	class:ValueGetter.XDR
NUMBER	java/jdbc/src/org/postgis/binary/ValueGetter.java	/^        public static final byte NUMBER = 1;$/;"	f	class:ValueGetter.NDR
NUMBER	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^        public static final byte NUMBER = 0;$/;"	f	class:ValueSetter.XDR
NUMBER	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^        public static final byte NUMBER = 1;$/;"	f	class:ValueSetter.NDR
NUM_CACHE_ENTRIES	libpgcommon/lwgeom_cache.h	30;"	d
ONLY10	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    public static String ALL = "ALL", ONLY10 = "ONLY10", EQUAL10 = "EQUAL10";$/;"	f	class:JtsTestParser
ONLY10	java/jdbc/src/examples/TestParser.java	/^    public static String ALL = "ALL", ONLY10 = "ONLY10", EQUAL10 = "EQUAL10";$/;"	f	class:TestParser
ORDER	raster/rt_core/rt_statistics.c	39;"	d	file:
OUT_MAX_DIGS_DOUBLE	liblwgeom/liblwgeom_internal.h	135;"	d
OUT_MAX_DOUBLE	liblwgeom/liblwgeom_internal.h	132;"	d
OUT_MAX_DOUBLE_PRECISION	liblwgeom/liblwgeom_internal.h	134;"	d
OUT_SHOW_DIGS_DOUBLE	liblwgeom/liblwgeom_internal.h	133;"	d
Options	regress/run_test.pl	/^Options:$/;"	l
P2S_RCSID	loader/pgsql2shp-core.h	32;"	d
PACKAGE	loader/shpcommon.h	21;"	d
PACKAGE	raster/loader/raster2pgsql.h	34;"	d
PARANOIA_LEVEL	liblwgeom/lwgeom_api.c	25;"	d	file:
PARANOIA_LEVEL	libpgcommon/lwgeom_pg.c	30;"	d	file:
PGBIN	extras/tiger_geocoder/tiger_2011/create_geocode.bat	/^set PGBIN=C:\\Program Files\\PostgreSQL\\9.1\\bin$/;"	v
PGBIN	extras/tiger_geocoder/tiger_2011/upgrade_geocoder.bat	/^set PGBIN=C:\\Program Files\\PostgreSQL\\8.4\\bin$/;"	v
PGCONTRIB	extras/tiger_geocoder/tiger_2011/create_geocode.bat	/^set PGCONTRIB=C:\\Program Files\\PostgreSQL\\9.1\\share\\contrib$/;"	v
PGCONTRIB	extras/tiger_geocoder/tiger_2011/upgrade_geocoder.bat	/^set PGCONTRIB=C:\\Program Files\\PostgreSQL\\8.4\\share\\contrib$/;"	v
PGConnection	java/jdbc/stubs/org/postgresql/PGConnection.java	/^public interface PGConnection {$/;"	i
PGHOST	extras/tiger_geocoder/tiger_2011/create_geocode.bat	/^set PGHOST=localhost$/;"	v
PGHOST	extras/tiger_geocoder/tiger_2011/upgrade_geocoder.bat	/^set PGHOST=localhost$/;"	v
PGISDirectFunctionCall1	postgis/lwgeom_accum.c	/^PGISDirectFunctionCall1(PGFunction func, Datum arg1)$/;"	f
PGPASSWORD	extras/tiger_geocoder/tiger_2011/create_geocode.bat	/^set PGPASSWORD=yourpasswordhere$/;"	v
PGPASSWORD	extras/tiger_geocoder/tiger_2011/upgrade_geocoder.bat	/^set PGPASSWORD=yourpasswordhere$/;"	v
PGPORT	extras/tiger_geocoder/tiger_2011/create_geocode.bat	/^set PGPORT=5432$/;"	v
PGPORT	extras/tiger_geocoder/tiger_2011/upgrade_geocoder.bat	/^set PGPORT=5432$/;"	v
PGShapeGeometry	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^    public PGShapeGeometry() {$/;"	m	class:PGShapeGeometry
PGShapeGeometry	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^    public PGShapeGeometry(GeneralPath path, int srid) {$/;"	m	class:PGShapeGeometry
PGShapeGeometry	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^    public PGShapeGeometry(String value) throws SQLException {$/;"	m	class:PGShapeGeometry
PGShapeGeometry	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^public class PGShapeGeometry extends PGobject implements Shape {$/;"	c
PGUSER	extras/tiger_geocoder/tiger_2011/create_geocode.bat	/^set PGUSER=postgres$/;"	v
PGUSER	extras/tiger_geocoder/tiger_2011/upgrade_geocoder.bat	/^set PGUSER=postgres$/;"	v
PG_LIBCOMMON_H	libpgcommon/common.h	14;"	d
PG_NARGS	libpgcommon/pgsql_compat.h	6;"	d
PG_PARSER_ERROR	libpgcommon/lwgeom_pg.h	65;"	d
PG_TEST	liblwgeom/cunit/cu_tester.h	12;"	d
PG_TEST	raster/test/cunit/cu_tester.h	17;"	d
PG_UNPARSER_ERROR	libpgcommon/lwgeom_pg.h	73;"	d
PGbox2d	java/jdbc/src/org/postgis/PGbox2d.java	/^    public PGbox2d() {$/;"	m	class:PGbox2d
PGbox2d	java/jdbc/src/org/postgis/PGbox2d.java	/^    public PGbox2d(Point llb, Point urt) {$/;"	m	class:PGbox2d
PGbox2d	java/jdbc/src/org/postgis/PGbox2d.java	/^    public PGbox2d(String value) throws SQLException {$/;"	m	class:PGbox2d
PGbox2d	java/jdbc/src/org/postgis/PGbox2d.java	/^public class PGbox2d extends PGboxbase {$/;"	c
PGbox3d	java/jdbc/src/org/postgis/PGbox3d.java	/^    public PGbox3d() {$/;"	m	class:PGbox3d
PGbox3d	java/jdbc/src/org/postgis/PGbox3d.java	/^    public PGbox3d(Point llb, Point urt) {$/;"	m	class:PGbox3d
PGbox3d	java/jdbc/src/org/postgis/PGbox3d.java	/^    public PGbox3d(String value) throws SQLException {$/;"	m	class:PGbox3d
PGbox3d	java/jdbc/src/org/postgis/PGbox3d.java	/^public class PGbox3d extends PGboxbase {$/;"	c
PGboxbase	java/jdbc/src/org/postgis/PGboxbase.java	/^    public PGboxbase() {$/;"	m	class:PGboxbase
PGboxbase	java/jdbc/src/org/postgis/PGboxbase.java	/^    public PGboxbase(Point llb, Point urt) {$/;"	m	class:PGboxbase
PGboxbase	java/jdbc/src/org/postgis/PGboxbase.java	/^    public PGboxbase(String value) throws SQLException {$/;"	m	class:PGboxbase
PGboxbase	java/jdbc/src/org/postgis/PGboxbase.java	/^public abstract class PGboxbase extends PGobject {$/;"	c
PGgeometry	java/jdbc/src/org/postgis/PGgeometry.java	/^    public PGgeometry() {$/;"	m	class:PGgeometry
PGgeometry	java/jdbc/src/org/postgis/PGgeometry.java	/^    public PGgeometry(Geometry geom) {$/;"	m	class:PGgeometry
PGgeometry	java/jdbc/src/org/postgis/PGgeometry.java	/^    public PGgeometry(String value) throws SQLException {$/;"	m	class:PGgeometry
PGgeometry	java/jdbc/src/org/postgis/PGgeometry.java	/^public class PGgeometry extends PGobject {$/;"	c
PGgeometryLW	java/jdbc/src/org/postgis/PGgeometryLW.java	/^    public PGgeometryLW() {$/;"	m	class:PGgeometryLW
PGgeometryLW	java/jdbc/src/org/postgis/PGgeometryLW.java	/^    public PGgeometryLW(Geometry geom) {$/;"	m	class:PGgeometryLW
PGgeometryLW	java/jdbc/src/org/postgis/PGgeometryLW.java	/^    public PGgeometryLW(String value) throws SQLException {$/;"	m	class:PGgeometryLW
PGgeometryLW	java/jdbc/src/org/postgis/PGgeometryLW.java	/^public class PGgeometryLW extends PGgeometry {$/;"	c
PI	liblwgeom/liblwgeom_internal.h	37;"	d
PIP	loader/shp2pgsql-core.c	/^PIP(Point P, Point *V, int n)$/;"	f
PIR_A_TOUCH_LEFT	liblwgeom/lwgeodetic.h	76;"	d
PIR_A_TOUCH_RIGHT	liblwgeom/lwgeodetic.h	75;"	d
PIR_B_TOUCH_LEFT	liblwgeom/lwgeodetic.h	78;"	d
PIR_B_TOUCH_RIGHT	liblwgeom/lwgeodetic.h	77;"	d
PIR_COLINEAR	liblwgeom/lwgeodetic.h	74;"	d
PIR_INTERSECTS	liblwgeom/lwgeodetic.h	73;"	d
PIR_NO_INTERACT	liblwgeom/lwgeodetic.h	72;"	d
PJHash	libpgcommon/lwgeom_transform.c	/^static HTAB *PJHash = NULL;$/;"	v	file:
PJHashEntry	libpgcommon/lwgeom_transform.c	/^PJHashEntry;$/;"	t	typeref:struct:struct_PJHashEntry	file:
PLACE_LEFT	postgis/gserialized_gist_2d.c	1745;"	d	file:
PLACE_RIGHT	postgis/gserialized_gist_2d.c	1754;"	d	file:
PLANE3D	liblwgeom/measures3d.h	/^PLANE3D; $/;"	t	typeref:struct:__anon33
POINT	java/jdbc/src/org/postgis/Geometry.java	/^	public static final int POINT = 1;$/;"	f	class:Geometry
POINT	liblwgeom/lwin_wkt.h	/^POINT;$/;"	t	typeref:struct:__anon25
POINTARRAYSET	postgis/lwgeom_functions_lrs.c	/^POINTARRAYSET;$/;"	t	typeref:struct:__anon15	file:
POINT_TOK	liblwgeom/lwin_wkt_parse.c	/^     POINT_TOK = 258,$/;"	e	enum:yytokentype	file:
POINT_TOK	liblwgeom/lwin_wkt_parse.c	225;"	d	file:
POINT_TOK	liblwgeom/lwin_wkt_parse.h	/^     POINT_TOK = 258,$/;"	e	enum:yytokentype
POINT_TOK	liblwgeom/lwin_wkt_parse.h	66;"	d
POLICY_NULL_ABORT	loader/shp2pgsql-core.h	39;"	d
POLICY_NULL_INSERT	loader/shp2pgsql-core.h	40;"	d
POLICY_NULL_SKIP	loader/shp2pgsql-core.h	41;"	d
POLYDUMPSTATE	postgis/lwgeom_dump.c	/^struct POLYDUMPSTATE$/;"	s	file:
POLYGON	java/jdbc/src/org/postgis/Geometry.java	/^	public static final int POLYGON = 3;$/;"	f	class:Geometry
POLYGON_TOK	liblwgeom/lwin_wkt_parse.c	/^     POLYGON_TOK = 260,$/;"	e	enum:yytokentype	file:
POLYGON_TOK	liblwgeom/lwin_wkt_parse.c	227;"	d	file:
POLYGON_TOK	liblwgeom/lwin_wkt_parse.h	/^     POLYGON_TOK = 260,$/;"	e	enum:yytokentype
POLYGON_TOK	liblwgeom/lwin_wkt_parse.h	68;"	d
POLYHEDRALSURFACE_TOK	liblwgeom/lwin_wkt_parse.c	/^     POLYHEDRALSURFACE_TOK = 277,$/;"	e	enum:yytokentype	file:
POLYHEDRALSURFACE_TOK	liblwgeom/lwin_wkt_parse.c	244;"	d	file:
POLYHEDRALSURFACE_TOK	liblwgeom/lwin_wkt_parse.h	/^     POLYHEDRALSURFACE_TOK = 277,$/;"	e	enum:yytokentype
POLYHEDRALSURFACE_TOK	liblwgeom/lwin_wkt_parse.h	85;"	d
POP	postgis/lwgeom_dump.c	53;"	d	file:
POSTGIS2GEOS	postgis/lwgeom_geos.c	/^POSTGIS2GEOS(GSERIALIZED *pglwgeom)$/;"	f
POSTGIS2SFCGALGeometry	postgis/lwgeom_sfcgal.c	/^sfcgal_geometry_t* POSTGIS2SFCGALGeometry(GSERIALIZED *pglwgeom)$/;"	f
POSTGIS2SFCGALPreparedGeometry	postgis/lwgeom_sfcgal.c	/^sfcgal_prepared_geometry_t* POSTGIS2SFCGALPreparedGeometry(GSERIALIZED *pglwgeom)$/;"	f
POSTGIS_AUTOPROTOCOL	java/jdbc/src/org/postgis/DriverWrapperAutoprobe.java	/^    public static final String POSTGIS_AUTOPROTOCOL = "jdbc:postgresql_autogis:";$/;"	f	class:DriverWrapperAutoprobe
POSTGIS_DEBUG	libpgcommon/lwgeom_pg.h	32;"	d
POSTGIS_DEBUG	libpgcommon/lwgeom_pg.h	48;"	d
POSTGIS_DEBUGF	libpgcommon/lwgeom_pg.h	39;"	d
POSTGIS_DEBUGF	libpgcommon/lwgeom_pg.h	52;"	d
POSTGIS_LWPROTOCOL	java/jdbc/src/org/postgis/DriverWrapperLW.java	/^    public static final String POSTGIS_LWPROTOCOL = "jdbc:postgresql_lwgis:";$/;"	f	class:DriverWrapperLW
POSTGIS_PROTOCOL	java/jdbc/jtssrc/org/postgis/jts/JtsGisWrapper.java	/^    private static final String POSTGIS_PROTOCOL = "jdbc:postgresql_JTS:";$/;"	f	class:JtsGisWrapper	file:
POSTGIS_PROTOCOL	java/jdbc/jtssrc/org/postgis/jts/JtsWrapper.java	/^    private static final String POSTGIS_PROTOCOL = "jdbc:postgres_jts:";$/;"	f	class:JtsWrapper	file:
POSTGIS_PROTOCOL	java/jdbc/src/org/postgis/DriverWrapper.java	/^    public static final String POSTGIS_PROTOCOL = "jdbc:postgresql_postGIS:";$/;"	f	class:DriverWrapper
POSTGIS_PROTOCOL	java/jdbc/src/org/postgis/java2d/Java2DWrapper.java	/^    public static final String POSTGIS_PROTOCOL = "jdbc:postgis_j2d:";$/;"	f	class:Java2DWrapper
POSTGIS_RASTER_WARN_ON_TRUNCATION	raster/rt_core/librtcore.h	2000;"	d
POSTGIS_RT_1BBMAX	raster/rt_core/librtcore.h	2003;"	d
POSTGIS_RT_2BUIMAX	raster/rt_core/librtcore.h	2004;"	d
POSTGIS_RT_4BUIMAX	raster/rt_core/librtcore.h	2005;"	d
POSTGIS_RT_DEBUG	raster/rt_pg/rtpostgis.h	38;"	d
POSTGIS_RT_DEBUG	raster/rt_pg/rtpostgis.h	54;"	d
POSTGIS_RT_DEBUGF	raster/rt_pg/rtpostgis.h	45;"	d
POSTGIS_RT_DEBUGF	raster/rt_pg/rtpostgis.h	58;"	d
POSTGRES_PROTOCOL	java/jdbc/jtssrc/org/postgis/jts/JtsGisWrapper.java	/^    private static final String POSTGRES_PROTOCOL = "jdbc:postgresql:";$/;"	f	class:JtsGisWrapper	file:
POSTGRES_PROTOCOL	java/jdbc/jtssrc/org/postgis/jts/JtsWrapper.java	/^    private static final String POSTGRES_PROTOCOL = "jdbc:postgresql:";$/;"	f	class:JtsWrapper	file:
POSTGRES_PROTOCOL	java/jdbc/src/org/postgis/DriverWrapper.java	/^    public static final String POSTGRES_PROTOCOL = "jdbc:postgresql:";$/;"	f	class:DriverWrapper
POSTGRES_PROTOCOL	java/jdbc/src/org/postgis/java2d/Java2DWrapper.java	/^    private static final String POSTGRES_PROTOCOL = "jdbc:postgresql:";$/;"	f	class:Java2DWrapper	file:
POW2	liblwgeom/lwgeodetic.h	28;"	d
PREPARED_BACKEND_HASH_SIZE	postgis/lwgeom_geos_prepared.c	67;"	d	file:
PREPARE_MODE	loader/shp2pgsql-gui.c	/^	PREPARE_MODE$/;"	e	enum:__anon58	file:
PREP_CACHE_ENTRY	libpgcommon/lwgeom_cache.h	25;"	d
PROJ4PortalCache	libpgcommon/lwgeom_cache.h	/^PROJ4PortalCache;$/;"	t	typeref:struct:struct_PROJ4PortalCache
PROJ4SRSCache	libpgcommon/lwgeom_cache.h	/^	PROJ4SRSCacheItem PROJ4SRSCache[PROJ4_CACHE_ITEMS];$/;"	m	struct:struct_PROJ4PortalCache
PROJ4SRSCacheCheck	libpgcommon/lwgeom_transform.c	/^PROJ4SRSCacheCheck(MemoryContext context)$/;"	f	file:
PROJ4SRSCacheContext	libpgcommon/lwgeom_cache.h	/^	MemoryContext PROJ4SRSCacheContext;$/;"	m	struct:struct_PROJ4PortalCache
PROJ4SRSCacheContextMethods	libpgcommon/lwgeom_transform.c	/^static MemoryContextMethods PROJ4SRSCacheContextMethods =$/;"	v	file:
PROJ4SRSCacheCount	libpgcommon/lwgeom_cache.h	/^	int PROJ4SRSCacheCount;$/;"	m	struct:struct_PROJ4PortalCache
PROJ4SRSCacheDelete	libpgcommon/lwgeom_transform.c	/^PROJ4SRSCacheDelete(MemoryContext context)$/;"	f	file:
PROJ4SRSCacheInit	libpgcommon/lwgeom_transform.c	/^PROJ4SRSCacheInit(MemoryContext context)$/;"	f	file:
PROJ4SRSCacheIsEmpty	libpgcommon/lwgeom_transform.c	/^PROJ4SRSCacheIsEmpty(MemoryContext context)$/;"	f	file:
PROJ4SRSCacheItem	libpgcommon/lwgeom_cache.h	/^PROJ4SRSCacheItem;$/;"	t	typeref:struct:struct_PROJ4SRSCacheItem
PROJ4SRSCacheReset	libpgcommon/lwgeom_transform.c	/^PROJ4SRSCacheReset(MemoryContext context)$/;"	f	file:
PROJ4SRSCacheStats	libpgcommon/lwgeom_transform.c	/^PROJ4SRSCacheStats(MemoryContext context, int level)$/;"	f	file:
PROJ4_BACKEND_HASH_SIZE	libpgcommon/lwgeom_transform.c	47;"	d	file:
PROJ4_CACHE_ITEMS	libpgcommon/lwgeom_cache.h	73;"	d
PROJ_CACHE_ENTRY	libpgcommon/lwgeom_cache.h	24;"	d
PT_16BSI	raster/rt_core/librtcore.h	/^    PT_16BSI=5,   \/* 16-bit signed integer    *\/$/;"	e	enum:__anon36
PT_16BUI	raster/rt_core/librtcore.h	/^    PT_16BUI=6,   \/* 16-bit unsigned integer  *\/$/;"	e	enum:__anon36
PT_1BB	raster/rt_core/librtcore.h	/^    PT_1BB=0,     \/* 1-bit boolean            *\/$/;"	e	enum:__anon36
PT_2BUI	raster/rt_core/librtcore.h	/^    PT_2BUI=1,    \/* 2-bit unsigned integer   *\/$/;"	e	enum:__anon36
PT_32BF	raster/rt_core/librtcore.h	/^    PT_32BF=10,   \/* 32-bit float             *\/$/;"	e	enum:__anon36
PT_32BSI	raster/rt_core/librtcore.h	/^    PT_32BSI=7,   \/* 32-bit signed integer    *\/$/;"	e	enum:__anon36
PT_32BUI	raster/rt_core/librtcore.h	/^    PT_32BUI=8,   \/* 32-bit unsigned integer  *\/$/;"	e	enum:__anon36
PT_4BUI	raster/rt_core/librtcore.h	/^    PT_4BUI=2,    \/* 4-bit unsigned integer   *\/$/;"	e	enum:__anon36
PT_64BF	raster/rt_core/librtcore.h	/^    PT_64BF=11,   \/* 64-bit float             *\/$/;"	e	enum:__anon36
PT_8BSI	raster/rt_core/librtcore.h	/^    PT_8BSI=3,    \/* 8-bit signed integer     *\/$/;"	e	enum:__anon36
PT_8BUI	raster/rt_core/librtcore.h	/^    PT_8BUI=4,    \/* 8-bit unsigned integer   *\/$/;"	e	enum:__anon36
PT_END	raster/rt_core/librtcore.h	/^    PT_END=13$/;"	e	enum:__anon36
PUBLIC_SCRIPTS	extras/template_gis/Makefile	/^PUBLIC_SCRIPTS:=mktemplate_gis rmtemplate_gis createdb.postgis$/;"	m
PUSH	postgis/lwgeom_dump.c	51;"	d	file:
PersonEntity	java/ejb3/src/org/postgis/ejb/PersonEntity.java	/^public class PersonEntity {$/;"	c
Point	java/jdbc/src/org/postgis/Point.java	/^    protected Point(String value, boolean haveM) throws SQLException {$/;"	m	class:Point
Point	java/jdbc/src/org/postgis/Point.java	/^    public Point() {$/;"	m	class:Point
Point	java/jdbc/src/org/postgis/Point.java	/^    public Point(String value) throws SQLException {$/;"	m	class:Point
Point	java/jdbc/src/org/postgis/Point.java	/^    public Point(double x, double y) {$/;"	m	class:Point
Point	java/jdbc/src/org/postgis/Point.java	/^    public Point(double x, double y, double z) {$/;"	m	class:Point
Point	java/jdbc/src/org/postgis/Point.java	/^public class Point extends Geometry {$/;"	c
Point	loader/shp2pgsql-core.c	/^} Point;$/;"	t	typeref:struct:struct_point	file:
PointComposedGeom	java/jdbc/src/org/postgis/PointComposedGeom.java	/^    protected PointComposedGeom(int type) {$/;"	m	class:PointComposedGeom
PointComposedGeom	java/jdbc/src/org/postgis/PointComposedGeom.java	/^    protected PointComposedGeom(int type, Point[] points) {$/;"	m	class:PointComposedGeom
PointComposedGeom	java/jdbc/src/org/postgis/PointComposedGeom.java	/^    public PointComposedGeom(int type, String value) throws SQLException {$/;"	m	class:PointComposedGeom
PointComposedGeom	java/jdbc/src/org/postgis/PointComposedGeom.java	/^    public PointComposedGeom(int type, String value, boolean haveM) throws SQLException {$/;"	m	class:PointComposedGeom
PointComposedGeom	java/jdbc/src/org/postgis/PointComposedGeom.java	/^public abstract class PointComposedGeom extends ComposedGeom {$/;"	c
PointPathIterator	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        public PointPathIterator(Point _p, AffineTransform _at) {$/;"	m	class:JTSShape.PointPathIterator
PointPathIterator	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^    public static class PointPathIterator extends GeometryPathIterator {$/;"	c	class:JTSShape
Polygon	java/jdbc/src/org/postgis/Polygon.java	/^    public Polygon() {$/;"	m	class:Polygon
Polygon	java/jdbc/src/org/postgis/Polygon.java	/^    public Polygon(LinearRing[] rings) {$/;"	m	class:Polygon
Polygon	java/jdbc/src/org/postgis/Polygon.java	/^    public Polygon(String value) throws SQLException {$/;"	m	class:Polygon
Polygon	java/jdbc/src/org/postgis/Polygon.java	/^    public Polygon(String value, boolean haveM) throws SQLException {$/;"	m	class:Polygon
Polygon	java/jdbc/src/org/postgis/Polygon.java	/^public class Polygon extends ComposedGeom {$/;"	c
PolygonPathIterator	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        public PolygonPathIterator(Polygon _pg, AffineTransform _at) {$/;"	m	class:JTSShape.PolygonPathIterator
PolygonPathIterator	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^    public static class PolygonPathIterator extends LineStringPathIterator {$/;"	c	class:JTSShape
PostGISDialect	java/ejb3/src/org/postgis/hibernate/PostGISDialect.java	/^	public PostGISDialect()$/;"	m	class:PostGISDialect
PostGISDialect	java/ejb3/src/org/postgis/hibernate/PostGISDialect.java	/^public class PostGISDialect extends PostgreSQLDialect{$/;"	c
PostGisGeometryDAO	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAO.java	/^public interface PostGisGeometryDAO extends GeometryDao {$/;"	i
PostGisGeometryDAOImpl	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAOImpl.java	/^    public PostGisGeometryDAOImpl() {}$/;"	m	class:PostGisGeometryDAOImpl
PostGisGeometryDAOImpl	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAOImpl.java	/^public class PostGisGeometryDAOImpl implements PostGisGeometryDAO {$/;"	c
PrepGeomCache	postgis/lwgeom_geos_prepared.h	/^} PrepGeomCache;$/;"	t	typeref:struct:__anon7
PrepGeomCacheAllocator	postgis/lwgeom_geos_prepared.c	/^PrepGeomCacheAllocator()$/;"	f	file:
PrepGeomCacheBuilder	postgis/lwgeom_geos_prepared.c	/^PrepGeomCacheBuilder(const LWGEOM *lwgeom, GeomCache *cache)$/;"	f	file:
PrepGeomCacheCleaner	postgis/lwgeom_geos_prepared.c	/^PrepGeomCacheCleaner(GeomCache *cache)$/;"	f	file:
PrepGeomCacheMethods	postgis/lwgeom_geos_prepared.c	/^static GeomCacheMethods PrepGeomCacheMethods =$/;"	v	file:
PrepGeomHash	postgis/lwgeom_geos_prepared.c	/^static HTAB* PrepGeomHash = NULL;$/;"	v	file:
PrepGeomHashEntry	postgis/lwgeom_geos_prepared.c	/^PrepGeomHashEntry;$/;"	t	typeref:struct:__anon16	file:
PreparedCacheCheck	postgis/lwgeom_geos_prepared.c	/^PreparedCacheCheck(MemoryContext context)$/;"	f	file:
PreparedCacheContextMethods	postgis/lwgeom_geos_prepared.c	/^static MemoryContextMethods PreparedCacheContextMethods =$/;"	v	file:
PreparedCacheDelete	postgis/lwgeom_geos_prepared.c	/^PreparedCacheDelete(MemoryContext context)$/;"	f	file:
PreparedCacheInit	postgis/lwgeom_geos_prepared.c	/^PreparedCacheInit(MemoryContext context)$/;"	f	file:
PreparedCacheIsEmpty	postgis/lwgeom_geos_prepared.c	/^PreparedCacheIsEmpty(MemoryContext context)$/;"	f	file:
PreparedCacheReset	postgis/lwgeom_geos_prepared.c	/^PreparedCacheReset(MemoryContext context)$/;"	f	file:
PreparedCacheStats	postgis/lwgeom_geos_prepared.c	/^PreparedCacheStats(MemoryContext context, int level)$/;"	f	file:
Proj4Cache	libpgcommon/lwgeom_transform.h	/^typedef void *Proj4Cache ;$/;"	t
ProjectionContext	libpgcommon/lwgeom_transform.c	/^	MemoryContext ProjectionContext;$/;"	m	struct:struct_PJHashEntry	file:
RANDOM_TEST	liblwgeom/cunit/cu_geodetic.c	22;"	d	file:
RASTERINFO	raster/loader/raster2pgsql.h	/^} RASTERINFO;$/;"	t	typeref:struct:rasterinfo_t
RASTER_DEBUG	raster/rt_core/librtcore.h	289;"	d
RASTER_DEBUG	raster/rt_core/librtcore.h	305;"	d
RASTER_DEBUGF	raster/rt_core/librtcore.h	296;"	d
RASTER_DEBUGF	raster/rt_core/librtcore.h	309;"	d
RASTER_GDALWarp	raster/rt_pg/rtpg_gdal.c	/^Datum RASTER_GDALWarp(PG_FUNCTION_ARGS)$/;"	f
RASTER_GDALWarp	raster/rt_pg/rtpg_gdal.c	/^PG_FUNCTION_INFO_V1(RASTER_GDALWarp);$/;"	v
RASTER_addBand	raster/rt_pg/rtpg_create.c	/^Datum RASTER_addBand(PG_FUNCTION_ARGS)$/;"	f
RASTER_addBand	raster/rt_pg/rtpg_create.c	/^PG_FUNCTION_INFO_V1(RASTER_addBand);$/;"	v
RASTER_addBandOutDB	raster/rt_pg/rtpg_create.c	/^Datum RASTER_addBandOutDB(PG_FUNCTION_ARGS)$/;"	f
RASTER_addBandOutDB	raster/rt_pg/rtpg_create.c	/^PG_FUNCTION_INFO_V1(RASTER_addBandOutDB);$/;"	v
RASTER_addBandRasterArray	raster/rt_pg/rtpg_create.c	/^Datum RASTER_addBandRasterArray(PG_FUNCTION_ARGS)$/;"	f
RASTER_addBandRasterArray	raster/rt_pg/rtpg_create.c	/^PG_FUNCTION_INFO_V1(RASTER_addBandRasterArray);$/;"	v
RASTER_asGDALRaster	raster/rt_pg/rtpg_gdal.c	/^Datum RASTER_asGDALRaster(PG_FUNCTION_ARGS)$/;"	f
RASTER_asGDALRaster	raster/rt_pg/rtpg_gdal.c	/^PG_FUNCTION_INFO_V1(RASTER_asGDALRaster);$/;"	v
RASTER_asRaster	raster/rt_pg/rtpg_geometry.c	/^Datum RASTER_asRaster(PG_FUNCTION_ARGS)$/;"	f
RASTER_asRaster	raster/rt_pg/rtpg_geometry.c	/^PG_FUNCTION_INFO_V1(RASTER_asRaster);$/;"	v
RASTER_band	raster/rt_pg/rtpg_create.c	/^Datum RASTER_band(PG_FUNCTION_ARGS)$/;"	f
RASTER_band	raster/rt_pg/rtpg_create.c	/^PG_FUNCTION_INFO_V1(RASTER_band);$/;"	v
RASTER_bandIsNoData	raster/rt_pg/rtpg_band_properties.c	/^Datum RASTER_bandIsNoData(PG_FUNCTION_ARGS)$/;"	f
RASTER_bandIsNoData	raster/rt_pg/rtpg_band_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_bandIsNoData);$/;"	v
RASTER_bandmetadata	raster/rt_pg/rtpg_band_properties.c	/^Datum RASTER_bandmetadata(PG_FUNCTION_ARGS)$/;"	f
RASTER_bandmetadata	raster/rt_pg/rtpg_band_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_bandmetadata);$/;"	v
RASTER_clip	raster/rt_pg/rtpg_mapalgebra.c	/^Datum RASTER_clip(PG_FUNCTION_ARGS)$/;"	f
RASTER_clip	raster/rt_pg/rtpg_mapalgebra.c	/^PG_FUNCTION_INFO_V1(RASTER_clip);$/;"	v
RASTER_colorMap	raster/rt_pg/rtpg_mapalgebra.c	/^Datum RASTER_colorMap(PG_FUNCTION_ARGS)$/;"	f
RASTER_colorMap	raster/rt_pg/rtpg_mapalgebra.c	/^PG_FUNCTION_INFO_V1(RASTER_colorMap);$/;"	v
RASTER_contains	raster/rt_pg/rtpg_spatial_relationship.c	/^Datum RASTER_contains(PG_FUNCTION_ARGS)$/;"	f
RASTER_contains	raster/rt_pg/rtpg_spatial_relationship.c	/^PG_FUNCTION_INFO_V1(RASTER_contains);$/;"	v
RASTER_containsProperly	raster/rt_pg/rtpg_spatial_relationship.c	/^Datum RASTER_containsProperly(PG_FUNCTION_ARGS)$/;"	f
RASTER_containsProperly	raster/rt_pg/rtpg_spatial_relationship.c	/^PG_FUNCTION_INFO_V1(RASTER_containsProperly);$/;"	v
RASTER_convex_hull	raster/rt_pg/rtpg_geometry.c	/^Datum RASTER_convex_hull(PG_FUNCTION_ARGS)$/;"	f
RASTER_convex_hull	raster/rt_pg/rtpg_geometry.c	/^PG_FUNCTION_INFO_V1(RASTER_convex_hull);$/;"	v
RASTER_copyBand	raster/rt_pg/rtpg_create.c	/^Datum RASTER_copyBand(PG_FUNCTION_ARGS)$/;"	f
RASTER_copyBand	raster/rt_pg/rtpg_create.c	/^PG_FUNCTION_INFO_V1(RASTER_copyBand);$/;"	v
RASTER_coveredby	raster/rt_pg/rtpg_spatial_relationship.c	/^Datum RASTER_coveredby(PG_FUNCTION_ARGS)$/;"	f
RASTER_coveredby	raster/rt_pg/rtpg_spatial_relationship.c	/^PG_FUNCTION_INFO_V1(RASTER_coveredby);$/;"	v
RASTER_covers	raster/rt_pg/rtpg_spatial_relationship.c	/^Datum RASTER_covers(PG_FUNCTION_ARGS)$/;"	f
RASTER_covers	raster/rt_pg/rtpg_spatial_relationship.c	/^PG_FUNCTION_INFO_V1(RASTER_covers);$/;"	v
RASTER_dfullywithin	raster/rt_pg/rtpg_spatial_relationship.c	/^Datum RASTER_dfullywithin(PG_FUNCTION_ARGS)$/;"	f
RASTER_dfullywithin	raster/rt_pg/rtpg_spatial_relationship.c	/^PG_FUNCTION_INFO_V1(RASTER_dfullywithin);$/;"	v
RASTER_dumpAsPolygons	raster/rt_pg/rtpg_geometry.c	/^Datum RASTER_dumpAsPolygons(PG_FUNCTION_ARGS) {$/;"	f
RASTER_dumpAsPolygons	raster/rt_pg/rtpg_geometry.c	/^PG_FUNCTION_INFO_V1(RASTER_dumpAsPolygons);$/;"	v
RASTER_dumpValues	raster/rt_pg/rtpg_pixel.c	/^Datum RASTER_dumpValues(PG_FUNCTION_ARGS)$/;"	f
RASTER_dumpValues	raster/rt_pg/rtpg_pixel.c	/^PG_FUNCTION_INFO_V1(RASTER_dumpValues);$/;"	v
RASTER_dwithin	raster/rt_pg/rtpg_spatial_relationship.c	/^Datum RASTER_dwithin(PG_FUNCTION_ARGS)$/;"	f
RASTER_dwithin	raster/rt_pg/rtpg_spatial_relationship.c	/^PG_FUNCTION_INFO_V1(RASTER_dwithin);$/;"	v
RASTER_fromGDALRaster	raster/rt_pg/rtpg_gdal.c	/^Datum RASTER_fromGDALRaster(PG_FUNCTION_ARGS)$/;"	f
RASTER_fromGDALRaster	raster/rt_pg/rtpg_gdal.c	/^PG_FUNCTION_INFO_V1(RASTER_fromGDALRaster);$/;"	v
RASTER_gdal_version	raster/rt_pg/rtpg_utility.c	/^Datum RASTER_gdal_version(PG_FUNCTION_ARGS)$/;"	f
RASTER_gdal_version	raster/rt_pg/rtpg_utility.c	/^PG_FUNCTION_INFO_V1(RASTER_gdal_version);$/;"	v
RASTER_getBandNoDataValue	raster/rt_pg/rtpg_band_properties.c	/^Datum RASTER_getBandNoDataValue(PG_FUNCTION_ARGS)$/;"	f
RASTER_getBandNoDataValue	raster/rt_pg/rtpg_band_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_getBandNoDataValue);$/;"	v
RASTER_getBandPath	raster/rt_pg/rtpg_band_properties.c	/^Datum RASTER_getBandPath(PG_FUNCTION_ARGS)$/;"	f
RASTER_getBandPath	raster/rt_pg/rtpg_band_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_getBandPath);$/;"	v
RASTER_getBandPixelType	raster/rt_pg/rtpg_band_properties.c	/^Datum RASTER_getBandPixelType(PG_FUNCTION_ARGS)$/;"	f
RASTER_getBandPixelType	raster/rt_pg/rtpg_band_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_getBandPixelType);$/;"	v
RASTER_getBandPixelTypeName	raster/rt_pg/rtpg_band_properties.c	/^Datum RASTER_getBandPixelTypeName(PG_FUNCTION_ARGS)$/;"	f
RASTER_getBandPixelTypeName	raster/rt_pg/rtpg_band_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_getBandPixelTypeName);$/;"	v
RASTER_getGDALDrivers	raster/rt_pg/rtpg_gdal.c	/^Datum RASTER_getGDALDrivers(PG_FUNCTION_ARGS)$/;"	f
RASTER_getGDALDrivers	raster/rt_pg/rtpg_gdal.c	/^PG_FUNCTION_INFO_V1(RASTER_getGDALDrivers);$/;"	v
RASTER_getGeotransform	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_getGeotransform(PG_FUNCTION_ARGS)$/;"	f
RASTER_getGeotransform	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_getGeotransform);$/;"	v
RASTER_getHeight	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_getHeight(PG_FUNCTION_ARGS)$/;"	f
RASTER_getHeight	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_getHeight);$/;"	v
RASTER_getNumBands	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_getNumBands(PG_FUNCTION_ARGS)$/;"	f
RASTER_getNumBands	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_getNumBands);$/;"	v
RASTER_getPixelHeight	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_getPixelHeight(PG_FUNCTION_ARGS)$/;"	f
RASTER_getPixelHeight	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_getPixelHeight);$/;"	v
RASTER_getPixelPolygons	raster/rt_pg/rtpg_geometry.c	/^Datum RASTER_getPixelPolygons(PG_FUNCTION_ARGS)$/;"	f
RASTER_getPixelPolygons	raster/rt_pg/rtpg_geometry.c	/^PG_FUNCTION_INFO_V1(RASTER_getPixelPolygons);$/;"	v
RASTER_getPixelValue	raster/rt_pg/rtpg_pixel.c	/^Datum RASTER_getPixelValue(PG_FUNCTION_ARGS)$/;"	f
RASTER_getPixelValue	raster/rt_pg/rtpg_pixel.c	/^PG_FUNCTION_INFO_V1(RASTER_getPixelValue);$/;"	v
RASTER_getPixelWidth	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_getPixelWidth(PG_FUNCTION_ARGS)$/;"	f
RASTER_getPixelWidth	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_getPixelWidth);$/;"	v
RASTER_getPolygon	raster/rt_pg/rtpg_geometry.c	/^Datum RASTER_getPolygon(PG_FUNCTION_ARGS)$/;"	f
RASTER_getPolygon	raster/rt_pg/rtpg_geometry.c	/^PG_FUNCTION_INFO_V1(RASTER_getPolygon);$/;"	v
RASTER_getSRID	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_getSRID(PG_FUNCTION_ARGS)$/;"	f
RASTER_getSRID	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_getSRID);$/;"	v
RASTER_getWidth	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_getWidth(PG_FUNCTION_ARGS)$/;"	f
RASTER_getWidth	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_getWidth);$/;"	v
RASTER_getXScale	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_getXScale(PG_FUNCTION_ARGS)$/;"	f
RASTER_getXScale	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_getXScale);$/;"	v
RASTER_getXSkew	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_getXSkew(PG_FUNCTION_ARGS)$/;"	f
RASTER_getXSkew	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_getXSkew);$/;"	v
RASTER_getXUpperLeft	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_getXUpperLeft(PG_FUNCTION_ARGS)$/;"	f
RASTER_getXUpperLeft	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_getXUpperLeft);$/;"	v
RASTER_getYScale	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_getYScale(PG_FUNCTION_ARGS)$/;"	f
RASTER_getYScale	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_getYScale);$/;"	v
RASTER_getYSkew	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_getYSkew(PG_FUNCTION_ARGS)$/;"	f
RASTER_getYSkew	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_getYSkew);$/;"	v
RASTER_getYUpperLeft	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_getYUpperLeft(PG_FUNCTION_ARGS)$/;"	f
RASTER_getYUpperLeft	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_getYUpperLeft);$/;"	v
RASTER_hasNoBand	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_hasNoBand(PG_FUNCTION_ARGS)$/;"	f
RASTER_hasNoBand	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_hasNoBand);$/;"	v
RASTER_histogram	raster/rt_pg/rtpg_statistics.c	/^Datum RASTER_histogram(PG_FUNCTION_ARGS)$/;"	f
RASTER_histogram	raster/rt_pg/rtpg_statistics.c	/^PG_FUNCTION_INFO_V1(RASTER_histogram);$/;"	v
RASTER_histogramCoverage	raster/rt_pg/rtpg_statistics.c	/^Datum RASTER_histogramCoverage(PG_FUNCTION_ARGS)$/;"	f
RASTER_histogramCoverage	raster/rt_pg/rtpg_statistics.c	/^PG_FUNCTION_INFO_V1(RASTER_histogramCoverage);$/;"	v
RASTER_in	raster/rt_pg/rtpg_inout.c	/^Datum RASTER_in(PG_FUNCTION_ARGS)$/;"	f
RASTER_in	raster/rt_pg/rtpg_inout.c	/^PG_FUNCTION_INFO_V1(RASTER_in);$/;"	v
RASTER_intersects	raster/rt_pg/rtpg_spatial_relationship.c	/^Datum RASTER_intersects(PG_FUNCTION_ARGS)$/;"	f
RASTER_intersects	raster/rt_pg/rtpg_spatial_relationship.c	/^PG_FUNCTION_INFO_V1(RASTER_intersects);$/;"	v
RASTER_isEmpty	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_isEmpty(PG_FUNCTION_ARGS)$/;"	f
RASTER_isEmpty	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_isEmpty);$/;"	v
RASTER_lib_build_date	raster/rt_pg/rtpg_utility.c	/^Datum RASTER_lib_build_date(PG_FUNCTION_ARGS)$/;"	f
RASTER_lib_build_date	raster/rt_pg/rtpg_utility.c	/^PG_FUNCTION_INFO_V1(RASTER_lib_build_date);$/;"	v
RASTER_lib_version	raster/rt_pg/rtpg_utility.c	/^Datum RASTER_lib_version(PG_FUNCTION_ARGS)$/;"	f
RASTER_lib_version	raster/rt_pg/rtpg_utility.c	/^PG_FUNCTION_INFO_V1(RASTER_lib_version);$/;"	v
RASTER_makeEmpty	raster/rt_pg/rtpg_create.c	/^Datum RASTER_makeEmpty(PG_FUNCTION_ARGS)$/;"	f
RASTER_makeEmpty	raster/rt_pg/rtpg_create.c	/^PG_FUNCTION_INFO_V1(RASTER_makeEmpty);$/;"	v
RASTER_mapAlgebra2	raster/rt_pg/rtpg_mapalgebra.c	/^Datum RASTER_mapAlgebra2(PG_FUNCTION_ARGS)$/;"	f
RASTER_mapAlgebra2	raster/rt_pg/rtpg_mapalgebra.c	/^PG_FUNCTION_INFO_V1(RASTER_mapAlgebra2);$/;"	v
RASTER_mapAlgebraExpr	raster/rt_pg/rtpg_mapalgebra.c	/^Datum RASTER_mapAlgebraExpr(PG_FUNCTION_ARGS)$/;"	f
RASTER_mapAlgebraExpr	raster/rt_pg/rtpg_mapalgebra.c	/^PG_FUNCTION_INFO_V1(RASTER_mapAlgebraExpr);$/;"	v
RASTER_mapAlgebraFct	raster/rt_pg/rtpg_mapalgebra.c	/^Datum RASTER_mapAlgebraFct(PG_FUNCTION_ARGS)$/;"	f
RASTER_mapAlgebraFct	raster/rt_pg/rtpg_mapalgebra.c	/^PG_FUNCTION_INFO_V1(RASTER_mapAlgebraFct);$/;"	v
RASTER_mapAlgebraFctNgb	raster/rt_pg/rtpg_mapalgebra.c	/^Datum RASTER_mapAlgebraFctNgb(PG_FUNCTION_ARGS)$/;"	f
RASTER_mapAlgebraFctNgb	raster/rt_pg/rtpg_mapalgebra.c	/^PG_FUNCTION_INFO_V1(RASTER_mapAlgebraFctNgb);$/;"	v
RASTER_metadata	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_metadata(PG_FUNCTION_ARGS)$/;"	f
RASTER_metadata	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_metadata);$/;"	v
RASTER_minPossibleValue	raster/rt_pg/rtpg_utility.c	/^Datum RASTER_minPossibleValue(PG_FUNCTION_ARGS)$/;"	f
RASTER_minPossibleValue	raster/rt_pg/rtpg_utility.c	/^PG_FUNCTION_INFO_V1(RASTER_minPossibleValue);$/;"	v
RASTER_nMapAlgebra	raster/rt_pg/rtpg_mapalgebra.c	/^Datum RASTER_nMapAlgebra(PG_FUNCTION_ARGS)$/;"	f
RASTER_nMapAlgebra	raster/rt_pg/rtpg_mapalgebra.c	/^PG_FUNCTION_INFO_V1(RASTER_nMapAlgebra);$/;"	v
RASTER_nMapAlgebraExpr	raster/rt_pg/rtpg_mapalgebra.c	/^Datum RASTER_nMapAlgebraExpr(PG_FUNCTION_ARGS)$/;"	f
RASTER_nMapAlgebraExpr	raster/rt_pg/rtpg_mapalgebra.c	/^PG_FUNCTION_INFO_V1(RASTER_nMapAlgebraExpr);$/;"	v
RASTER_nearestValue	raster/rt_pg/rtpg_pixel.c	/^Datum RASTER_nearestValue(PG_FUNCTION_ARGS)$/;"	f
RASTER_nearestValue	raster/rt_pg/rtpg_pixel.c	/^PG_FUNCTION_INFO_V1(RASTER_nearestValue);$/;"	v
RASTER_neighborhood	raster/rt_pg/rtpg_pixel.c	/^Datum RASTER_neighborhood(PG_FUNCTION_ARGS)$/;"	f
RASTER_neighborhood	raster/rt_pg/rtpg_pixel.c	/^PG_FUNCTION_INFO_V1(RASTER_neighborhood);$/;"	v
RASTER_notSameAlignmentReason	raster/rt_pg/rtpg_spatial_relationship.c	/^Datum RASTER_notSameAlignmentReason(PG_FUNCTION_ARGS)$/;"	f
RASTER_notSameAlignmentReason	raster/rt_pg/rtpg_spatial_relationship.c	/^PG_FUNCTION_INFO_V1(RASTER_notSameAlignmentReason);$/;"	v
RASTER_out	raster/rt_pg/rtpg_inout.c	/^Datum RASTER_out(PG_FUNCTION_ARGS)$/;"	f
RASTER_out	raster/rt_pg/rtpg_inout.c	/^PG_FUNCTION_INFO_V1(RASTER_out);$/;"	v
RASTER_overlaps	raster/rt_pg/rtpg_spatial_relationship.c	/^Datum RASTER_overlaps(PG_FUNCTION_ARGS)$/;"	f
RASTER_overlaps	raster/rt_pg/rtpg_spatial_relationship.c	/^PG_FUNCTION_INFO_V1(RASTER_overlaps);$/;"	v
RASTER_pixelOfValue	raster/rt_pg/rtpg_pixel.c	/^Datum RASTER_pixelOfValue(PG_FUNCTION_ARGS)$/;"	f
RASTER_pixelOfValue	raster/rt_pg/rtpg_pixel.c	/^PG_FUNCTION_INFO_V1(RASTER_pixelOfValue);$/;"	v
RASTER_quantile	raster/rt_pg/rtpg_statistics.c	/^Datum RASTER_quantile(PG_FUNCTION_ARGS)$/;"	f
RASTER_quantile	raster/rt_pg/rtpg_statistics.c	/^PG_FUNCTION_INFO_V1(RASTER_quantile);$/;"	v
RASTER_quantileCoverage	raster/rt_pg/rtpg_statistics.c	/^Datum RASTER_quantileCoverage(PG_FUNCTION_ARGS)$/;"	f
RASTER_quantileCoverage	raster/rt_pg/rtpg_statistics.c	/^PG_FUNCTION_INFO_V1(RASTER_quantileCoverage);$/;"	v
RASTER_rasterToWorldCoord	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_rasterToWorldCoord(PG_FUNCTION_ARGS)$/;"	f
RASTER_rasterToWorldCoord	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_rasterToWorldCoord);$/;"	v
RASTER_reclass	raster/rt_pg/rtpg_mapalgebra.c	/^Datum RASTER_reclass(PG_FUNCTION_ARGS) {$/;"	f
RASTER_reclass	raster/rt_pg/rtpg_mapalgebra.c	/^PG_FUNCTION_INFO_V1(RASTER_reclass);$/;"	v
RASTER_sameAlignment	raster/rt_pg/rtpg_spatial_relationship.c	/^Datum RASTER_sameAlignment(PG_FUNCTION_ARGS)$/;"	f
RASTER_sameAlignment	raster/rt_pg/rtpg_spatial_relationship.c	/^PG_FUNCTION_INFO_V1(RASTER_sameAlignment);$/;"	v
RASTER_setBandIsNoData	raster/rt_pg/rtpg_band_properties.c	/^Datum RASTER_setBandIsNoData(PG_FUNCTION_ARGS)$/;"	f
RASTER_setBandIsNoData	raster/rt_pg/rtpg_band_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_setBandIsNoData);$/;"	v
RASTER_setBandNoDataValue	raster/rt_pg/rtpg_band_properties.c	/^Datum RASTER_setBandNoDataValue(PG_FUNCTION_ARGS)$/;"	f
RASTER_setBandNoDataValue	raster/rt_pg/rtpg_band_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_setBandNoDataValue);$/;"	v
RASTER_setGeotransform	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_setGeotransform(PG_FUNCTION_ARGS)$/;"	f
RASTER_setGeotransform	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_setGeotransform);$/;"	v
RASTER_setPixelValue	raster/rt_pg/rtpg_pixel.c	/^Datum RASTER_setPixelValue(PG_FUNCTION_ARGS)$/;"	f
RASTER_setPixelValue	raster/rt_pg/rtpg_pixel.c	/^PG_FUNCTION_INFO_V1(RASTER_setPixelValue);$/;"	v
RASTER_setPixelValuesArray	raster/rt_pg/rtpg_pixel.c	/^Datum RASTER_setPixelValuesArray(PG_FUNCTION_ARGS)$/;"	f
RASTER_setPixelValuesArray	raster/rt_pg/rtpg_pixel.c	/^PG_FUNCTION_INFO_V1(RASTER_setPixelValuesArray);$/;"	v
RASTER_setPixelValuesGeomval	raster/rt_pg/rtpg_pixel.c	/^Datum RASTER_setPixelValuesGeomval(PG_FUNCTION_ARGS)$/;"	f
RASTER_setPixelValuesGeomval	raster/rt_pg/rtpg_pixel.c	/^PG_FUNCTION_INFO_V1(RASTER_setPixelValuesGeomval);$/;"	v
RASTER_setRotation	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_setRotation(PG_FUNCTION_ARGS)$/;"	f
RASTER_setRotation	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_setRotation);$/;"	v
RASTER_setSRID	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_setSRID(PG_FUNCTION_ARGS)$/;"	f
RASTER_setSRID	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_setSRID);$/;"	v
RASTER_setScale	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_setScale(PG_FUNCTION_ARGS)$/;"	f
RASTER_setScale	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_setScale);$/;"	v
RASTER_setScaleXY	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_setScaleXY(PG_FUNCTION_ARGS)$/;"	f
RASTER_setScaleXY	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_setScaleXY);$/;"	v
RASTER_setSkew	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_setSkew(PG_FUNCTION_ARGS)$/;"	f
RASTER_setSkew	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_setSkew);$/;"	v
RASTER_setSkewXY	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_setSkewXY(PG_FUNCTION_ARGS)$/;"	f
RASTER_setSkewXY	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_setSkewXY);$/;"	v
RASTER_setUpperLeftXY	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_setUpperLeftXY(PG_FUNCTION_ARGS)$/;"	f
RASTER_setUpperLeftXY	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_setUpperLeftXY);$/;"	v
RASTER_summaryStats	raster/rt_pg/rtpg_statistics.c	/^Datum RASTER_summaryStats(PG_FUNCTION_ARGS)$/;"	f
RASTER_summaryStats	raster/rt_pg/rtpg_statistics.c	/^PG_FUNCTION_INFO_V1(RASTER_summaryStats);$/;"	v
RASTER_summaryStatsCoverage	raster/rt_pg/rtpg_statistics.c	/^Datum RASTER_summaryStatsCoverage(PG_FUNCTION_ARGS)$/;"	f
RASTER_summaryStatsCoverage	raster/rt_pg/rtpg_statistics.c	/^PG_FUNCTION_INFO_V1(RASTER_summaryStatsCoverage);$/;"	v
RASTER_tile	raster/rt_pg/rtpg_create.c	/^Datum RASTER_tile(PG_FUNCTION_ARGS)$/;"	f
RASTER_tile	raster/rt_pg/rtpg_create.c	/^PG_FUNCTION_INFO_V1(RASTER_tile);$/;"	v
RASTER_to_binary	raster/rt_pg/rtpg_inout.c	/^Datum RASTER_to_binary(PG_FUNCTION_ARGS)$/;"	f
RASTER_to_binary	raster/rt_pg/rtpg_inout.c	/^PG_FUNCTION_INFO_V1(RASTER_to_binary);$/;"	v
RASTER_to_bytea	raster/rt_pg/rtpg_inout.c	/^Datum RASTER_to_bytea(PG_FUNCTION_ARGS)$/;"	f
RASTER_to_bytea	raster/rt_pg/rtpg_inout.c	/^PG_FUNCTION_INFO_V1(RASTER_to_bytea);$/;"	v
RASTER_touches	raster/rt_pg/rtpg_spatial_relationship.c	/^Datum RASTER_touches(PG_FUNCTION_ARGS)$/;"	f
RASTER_touches	raster/rt_pg/rtpg_spatial_relationship.c	/^PG_FUNCTION_INFO_V1(RASTER_touches);$/;"	v
RASTER_union_finalfn	raster/rt_pg/rtpg_mapalgebra.c	/^Datum RASTER_union_finalfn(PG_FUNCTION_ARGS)$/;"	f
RASTER_union_finalfn	raster/rt_pg/rtpg_mapalgebra.c	/^PG_FUNCTION_INFO_V1(RASTER_union_finalfn);$/;"	v
RASTER_union_transfn	raster/rt_pg/rtpg_mapalgebra.c	/^Datum RASTER_union_transfn(PG_FUNCTION_ARGS)$/;"	f
RASTER_union_transfn	raster/rt_pg/rtpg_mapalgebra.c	/^PG_FUNCTION_INFO_V1(RASTER_union_transfn);$/;"	v
RASTER_valueCount	raster/rt_pg/rtpg_statistics.c	/^Datum RASTER_valueCount(PG_FUNCTION_ARGS) {$/;"	f
RASTER_valueCount	raster/rt_pg/rtpg_statistics.c	/^PG_FUNCTION_INFO_V1(RASTER_valueCount);$/;"	v
RASTER_valueCountCoverage	raster/rt_pg/rtpg_statistics.c	/^Datum RASTER_valueCountCoverage(PG_FUNCTION_ARGS) {$/;"	f
RASTER_valueCountCoverage	raster/rt_pg/rtpg_statistics.c	/^PG_FUNCTION_INFO_V1(RASTER_valueCountCoverage);$/;"	v
RASTER_worldToRasterCoord	raster/rt_pg/rtpg_raster_properties.c	/^Datum RASTER_worldToRasterCoord(PG_FUNCTION_ARGS)$/;"	f
RASTER_worldToRasterCoord	raster/rt_pg/rtpg_raster_properties.c	/^PG_FUNCTION_INFO_V1(RASTER_worldToRasterCoord);$/;"	v
RBRACKET_TOK	liblwgeom/lwin_wkt_parse.c	/^     RBRACKET_TOK = 270,$/;"	e	enum:yytokentype	file:
RBRACKET_TOK	liblwgeom/lwin_wkt_parse.c	237;"	d	file:
RBRACKET_TOK	liblwgeom/lwin_wkt_parse.h	/^     RBRACKET_TOK = 270,$/;"	e	enum:yytokentype
RBRACKET_TOK	liblwgeom/lwin_wkt_parse.h	78;"	d
RCSID	raster/loader/raster2pgsql.h	71;"	d
RECT_CACHE_ENTRY	libpgcommon/lwgeom_cache.h	28;"	d
RECT_NODE	liblwgeom/lwtree.h	/^} RECT_NODE;	$/;"	t	typeref:struct:rect_node
REJECT	liblwgeom/lwin_wkt_lex.c	614;"	d	file:
RESSOURCENAME	java/jdbc/src/org/postgis/Version.java	/^    private static final String RESSOURCENAME = "org\/postgis\/version.properties";$/;"	f	class:Version	file:
REVISION	java/jdbc/jtssrc/org/postgis/jts/JtsGisWrapper.java	/^    public static final String REVISION = "$Revision$";$/;"	f	class:JtsGisWrapper
REVISION	java/jdbc/jtssrc/org/postgis/jts/JtsWrapper.java	/^    public static final String REVISION = "$Revision$";$/;"	f	class:JtsWrapper
REVISION	java/jdbc/src/org/postgis/DriverWrapper.java	/^    public static final String REVISION = "$Revision$";$/;"	f	class:DriverWrapper
REVISION	java/jdbc/src/org/postgis/java2d/Java2DWrapper.java	/^    public static final String REVISION = "$Revision$";$/;"	f	class:Java2DWrapper
REVISIONAUTO	java/jdbc/src/org/postgis/DriverWrapperAutoprobe.java	/^    public static final String REVISIONAUTO = "$Revision$";$/;"	f	class:DriverWrapperAutoprobe
REVISIONLW	java/jdbc/src/org/postgis/DriverWrapperLW.java	/^    public static final String REVISIONLW = "$Revision$";$/;"	f	class:DriverWrapperLW
ROUND	raster/rt_core/librtcore.h	2177;"	d
RTLOADERCFG	raster/loader/raster2pgsql.h	/^} RTLOADERCFG;$/;"	t	typeref:struct:raster_loader_config
RTPG_INTERNAL_H_INCLUDED	raster/rt_pg/rtpg_internal.h	32;"	d
RTPOSTGIS_H_INCLUDED	raster/rt_pg/rtpostgis.h	30;"	d
RTREE_CACHE_ENTRY	libpgcommon/lwgeom_cache.h	26;"	d
RTREE_INTERVAL	postgis/lwgeom_rtree.h	/^RTREE_INTERVAL;$/;"	t	typeref:struct:__anon12
RTREE_NODE	postgis/lwgeom_rtree.h	/^RTREE_NODE;$/;"	t	typeref:struct:rtree_node
RTREE_POLY_CACHE	postgis/lwgeom_rtree.h	/^RTREE_POLY_CACHE;$/;"	t	typeref:struct:__anon13
RT_SERIALIZE_H_INCLUDED	raster/rt_core/rt_serialize.h	32;"	d
RT_WKB_HDR_SZ	raster/rt_core/rt_wkb.c	274;"	d	file:
RTreeAllocator	postgis/lwgeom_rtree.c	/^RTreeAllocator(void)$/;"	f	file:
RTreeBuilder	postgis/lwgeom_rtree.c	/^RTreeBuilder(const LWGEOM* lwgeom, GeomCache* cache)$/;"	f	file:
RTreeCacheClear	postgis/lwgeom_rtree.c	/^RTreeCacheClear(RTREE_POLY_CACHE* cache)$/;"	f	file:
RTreeCacheCreate	postgis/lwgeom_rtree.c	/^RTreeCacheCreate()$/;"	f	file:
RTreeCacheMethods	postgis/lwgeom_rtree.c	/^static GeomCacheMethods RTreeCacheMethods =$/;"	v	file:
RTreeCreate	postgis/lwgeom_rtree.c	/^RTreeCreate(POINTARRAY* pointArray)$/;"	f	file:
RTreeCreateInteriorNode	postgis/lwgeom_rtree.c	/^RTreeCreateInteriorNode(RTREE_NODE* left, RTREE_NODE* right)$/;"	f	file:
RTreeCreateInterval	postgis/lwgeom_rtree.c	/^RTreeCreateInterval(double value1, double value2)$/;"	f	file:
RTreeCreateLeafNode	postgis/lwgeom_rtree.c	/^RTreeCreateLeafNode(POINTARRAY* pa, int startPoint)$/;"	f	file:
RTreeFindLineSegments	postgis/lwgeom_rtree.c	/^LWMLINE *RTreeFindLineSegments(RTREE_NODE *root, double value)$/;"	f
RTreeFree	postgis/lwgeom_rtree.c	/^RTreeFree(RTREE_NODE* root)$/;"	f	file:
RTreeFreer	postgis/lwgeom_rtree.c	/^RTreeFreer(GeomCache* cache)$/;"	f	file:
RTreeGeomCache	postgis/lwgeom_rtree.h	/^} RTreeGeomCache;$/;"	t	typeref:struct:__anon14
RTreeMergeIntervals	postgis/lwgeom_rtree.c	/^RTreeMergeIntervals(RTREE_INTERVAL *inter1, RTREE_INTERVAL *inter2)$/;"	f	file:
RTreeMergeMultiLines	postgis/lwgeom_rtree.c	/^RTreeMergeMultiLines(LWMLINE *line1, LWMLINE *line2)$/;"	f	file:
RasterError	raster/scripts/python/rtreader.py	/^class RasterError(Exception):$/;"	c
RasterReader	raster/scripts/python/rtreader.py	/^class RasterReader(object):$/;"	c
ReleasePolygons	loader/shp2pgsql-core.c	/^ReleasePolygons(Ring **polys, int npolys)$/;"	f
Remove	loader/shapefil.h	/^    int        (*Remove) ( const char *filename );$/;"	m	struct:__anon63
Ring	loader/shp2pgsql-core.c	/^} Ring;$/;"	t	typeref:struct:struct_ring	file:
S2P_RCSID	loader/shp2pgsql-core.h	32;"	d
SADError	loader/safileio.c	/^void SADError( const char *message )$/;"	f
SADFClose	loader/safileio.c	/^int SADFClose( SAFile file )$/;"	f
SADFFlush	loader/safileio.c	/^int SADFFlush( SAFile file )$/;"	f
SADFOpen	loader/safileio.c	/^SAFile SADFOpen( const char *pszFilename, const char *pszAccess )$/;"	f
SADFRead	loader/safileio.c	/^SAOffset SADFRead( void *p, SAOffset size, SAOffset nmemb, SAFile file )$/;"	f
SADFSeek	loader/safileio.c	/^SAOffset SADFSeek( SAFile file, SAOffset offset, int whence )$/;"	f
SADFTell	loader/safileio.c	/^SAOffset SADFTell( SAFile file )$/;"	f
SADFWrite	loader/safileio.c	/^SAOffset SADFWrite( void *p, SAOffset size, SAOffset nmemb, SAFile file )$/;"	f
SADRemove	loader/safileio.c	/^int SADRemove( const char *filename )$/;"	f
SAFile	loader/shapefil.h	/^typedef int *SAFile;$/;"	t
SAHooks	loader/shapefil.h	/^} SAHooks;$/;"	t	typeref:struct:__anon63
SAMEPOINT	postgis/lwgeom_functions_analytic.c	235;"	d	file:
SAOffset	loader/shapefil.h	/^	typedef off_t SAOffset;$/;"	t
SAOffset	loader/shapefil.h	/^	typedef unsigned long SAOffset;$/;"	t
SASetupDefaultHooks	loader/safileio.c	/^void SASetupDefaultHooks( SAHooks *psHooks )$/;"	f
SASetupUtf8Hooks	loader/safileio.c	/^void SASetupUtf8Hooks( SAHooks *psHooks )$/;"	f
SAUtf8WFOpen	loader/safileio.c	/^SAFile SAUtf8WFOpen( const char *pszFilename, const char *pszAccess )$/;"	f
SAUtf8WRemove	loader/safileio.c	/^int SAUtf8WRemove( const char *pszFilename )$/;"	f
SCRIPTS	extras/template_gis/Makefile	/^SCRIPTS:=$(SCRIPTS_IN:.in=)$/;"	m
SCRIPTS_IN	extras/template_gis/Makefile	/^SCRIPTS_IN:=$(wildcard *.in)$/;"	m
SCRIPT_DEFAULTS	extras/template_gis/Makefile	/^SCRIPT_DEFAULTS=$(DEFAULTS_DIR)\/postgis$/;"	m
SCRIPT_DOLINK	extras/template_gis/Makefile	/^SCRIPT_DOLINK=rm -f $(SCRIPT_LINK); \\$/;"	m
SCRIPT_INSTALL	extras/template_gis/Makefile	/^SCRIPT_INSTALL=$(INSTALL_BIN) $(SCRIPT) $(SCRIPT_TARGET)$/;"	m
SCRIPT_LINK	extras/template_gis/Makefile	/^SCRIPT_LINK=$(SCRIPT_LINKDIR)\/$(SCRIPT)$/;"	m
SCRIPT_LINKDIR	extras/template_gis/Makefile	/^SCRIPT_LINKDIR=$(DESTDIR)$(prefix)\/bin$/;"	m
SCRIPT_PREPARE	extras/template_gis/Makefile	/^SCRIPT_PREPARE=cat $(SCRIPT).in | sed $(SUBSTITUTE) > $(SCRIPT)$/;"	m
SCRIPT_TARGET	extras/template_gis/Makefile	/^SCRIPT_TARGET=$(SCRIPT_TARGETDIR)\/$(SCRIPT)$/;"	m
SCRIPT_TARGETDIR	extras/template_gis/Makefile	/^SCRIPT_TARGETDIR=$(DESTDIR)$(bindir)$/;"	m
SCRIPT_UNINSTALL	extras/template_gis/Makefile	/^SCRIPT_UNINSTALL=rm -f $(SCRIPT_TARGET)$/;"	m
SCRIPT_UNLINK	extras/template_gis/Makefile	/^SCRIPT_UNLINK=rm -f $(SCRIPT_LINK)$/;"	m
SDFACTOR	postgis/gserialized_estimate.c	118;"	d	file:
SEG_COLINEAR	liblwgeom/liblwgeom_internal.h	/^    SEG_COLINEAR = 1,$/;"	e	enum:CG_SEGMENT_INTERSECTION_TYPE
SEG_CROSS_LEFT	liblwgeom/liblwgeom_internal.h	/^    SEG_CROSS_LEFT = 2,$/;"	e	enum:CG_SEGMENT_INTERSECTION_TYPE
SEG_CROSS_RIGHT	liblwgeom/liblwgeom_internal.h	/^    SEG_CROSS_RIGHT = 3,$/;"	e	enum:CG_SEGMENT_INTERSECTION_TYPE
SEG_ERROR	liblwgeom/liblwgeom_internal.h	/^    SEG_ERROR = -1,$/;"	e	enum:CG_SEGMENT_INTERSECTION_TYPE
SEG_NO_INTERSECTION	liblwgeom/liblwgeom_internal.h	/^    SEG_NO_INTERSECTION = 0,$/;"	e	enum:CG_SEGMENT_INTERSECTION_TYPE
SEG_TOUCH_LEFT	liblwgeom/liblwgeom_internal.h	/^    SEG_TOUCH_LEFT = 4,$/;"	e	enum:CG_SEGMENT_INTERSECTION_TYPE
SEG_TOUCH_RIGHT	liblwgeom/liblwgeom_internal.h	/^    SEG_TOUCH_RIGHT = 5$/;"	e	enum:CG_SEGMENT_INTERSECTION_TYPE
SEMICOLON_TOK	liblwgeom/lwin_wkt_parse.c	/^     SEMICOLON_TOK = 274,$/;"	e	enum:yytokentype	file:
SEMICOLON_TOK	liblwgeom/lwin_wkt_parse.c	241;"	d	file:
SEMICOLON_TOK	liblwgeom/lwin_wkt_parse.h	/^     SEMICOLON_TOK = 274,$/;"	e	enum:yytokentype
SEMICOLON_TOK	liblwgeom/lwin_wkt_parse.h	82;"	d
SET_FLOAT_WORD	liblwgeom/lwgeom_api.c	49;"	d	file:
SET_PARSER_ERROR	liblwgeom/lwin_wkt.c	38;"	d	file:
SET_VARSIZE	libpgcommon/pgsql_compat.h	16;"	d
SFCGAL2LWGEOM	liblwgeom/lwgeom_sfcgal.c	/^SFCGAL2LWGEOM(const sfcgal_geometry_t* geom, int force3D, int srid)$/;"	f
SFCGALGeometry2POSTGIS	postgis/lwgeom_sfcgal.c	/^GSERIALIZED* SFCGALGeometry2POSTGIS(const sfcgal_geometry_t* geom, int force3D, int SRID)$/;"	f
SFCGALPreparedGeometry2POSTGIS	postgis/lwgeom_sfcgal.c	/^GSERIALIZED* SFCGALPreparedGeometry2POSTGIS(const sfcgal_prepared_geometry_t* geom, int force3D)$/;"	f
SFCGAL_type_to_lwgeom_type	liblwgeom/lwgeom_sfcgal.c	/^SFCGAL_type_to_lwgeom_type(sfcgal_geometry_type_t type)$/;"	f	file:
SHAPEARRAY	java/jdbc/src/examples/TestJava2d.java	/^    public static final Shape[] SHAPEARRAY = new Shape[0];$/;"	f	class:TestJava2d
SHAPEFIELDMAXWIDTH	loader/shp2pgsql-gui.c	33;"	d	file:
SHAPEFILE_H_INCLUDED	loader/shapefil.h	2;"	d
SHOW_DIGS_DOUBLE	doc/html/image_src/generator.c	41;"	d	file:
SHOW_DIGS_DOUBLE	postgis/lwgeom_box3d.c	23;"	d	file:
SHOW_DIGS_DOUBLE	postgis/lwgeom_spheroid.c	32;"	d	file:
SHPAPI_CALL	loader/shapefil.h	199;"	d
SHPAPI_CALL	loader/shapefil.h	205;"	d
SHPAPI_CALL	loader/shapefil.h	208;"	d
SHPAPI_CALL1	loader/shapefil.h	200;"	d
SHPAPI_CALL1	loader/shapefil.h	206;"	d
SHPAPI_CALL1	loader/shapefil.h	213;"	d
SHPAPI_UTF8_HOOKS	loader/shapefil.h	237;"	d
SHPAPI_WINDOWS	loader/shapefil.h	236;"	d
SHPCOMMON_H	loader/shpcommon.h	14;"	d
SHPCONNECTIONCONFIG	loader/shpcommon.h	/^} SHPCONNECTIONCONFIG;$/;"	t	typeref:struct:shp_connection_state
SHPClose	loader/shpopen.c	/^SHPClose(SHPHandle psSHP )$/;"	f
SHPComputeExtents	loader/shpopen.c	/^SHPComputeExtents( SHPObject * psObject )$/;"	f
SHPCreate	loader/shpopen.c	/^SHPCreate( const char * pszLayer, int nShapeType )$/;"	f
SHPCreateLL	loader/shpopen.c	/^SHPCreateLL( const char * pszLayer, int nShapeType, SAHooks *psHooks )$/;"	f
SHPCreateObject	loader/shpopen.c	/^SHPCreateObject( int nSHPType, int nShapeId, int nParts,$/;"	f
SHPCreateSimpleObject	loader/shpopen.c	/^SHPCreateSimpleObject( int nSHPType, int nVertices,$/;"	f
SHPDUMPERCONFIG	loader/pgsql2shp-core.h	/^} SHPDUMPERCONFIG;$/;"	t	typeref:struct:shp_dumper_config
SHPDUMPERERR	loader/pgsql2shp-core.h	42;"	d
SHPDUMPERMSGLEN	loader/pgsql2shp-core.h	39;"	d
SHPDUMPEROK	loader/pgsql2shp-core.h	41;"	d
SHPDUMPERSTATE	loader/pgsql2shp-core.h	/^} SHPDUMPERSTATE;$/;"	t	typeref:struct:shp_dumper_state
SHPDUMPERWARN	loader/pgsql2shp-core.h	43;"	d
SHPDestroyObject	loader/shpopen.c	/^SHPDestroyObject( SHPObject * psShape )$/;"	f
SHPGetInfo	loader/shpopen.c	/^SHPGetInfo(SHPHandle psSHP, int * pnEntities, int * pnShapeType,$/;"	f
SHPHandle	loader/shapefil.h	/^typedef SHPInfo * SHPHandle;$/;"	t
SHPInfo	loader/shapefil.h	/^} SHPInfo;$/;"	t	typeref:struct:__anon64
SHPLOADERCONFIG	loader/shp2pgsql-core.h	/^} SHPLOADERCONFIG;$/;"	t	typeref:struct:shp_loader_config
SHPLOADERERR	loader/shp2pgsql-core.h	55;"	d
SHPLOADERMSGLEN	loader/shp2pgsql-core.h	51;"	d
SHPLOADEROK	loader/shp2pgsql-core.h	54;"	d
SHPLOADERRECDELETED	loader/shp2pgsql-core.h	59;"	d
SHPLOADERRECISNULL	loader/shp2pgsql-core.h	60;"	d
SHPLOADERSTATE	loader/shp2pgsql-core.h	/^} SHPLOADERSTATE;$/;"	t	typeref:struct:shp_loader_state
SHPLOADERWARN	loader/shp2pgsql-core.h	56;"	d
SHPObject	loader/shapefil.h	/^} SHPObject;$/;"	t	typeref:struct:__anon65
SHPOpen	loader/shpopen.c	/^SHPOpen( const char * pszLayer, const char * pszAccess )$/;"	f
SHPOpenLL	loader/shpopen.c	/^SHPOpenLL( const char * pszLayer, const char * pszAccess, SAHooks *psHooks )$/;"	f
SHPP_FIRSTRING	loader/shapefil.h	332;"	d
SHPP_INNERRING	loader/shapefil.h	331;"	d
SHPP_OUTERRING	loader/shapefil.h	330;"	d
SHPP_RING	loader/shapefil.h	333;"	d
SHPP_TRIFAN	loader/shapefil.h	329;"	d
SHPP_TRISTRIP	loader/shapefil.h	328;"	d
SHPPartTypeName	loader/shpopen.c	/^SHPPartTypeName( int nPartType )$/;"	f
SHPReadObject	loader/shpopen.c	/^SHPReadObject( SHPHandle psSHP, int hEntity )$/;"	f
SHPRewindObject	loader/shpopen.c	/^SHPRewindObject( SHPHandle hSHP, SHPObject * psObject )$/;"	f
SHPT_ARC	loader/shapefil.h	309;"	d
SHPT_ARCM	loader/shapefil.h	317;"	d
SHPT_ARCZ	loader/shapefil.h	313;"	d
SHPT_MULTIPATCH	loader/shapefil.h	320;"	d
SHPT_MULTIPOINT	loader/shapefil.h	311;"	d
SHPT_MULTIPOINTM	loader/shapefil.h	319;"	d
SHPT_MULTIPOINTZ	loader/shapefil.h	315;"	d
SHPT_NULL	loader/shapefil.h	307;"	d
SHPT_POINT	loader/shapefil.h	308;"	d
SHPT_POINTM	loader/shapefil.h	316;"	d
SHPT_POINTZ	loader/shapefil.h	312;"	d
SHPT_POLYGON	loader/shapefil.h	310;"	d
SHPT_POLYGONM	loader/shapefil.h	318;"	d
SHPT_POLYGONZ	loader/shapefil.h	314;"	d
SHPTree	loader/shapefil.h	/^} SHPTree;$/;"	t	typeref:struct:__anon66
SHPTreeNode	loader/shapefil.h	/^} SHPTreeNode;$/;"	t	typeref:struct:shape_tree_node
SHPTypeName	loader/shpopen.c	/^SHPTypeName( int nSHPType )$/;"	f
SHPWriteHeader	loader/shpopen.c	/^void SHPAPI_CALL SHPWriteHeader( SHPHandle psSHP )$/;"	f
SHPWriteObject	loader/shpopen.c	/^SHPWriteObject(SHPHandle psSHP, int nShapeId, SHPObject * psObject )$/;"	f
SHP_CVSID	loader/shapefil.h	222;"	d
SHP_CVSID	loader/shapefil.h	224;"	d
SHP_CVSID	loader/shapefil.h	228;"	d
SIMPLE_ID_GENERATOR	java/ejb2/src/com/geodetix/geo/ejb/GeometryBean.java	/^    private static final int SIMPLE_ID_GENERATOR = (int) System.currentTimeMillis();$/;"	f	class:GeometryBean	file:
SIZE_GET	liblwgeom/liblwgeom_internal.h	121;"	d
SIZE_SET	liblwgeom/liblwgeom_internal.h	122;"	d
SONAME	extras/template_gis/Makefile	/^SONAME:=$(shell grep "^REL_MAJOR_VERSION" ..\/..\/Version.config | cut -d= -f2)$/;"	m
SQL_TYPES	java/ejb3/src/org/postgis/hibernate/GeometryType.java	/^	 private static final int[] SQL_TYPES = { Types.BLOB };$/;"	f	class:GeometryType	file:
SRID	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    public static final int SRID = 4326;$/;"	f	class:JtsTestParser
SRID	java/jdbc/src/examples/TestBoxes.java	/^    public static final int SRID = 4326;$/;"	f	class:TestBoxes
SRID	java/jdbc/src/examples/TestParser.java	/^    public static final int SRID = 4326;$/;"	f	class:TestParser
SRIDPREFIX	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    public static final String SRIDPREFIX = "SRID=" + SRID + ";";$/;"	f	class:JtsTestParser
SRIDPREFIX	java/jdbc/src/examples/TestBoxes.java	/^    public static final String SRIDPREFIX = "SRID=" + SRID + ";";$/;"	f	class:TestBoxes
SRIDPREFIX	java/jdbc/src/examples/TestParser.java	/^    public static final String SRIDPREFIX = "SRID=" + SRID + ";";$/;"	f	class:TestParser
SRIDPREFIX	java/jdbc/src/org/postgis/PGgeometry.java	/^    public static final String SRIDPREFIX = "SRID=";$/;"	f	class:PGgeometry
SRID_LAEA_END	libpgcommon/lwgeom_transform.h	77;"	d
SRID_LAEA_START	libpgcommon/lwgeom_transform.h	74;"	d
SRID_NORTH_LAMBERT	libpgcommon/lwgeom_transform.h	56;"	d
SRID_NORTH_STEREO	libpgcommon/lwgeom_transform.h	59;"	d
SRID_NORTH_UTM_END	libpgcommon/lwgeom_transform.h	53;"	d
SRID_NORTH_UTM_START	libpgcommon/lwgeom_transform.h	50;"	d
SRID_RESERVE_OFFSET	libpgcommon/lwgeom_transform.h	44;"	d
SRID_SOUTH_LAMBERT	libpgcommon/lwgeom_transform.h	68;"	d
SRID_SOUTH_STEREO	libpgcommon/lwgeom_transform.h	71;"	d
SRID_SOUTH_UTM_END	libpgcommon/lwgeom_transform.h	65;"	d
SRID_SOUTH_UTM_START	libpgcommon/lwgeom_transform.h	62;"	d
SRID_TOK	liblwgeom/lwin_wkt_parse.c	/^     SRID_TOK = 280$/;"	e	enum:yytokentype	file:
SRID_TOK	liblwgeom/lwin_wkt_parse.c	247;"	d	file:
SRID_TOK	liblwgeom/lwin_wkt_parse.h	/^     SRID_TOK = 280$/;"	e	enum:yytokentype
SRID_TOK	liblwgeom/lwin_wkt_parse.h	88;"	d
SRID_WORLD_MERCATOR	libpgcommon/lwgeom_transform.h	47;"	d
STATISTIC_KIND_2D	postgis/gserialized_estimate.c	108;"	d	file:
STATISTIC_KIND_ND	postgis/gserialized_estimate.c	107;"	d	file:
STATISTIC_SLOT_2D	postgis/gserialized_estimate.c	110;"	d	file:
STATISTIC_SLOT_ND	postgis/gserialized_estimate.c	109;"	d	file:
STATRELATT	libpgcommon/lwgeom_pg.h	125;"	d
STRINGBUFFER	raster/loader/raster2pgsql.h	/^} STRINGBUFFER;$/;"	t	typeref:struct:stringbuffer_t
STRINGBUFFER_STARTSIZE	liblwgeom/stringbuffer.h	47;"	d
ST_AddBand	raster/scripts/plpgsql/st_addband.sql	/^CREATE OR REPLACE FUNCTION ST_AddBand(rast1 raster, rast2 raster, band int, index int)$/;"	f
ST_AddMeasure	postgis/lwgeom_functions_lrs.c	/^Datum ST_AddMeasure(PG_FUNCTION_ARGS)$/;"	f
ST_AddMeasure	postgis/lwgeom_functions_lrs.c	/^PG_FUNCTION_INFO_V1(ST_AddMeasure);$/;"	v
ST_AsRaster	raster/scripts/plpgsql/st_asraster.sql	/^CREATE OR REPLACE FUNCTION ST_AsRaster(geom geometry, rast raster, pixeltype text, nodatavalue float8, val float8) $/;"	f
ST_BuildArea	postgis/lwgeom_geos.c	/^Datum ST_BuildArea(PG_FUNCTION_ARGS)$/;"	f
ST_BuildArea	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(ST_BuildArea);$/;"	v
ST_CleanGeometry	postgis/lwgeom_geos_clean.c	/^Datum ST_CleanGeometry(PG_FUNCTION_ARGS)$/;"	f
ST_CleanGeometry	postgis/lwgeom_geos_clean.c	/^PG_FUNCTION_INFO_V1(ST_CleanGeometry);$/;"	v
ST_Clip	raster/scripts/plpgsql/st_clip.sql	/^CREATE OR REPLACE FUNCTION ST_Clip(rast raster, band int, geom geometry, nodata float8 DEFAULT null, trimraster boolean DEFAULT false) $/;"	f
ST_Clip	raster/scripts/plpgsql/st_clip.sql	/^CREATE OR REPLACE FUNCTION ST_Clip(rast raster, geom geometry, nodata float8 DEFAULT null, trimraster boolean DEFAULT false)$/;"	f
ST_Clip	raster/scripts/plpgsql/st_clip.sql	/^CREATE OR REPLACE FUNCTION ST_Clip(rast raster, x int, y int, width int, height int) $/;"	f
ST_CollectionExtract	postgis/lwgeom_functions_basic.c	/^Datum ST_CollectionExtract(PG_FUNCTION_ARGS)$/;"	f
ST_CollectionExtract	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(ST_CollectionExtract);$/;"	v
ST_CollectionHomogenize	postgis/lwgeom_functions_basic.c	/^Datum ST_CollectionHomogenize(PG_FUNCTION_ARGS)$/;"	f
ST_CollectionHomogenize	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(ST_CollectionHomogenize);$/;"	v
ST_CreateIndexRaster	raster/scripts/plpgsql/st_createindexraster.sql	/^CREATE OR REPLACE FUNCTION ST_CreateIndexRaster(rast raster, $/;"	f
ST_DelaunayTriangles	postgis/lwgeom_geos.c	/^Datum ST_DelaunayTriangles(PG_FUNCTION_ARGS)$/;"	f
ST_DelaunayTriangles	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(ST_DelaunayTriangles);$/;"	v
ST_DeleteBand	raster/scripts/plpgsql/st_deleteband.sql	/^CREATE OR REPLACE FUNCTION ST_DeleteBand(rast raster,$/;"	f
ST_Equals	postgis/lwgeom_geos.c	/^Datum ST_Equals(PG_FUNCTION_ARGS)$/;"	f
ST_Equals	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(ST_Equals);$/;"	v
ST_FlipCoordinates	postgis/lwgeom_functions_basic.c	/^Datum ST_FlipCoordinates(PG_FUNCTION_ARGS)$/;"	f
ST_FlipCoordinates	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(ST_FlipCoordinates);$/;"	v
ST_GeoHash	postgis/lwgeom_functions_basic.c	/^Datum ST_GeoHash(PG_FUNCTION_ARGS)$/;"	f
ST_GeoHash	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(ST_GeoHash);$/;"	v
ST_GeomExtent2RasterCoord	raster/scripts/plpgsql/st_geomextent2rastercoord.sql	/^CREATE OR REPLACE FUNCTION ST_GeomExtent2RasterCoord(rast raster, $/;"	f
ST_Histogram	raster/scripts/plpgsql/st_histogram.sql	/^CREATE OR REPLACE FUNCTION ST_Histogram(rast raster, band int, OUT val double precision, OUT count bigint)$/;"	f
ST_InterpolatePoint	postgis/lwgeom_functions_lrs.c	/^Datum ST_InterpolatePoint(PG_FUNCTION_ARGS)$/;"	f
ST_InterpolatePoint	postgis/lwgeom_functions_lrs.c	/^PG_FUNCTION_INFO_V1(ST_InterpolatePoint);$/;"	v
ST_IsCollection	postgis/lwgeom_functions_basic.c	/^Datum ST_IsCollection(PG_FUNCTION_ARGS)$/;"	f
ST_IsCollection	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(ST_IsCollection);$/;"	v
ST_LineCrossingDirection	postgis/lwgeom_functions_analytic.c	/^Datum ST_LineCrossingDirection(PG_FUNCTION_ARGS)$/;"	f
ST_LineCrossingDirection	postgis/lwgeom_functions_analytic.c	/^PG_FUNCTION_INFO_V1(ST_LineCrossingDirection);$/;"	v
ST_LocateAlong	postgis/lwgeom_functions_lrs.c	/^Datum ST_LocateAlong(PG_FUNCTION_ARGS)$/;"	f
ST_LocateAlong	postgis/lwgeom_functions_lrs.c	/^PG_FUNCTION_INFO_V1(ST_LocateAlong);$/;"	v
ST_LocateBetween	postgis/lwgeom_functions_lrs.c	/^Datum ST_LocateBetween(PG_FUNCTION_ARGS)$/;"	f
ST_LocateBetween	postgis/lwgeom_functions_lrs.c	/^PG_FUNCTION_INFO_V1(ST_LocateBetween);$/;"	v
ST_LocateBetweenElevations	postgis/lwgeom_functions_lrs.c	/^Datum ST_LocateBetweenElevations(PG_FUNCTION_ARGS)$/;"	f
ST_LocateBetweenElevations	postgis/lwgeom_functions_lrs.c	/^PG_FUNCTION_INFO_V1(ST_LocateBetweenElevations);$/;"	v
ST_MakeEnvelope	postgis/lwgeom_functions_basic.c	/^Datum ST_MakeEnvelope(PG_FUNCTION_ARGS)$/;"	f
ST_MakeEnvelope	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(ST_MakeEnvelope);$/;"	v
ST_MakeValid	postgis/lwgeom_geos_clean.c	/^Datum ST_MakeValid(PG_FUNCTION_ARGS)$/;"	f
ST_MakeValid	postgis/lwgeom_geos_clean.c	/^PG_FUNCTION_INFO_V1(ST_MakeValid);$/;"	v
ST_MapAlgebra	raster/scripts/plpgsql/st_mapalgebra.sql	/^CREATE OR REPLACE FUNCTION ST_MapAlgebra(rast raster, band integer, expression text, nodatavalueexpr text, pixeltype text) $/;"	f
ST_MapAlgebra	raster/scripts/plpgsql/st_mapalgebra.sql	/^CREATE OR REPLACE FUNCTION ST_MapAlgebra(rast1 raster, $/;"	f
ST_MapAlgebra2	raster/scripts/plpgsql/st_mapalgebra_optimized.sql	/^CREATE OR REPLACE FUNCTION ST_MapAlgebra2(rast1 raster, $/;"	f
ST_MapAlgebraFctNgb	raster/scripts/plpgsql/st_mapalgebrafctngb.sql	/^CREATE OR REPLACE FUNCTION ST_MapAlgebraFctNgb(rast raster, band integer, pixeltype text, ngbwidth integer, ngbheight integer, userfunction text, nodatamode text, variadic args text[]) $/;"	f
ST_MinPossibleValue	raster/scripts/plpgsql/st_mapalgebrafctngb.sql	/^CREATE OR REPLACE FUNCTION ST_MinPossibleValue(pixeltype text)$/;"	f
ST_MultiBandMapAlgebra	raster/scripts/plpgsql/st_multibandmapalgebra.sql	/^CREATE OR REPLACE FUNCTION ST_MultiBandMapAlgebra(rast1 raster, $/;"	f
ST_Node	postgis/lwgeom_geos.c	/^Datum ST_Node(PG_FUNCTION_ARGS)$/;"	f
ST_Node	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(ST_Node);$/;"	v
ST_Nullage	raster/test/regress/rt_mapalgebrafctngb.sql	/^CREATE OR REPLACE FUNCTION ST_Nullage(matrix float[][], nodatamode text, VARIADIC args text[])$/;"	f
ST_Nullage	raster/test/regress/rt_mapalgebrafctngb_userfunc.sql	/^CREATE OR REPLACE FUNCTION ST_Nullage(matrix float[][], nodatamode text, VARIADIC args text[])$/;"	f
ST_OffsetCurve	postgis/lwgeom_geos.c	/^Datum ST_OffsetCurve(PG_FUNCTION_ARGS)$/;"	f
ST_OffsetCurve	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(ST_OffsetCurve);$/;"	v
ST_PixelAsPoints	raster/scripts/plpgsql/st_pixelaspoints.sql	/^CREATE FUNCTION ST_PixelAsPoints(raster) RETURNS SETOF geomvalxy AS $/;"	f
ST_PixelAsPoints	raster/scripts/plpgsql/st_pixelaspoints.sql	/^CREATE OR REPLACE FUNCTION ST_PixelAsPoints(rast raster, band integer) $/;"	f
ST_PixelAsPolygons	raster/scripts/plpgsql/st_pixelaspolygons.sql	/^CREATE FUNCTION ST_PixelAsPolygons(raster) RETURNS SETOF geomvalxy AS $/;"	f
ST_PixelAsPolygons	raster/scripts/plpgsql/st_pixelaspolygons.sql	/^CREATE OR REPLACE FUNCTION ST_PixelAsPolygons(rast raster, band integer) $/;"	f
ST_QueryTables	raster/scripts/plpgsql/st_querytables.sql	/^CREATE OR REPLACE FUNCTION ST_QueryTables(schemaname text, prefix text, inquery text)$/;"	f
ST_Reclass	raster/scripts/plpgsql/st_reclass.sql	/^CREATE OR REPLACE FUNCTION ST_Reclass(rast raster,$/;"	f
ST_RelateMatch	postgis/lwgeom_geos_relatematch.c	/^Datum ST_RelateMatch(PG_FUNCTION_ARGS)$/;"	f
ST_RelateMatch	postgis/lwgeom_geos_relatematch.c	/^PG_FUNCTION_INFO_V1(ST_RelateMatch);$/;"	v
ST_RemoveRepeatedPoints	postgis/lwgeom_functions_basic.c	/^Datum ST_RemoveRepeatedPoints(PG_FUNCTION_ARGS)$/;"	f
ST_RemoveRepeatedPoints	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(ST_RemoveRepeatedPoints);$/;"	v
ST_SameAlignment	raster/scripts/plpgsql/st_mapalgebra.sql	/^CREATE OR REPLACE FUNCTION ST_SameAlignment(rast1 raster, rast2 raster)$/;"	f
ST_SameAlignment	raster/scripts/plpgsql/st_mapalgebra.sql	/^CREATE OR REPLACE FUNCTION ST_SameAlignment(rast1ulx float8, $/;"	f
ST_SetArea	raster/scripts/plpgsql/st_setarray.sql	/^CREATE OR REPLACE FUNCTION ST_SetArea(rast raster, band, x int, y int, width int, height int, val float8)$/;"	f
ST_SetValues	raster/scripts/plpgsql/st_setvalues.sql	/^CREATE OR REPLACE FUNCTION ST_SetValues(rast raster, band int, x int, y int, width int, height int, val float8, keepdestnodata boolean)$/;"	f
ST_SetValues	raster/scripts/plpgsql/st_setvalues.sql	/^CREATE OR REPLACE FUNCTION ST_SetValues(rast raster, x int, y int, width int, height int, val float8, keepdestnodata boolean)$/;"	f
ST_SetValues	raster/scripts/plpgsql/st_setvalues.sql	/^CREATE OR REPLACE FUNCTION ST_SetValues(rast1 raster, band1 int, x int, y int, width int, height int, rast2 raster, band2 int, keepdestnodata boolean, keepsourcenodata boolean)$/;"	f
ST_SetValues	raster/scripts/plpgsql/st_setvalues.sql	/^CREATE OR REPLACE FUNCTION ST_SetValues(rast1 raster, x int, y int, width int, height int, rast2 raster, keepdestnodata boolean, keepsourcenodata boolean)$/;"	f
ST_SharedPaths	postgis/lwgeom_geos.c	/^Datum ST_SharedPaths(PG_FUNCTION_ARGS)$/;"	f
ST_SharedPaths	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(ST_SharedPaths);$/;"	v
ST_Snap	postgis/lwgeom_geos.c	/^Datum ST_Snap(PG_FUNCTION_ARGS)$/;"	f
ST_Snap	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(ST_Snap);$/;"	v
ST_Split	postgis/lwgeom_geos.c	/^Datum ST_Split(PG_FUNCTION_ARGS)$/;"	f
ST_Split	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(ST_Split);$/;"	v
ST_SplitTable	raster/scripts/plpgsql/st_splittable.sql	/^CREATE OR REPLACE FUNCTION ST_SplitTable(sourcetablename text, targettableschema text, targettableprefix text, suffixcolumnname text)$/;"	f
ST_Sum	raster/scripts/plpgsql/st_mapalgebrafctngb.sql	/^CREATE OR REPLACE FUNCTION ST_Sum(matrix float[][], nodatamode text, variadic args text[])$/;"	f
ST_TestRaster	raster/scripts/plpgsql/st_mapalgebra.sql	/^CREATE OR REPLACE FUNCTION ST_TestRaster(val float8) $/;"	f
ST_TestRaster	raster/scripts/plpgsql/st_mapalgebra_optimized.sql	/^CREATE OR REPLACE FUNCTION ST_TestRaster(ulx float8, uly float8, val float8) $/;"	f
ST_TestRaster	raster/scripts/plpgsql/st_mapalgebrafctngb.sql	/^CREATE OR REPLACE FUNCTION ST_TestRaster(h integer, w integer, val float8) $/;"	f
ST_TestRaster	raster/scripts/plpgsql/st_summarystatsagg.sql	/^CREATE OR REPLACE FUNCTION ST_TestRaster(h integer, w integer, val float8) $/;"	f
ST_TestRaster	raster/scripts/plpgsql/st_tile.sql	/^CREATE OR REPLACE FUNCTION ST_TestRaster(ulx float8, uly float8, val float8) $/;"	f
ST_TestRaster	raster/test/regress/rt_mapalgebra_expr.sql	/^CREATE OR REPLACE FUNCTION ST_TestRaster(ulx float8, uly float8, val float8) $/;"	f
ST_TestRaster	raster/test/regress/rt_mapalgebraexpr.sql	/^CREATE OR REPLACE FUNCTION ST_TestRaster(ulx float8, uly float8, val float8) $/;"	f
ST_TestRaster	raster/test/regress/rt_mapalgebrafct.sql	/^CREATE OR REPLACE FUNCTION ST_TestRaster(ulx float8, uly float8, val float8) $/;"	f
ST_TestRasterNgb	raster/test/regress/rt_mapalgebrafctngb.sql	/^CREATE OR REPLACE FUNCTION ST_TestRasterNgb(h integer, w integer, val float8) $/;"	f
ST_TestRasterNgb	raster/test/regress/rt_mapalgebrafctngb_userfunc.sql	/^CREATE OR REPLACE FUNCTION ST_TestRasterNgb(h integer, w integer, val float8) $/;"	f
ST_TestRotatedRaster	raster/scripts/plpgsql/st_mapalgebra.sql	/^CREATE OR REPLACE FUNCTION ST_TestRotatedRaster(ulx float8, uly float8) $/;"	f
ST_Tile	raster/scripts/plpgsql/st_tile.sql	/^CREATE OR REPLACE FUNCTION ST_Tile(rast raster, width integer, height integer, padwithnodata boolean DEFAULT FALSE, nodatavalue double precision DEFAULT NULL) $/;"	f
ST_TileAsGeom	raster/scripts/plpgsql/st_tile.sql	/^CREATE OR REPLACE FUNCTION ST_TileAsGeom(rast raster, width integer, height integer, padwithnodata boolean DEFAULT FALSE) $/;"	f
ST_UnaryUnion	postgis/lwgeom_geos.c	/^Datum ST_UnaryUnion(PG_FUNCTION_ARGS)$/;"	f
ST_UnaryUnion	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(ST_UnaryUnion);$/;"	v
SUBDIRS	java/Makefile	/^SUBDIRS = jdbc$/;"	m
SUBSTITUTE	extras/template_gis/Makefile	/^SUBSTITUTE=-e s!@bindir@!$(SUBBINDIR)!g \\$/;"	m
SUMMARY	raster/scripts/python/raster2pgsql.py	/^SUMMARY = []$/;"	v
SURNAME	java/ejb3/src/org/postgis/ejb/mdb/IngestMDB.java	/^	public static final String SURNAME = "SURNAME";$/;"	f	class:IngestMDB
SWAP	raster/rt_core/rt_statistics.c	38;"	d	file:
SearchBox	doc/html/search/search.js	/^function SearchBox(name, resultsPath, inFrame, label)$/;"	c
SearchBox.Activate	doc/html/search/search.js	/^  this.Activate = function(isActive)$/;"	m
SearchBox.CloseResultsWindow	doc/html/search/search.js	/^  this.CloseResultsWindow = function()$/;"	m
SearchBox.CloseSelectionWindow	doc/html/search/search.js	/^  this.CloseSelectionWindow = function()$/;"	m
SearchBox.DOMPopupSearchResults	doc/html/search/search.js	/^  this.DOMPopupSearchResults = function()$/;"	m
SearchBox.DOMPopupSearchResultsWindow	doc/html/search/search.js	/^  this.DOMPopupSearchResultsWindow = function()$/;"	m
SearchBox.DOMSearchBox	doc/html/search/search.js	/^  this.DOMSearchBox = function()$/;"	m
SearchBox.DOMSearchClose	doc/html/search/search.js	/^  this.DOMSearchClose = function()$/;"	m
SearchBox.DOMSearchField	doc/html/search/search.js	/^  this.DOMSearchField = function()$/;"	m
SearchBox.DOMSearchSelect	doc/html/search/search.js	/^  this.DOMSearchSelect = function()$/;"	m
SearchBox.DOMSearchSelectWindow	doc/html/search/search.js	/^  this.DOMSearchSelectWindow = function()$/;"	m
SearchBox.OnSearchFieldChange	doc/html/search/search.js	/^  this.OnSearchFieldChange = function(evt)$/;"	m
SearchBox.OnSearchFieldFocus	doc/html/search/search.js	/^  this.OnSearchFieldFocus = function(isActive)$/;"	m
SearchBox.OnSearchSelectHide	doc/html/search/search.js	/^  this.OnSearchSelectHide = function()$/;"	m
SearchBox.OnSearchSelectKey	doc/html/search/search.js	/^  this.OnSearchSelectKey = function(evt)$/;"	m
SearchBox.OnSearchSelectShow	doc/html/search/search.js	/^  this.OnSearchSelectShow = function()$/;"	m
SearchBox.OnSelectItem	doc/html/search/search.js	/^  this.OnSelectItem = function(id)$/;"	m
SearchBox.Search	doc/html/search/search.js	/^  this.Search = function()$/;"	m
SearchBox.SelectItemCount	doc/html/search/search.js	/^  this.SelectItemCount = function(id)$/;"	m
SearchBox.SelectItemSet	doc/html/search/search.js	/^  this.SelectItemSet = function(id)$/;"	m
SearchResults	doc/html/search/search.js	/^function SearchResults(name)$/;"	c
SearchResults.FindChildElement	doc/html/search/search.js	/^    this.FindChildElement = function(id)$/;"	m
SearchResults.Nav	doc/html/search/search.js	/^    this.Nav = function(evt,itemIndex) $/;"	m
SearchResults.NavChild	doc/html/search/search.js	/^    this.NavChild = function(evt,itemIndex,childIndex)$/;"	m
SearchResults.NavNext	doc/html/search/search.js	/^    this.NavNext = function(index)$/;"	m
SearchResults.NavPrev	doc/html/search/search.js	/^    this.NavPrev = function(index)$/;"	m
SearchResults.ProcessKeys	doc/html/search/search.js	/^    this.ProcessKeys = function(e)$/;"	m
SearchResults.Search	doc/html/search/search.js	/^    this.Search = function(search)$/;"	m
SearchResults.Toggle	doc/html/search/search.js	/^    this.Toggle = function(id)$/;"	m
SetPROJ4LibPath	libpgcommon/lwgeom_transform.c	/^void SetPROJ4LibPath(void)$/;"	f
SetSearchPathForInstall	extras/tiger_geocoder/tiger_2011/utility/set_search_path.sql	/^CREATE OR REPLACE FUNCTION tiger.SetSearchPathForInstall(a_schema_name varchar)$/;"	f
SfRealloc	loader/dbfopen.c	/^static void * SfRealloc( void * pMem, int nNewSize )$/;"	f	file:
SfRealloc	loader/shpopen.c	/^static void * SfRealloc( void * pMem, int nNewSize )$/;"	f	file:
ShapeBinaryParser	java/jdbc/src/org/postgis/java2d/ShapeBinaryParser.java	/^public class ShapeBinaryParser {$/;"	c
ShpDumperCloseTable	loader/pgsql2shp-core.c	/^ShpDumperCloseTable(SHPDUMPERSTATE *state)$/;"	f
ShpDumperConnectDatabase	loader/pgsql2shp-core.c	/^ShpDumperConnectDatabase(SHPDUMPERSTATE *state)$/;"	f
ShpDumperCreate	loader/pgsql2shp-core.c	/^ShpDumperCreate(SHPDUMPERCONFIG *config)$/;"	f
ShpDumperDestroy	loader/pgsql2shp-core.c	/^ShpDumperDestroy(SHPDUMPERSTATE *state)$/;"	f
ShpDumperGetConnectionStringFromConn	loader/pgsql2shp-core.c	/^ShpDumperGetConnectionStringFromConn(SHPCONNECTIONCONFIG *conn)$/;"	f
ShpDumperGetRecordCount	loader/pgsql2shp-core.c	/^ShpDumperGetRecordCount(SHPDUMPERSTATE *state)$/;"	f
ShpDumperOpenTable	loader/pgsql2shp-core.c	/^ShpDumperOpenTable(SHPDUMPERSTATE *state)$/;"	f
ShpLoaderCreate	loader/shp2pgsql-core.c	/^ShpLoaderCreate(SHPLOADERCONFIG *config)$/;"	f
ShpLoaderDestroy	loader/shp2pgsql-core.c	/^ShpLoaderDestroy(SHPLOADERSTATE *state)$/;"	f
ShpLoaderGenerateSQLRowStatement	loader/shp2pgsql-core.c	/^ShpLoaderGenerateSQLRowStatement(SHPLOADERSTATE *state, int item, char **strrecord)$/;"	f
ShpLoaderGenerateShapeRow	loader/pgsql2shp-core.c	/^int ShpLoaderGenerateShapeRow(SHPDUMPERSTATE *state)$/;"	f
ShpLoaderGetRecordCount	loader/shp2pgsql-core.c	/^ShpLoaderGetRecordCount(SHPLOADERSTATE *state)$/;"	f
ShpLoaderGetSQLCopyStatement	loader/shp2pgsql-core.c	/^ShpLoaderGetSQLCopyStatement(SHPLOADERSTATE *state, char **strheader)$/;"	f
ShpLoaderGetSQLFooter	loader/shp2pgsql-core.c	/^ShpLoaderGetSQLFooter(SHPLOADERSTATE *state, char **strfooter)$/;"	f
ShpLoaderGetSQLHeader	loader/shp2pgsql-core.c	/^ShpLoaderGetSQLHeader(SHPLOADERSTATE *state, char **strheader)$/;"	f
ShpLoaderOpenShape	loader/shp2pgsql-core.c	/^ShpLoaderOpenShape(SHPLOADERSTATE *state)$/;"	f
SplitInterval	postgis/gserialized_gist_2d.c	/^} SplitInterval;$/;"	t	typeref:struct:__anon19	file:
StringByteGetter	java/jdbc/src/org/postgis/binary/ByteGetter.java	/^        public StringByteGetter(String rep) {$/;"	m	class:ByteGetter.StringByteGetter
StringByteGetter	java/jdbc/src/org/postgis/binary/ByteGetter.java	/^    public static class StringByteGetter extends ByteGetter {$/;"	c	class:ByteGetter
StringByteSetter	java/jdbc/src/org/postgis/binary/ByteSetter.java	/^        public StringByteSetter(int length) {$/;"	m	class:ByteSetter.StringByteSetter
StringByteSetter	java/jdbc/src/org/postgis/binary/ByteSetter.java	/^    public static class StringByteSetter extends ByteSetter {$/;"	c	class:ByteSetter
SwapWord	loader/shpopen.c	/^static void	SwapWord( int length, void * wordP )$/;"	f	file:
TABLECHOOSER_GEOCOL_COMBO_COLUMNS	loader/shp2pgsql-gui.c	/^	TABLECHOOSER_GEOCOL_COMBO_COLUMNS$/;"	e	enum:__anon61	file:
TABLECHOOSER_GEOCOL_COMBO_TEXT	loader/shp2pgsql-gui.c	/^	TABLECHOOSER_GEOCOL_COMBO_TEXT,$/;"	e	enum:__anon61	file:
TABLECHOOSER_GEO_COLUMN	loader/shp2pgsql-gui.c	/^	TABLECHOOSER_GEO_COLUMN,$/;"	e	enum:__anon60	file:
TABLECHOOSER_GEO_LISTSTORE_COLUMN	loader/shp2pgsql-gui.c	/^	TABLECHOOSER_GEO_LISTSTORE_COLUMN,$/;"	e	enum:__anon60	file:
TABLECHOOSER_HASGEO_COLUMN	loader/shp2pgsql-gui.c	/^	TABLECHOOSER_HASGEO_COLUMN,$/;"	e	enum:__anon60	file:
TABLECHOOSER_N_COLUMNS	loader/shp2pgsql-gui.c	/^	TABLECHOOSER_N_COLUMNS$/;"	e	enum:__anon60	file:
TABLECHOOSER_SCHEMA_COLUMN	loader/shp2pgsql-gui.c	/^	TABLECHOOSER_SCHEMA_COLUMN,$/;"	e	enum:__anon60	file:
TABLECHOOSER_TABLE_COLUMN	loader/shp2pgsql-gui.c	/^	TABLECHOOSER_TABLE_COLUMN,$/;"	e	enum:__anon60	file:
TEST	regress/regress.sql	/^create table TEST(a GEOMETRY, b GEOMETRY);$/;"	t
TEST	regress/sfcgal/regress.sql	/^create table TEST(a GEOMETRY, b GEOMETRY);$/;"	t
TEST.a	regress/regress.sql	/^create table TEST(a GEOMETRY, b GEOMETRY);$/;"	F
TEST.a	regress/sfcgal/regress.sql	/^create table TEST(a GEOMETRY, b GEOMETRY);$/;"	F
TEST.b	regress/regress.sql	/^create table TEST(a GEOMETRY, b GEOMETRY);$/;"	F
TEST.b	regress/sfcgal/regress.sql	/^create table TEST(a GEOMETRY, b GEOMETRY);$/;"	F
TESTDB	extras/ogc_test_suite/Makefile	/^TESTDB=ogc_test_suite$/;"	m
THEDB	extras/tiger_geocoder/tiger_2011/create_geocode.bat	/^set THEDB=geocoder$/;"	v
THEDB	extras/tiger_geocoder/tiger_2011/upgrade_geocoder.bat	/^set THEDB=geocoder$/;"	v
TIN_TOK	liblwgeom/lwin_wkt_parse.c	/^     TIN_TOK = 276,$/;"	e	enum:yytokentype	file:
TIN_TOK	liblwgeom/lwin_wkt_parse.c	243;"	d	file:
TIN_TOK	liblwgeom/lwin_wkt_parse.h	/^     TIN_TOK = 276,$/;"	e	enum:yytokentype
TIN_TOK	liblwgeom/lwin_wkt_parse.h	84;"	d
TRIANGLE_TOK	liblwgeom/lwin_wkt_parse.c	/^     TRIANGLE_TOK = 275,$/;"	e	enum:yytokentype	file:
TRIANGLE_TOK	liblwgeom/lwin_wkt_parse.c	242;"	d	file:
TRIANGLE_TOK	liblwgeom/lwin_wkt_parse.h	/^     TRIANGLE_TOK = 275,$/;"	e	enum:yytokentype
TRIANGLE_TOK	liblwgeom/lwin_wkt_parse.h	83;"	d
TRIM_DBF_WHITESPACE	loader/shapefil.h	160;"	d
TRUE	extras/wkb_reader/wkbtest.h	15;"	d
TRUE	loader/dbfopen.c	170;"	d	file:
TRUE	loader/shpopen.c	279;"	d	file:
TWKBFromLWGEOM	postgis/lwgeom_inout.c	/^Datum TWKBFromLWGEOM(PG_FUNCTION_ARGS)$/;"	f
TWKBFromLWGEOM	postgis/lwgeom_inout.c	/^PG_FUNCTION_INFO_V1(TWKBFromLWGEOM);$/;"	v
TYPE_DIM_SET_DIM	liblwgeom/lwout_twkb.h	37;"	d
TYPE_DIM_SET_TYPE	liblwgeom/lwout_twkb.h	36;"	d
Test	java/jdbc/src/examples/Test.java	/^public class Test {$/;"	c
TestAutoregister	java/jdbc/src/examples/TestAutoregister.java	/^public class TestAutoregister {$/;"	c
TestBoxes	java/jdbc/src/examples/TestBoxes.java	/^public class TestBoxes {$/;"	c
TestJava2d	java/jdbc/src/examples/TestJava2d.java	/^public class TestJava2d {$/;"	c
TestParser	java/jdbc/src/examples/TestParser.java	/^public class TestParser {$/;"	c
TestServer	java/jdbc/src/examples/TestServer.java	/^public class TestServer {$/;"	c
TypesAdder	java/jdbc/src/org/postgis/DriverWrapper.java	/^    protected abstract static class TypesAdder {$/;"	c	class:DriverWrapper
TypesAdder72	java/jdbc/src/org/postgis/DriverWrapper.java	/^    protected static class TypesAdder72 extends TypesAdder {$/;"	c	class:DriverWrapper
TypesAdder74	java/jdbc/src/org/postgis/DriverWrapper.java	/^    protected static final class TypesAdder74 extends TypesAdder {$/;"	c	class:DriverWrapper
TypesAdder80	java/jdbc/src/org/postgis/DriverWrapper.java	/^    protected static class TypesAdder80 extends TypesAdder {$/;"	c	class:DriverWrapper
UINT16_MAX	liblwgeom/lwin_wkt_lex.c	101;"	d	file:
UINT32_MAX	liblwgeom/lwin_wkt_lex.c	104;"	d	file:
UINT8_MAX	liblwgeom/lwin_wkt_lex.c	98;"	d	file:
UNIX	raster/rt_core/librtcore.h	105;"	d
UNIX	raster/rt_core/librtcore.h	68;"	d
UNIX	raster/rt_core/librtcore.h	78;"	d
UNIX	raster/rt_core/librtcore.h	99;"	d
UNKNOWN_SRID	java/jdbc/src/org/postgis/Geometry.java	/^	public final static int UNKNOWN_SRID = 0;$/;"	f	class:Geometry
UPGRADEABLE_VERSIONS	extensions/upgradeable_versions.mk	/^UPGRADEABLE_VERSIONS = \\$/;"	m
USE_VERSION	extras/WFS_locks/Makefile	/^				USE_VERSION=74$/;"	m
USE_VERSION	extras/WFS_locks/Makefile	/^				USE_VERSION=80$/;"	m
USE_VERSION	extras/WFS_locks/Makefile	/^			USE_VERSION=73$/;"	m
USE_VERSION	extras/WFS_locks/Makefile	/^		USE_VERSION=72$/;"	m
USE_VERSION	extras/WFS_locks/Makefile	/^	USE_VERSION=71$/;"	m
UTF8_BAD_RESULT	loader/shp2pgsql-core.c	118;"	d	file:
UTF8_GOOD_RESULT	loader/shp2pgsql-core.c	117;"	d	file:
UTF8_NO_RESULT	loader/shp2pgsql-core.c	119;"	d	file:
UT_COUNT	raster/rt_pg/rtpg_mapalgebra.c	/^	UT_COUNT,$/;"	e	enum:__anon54	file:
UT_FIRST	raster/rt_pg/rtpg_mapalgebra.c	/^	UT_FIRST,$/;"	e	enum:__anon54	file:
UT_LAST	raster/rt_pg/rtpg_mapalgebra.c	/^	UT_LAST = 0,$/;"	e	enum:__anon54	file:
UT_MAX	raster/rt_pg/rtpg_mapalgebra.c	/^	UT_MAX,$/;"	e	enum:__anon54	file:
UT_MEAN	raster/rt_pg/rtpg_mapalgebra.c	/^	UT_MEAN,$/;"	e	enum:__anon54	file:
UT_MIN	raster/rt_pg/rtpg_mapalgebra.c	/^	UT_MIN,$/;"	e	enum:__anon54	file:
UT_RANGE	raster/rt_pg/rtpg_mapalgebra.c	/^	UT_RANGE$/;"	e	enum:__anon54	file:
UT_SUM	raster/rt_pg/rtpg_mapalgebra.c	/^	UT_SUM,$/;"	e	enum:__anon54	file:
UpperLeftX	raster/rt_core/librtcore.h	/^	double UpperLeftX;$/;"	m	struct:__anon34
UpperLeftY	raster/rt_core/librtcore.h	/^	double UpperLeftY;$/;"	m	struct:__anon34
Usage	regress/run_test.pl	/^Usage: $0 <testname> [<testname>]$/;"	l
Usage	utils/postgis_restore.pl.in	/^Usage:	$me [-v] [-s schema] <dumpfile>$/;"	l
UserBean	java/ejb3/src/org/postgis/ejb/UserBean.java	/^public class UserBean implements UserBeanRemote{$/;"	c
UserBeanRemote	java/ejb3/src/org/postgis/ejb/UserBeanRemote.java	/^public interface UserBeanRemote {$/;"	i
Utf8ToWideChar	loader/safileio.c	/^const wchar_t* Utf8ToWideChar( const char *pszFilename )$/;"	f
VECTOR3D	liblwgeom/measures3d.h	/^VECTOR3D; $/;"	t	typeref:struct:__anon32
VECTORLENGTH	liblwgeom/measures3d.h	17;"	d
VERBOSE	raster/scripts/python/raster2pgsql.py	/^VERBOSE = False$/;"	v
VERBOSE	raster/scripts/python/rtrowdump.py	/^    VERBOSE = opts.verbose$/;"	v
ValueGetter	java/jdbc/src/org/postgis/binary/ValueGetter.java	/^    public ValueGetter(ByteGetter data, byte endian) {$/;"	m	class:ValueGetter
ValueGetter	java/jdbc/src/org/postgis/binary/ValueGetter.java	/^public abstract class ValueGetter {$/;"	c
ValueSetter	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^    public ValueSetter(ByteSetter data, byte endian) {$/;"	m	class:ValueSetter
ValueSetter	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^public abstract class ValueSetter {$/;"	c
Version	java/jdbc/src/org/postgis/Version.java	/^public class Version {$/;"	c
VersionPrinter	java/jdbc/src/examples/VersionPrinter.java	/^public class VersionPrinter {$/;"	c
WIN32	raster/rt_core/librtcore.h	90;"	d
WIN32_LEAN_AND_MEAN	loader/safileio.c	72;"	d	file:
WKBFromLWGEOM	postgis/lwgeom_inout.c	/^Datum WKBFromLWGEOM(PG_FUNCTION_ARGS)$/;"	f
WKBFromLWGEOM	postgis/lwgeom_inout.c	/^PG_FUNCTION_INFO_V1(WKBFromLWGEOM);$/;"	v
WKBMOFFSET	extras/wkb_reader/printwkb.c	6;"	d	file:
WKBZOFFSET	extras/wkb_reader/printwkb.c	5;"	d	file:
WKB_BYTE_SIZE	liblwgeom/liblwgeom_internal.h	93;"	d
WKB_CIRCULARSTRING_TYPE	liblwgeom/liblwgeom_internal.h	105;"	d
WKB_COMPOUNDCURVE_TYPE	liblwgeom/liblwgeom_internal.h	106;"	d
WKB_CURVEPOLYGON_TYPE	liblwgeom/liblwgeom_internal.h	107;"	d
WKB_CURVE_TYPE	liblwgeom/liblwgeom_internal.h	110;"	d
WKB_DOUBLE_SIZE	liblwgeom/liblwgeom_internal.h	91;"	d
WKB_GEOMETRYCOLLECTION_TYPE	liblwgeom/liblwgeom_internal.h	104;"	d
WKB_INT_SIZE	liblwgeom/liblwgeom_internal.h	92;"	d
WKB_LINESTRING_TYPE	liblwgeom/liblwgeom_internal.h	99;"	d
WKB_MULTICURVE_TYPE	liblwgeom/liblwgeom_internal.h	108;"	d
WKB_MULTILINESTRING_TYPE	liblwgeom/liblwgeom_internal.h	102;"	d
WKB_MULTIPOINT_TYPE	liblwgeom/liblwgeom_internal.h	101;"	d
WKB_MULTIPOLYGON_TYPE	liblwgeom/liblwgeom_internal.h	103;"	d
WKB_MULTISURFACE_TYPE	liblwgeom/liblwgeom_internal.h	109;"	d
WKB_NO_ID	liblwgeom/lwout_twkb.h	40;"	d
WKB_NO_TYPE	liblwgeom/lwout_twkb.h	41;"	d
WKB_POINT_TYPE	liblwgeom/liblwgeom_internal.h	98;"	d
WKB_POLYGON_TYPE	liblwgeom/liblwgeom_internal.h	100;"	d
WKB_POLYHEDRALSURFACE_TYPE	liblwgeom/liblwgeom_internal.h	112;"	d
WKB_SURFACE_TYPE	liblwgeom/liblwgeom_internal.h	111;"	d
WKB_TIN_TYPE	liblwgeom/liblwgeom_internal.h	113;"	d
WKB_TRIANGLE_TYPE	liblwgeom/liblwgeom_internal.h	114;"	d
WKT_ERROR	liblwgeom/lwin_wkt_parse.c	166;"	d	file:
WKT_IS_CHILD	liblwgeom/liblwgeom_internal.h	85;"	d
WKT_NO_PARENS	liblwgeom/liblwgeom_internal.h	84;"	d
WKT_NO_TYPE	liblwgeom/liblwgeom_internal.h	83;"	d
WKT_PRECISION	loader/shp2pgsql-core.h	36;"	d
WithinExpression	java/ejb3/src/org/postgis/hibernate/WithinExpression.java	/^	public WithinExpression(String propertyName, Geometry geom)$/;"	m	class:WithinExpression
WithinExpression	java/ejb3/src/org/postgis/hibernate/WithinExpression.java	/^public class WithinExpression implements Criterion{$/;"	c
X1W1X2W2	raster/scripts/plpgsql/_MapAlgebraParts.sql	/^CREATE OR REPLACE FUNCTION X1W1X2W2() $/;"	f
XBASE_FLDHDR_SZ	loader/shapefil.h	538;"	d
XDR	java/jdbc/src/org/postgis/binary/ValueGetter.java	/^        public XDR(ByteGetter data) {$/;"	m	class:ValueGetter.XDR
XDR	java/jdbc/src/org/postgis/binary/ValueGetter.java	/^    public static class XDR extends ValueGetter {$/;"	c	class:ValueGetter
XDR	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^        public XDR(ByteSetter data) {$/;"	m	class:ValueSetter.XDR
XDR	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^    public static class XDR extends ValueSetter {$/;"	c	class:ValueSetter
XDR	liblwgeom/liblwgeom_internal.h	150;"	d
XDR	raster/scripts/python/raster2pgsql.py	/^XDR = 0 # Big-endian$/;"	v
XLINK_NS	postgis/lwgeom_in_gml.c	62;"	d	file:
Y1H1Y2H2	raster/scripts/plpgsql/_MapAlgebraParts.sql	/^CREATE OR REPLACE FUNCTION Y1H1Y2H2() $/;"	f
YYABORT	liblwgeom/lwin_wkt_parse.c	939;"	d	file:
YYACCEPT	liblwgeom/lwin_wkt_parse.c	938;"	d	file:
YYBACKUP	liblwgeom/lwin_wkt_parse.c	960;"	d	file:
YYBISON	liblwgeom/lwin_wkt_parse.c	44;"	d	file:
YYBISON_VERSION	liblwgeom/lwin_wkt_parse.c	47;"	d	file:
YYCASE_	liblwgeom/lwin_wkt_parse.c	1407;"	d	file:
YYCASE_	liblwgeom/lwin_wkt_parse.c	1417;"	d	file:
YYCOPY	liblwgeom/lwin_wkt_parse.c	497;"	d	file:
YYCOPY	liblwgeom/lwin_wkt_parse.c	500;"	d	file:
YYCOPY_NEEDED	liblwgeom/lwin_wkt_parse.c	472;"	d	file:
YYDEBUG	liblwgeom/lwin_wkt_parse.c	176;"	d	file:
YYDPRINTF	liblwgeom/lwin_wkt_parse.c	1039;"	d	file:
YYDPRINTF	liblwgeom/lwin_wkt_parse.c	1194;"	d	file:
YYEMPTY	liblwgeom/lwin_wkt_parse.c	935;"	d	file:
YYEOF	liblwgeom/lwin_wkt_parse.c	936;"	d	file:
YYERRCODE	liblwgeom/lwin_wkt_parse.c	978;"	d	file:
YYERROR	liblwgeom/lwin_wkt_parse.c	940;"	d	file:
YYERROR_VERBOSE	liblwgeom/lwin_wkt_parse.c	181;"	d	file:
YYERROR_VERBOSE	liblwgeom/lwin_wkt_parse.c	182;"	d	file:
YYERROR_VERBOSE	liblwgeom/lwin_wkt_parse.c	184;"	d	file:
YYFAIL	liblwgeom/lwin_wkt_parse.c	950;"	d	file:
YYFINAL	liblwgeom/lwin_wkt_parse.c	513;"	d	file:
YYFPRINTF	liblwgeom/lwin_wkt_parse.c	1036;"	d	file:
YYFREE	liblwgeom/lwin_wkt_parse.c	440;"	d	file:
YYID	liblwgeom/lwin_wkt_parse.c	/^YYID (int yyi)$/;"	f	file:
YYID	liblwgeom/lwin_wkt_parse.c	364;"	d	file:
YYINITDEPTH	liblwgeom/lwin_wkt_parse.c	1203;"	d	file:
YYLAST	liblwgeom/lwin_wkt_parse.c	515;"	d	file:
YYLEX	liblwgeom/lwin_wkt_parse.c	1026;"	d	file:
YYLEX	liblwgeom/lwin_wkt_parse.c	1028;"	d	file:
YYLLOC_DEFAULT	liblwgeom/lwin_wkt_parse.c	987;"	d	file:
YYLSP_NEEDED	liblwgeom/lwin_wkt_parse.c	62;"	d	file:
YYLTYPE	liblwgeom/lwin_wkt_parse.c	/^typedef struct YYLTYPE$/;"	s	file:
YYLTYPE	liblwgeom/lwin_wkt_parse.c	/^} YYLTYPE;$/;"	t	typeref:struct:YYLTYPE	file:
YYLTYPE	liblwgeom/lwin_wkt_parse.h	/^typedef struct YYLTYPE$/;"	s
YYLTYPE	liblwgeom/lwin_wkt_parse.h	/^} YYLTYPE;$/;"	t	typeref:struct:YYLTYPE
YYLTYPE_IS_DECLARED	liblwgeom/lwin_wkt_parse.c	285;"	d	file:
YYLTYPE_IS_DECLARED	liblwgeom/lwin_wkt_parse.h	128;"	d
YYLTYPE_IS_TRIVIAL	liblwgeom/lwin_wkt_parse.c	286;"	d	file:
YYLTYPE_IS_TRIVIAL	liblwgeom/lwin_wkt_parse.h	129;"	d
YYMALLOC	liblwgeom/lwin_wkt_parse.c	433;"	d	file:
YYMAXDEPTH	liblwgeom/lwin_wkt_parse.c	1214;"	d	file:
YYMAXUTOK	liblwgeom/lwin_wkt_parse.c	528;"	d	file:
YYNNTS	liblwgeom/lwin_wkt_parse.c	520;"	d	file:
YYNRULES	liblwgeom/lwin_wkt_parse.c	522;"	d	file:
YYNSTATES	liblwgeom/lwin_wkt_parse.c	524;"	d	file:
YYNTOKENS	liblwgeom/lwin_wkt_parse.c	518;"	d	file:
YYPACT_NINF	liblwgeom/lwin_wkt_parse.c	781;"	d	file:
YYPOPSTACK	liblwgeom/lwin_wkt_parse.c	1917;"	d	file:
YYPULL	liblwgeom/lwin_wkt_parse.c	59;"	d	file:
YYPURE	liblwgeom/lwin_wkt_parse.c	53;"	d	file:
YYPUSH	liblwgeom/lwin_wkt_parse.c	56;"	d	file:
YYRECOVERING	liblwgeom/lwin_wkt_parse.c	958;"	d	file:
YYRHSLOC	liblwgeom/lwin_wkt_parse.c	985;"	d	file:
YYSIZE_MAXIMUM	liblwgeom/lwin_wkt_parse.c	341;"	d	file:
YYSIZE_T	liblwgeom/lwin_wkt_parse.c	329;"	d	file:
YYSIZE_T	liblwgeom/lwin_wkt_parse.c	331;"	d	file:
YYSIZE_T	liblwgeom/lwin_wkt_parse.c	335;"	d	file:
YYSIZE_T	liblwgeom/lwin_wkt_parse.c	337;"	d	file:
YYSKELETON_NAME	liblwgeom/lwin_wkt_parse.c	50;"	d	file:
YYSTACK_ALLOC	liblwgeom/lwin_wkt_parse.c	387;"	d	file:
YYSTACK_ALLOC	liblwgeom/lwin_wkt_parse.c	391;"	d	file:
YYSTACK_ALLOC	liblwgeom/lwin_wkt_parse.c	396;"	d	file:
YYSTACK_ALLOC	liblwgeom/lwin_wkt_parse.c	419;"	d	file:
YYSTACK_ALLOC_MAXIMUM	liblwgeom/lwin_wkt_parse.c	416;"	d	file:
YYSTACK_ALLOC_MAXIMUM	liblwgeom/lwin_wkt_parse.c	422;"	d	file:
YYSTACK_BYTES	liblwgeom/lwin_wkt_parse.c	468;"	d	file:
YYSTACK_FREE	liblwgeom/lwin_wkt_parse.c	410;"	d	file:
YYSTACK_FREE	liblwgeom/lwin_wkt_parse.c	420;"	d	file:
YYSTACK_GAP_MAXIMUM	liblwgeom/lwin_wkt_parse.c	464;"	d	file:
YYSTACK_RELOCATE	liblwgeom/lwin_wkt_parse.c	479;"	d	file:
YYSTATE	liblwgeom/lwin_wkt_lex.c	151;"	d	file:
YYSTYPE	liblwgeom/lwin_wkt_parse.c	/^typedef union YYSTYPE$/;"	u	file:
YYSTYPE	liblwgeom/lwin_wkt_parse.c	/^} YYSTYPE;$/;"	t	typeref:union:YYSTYPE	file:
YYSTYPE	liblwgeom/lwin_wkt_parse.h	/^typedef union YYSTYPE$/;"	u
YYSTYPE	liblwgeom/lwin_wkt_parse.h	/^} YYSTYPE;$/;"	t	typeref:union:YYSTYPE
YYSTYPE_IS_DECLARED	liblwgeom/lwin_wkt_parse.c	273;"	d	file:
YYSTYPE_IS_DECLARED	liblwgeom/lwin_wkt_parse.h	114;"	d
YYSTYPE_IS_TRIVIAL	liblwgeom/lwin_wkt_parse.c	271;"	d	file:
YYSTYPE_IS_TRIVIAL	liblwgeom/lwin_wkt_parse.h	112;"	d
YYTABLES_NAME	liblwgeom/lwin_wkt_lex.c	2039;"	d	file:
YYTABLE_NINF	liblwgeom/lwin_wkt_parse.c	825;"	d	file:
YYTERROR	liblwgeom/lwin_wkt_parse.c	977;"	d	file:
YYTOKENTYPE	liblwgeom/lwin_wkt_parse.c	195;"	d	file:
YYTOKENTYPE	liblwgeom/lwin_wkt_parse.h	36;"	d
YYTOKEN_TABLE	liblwgeom/lwin_wkt_parse.c	189;"	d	file:
YYTRANSLATE	liblwgeom/lwin_wkt_parse.c	530;"	d	file:
YYUNDEFTOK	liblwgeom/lwin_wkt_parse.c	527;"	d	file:
YYUSE	liblwgeom/lwin_wkt_parse.c	357;"	d	file:
YYUSE	liblwgeom/lwin_wkt_parse.c	359;"	d	file:
YY_	liblwgeom/lwin_wkt_parse.c	347;"	d	file:
YY_	liblwgeom/lwin_wkt_parse.c	351;"	d	file:
YY_AT_BOL	liblwgeom/lwin_wkt_lex.c	350;"	d	file:
YY_BREAK	liblwgeom/lwin_wkt_lex.c	841;"	d	file:
YY_BUFFER_EOF_PENDING	liblwgeom/lwin_wkt_lex.c	266;"	d	file:
YY_BUFFER_NEW	liblwgeom/lwin_wkt_lex.c	254;"	d	file:
YY_BUFFER_NORMAL	liblwgeom/lwin_wkt_lex.c	255;"	d	file:
YY_BUFFER_STATE	liblwgeom/lwin_wkt_lex.c	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUF_SIZE	liblwgeom/lwin_wkt_lex.c	163;"	d	file:
YY_CHAR	liblwgeom/lwin_wkt_lex.c	/^typedef unsigned char YY_CHAR;$/;"	t	file:
YY_CURRENT_BUFFER	liblwgeom/lwin_wkt_lex.c	282;"	d	file:
YY_CURRENT_BUFFER_LVALUE	liblwgeom/lwin_wkt_lex.c	289;"	d	file:
YY_DECL	liblwgeom/lwin_wkt_lex.c	829;"	d	file:
YY_DECL_IS_OURS	liblwgeom/lwin_wkt_lex.c	825;"	d	file:
YY_DO_BEFORE_ACTION	liblwgeom/lwin_wkt_lex.c	378;"	d	file:
YY_END_OF_BUFFER	liblwgeom/lwin_wkt_lex.c	386;"	d	file:
YY_END_OF_BUFFER_CHAR	liblwgeom/lwin_wkt_lex.c	159;"	d	file:
YY_EXIT_FAILURE	liblwgeom/lwin_wkt_lex.c	1837;"	d	file:
YY_EXTRA_TYPE	liblwgeom/lwin_wkt_lex.c	688;"	d	file:
YY_FATAL_ERROR	liblwgeom/lwin_wkt_lex.c	816;"	d	file:
YY_FLEX_MAJOR_VERSION	liblwgeom/lwin_wkt_lex.c	29;"	d	file:
YY_FLEX_MINOR_VERSION	liblwgeom/lwin_wkt_lex.c	30;"	d	file:
YY_FLEX_SUBMINOR_VERSION	liblwgeom/lwin_wkt_lex.c	31;"	d	file:
YY_FLUSH_BUFFER	liblwgeom/lwin_wkt_lex.c	318;"	d	file:
YY_INPUT	liblwgeom/lwin_wkt_lex.c	769;"	d	file:
YY_INT_ALIGNED	liblwgeom/lwin_wkt_lex.c	5;"	d	file:
YY_LESS_LINENO	liblwgeom/lwin_wkt_lex.c	188;"	d	file:
YY_LOCATION_PRINT	liblwgeom/lwin_wkt_parse.c	1013;"	d	file:
YY_LOCATION_PRINT	liblwgeom/lwin_wkt_parse.c	1018;"	d	file:
YY_MORE_ADJ	liblwgeom/lwin_wkt_lex.c	616;"	d	file:
YY_NEW_FILE	liblwgeom/lwin_wkt_lex.c	157;"	d	file:
YY_NULL	liblwgeom/lwin_wkt_lex.c	131;"	d	file:
YY_NUM_RULES	liblwgeom/lwin_wkt_lex.c	385;"	d	file:
YY_READ_BUF_SIZE	liblwgeom/lwin_wkt_lex.c	754;"	d	file:
YY_REDUCE_PRINT	liblwgeom/lwin_wkt_parse.c	1184;"	d	file:
YY_REDUCE_PRINT	liblwgeom/lwin_wkt_parse.c	1197;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	liblwgeom/lwin_wkt_lex.c	617;"	d	file:
YY_RULE_SETUP	liblwgeom/lwin_wkt_lex.c	844;"	d	file:
YY_SC_TO_UI	liblwgeom/lwin_wkt_lex.c	138;"	d	file:
YY_SKIP_YYWRAP	liblwgeom/lwin_wkt_lex.c	355;"	d	file:
YY_STACK_PRINT	liblwgeom/lwin_wkt_parse.c	1145;"	d	file:
YY_STACK_PRINT	liblwgeom/lwin_wkt_parse.c	1196;"	d	file:
YY_START	liblwgeom/lwin_wkt_lex.c	150;"	d	file:
YY_START_STACK_INCR	liblwgeom/lwin_wkt_lex.c	811;"	d	file:
YY_STATE_BUF_SIZE	liblwgeom/lwin_wkt_lex.c	168;"	d	file:
YY_STATE_EOF	liblwgeom/lwin_wkt_lex.c	154;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	liblwgeom/lwin_wkt_lex.c	207;"	d	file:
YY_SYMBOL_PRINT	liblwgeom/lwin_wkt_parse.c	1045;"	d	file:
YY_SYMBOL_PRINT	liblwgeom/lwin_wkt_parse.c	1195;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	liblwgeom/lwin_wkt_lex.c	171;"	d	file:
YY_TYPEDEF_YY_SIZE_T	liblwgeom/lwin_wkt_lex.c	176;"	d	file:
YY_USER_ACTION	liblwgeom/lwin_wkt_lex.c	667;"	d	file:
YY_USER_ACTION	liblwgeom/lwin_wkt_lex.c	836;"	d	file:
YY_USE_CONST	liblwgeom/lwin_wkt_lex.c	112;"	d	file:
YY_USE_CONST	liblwgeom/lwin_wkt_lex.c	119;"	d	file:
_	loader/shpcommon.h	20;"	d
_	loader/shpcommon.h	23;"	d
_	raster/loader/raster2pgsql.h	33;"	d
_	raster/loader/raster2pgsql.h	36;"	d
_FILE_OFFSET_BITS	loader/shapefil.h	140;"	d
_GNU_SOURCE	liblwgeom/lwgeodetic.h	17;"	d
_LIBLWGEOM_INTERNAL_H	liblwgeom/liblwgeom_internal.h	17;"	d
_LWGEODETIC_H	liblwgeom/lwgeodetic.h	13;"	d
_LWGEODETIC_TREE_H	liblwgeom/lwgeodetic_tree.h	3;"	d
_LWGEOM_PG_H	libpgcommon/lwgeom_pg.h	16;"	d
_LWGEOM_RTREE_H	postgis/lwgeom_rtree.h	2;"	d
_MapAlgebraAllPartsGeom	raster/scripts/plpgsql/_MapAlgebraParts.sql	/^CREATE OR REPLACE FUNCTION _MapAlgebraAllPartsGeom(r1x int,$/;"	f
_MapAlgebraPartsGeom	raster/scripts/plpgsql/_MapAlgebraParts.sql	/^CREATE OR REPLACE FUNCTION _MapAlgebraPartsGeom(nx int,$/;"	f
_PGSQL_COMPAT_H	libpgcommon/pgsql_compat.h	2;"	d
_PG_fini	postgis/postgis_module.c	/^_PG_fini(void)$/;"	f
_PG_init	postgis/postgis_module.c	/^_PG_init(void)$/;"	f
_PG_init	raster/rt_pg/rtpostgis.c	/^_PG_init(void) {$/;"	f
_SHPSetBounds	loader/shpopen.c	/^static void	_SHPSetBounds( uchar * pabyRec, SHPObject * psShape )$/;"	f	file:
_STRINGBUFFER_H	liblwgeom/stringbuffer.h	40;"	d
_ST_Values	raster/scripts/plpgsql/st_histogram.sql	/^CREATE OR REPLACE FUNCTION _ST_Values(rast raster, band int, OUT val float8, OUT count int) $/;"	f
_ST_Values	raster/scripts/plpgsql/st_histogram.sql	/^CREATE OR REPLACE FUNCTION _ST_Values(rast raster, band int, geom geometry, OUT val float8, OUT count int) $/;"	f
__STDC_LIMIT_MACROS	liblwgeom/lwin_wkt_lex.c	59;"	d	file:
__cu_pgsql2shp_h__	loader/cunit/cu_pgsql2shp.h	13;"	d
__cu_shp2pgsql_h__	loader/cunit/cu_shp2pgsql.h	13;"	d
__cu_tester_h__	loader/cunit/cu_tester.h	15;"	d
__init__	raster/scripts/python/rtreader.py	/^    def __init__(self, connstr, table, column, where = ""):$/;"	m	class:RasterReader
__init__	raster/scripts/python/rtreader.py	/^    def __init__(self, msg):$/;"	m	class:RasterError
__sfcgal_init	postgis/lwgeom_sfcgal.c	/^static int __sfcgal_init = 0;$/;"	v	file:
__str__	raster/scripts/python/rtreader.py	/^    def __str__(self):$/;"	m	class:RasterError	file:
_callback_userargs	raster/test/cunit/cu_mapalgebra.c	/^typedef struct _callback_userargs_t* _callback_userargs;$/;"	t	typeref:struct:_callback_userargs_t	file:
_callback_userargs_t	raster/test/cunit/cu_mapalgebra.c	/^struct _callback_userargs_t {$/;"	s	file:
_connect	raster/scripts/python/rtreader.py	/^    def _connect(self):$/;"	m	class:RasterReader
_get_db	raster/scripts/python/rtreader.py	/^    def _get_db(self):$/;"	m	class:RasterReader
_get_height	raster/scripts/python/rtreader.py	/^    def _get_height(self):$/;"	m	class:RasterReader
_get_num_bands	raster/scripts/python/rtreader.py	/^    def _get_num_bands(self):$/;"	m	class:RasterReader
_get_pixel_types	raster/scripts/python/rtreader.py	/^    def _get_pixel_types(self):$/;"	m	class:RasterReader
_get_width	raster/scripts/python/rtreader.py	/^    def _get_width(self):$/;"	m	class:RasterReader
_gidx_float_array	libpgcommon/gserialized_gist.h	/^typedef float _gidx_float_array[sizeof(float) * 2 * 4];$/;"	t
_log	raster/scripts/python/rtreader.py	/^    def _log(self, m):$/;"	m	class:RasterReader
_postgis_add_delete_rule	extras/history_table/history_table.sql	/^CREATE OR REPLACE FUNCTION _postgis_add_delete_rule(p_schema text,p_table text,p_gid_field text) returns void as$/;"	f
_postgis_add_insert_rule	extras/history_table/history_table.sql	/^CREATE OR REPLACE FUNCTION _postgis_add_insert_rule(p_schema text,p_table text,p_gid_field text) returns void as$/;"	f
_postgis_add_update_rule	extras/history_table/history_table.sql	/^CREATE OR REPLACE FUNCTION _postgis_add_update_rule(p_schema text,p_table text,p_gid_field text) returns void as$/;"	f
_postgis_create_history_indexes	extras/history_table/history_table.sql	/^CREATE OR REPLACE FUNCTION _postgis_create_history_indexes(p_schema text, p_table text, p_geometry_field text) returns void as$/;"	f
_postgis_gserialized_joinsel	postgis/gserialized_estimate.c	/^Datum _postgis_gserialized_joinsel(PG_FUNCTION_ARGS)$/;"	f
_postgis_gserialized_joinsel	postgis/gserialized_estimate.c	/^PG_FUNCTION_INFO_V1(_postgis_gserialized_joinsel);$/;"	v
_postgis_gserialized_sel	postgis/gserialized_estimate.c	/^Datum _postgis_gserialized_sel(PG_FUNCTION_ARGS)$/;"	f
_postgis_gserialized_sel	postgis/gserialized_estimate.c	/^PG_FUNCTION_INFO_V1(_postgis_gserialized_sel);$/;"	v
_postgis_gserialized_stats	postgis/gserialized_estimate.c	/^Datum _postgis_gserialized_stats(PG_FUNCTION_ARGS)$/;"	f
_postgis_gserialized_stats	postgis/gserialized_estimate.c	/^PG_FUNCTION_INFO_V1(_postgis_gserialized_stats);$/;"	v
_query_pixel_types	raster/scripts/python/rtreader.py	/^    def _query_pixel_types(self):$/;"	m	class:RasterReader
_query_raster_size	raster/scripts/python/rtreader.py	/^    def _query_raster_size(self, dim, force = False):$/;"	m	class:RasterReader
_query_single_row	raster/scripts/python/rtreader.py	/^    def _query_single_row(self, sql):$/;"	m	class:RasterReader
_query_value	raster/scripts/python/rtreader.py	/^    def _query_value(self, band, x, y):$/;"	m	class:RasterReader
_rt_raster_geotransform_warn_offline_band	raster/rt_core/rt_raster.c	/^_rt_raster_geotransform_warn_offline_band(rt_raster raster) {$/;"	f	file:
_rti_colormap_arg	raster/rt_core/rt_mapalgebra.c	/^typedef struct _rti_colormap_arg_t* _rti_colormap_arg;$/;"	t	typeref:struct:_rti_colormap_arg_t	file:
_rti_colormap_arg_destroy	raster/rt_core/rt_mapalgebra.c	/^_rti_colormap_arg_destroy(_rti_colormap_arg arg) {$/;"	f	file:
_rti_colormap_arg_init	raster/rt_core/rt_mapalgebra.c	/^_rti_colormap_arg_init(rt_raster raster) {$/;"	f	file:
_rti_colormap_arg_t	raster/rt_core/rt_mapalgebra.c	/^struct _rti_colormap_arg_t {$/;"	s	file:
_rti_iterator_arg	raster/rt_core/rt_mapalgebra.c	/^typedef struct _rti_iterator_arg_t* _rti_iterator_arg;$/;"	t	typeref:struct:_rti_iterator_arg_t	file:
_rti_iterator_arg_callback_clean	raster/rt_core/rt_mapalgebra.c	/^_rti_iterator_arg_callback_clean(_rti_iterator_arg _param) {$/;"	f	file:
_rti_iterator_arg_callback_init	raster/rt_core/rt_mapalgebra.c	/^_rti_iterator_arg_callback_init(_rti_iterator_arg _param) {$/;"	f	file:
_rti_iterator_arg_destroy	raster/rt_core/rt_mapalgebra.c	/^_rti_iterator_arg_destroy(_rti_iterator_arg _param) {$/;"	f	file:
_rti_iterator_arg_empty_init	raster/rt_core/rt_mapalgebra.c	/^_rti_iterator_arg_empty_init(_rti_iterator_arg _param) {$/;"	f	file:
_rti_iterator_arg_init	raster/rt_core/rt_mapalgebra.c	/^_rti_iterator_arg_init() {$/;"	f	file:
_rti_iterator_arg_populate	raster/rt_core/rt_mapalgebra.c	/^_rti_iterator_arg_populate($/;"	f	file:
_rti_iterator_arg_t	raster/rt_core/rt_mapalgebra.c	/^struct _rti_iterator_arg_t {$/;"	s	file:
_rti_raster_get_band_perimeter	raster/rt_core/rt_geometry.c	/^_rti_raster_get_band_perimeter(rt_band band, uint16_t *trim) {$/;"	f	file:
_rti_rasterize_arg	raster/rt_core/rt_raster.c	/^typedef struct _rti_rasterize_arg_t* _rti_rasterize_arg;$/;"	t	typeref:struct:_rti_rasterize_arg_t	file:
_rti_rasterize_arg_destroy	raster/rt_core/rt_raster.c	/^_rti_rasterize_arg_destroy(_rti_rasterize_arg arg) {$/;"	f	file:
_rti_rasterize_arg_init	raster/rt_core/rt_raster.c	/^_rti_rasterize_arg_init() {$/;"	f	file:
_rti_rasterize_arg_t	raster/rt_core/rt_raster.c	/^struct _rti_rasterize_arg_t {$/;"	s	file:
_rti_warp_arg	raster/rt_core/rt_warp.c	/^typedef struct _rti_warp_arg_t* _rti_warp_arg;$/;"	t	typeref:struct:_rti_warp_arg_t	file:
_rti_warp_arg_destroy	raster/rt_core/rt_warp.c	/^_rti_warp_arg_destroy(_rti_warp_arg arg) {$/;"	f	file:
_rti_warp_arg_init	raster/rt_core/rt_warp.c	/^_rti_warp_arg_init() {$/;"	f	file:
_rti_warp_arg_t	raster/rt_core/rt_warp.c	/^struct _rti_warp_arg_t {$/;"	s	file:
_setup	raster/scripts/python/rtreader.py	/^    def _setup(self):$/;"	m	class:RasterReader
a	postgis/lwgeom_accum.c	/^	ArrayBuildState *a;$/;"	m	struct:__anon8	file:
acceptsURL	java/jdbc/jtssrc/org/postgis/jts/JtsGisWrapper.java	/^    public boolean acceptsURL(String url) throws SQLException {$/;"	m	class:JtsGisWrapper
acceptsURL	java/jdbc/jtssrc/org/postgis/jts/JtsWrapper.java	/^    public boolean acceptsURL(String url) throws SQLException {$/;"	m	class:JtsWrapper
acceptsURL	java/jdbc/src/org/postgis/DriverWrapper.java	/^    public boolean acceptsURL(String url) throws SQLException {$/;"	m	class:DriverWrapper
acceptsURL	java/jdbc/src/org/postgis/java2d/Java2DWrapper.java	/^    public boolean acceptsURL(String url) throws SQLException {$/;"	m	class:Java2DWrapper
actualId	java/ejb2/src/com/geodetix/geo/ejb/GeometryBean.java	/^    private static int actualId = SIMPLE_ID_GENERATOR;$/;"	f	class:GeometryBean	file:
adBoundsMax	loader/shapefil.h	/^    double	adBoundsMax[4];$/;"	m	struct:__anon64
adBoundsMin	loader/shapefil.h	/^    double	adBoundsMin[4];$/;"	m	struct:__anon64
addBinaryGeometries	java/jdbc/src/org/postgis/DriverWrapper.java	/^        public abstract void addBinaryGeometries(Connection conn) throws SQLException;$/;"	m	class:DriverWrapper.TypesAdder
addBinaryGeometries	java/jdbc/src/org/postgis/DriverWrapper.java	/^        public void addBinaryGeometries(Connection conn) throws SQLException {$/;"	m	class:DriverWrapper.TypesAdder72
addBinaryGeometries	java/jdbc/src/org/postgis/DriverWrapper.java	/^        public void addBinaryGeometries(Connection conn) throws SQLException {$/;"	m	class:DriverWrapper.TypesAdder74
addBinaryGeometries	java/jdbc/src/org/postgis/DriverWrapper.java	/^        public void addBinaryGeometries(Connection conn) throws SQLException {$/;"	m	class:DriverWrapper.TypesAdder80
addBoxen	java/jdbc/src/org/postgis/DriverWrapper.java	/^		public void addBoxen(Connection conn) throws SQLException {$/;"	m	class:DriverWrapper.TypesAdder72
addBoxen	java/jdbc/src/org/postgis/DriverWrapper.java	/^        public abstract void addBoxen(Connection conn) throws SQLException;$/;"	m	class:DriverWrapper.TypesAdder
addBoxen	java/jdbc/src/org/postgis/DriverWrapper.java	/^        public void addBoxen(Connection conn) throws SQLException {$/;"	m	class:DriverWrapper.TypesAdder74
addBoxen	java/jdbc/src/org/postgis/DriverWrapper.java	/^        public void addBoxen(Connection conn) throws SQLException {$/;"	m	class:DriverWrapper.TypesAdder80
addDataType	java/jdbc/stubs/org/postgresql/Connection.java	/^    public abstract void addDataType(String type, String name);$/;"	m	class:Connection
addDataType	java/jdbc/stubs/org/postgresql/PGConnection.java	/^    public void addDataType(String type, Class klass) throws SQLException;$/;"	m	interface:PGConnection
addDataType	java/jdbc/stubs/org/postgresql/PGConnection.java	/^    public void addDataType(String type, String name);$/;"	m	interface:PGConnection
addDropShadow	doc/html/image_src/generator.c	/^addDropShadow(int layerNumber)$/;"	f	file:
addGISTypes	java/jdbc/jtssrc/org/postgis/jts/JtsGisWrapper.java	/^    public static void addGISTypes(PGConnection pgconn) throws SQLException {$/;"	m	class:JtsGisWrapper
addGISTypes	java/jdbc/jtssrc/org/postgis/jts/JtsWrapper.java	/^    public static void addGISTypes(PGConnection pgconn) throws SQLException {$/;"	m	class:JtsWrapper
addGISTypes	java/jdbc/src/org/postgis/DriverWrapper.java	/^    public static void addGISTypes(PGConnection pgconn) throws SQLException {$/;"	m	class:DriverWrapper
addGISTypes	java/jdbc/src/org/postgis/java2d/Java2DWrapper.java	/^    public static void addGISTypes(PGConnection pgconn) throws SQLException {$/;"	m	class:Java2DWrapper
addGISTypes72	java/jdbc/src/org/postgis/DriverWrapper.java	/^    public static void addGISTypes72(org.postgresql.PGConnection pgconn) throws SQLException {$/;"	m	class:DriverWrapper
addGISTypes80	java/jdbc/src/org/postgis/DriverWrapper.java	/^    public static void addGISTypes80(PGConnection pgconn) throws SQLException {$/;"	m	class:DriverWrapper
addGT	java/jdbc/src/org/postgis/DriverWrapper.java	/^        public final void addGT(java.sql.Connection conn, boolean lw) throws SQLException {$/;"	m	class:DriverWrapper.TypesAdder
addGeometries	java/jdbc/src/org/postgis/DriverWrapper.java	/^        public abstract void addGeometries(Connection conn) throws SQLException;$/;"	m	class:DriverWrapper.TypesAdder
addGeometries	java/jdbc/src/org/postgis/DriverWrapper.java	/^        public void addGeometries(Connection conn) throws SQLException {$/;"	m	class:DriverWrapper.TypesAdder72
addGeometries	java/jdbc/src/org/postgis/DriverWrapper.java	/^        public void addGeometries(Connection conn) throws SQLException {$/;"	m	class:DriverWrapper.TypesAdder74
addGeometries	java/jdbc/src/org/postgis/DriverWrapper.java	/^        public void addGeometries(Connection conn) throws SQLException {$/;"	m	class:DriverWrapper.TypesAdder80
addHighlight	doc/html/image_src/generator.c	/^addHighlight(int layerNumber)$/;"	f	file:
addStyle	doc/html/image_src/styles.c	/^addStyle($/;"	f
add_dumper_table_config_to_list	loader/shp2pgsql-gui.c	/^add_dumper_table_config_to_list(SHPDUMPERCONFIG *dumper_table_config, GtkListStore *chooser_liststore, GtkTreeIter *chooser_iter)$/;"	f	file:
add_file_button	loader/shp2pgsql-gui.c	/^static GtkWidget *add_file_button = NULL;$/;"	v	file:
add_loader_file_config_to_list	loader/shp2pgsql-gui.c	/^add_loader_file_config_to_list(SHPLOADERCONFIG *loader_file_config)$/;"	f	file:
add_overview_constraints	raster/loader/raster2pgsql.c	/^add_overview_constraints($/;"	f	file:
add_raster_constraints	raster/loader/raster2pgsql.c	/^add_raster_constraints($/;"	f	file:
add_table_button	loader/shp2pgsql-gui.c	/^static GtkWidget *add_table_button = NULL;$/;"	v	file:
addcols	extras/tiger_geocoder/tiger_2011/legacy_import/tiger2008/import_tiger_shps.sh	/^function addcols () {$/;"	f
addr	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE addr$/;"	t
addr.arid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  arid character varying(22),$/;"	F
addr.fromarmid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  fromarmid integer,$/;"	F
addr.fromhn	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  fromhn character varying(12),$/;"	F
addr.fromtyp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  fromtyp character varying(1),$/;"	F
addr.gid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  gid SERIAL NOT NULL,$/;"	F
addr.idx_tiger_addr_tlid_statefp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX idx_tiger_addr_tlid_statefp ON addr USING btree(tlid,statefp);$/;"	i
addr.idx_tiger_addr_zip	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX idx_tiger_addr_zip ON addr USING btree (zip);$/;"	i
addr.mtfcc	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  mtfcc character varying(5),$/;"	F
addr.plus4	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  plus4 character varying(4),$/;"	F
addr.side	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  side character varying(1),$/;"	F
addr.tlid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  tlid bigint,$/;"	F
addr.toarmid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  toarmid integer,$/;"	F
addr.tohn	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  tohn character varying(12),$/;"	F
addr.totyp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  totyp character varying(1),$/;"	F
addr.zip	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  zip character varying(5),$/;"	F
addrfeat	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE addrfeat$/;"	t
addrfeat	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^CREATE TABLE addrfeat$/;"	t
addrfeat.aridl	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  aridl character varying(22),$/;"	F
addrfeat.aridl	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  aridl character varying(22),$/;"	F
addrfeat.aridr	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  aridr character varying(22),$/;"	F
addrfeat.aridr	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  aridr character varying(22),$/;"	F
addrfeat.edge_mtfcc	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  edge_mtfcc character varying(5),$/;"	F
addrfeat.edge_mtfcc	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  edge_mtfcc character varying(5),$/;"	F
addrfeat.fullname	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  fullname character varying(100),$/;"	F
addrfeat.fullname	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  fullname character varying(100),$/;"	F
addrfeat.gid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  gid serial not null primary key,$/;"	F
addrfeat.gid	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  gid serial not null primary key,$/;"	F
addrfeat.idx_addrfeat_geom_gist	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX idx_addrfeat_geom_gist ON addrfeat USING gist(the_geom );$/;"	i
addrfeat.idx_addrfeat_geom_gist	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^CREATE INDEX idx_addrfeat_geom_gist ON addrfeat USING gist(geom );$/;"	i
addrfeat.idx_addrfeat_tlid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX idx_addrfeat_tlid ON addrfeat USING btree(tlid);$/;"	i
addrfeat.idx_addrfeat_tlid	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^CREATE INDEX idx_addrfeat_tlid ON addrfeat USING btree(tlid);$/;"	i
addrfeat.idx_addrfeat_zipl	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX idx_addrfeat_zipl ON addrfeat USING btree(zipl);$/;"	i
addrfeat.idx_addrfeat_zipl	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^CREATE INDEX idx_addrfeat_zipl ON addrfeat USING btree(zipl);$/;"	i
addrfeat.idx_addrfeat_zipr	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX idx_addrfeat_zipr ON addrfeat USING btree(zipr);$/;"	i
addrfeat.idx_addrfeat_zipr	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^CREATE INDEX idx_addrfeat_zipr ON addrfeat USING btree(zipr);$/;"	i
addrfeat.lfromhn	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  lfromhn character varying(12),$/;"	F
addrfeat.lfromhn	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  lfromhn character varying(12),$/;"	F
addrfeat.lfromtyp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  lfromtyp character varying(1),$/;"	F
addrfeat.lfromtyp	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  lfromtyp character varying(1),$/;"	F
addrfeat.linearid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  linearid character varying(22),$/;"	F
addrfeat.linearid	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  linearid character varying(22),$/;"	F
addrfeat.ltohn	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  ltohn character varying(12),$/;"	F
addrfeat.ltohn	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  ltohn character varying(12),$/;"	F
addrfeat.ltotyp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  ltotyp character varying(1),$/;"	F
addrfeat.ltotyp	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  ltotyp character varying(1),$/;"	F
addrfeat.offsetl	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  offsetl character varying(1),$/;"	F
addrfeat.offsetl	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  offsetl character varying(1),$/;"	F
addrfeat.offsetr	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  offsetr character varying(1),$/;"	F
addrfeat.offsetr	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  offsetr character varying(1),$/;"	F
addrfeat.parityl	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  parityl character varying(1),$/;"	F
addrfeat.parityl	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  parityl character varying(1),$/;"	F
addrfeat.parityr	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  parityr character varying(1),$/;"	F
addrfeat.parityr	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  parityr character varying(1),$/;"	F
addrfeat.plus4l	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  plus4l character varying(4),$/;"	F
addrfeat.plus4l	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  plus4l character varying(4),$/;"	F
addrfeat.plus4r	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  plus4r character varying(4),$/;"	F
addrfeat.plus4r	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  plus4r character varying(4),$/;"	F
addrfeat.rfromhn	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  rfromhn character varying(12),$/;"	F
addrfeat.rfromhn	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  rfromhn character varying(12),$/;"	F
addrfeat.rfromtyp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  rfromtyp character varying(1),$/;"	F
addrfeat.rfromtyp	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  rfromtyp character varying(1),$/;"	F
addrfeat.rtohn	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  rtohn character varying(12),$/;"	F
addrfeat.rtohn	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  rtohn character varying(12),$/;"	F
addrfeat.rtotyp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  rtotyp character varying(1),$/;"	F
addrfeat.rtotyp	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  rtotyp character varying(1),$/;"	F
addrfeat.statefp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  statefp character varying(2) NOT NULL,$/;"	F
addrfeat.statefp	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  statefp character varying(2),$/;"	F
addrfeat.the_geom	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  the_geom geometry,$/;"	F
addrfeat.the_geom	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  the_geom geometry,$/;"	F
addrfeat.tlid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  tlid bigint,$/;"	F
addrfeat.tlid	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  tlid bigint,$/;"	F
addrfeat.zipl	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  zipl character varying(5),$/;"	F
addrfeat.zipl	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  zipl character varying(5),$/;"	F
addrfeat.zipr	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  zipr character varying(5),$/;"	F
addrfeat.zipr	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  zipr character varying(5),$/;"	F
adfBoundsMax	loader/shapefil.h	/^    double	adfBoundsMax[4];$/;"	m	struct:shape_tree_node
adfBoundsMin	loader/shapefil.h	/^    double	adfBoundsMin[4];$/;"	m	struct:shape_tree_node
adjustBox	postgis/gserialized_gist_2d.c	/^adjustBox(BOX2DF *b, BOX2DF *addon)$/;"	f	file:
algeq	raster/rt_core/librtcore.h	/^	uint8_t algeq; \/* AL-GEQ (1) or AL-GT (0) *\/$/;"	m	struct:quantile_llist
algorithms_suite	liblwgeom/cunit/cu_algorithm.c	/^CU_SuiteInfo algorithms_suite = {"PostGIS Computational Geometry Suite",  init_cg_suite,  clean_cg_suite, algorithms_tests};$/;"	v
algorithms_tests	liblwgeom/cunit/cu_algorithm.c	/^CU_TestInfo algorithms_tests[] =$/;"	v
align	postgis/lwgeom_dumppoints.c	/^	char	align;$/;"	m	struct:dumpstate	file:
alloc	raster/rt_core/rt_context.c	/^    rt_allocator alloc;$/;"	m	struct:rt_context_t	file:
alloca	liblwgeom/lwin_wkt_parse.c	394;"	d	file:
analyze_table	raster/loader/raster2pgsql.c	/^analyze_table($/;"	f	file:
append_sql_to_buffer	raster/loader/raster2pgsql.c	/^append_sql_to_buffer(STRINGBUFFER *buffer, const char *str) {$/;"	f	file:
append_stringbuffer	raster/loader/raster2pgsql.c	/^append_stringbuffer(STRINGBUFFER *buffer, const char *str) {$/;"	f	file:
approx	raster/rt_core/rt_warp.c	/^			void *approx;$/;"	m	struct:_rti_warp_arg_t::__anon42::__anon44	file:
apsSubNode	loader/shapefil.h	/^    struct shape_tree_node *apsSubNode[MAX_SUBNODE];$/;"	m	struct:shape_tree_node	typeref:struct:shape_tree_node::shape_tree_node
area	postgis/lwgeom_backend_api.c	/^Datum area(PG_FUNCTION_ARGS)$/;"	f
area	postgis/lwgeom_backend_api.c	/^PG_FUNCTION_INFO_V1(area);$/;"	v
area_fn	postgis/lwgeom_backend_api.c	/^    Datum (*area_fn)          (PG_FUNCTION_ARGS);$/;"	m	struct:lwgeom_backend_definition	file:
areas	topology/test/regress/st_simplify.sql	/^CREATE TABLE tt.areas(id serial, g geometry);$/;"	t
areas.g	topology/test/regress/st_simplify.sql	/^CREATE TABLE tt.areas(id serial, g geometry);$/;"	F
areas.id	topology/test/regress/st_simplify.sql	/^CREATE TABLE tt.areas(id serial, g geometry);$/;"	F
arg	raster/rt_core/rt_mapalgebra.c	/^	rt_iterator_arg arg;$/;"	m	struct:_rti_iterator_arg_t	file:
arg	raster/rt_core/rt_warp.c	/^		} arg;$/;"	m	struct:_rti_warp_arg_t::__anon42	typeref:struct:_rti_warp_arg_t::__anon42::__anon44	file:
argnum	libpgcommon/lwgeom_cache.h	/^	int32                       argnum; $/;"	m	struct:__anon1
argnum	postgis/geography_measurement_trees.c	/^	int32                       argnum;     \/\/ <\/GeomCache>$/;"	m	struct:__anon11	file:
argnum	postgis/lwgeom_geos_prepared.h	/^	int32                       argnum;     \/\/ <\/GeomCache>$/;"	m	struct:__anon7
argnum	postgis/lwgeom_rtree.h	/^	int32                       argnum;     \/\/ <\/GeomCache>$/;"	m	struct:__anon14
array	java/jdbc/src/org/postgis/binary/ByteGetter.java	/^        private byte[] array;$/;"	f	class:ByteGetter.BinaryByteGetter	file:
array	java/jdbc/src/org/postgis/binary/ByteSetter.java	/^        private byte[] array;$/;"	f	class:ByteSetter.BinaryByteSetter	file:
array_range	raster/loader/raster2pgsql.c	/^array_range(int min, int max, int step, int **range, int *len) {$/;"	f	file:
asgeojson_bbox_buf	liblwgeom/lwout_geojson.c	/^asgeojson_bbox_buf(char *output, GBOX *bbox, int hasz, int precision)$/;"	f	file:
asgeojson_bbox_size	liblwgeom/lwout_geojson.c	/^asgeojson_bbox_size(int hasz, int precision)$/;"	f	file:
asgeojson_collection	liblwgeom/lwout_geojson.c	/^asgeojson_collection(const LWCOLLECTION *col, char *srs, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_collection_buf	liblwgeom/lwout_geojson.c	/^asgeojson_collection_buf(const LWCOLLECTION *col, char *srs, char *output, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_collection_size	liblwgeom/lwout_geojson.c	/^asgeojson_collection_size(const LWCOLLECTION *col, char *srs, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_geom_buf	liblwgeom/lwout_geojson.c	/^asgeojson_geom_buf(const LWGEOM *geom, char *output, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_geom_size	liblwgeom/lwout_geojson.c	/^asgeojson_geom_size(const LWGEOM *geom, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_line	liblwgeom/lwout_geojson.c	/^asgeojson_line(const LWLINE *line, char *srs, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_line_buf	liblwgeom/lwout_geojson.c	/^asgeojson_line_buf(const LWLINE *line, char *srs, char *output, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_line_size	liblwgeom/lwout_geojson.c	/^asgeojson_line_size(const LWLINE *line, char *srs, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_multiline	liblwgeom/lwout_geojson.c	/^asgeojson_multiline(const LWMLINE *mline, char *srs, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_multiline_buf	liblwgeom/lwout_geojson.c	/^asgeojson_multiline_buf(const LWMLINE *mline, char *srs, char *output, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_multiline_size	liblwgeom/lwout_geojson.c	/^asgeojson_multiline_size(const LWMLINE *mline, char *srs, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_multipoint	liblwgeom/lwout_geojson.c	/^asgeojson_multipoint(const LWMPOINT *mpoint, char *srs, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_multipoint_buf	liblwgeom/lwout_geojson.c	/^asgeojson_multipoint_buf(const LWMPOINT *mpoint, char *srs, char *output, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_multipoint_size	liblwgeom/lwout_geojson.c	/^asgeojson_multipoint_size(const LWMPOINT *mpoint, char *srs, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_multipolygon	liblwgeom/lwout_geojson.c	/^asgeojson_multipolygon(const LWMPOLY *mpoly, char *srs, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_multipolygon_buf	liblwgeom/lwout_geojson.c	/^asgeojson_multipolygon_buf(const LWMPOLY *mpoly, char *srs, char *output, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_multipolygon_size	liblwgeom/lwout_geojson.c	/^asgeojson_multipolygon_size(const LWMPOLY *mpoly, char *srs, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_point	liblwgeom/lwout_geojson.c	/^asgeojson_point(const LWPOINT *point, char *srs, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_point_buf	liblwgeom/lwout_geojson.c	/^asgeojson_point_buf(const LWPOINT *point, char *srs, char *output, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_point_size	liblwgeom/lwout_geojson.c	/^asgeojson_point_size(const LWPOINT *point, char *srs, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_poly	liblwgeom/lwout_geojson.c	/^asgeojson_poly(const LWPOLY *poly, char *srs, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_poly_buf	liblwgeom/lwout_geojson.c	/^asgeojson_poly_buf(const LWPOLY *poly, char *srs, char *output, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_poly_size	liblwgeom/lwout_geojson.c	/^asgeojson_poly_size(const LWPOLY *poly, char *srs, GBOX *bbox, int precision)$/;"	f	file:
asgeojson_srs_buf	liblwgeom/lwout_geojson.c	/^asgeojson_srs_buf(char *output, char *srs)$/;"	f	file:
asgeojson_srs_size	liblwgeom/lwout_geojson.c	/^asgeojson_srs_size(char *srs)$/;"	f	file:
asgml2_collection	liblwgeom/lwout_gml.c	/^asgml2_collection(const LWCOLLECTION *col, const char *srs, int precision,$/;"	f	file:
asgml2_collection_buf	liblwgeom/lwout_gml.c	/^asgml2_collection_buf(const LWCOLLECTION *col, const char *srs, char *output, int precision, const char *prefix)$/;"	f	file:
asgml2_collection_size	liblwgeom/lwout_gml.c	/^asgml2_collection_size(const LWCOLLECTION *col, const char *srs, int precision,$/;"	f	file:
asgml2_line	liblwgeom/lwout_gml.c	/^asgml2_line(const LWLINE *line, const char *srs, int precision, const char *prefix)$/;"	f	file:
asgml2_line_buf	liblwgeom/lwout_gml.c	/^asgml2_line_buf(const LWLINE *line, const char *srs, char *output, int precision,$/;"	f	file:
asgml2_line_size	liblwgeom/lwout_gml.c	/^asgml2_line_size(const LWLINE *line, const char *srs, int precision, const char *prefix)$/;"	f	file:
asgml2_multi	liblwgeom/lwout_gml.c	/^asgml2_multi(const LWCOLLECTION *col, const char *srs, int precision,$/;"	f	file:
asgml2_multi_buf	liblwgeom/lwout_gml.c	/^asgml2_multi_buf(const LWCOLLECTION *col, const char *srs, char *output,$/;"	f	file:
asgml2_multi_size	liblwgeom/lwout_gml.c	/^asgml2_multi_size(const LWCOLLECTION *col, const char *srs, int precision,$/;"	f	file:
asgml2_point	liblwgeom/lwout_gml.c	/^asgml2_point(const LWPOINT *point, const char *srs, int precision, const char *prefix)$/;"	f	file:
asgml2_point_buf	liblwgeom/lwout_gml.c	/^asgml2_point_buf(const LWPOINT *point, const char *srs, char *output, int precision, const char* prefix)$/;"	f	file:
asgml2_point_size	liblwgeom/lwout_gml.c	/^asgml2_point_size(const LWPOINT *point, const char *srs, int precision, const char* prefix)$/;"	f	file:
asgml2_poly	liblwgeom/lwout_gml.c	/^asgml2_poly(const LWPOLY *poly, const char *srs, int precision, const char *prefix)$/;"	f	file:
asgml2_poly_buf	liblwgeom/lwout_gml.c	/^asgml2_poly_buf(const LWPOLY *poly, const char *srs, char *output, int precision,$/;"	f	file:
asgml2_poly_size	liblwgeom/lwout_gml.c	/^asgml2_poly_size(const LWPOLY *poly, const char *srs, int precision, const char *prefix)$/;"	f	file:
asgml3_collection	liblwgeom/lwout_gml.c	/^asgml3_collection(const LWCOLLECTION *col, const char *srs, int precision, int opts, const char *prefix, const char *id)$/;"	f	file:
asgml3_collection_buf	liblwgeom/lwout_gml.c	/^asgml3_collection_buf(const LWCOLLECTION *col, const char *srs, char *output, int precision, int opts, const char *prefix, const char *id)$/;"	f	file:
asgml3_collection_size	liblwgeom/lwout_gml.c	/^asgml3_collection_size(const LWCOLLECTION *col, const char *srs, int precision, int opts, const char *prefix, const char *id)$/;"	f	file:
asgml3_line	liblwgeom/lwout_gml.c	/^asgml3_line(const LWLINE *line, const char *srs, int precision, int opts, const char *prefix, const char *id)$/;"	f	file:
asgml3_line_buf	liblwgeom/lwout_gml.c	/^asgml3_line_buf(const LWLINE *line, const char *srs, char *output, int precision, int opts, const char *prefix, const char *id)$/;"	f	file:
asgml3_line_size	liblwgeom/lwout_gml.c	/^asgml3_line_size(const LWLINE *line, const char *srs, int precision, int opts, const char *prefix, const char *id)$/;"	f	file:
asgml3_multi	liblwgeom/lwout_gml.c	/^asgml3_multi(const LWCOLLECTION *col, const char *srs, int precision, int opts, const char *prefix, const char *id)$/;"	f	file:
asgml3_multi_buf	liblwgeom/lwout_gml.c	/^asgml3_multi_buf(const LWCOLLECTION *col, const char *srs, char *output, int precision, int opts, const char *prefix, const char *id)$/;"	f	file:
asgml3_multi_size	liblwgeom/lwout_gml.c	/^asgml3_multi_size(const LWCOLLECTION *col, const char *srs, int precision, int opts, const char *prefix, const char *id)$/;"	f	file:
asgml3_point	liblwgeom/lwout_gml.c	/^asgml3_point(const LWPOINT *point, const char *srs, int precision, int opts, const char *prefix, const char *id)$/;"	f	file:
asgml3_point_buf	liblwgeom/lwout_gml.c	/^asgml3_point_buf(const LWPOINT *point, const char *srs, char *output, int precision, int opts, const char *prefix, const char *id)$/;"	f	file:
asgml3_point_size	liblwgeom/lwout_gml.c	/^asgml3_point_size(const LWPOINT *point, const char *srs, int precision, int opts, const char *prefix, const char *id)$/;"	f	file:
asgml3_poly	liblwgeom/lwout_gml.c	/^asgml3_poly(const LWPOLY *poly, const char *srs, int precision, int opts, int is_patch, const char *prefix, const char *id)$/;"	f	file:
asgml3_poly_buf	liblwgeom/lwout_gml.c	/^asgml3_poly_buf(const LWPOLY *poly, const char *srs, char *output, int precision, int opts, int is_patch, const char *prefix, const char *id)$/;"	f	file:
asgml3_poly_size	liblwgeom/lwout_gml.c	/^asgml3_poly_size(const LWPOLY *poly, const char *srs, int precision, int opts, const char *prefix, const char *id)$/;"	f	file:
asgml3_psurface	liblwgeom/lwout_gml.c	/^asgml3_psurface(const LWPSURFACE *psur, const char *srs, int precision, int opts, const char *prefix, const char *id)$/;"	f	file:
asgml3_psurface_buf	liblwgeom/lwout_gml.c	/^asgml3_psurface_buf(const LWPSURFACE *psur, const char *srs, char *output, int precision, int opts, const char *prefix, const char *id)$/;"	f	file:
asgml3_psurface_size	liblwgeom/lwout_gml.c	/^asgml3_psurface_size(const LWPSURFACE *psur, const char *srs, int precision, int opts, const char *prefix, const char *id)$/;"	f	file:
asgml3_tin	liblwgeom/lwout_gml.c	/^asgml3_tin(const LWTIN *tin, const char *srs, int precision, int opts, const char *prefix, const char *id)$/;"	f	file:
asgml3_tin_buf	liblwgeom/lwout_gml.c	/^asgml3_tin_buf(const LWTIN *tin, const char *srs, char *output, int precision, int opts, const char *prefix, const char *id)$/;"	f	file:
asgml3_tin_size	liblwgeom/lwout_gml.c	/^asgml3_tin_size(const LWTIN *tin, const char *srs, int precision, int opts, const char *prefix, const char *id)$/;"	f	file:
asgml3_triangle	liblwgeom/lwout_gml.c	/^asgml3_triangle(const LWTRIANGLE *triangle, const char *srs, int precision, int opts, const char *prefix, const char *id)$/;"	f	file:
asgml3_triangle_buf	liblwgeom/lwout_gml.c	/^asgml3_triangle_buf(const LWTRIANGLE *triangle, const char *srs, char *output, int precision, int opts, const char *prefix, const char *id)$/;"	f	file:
asgml3_triangle_size	liblwgeom/lwout_gml.c	/^asgml3_triangle_size(const LWTRIANGLE *triangle, const char *srs, int precision, int opts, const char *prefix, const char *id)$/;"	f	file:
assemble	java/ejb3/src/org/postgis/hibernate/GeometryType.java	/^	public Object assemble(Serializable cached, Object owner) throws HibernateException {$/;"	m	class:GeometryType
assvg_collection	liblwgeom/lwout_svg.c	/^assvg_collection(const LWCOLLECTION *col, int relative, int precision)$/;"	f	file:
assvg_collection_buf	liblwgeom/lwout_svg.c	/^assvg_collection_buf(const LWCOLLECTION *col, char *output, int relative, int precision)$/;"	f	file:
assvg_collection_size	liblwgeom/lwout_svg.c	/^assvg_collection_size(const LWCOLLECTION *col, int relative, int precision)$/;"	f	file:
assvg_geom_buf	liblwgeom/lwout_svg.c	/^assvg_geom_buf(const LWGEOM *geom, char *output, int relative, int precision)$/;"	f	file:
assvg_geom_size	liblwgeom/lwout_svg.c	/^assvg_geom_size(const LWGEOM *geom, int relative, int precision)$/;"	f	file:
assvg_line	liblwgeom/lwout_svg.c	/^assvg_line(const LWLINE *line, int relative, int precision)$/;"	f	file:
assvg_line_buf	liblwgeom/lwout_svg.c	/^assvg_line_buf(const LWLINE *line, char * output, int relative, int precision)$/;"	f	file:
assvg_line_size	liblwgeom/lwout_svg.c	/^assvg_line_size(const LWLINE *line, int relative, int precision)$/;"	f	file:
assvg_multiline	liblwgeom/lwout_svg.c	/^assvg_multiline(const LWMLINE *mline, int relative, int precision)$/;"	f	file:
assvg_multiline_buf	liblwgeom/lwout_svg.c	/^assvg_multiline_buf(const LWMLINE *mline, char *output, int relative, int precision)$/;"	f	file:
assvg_multiline_size	liblwgeom/lwout_svg.c	/^assvg_multiline_size(const LWMLINE *mline, int relative, int precision)$/;"	f	file:
assvg_multipoint	liblwgeom/lwout_svg.c	/^assvg_multipoint(const LWMPOINT *mpoint, int relative, int precision)$/;"	f	file:
assvg_multipoint_buf	liblwgeom/lwout_svg.c	/^assvg_multipoint_buf(const LWMPOINT *mpoint, char *output, int relative, int precision)$/;"	f	file:
assvg_multipoint_size	liblwgeom/lwout_svg.c	/^assvg_multipoint_size(const LWMPOINT *mpoint, int relative, int precision)$/;"	f	file:
assvg_multipolygon	liblwgeom/lwout_svg.c	/^assvg_multipolygon(const LWMPOLY *mpoly, int relative, int precision)$/;"	f	file:
assvg_multipolygon_buf	liblwgeom/lwout_svg.c	/^assvg_multipolygon_buf(const LWMPOLY *mpoly, char *output, int relative, int precision)$/;"	f	file:
assvg_multipolygon_size	liblwgeom/lwout_svg.c	/^assvg_multipolygon_size(const LWMPOLY *mpoly, int relative, int precision)$/;"	f	file:
assvg_point	liblwgeom/lwout_svg.c	/^assvg_point(const LWPOINT *point, int circle, int precision)$/;"	f	file:
assvg_point_buf	liblwgeom/lwout_svg.c	/^assvg_point_buf(const LWPOINT *point, char * output, int circle, int precision)$/;"	f	file:
assvg_point_size	liblwgeom/lwout_svg.c	/^assvg_point_size(const LWPOINT *point, int circle, int precision)$/;"	f	file:
assvg_polygon	liblwgeom/lwout_svg.c	/^assvg_polygon(const LWPOLY *poly, int relative, int precision)$/;"	f	file:
assvg_polygon_buf	liblwgeom/lwout_svg.c	/^assvg_polygon_buf(const LWPOLY *poly, char * output, int relative, int precision)$/;"	f	file:
assvg_polygon_size	liblwgeom/lwout_svg.c	/^assvg_polygon_size(const LWPOLY *poly, int relative, int precision)$/;"	f	file:
asx3d3_collection	liblwgeom/lwout_x3d.c	/^asx3d3_collection(const LWCOLLECTION *col, char *srs, int precision, int opts, const char *defid)$/;"	f	file:
asx3d3_collection_buf	liblwgeom/lwout_x3d.c	/^asx3d3_collection_buf(const LWCOLLECTION *col, char *srs, char *output, int precision, int opts, const char *defid)$/;"	f	file:
asx3d3_collection_size	liblwgeom/lwout_x3d.c	/^asx3d3_collection_size(const LWCOLLECTION *col, char *srs, int precision, int opts, const char *defid)$/;"	f	file:
asx3d3_line	liblwgeom/lwout_x3d.c	/^asx3d3_line(const LWLINE *line, char *srs, int precision, int opts, const char *defid)$/;"	f	file:
asx3d3_line_buf	liblwgeom/lwout_x3d.c	/^asx3d3_line_buf(const LWLINE *line, char *srs, char *output, int precision, int opts, const char *defid)$/;"	f	file:
asx3d3_line_coords	liblwgeom/lwout_x3d.c	/^asx3d3_line_coords(const LWLINE *line, char *output, int precision, int opts)$/;"	f	file:
asx3d3_line_size	liblwgeom/lwout_x3d.c	/^asx3d3_line_size(const LWLINE *line, char *srs, int precision, int opts, const char *defid)$/;"	f	file:
asx3d3_mline_coordindex	liblwgeom/lwout_x3d.c	/^asx3d3_mline_coordindex(const LWMLINE *mgeom, char *output)$/;"	f	file:
asx3d3_mpoly_coordindex	liblwgeom/lwout_x3d.c	/^asx3d3_mpoly_coordindex(const LWMPOLY *psur, char *output)$/;"	f	file:
asx3d3_multi	liblwgeom/lwout_x3d.c	/^asx3d3_multi(const LWCOLLECTION *col, char *srs, int precision, int opts, const char *defid)$/;"	f	file:
asx3d3_multi_buf	liblwgeom/lwout_x3d.c	/^asx3d3_multi_buf(const LWCOLLECTION *col, char *srs, char *output, int precision, int opts, const char *defid)$/;"	f	file:
asx3d3_multi_size	liblwgeom/lwout_x3d.c	/^asx3d3_multi_size(const LWCOLLECTION *col, char *srs, int precision, int opts, const char *defid)$/;"	f	file:
asx3d3_point	liblwgeom/lwout_x3d.c	/^asx3d3_point(const LWPOINT *point, char *srs, int precision, int opts, const char *defid)$/;"	f	file:
asx3d3_point_buf	liblwgeom/lwout_x3d.c	/^asx3d3_point_buf(const LWPOINT *point, char *srs, char *output, int precision, int opts, const char *defid)$/;"	f	file:
asx3d3_point_size	liblwgeom/lwout_x3d.c	/^asx3d3_point_size(const LWPOINT *point, char *srs, int precision, int opts, const char *defid)$/;"	f	file:
asx3d3_poly_buf	liblwgeom/lwout_x3d.c	/^asx3d3_poly_buf(const LWPOLY *poly, char *srs, char *output, int precision, int opts, int is_patch, const char *defid)$/;"	f	file:
asx3d3_poly_size	liblwgeom/lwout_x3d.c	/^asx3d3_poly_size(const LWPOLY *poly,  char *srs, int precision, int opts, const char *defid)$/;"	f	file:
asx3d3_psurface	liblwgeom/lwout_x3d.c	/^asx3d3_psurface(const LWPSURFACE *psur, char *srs, int precision, int opts, const char *defid)$/;"	f	file:
asx3d3_psurface_buf	liblwgeom/lwout_x3d.c	/^asx3d3_psurface_buf(const LWPSURFACE *psur, char *srs, char *output, int precision, int opts, const char *defid)$/;"	f	file:
asx3d3_psurface_size	liblwgeom/lwout_x3d.c	/^asx3d3_psurface_size(const LWPSURFACE *psur, char *srs, int precision, int opts, const char *defid)$/;"	f	file:
asx3d3_tin	liblwgeom/lwout_x3d.c	/^asx3d3_tin(const LWTIN *tin, char *srs, int precision, int opts, const char *defid)$/;"	f	file:
asx3d3_tin_buf	liblwgeom/lwout_x3d.c	/^asx3d3_tin_buf(const LWTIN *tin, char *srs, char *output, int precision, int opts, const char *defid)$/;"	f	file:
asx3d3_tin_size	liblwgeom/lwout_x3d.c	/^asx3d3_tin_size(const LWTIN *tin, char *srs, int precision, int opts, const char *defid)$/;"	f	file:
asx3d3_triangle	liblwgeom/lwout_x3d.c	/^asx3d3_triangle(const LWTRIANGLE *triangle, char *srs, int precision, int opts, const char *defid)$/;"	f	file:
asx3d3_triangle_buf	liblwgeom/lwout_x3d.c	/^asx3d3_triangle_buf(const LWTRIANGLE *triangle, char *srs, char *output, int precision, int opts, const char *defid)$/;"	f	file:
asx3d3_triangle_size	liblwgeom/lwout_x3d.c	/^asx3d3_triangle_size(const LWTRIANGLE *triangle, char *srs, int precision, int opts, const char *defid)$/;"	f	file:
at	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        protected final AffineTransform at;$/;"	f	class:JTSShape.GeometryPathIterator
avg	postgis/gserialized_estimate.c	/^avg(const int *vals, int nvals)$/;"	f	file:
ax	liblwgeom/lwpsurface.c	/^	double ax, ay, az;$/;"	m	struct:struct_psurface_arcs	file:
ax	liblwgeom/lwtin.c	/^	double ax, ay, az;$/;"	m	struct:struct_tin_arcs	file:
ay	liblwgeom/lwpsurface.c	/^	double ax, ay, az;$/;"	m	struct:struct_psurface_arcs	file:
ay	liblwgeom/lwtin.c	/^	double ax, ay, az;$/;"	m	struct:struct_tin_arcs	file:
az	liblwgeom/lwpsurface.c	/^	double ax, ay, az;$/;"	m	struct:struct_psurface_arcs	file:
az	liblwgeom/lwtin.c	/^	double ax, ay, az;$/;"	m	struct:struct_tin_arcs	file:
azimuth_pt_pt	liblwgeom/measures.c	/^azimuth_pt_pt(const POINT2D *A, const POINT2D *B, double *d)$/;"	f
b	regress/regress.sql	/^select '122',a <<b from TEST;$/;"	L
b	regress/sfcgal/regress.sql	/^select '122',a <<b from TEST;$/;"	L
bBigEndian	loader/shpopen.c	/^static int 	bBigEndian;$/;"	v	file:
bCurrentRecordModified	loader/shapefil.h	/^    int		bCurrentRecordModified;$/;"	m	struct:__anon67
bMeasureIsUsed	loader/shapefil.h	/^    int		bMeasureIsUsed;$/;"	m	struct:__anon65
bNoHeader	loader/shapefil.h	/^    int		bNoHeader;$/;"	m	struct:__anon67
bUpdated	loader/shapefil.h	/^    int		bUpdated;$/;"	m	struct:__anon64
bUpdated	loader/shapefil.h	/^    int		bUpdated;$/;"	m	struct:__anon67
band	raster/rt_core/rt_mapalgebra.c	/^	rt_band band;$/;"	m	struct:_rti_colormap_arg_t	file:
band	raster/rt_core/rt_mapalgebra.c	/^	} band;$/;"	m	struct:_rti_iterator_arg_t	typeref:struct:_rti_iterator_arg_t::__anon45	file:
band	raster/rt_pg/rtpg_mapalgebra.c	/^	rt_band band;$/;"	m	struct:rtpg_colormap_arg_t	file:
band	raster/rt_pg/rtpg_mapalgebra.c	/^	rtpg_clip_band band;$/;"	m	struct:rtpg_clip_arg_t	file:
band	raster/scripts/python/ovdump.py	/^        band = src_ds.GetRasterBand(nb)$/;"	v
band	raster/scripts/python/ovdump.py	/^    band = None$/;"	v
band	raster/scripts/python/ovdump.py	/^    band = src_ds.GetRasterBand(1)$/;"	v
band	raster/scripts/python/ovdump.py	/^band = src_ds.GetRasterBand(1)$/;"	v
band	raster/scripts/python/pixval.py	/^band = ds.GetRasterBand(nband)$/;"	v
band	raster/scripts/python/rtrowdump.py	/^        band = out_ds.GetRasterBand(b)$/;"	v
bandNum	raster/rt_core/librtcore.h	/^    uint8_t bandNum; \/* 0-based *\/$/;"	m	struct:rt_extband_t
band_basics_suite	raster/test/cunit/cu_band_basics.c	/^CU_SuiteInfo band_basics_suite = {"band_basics",  NULL,  NULL, band_basics_tests};$/;"	v
band_basics_tests	raster/test/cunit/cu_band_basics.c	/^CU_TestInfo band_basics_tests[] = {$/;"	v
band_misc_suite	raster/test/cunit/cu_band_misc.c	/^CU_SuiteInfo band_misc_suite = {"band_misc",  NULL,  NULL, band_misc_tests};$/;"	v
band_misc_tests	raster/test/cunit/cu_band_misc.c	/^CU_TestInfo band_misc_tests[] = {$/;"	v
band_stats_suite	raster/test/cunit/cu_band_stats.c	/^CU_SuiteInfo band_stats_suite = {"band_stats",  NULL,  NULL, band_stats_tests};$/;"	v
band_stats_tests	raster/test/cunit/cu_band_stats.c	/^CU_TestInfo band_stats_tests[] = {$/;"	v
bandarg	raster/rt_pg/rtpg_mapalgebra.c	/^	rtpg_nmapalgebra_arg bandarg;$/;"	m	struct:rtpg_nmapalgebraexpr_arg_t	file:
bandarg	raster/rt_pg/rtpg_mapalgebra.c	/^	rtpg_union_band_arg bandarg;$/;"	m	struct:rtpg_union_arg_t	file:
bandlist	raster/rt_core/rt_raster.c	/^	int *bandlist;$/;"	m	struct:_rti_rasterize_arg_t	file:
bands	raster/rt_core/librtcore.h	/^    rt_band *bands; \/* actual bands *\/$/;"	m	struct:rt_raster_t
bandstats	raster/rt_pg/rtpg_mapalgebra.c	/^	rt_bandstats bandstats;$/;"	m	struct:rtpg_colormap_arg_t	file:
bandtype	raster/loader/raster2pgsql.h	/^	rt_pixtype *bandtype;$/;"	m	struct:rasterinfo_t
base32	liblwgeom/lwalgorithm.c	/^static char *base32 = "0123456789bcdefghjkmnpqrstuvwxyz";$/;"	v	file:
bbox	java/jdbc/src/examples/TestJava2d.java	/^        final Rectangle2D bbox;$/;"	f	class:TestJava2d.GisCanvas
bigA	postgis/lwgeom_spheroid.c	/^bigA(double u2)$/;"	f
bigB	postgis/lwgeom_spheroid.c	/^bigB(double u2)$/;"	f
big_endian	loader/pgsql2shp-core.h	/^	int big_endian;$/;"	m	struct:shp_dumper_state
big_parcels	topology/test/hierarchy.sql	/^CREATE TABLE features.big_parcels ($/;"	t
big_parcels.feature_name	topology/test/hierarchy.sql	/^	feature_name varchar primary key$/;"	F
big_signs	topology/test/hierarchy.sql	/^CREATE TABLE features.big_signs ($/;"	t
big_signs.feature_name	topology/test/hierarchy.sql	/^	feature_name varchar primary key$/;"	F
big_streets	topology/test/hierarchy.sql	/^CREATE TABLE features.big_streets ($/;"	t
big_streets.feature_name	topology/test/hierarchy.sql	/^	feature_name varchar primary key$/;"	F
binary	loader/pgsql2shp-core.h	/^	int binary;$/;"	m	struct:shp_dumper_config
binaryViaSQL	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    private static Geometry binaryViaSQL(byte[] rep, Connection conn) throws SQLException {$/;"	m	class:JtsTestParser	file:
binaryViaSQL	java/jdbc/src/examples/TestParser.java	/^    private static Geometry binaryViaSQL(byte[] rep, Connection conn) throws SQLException {$/;"	m	class:TestParser	file:
bool	extras/wkb_reader/wkbtest.h	/^typedef char bool;$/;"	t
boundary	postgis/lwgeom_geos.c	/^Datum boundary(PG_FUNCTION_ARGS)$/;"	f
boundary	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(boundary);$/;"	v
boundingBox	postgis/gserialized_gist_2d.c	/^	BOX2DF		boundingBox;	\/* minimum bounding box across all entries *\/$/;"	m	struct:__anon18	file:
box2d_clone	liblwgeom/box2d.c	/^box2d_clone(const GBOX *in)$/;"	f
box2d_from_geohash	postgis/lwgeom_in_geohash.c	/^Datum box2d_from_geohash(PG_FUNCTION_ARGS)$/;"	f
box2d_from_geohash	postgis/lwgeom_in_geohash.c	/^PG_FUNCTION_INFO_V1(box2d_from_geohash);$/;"	v
box2df_above	postgis/gserialized_gist_2d.c	/^static bool box2df_above(const BOX2DF *a, const BOX2DF *b)$/;"	f	file:
box2df_below	postgis/gserialized_gist_2d.c	/^static bool box2df_below(const BOX2DF *a, const BOX2DF *b)$/;"	f	file:
box2df_contains	postgis/gserialized_gist_2d.c	/^static bool box2df_contains(const BOX2DF *a, const BOX2DF *b)$/;"	f	file:
box2df_copy	postgis/gserialized_gist_2d.c	/^static BOX2DF* box2df_copy(BOX2DF *b)$/;"	f	file:
box2df_distance	postgis/gserialized_gist_2d.c	/^static double box2df_distance(const BOX2DF *a, const BOX2DF *b)$/;"	f	file:
box2df_distance_leaf_centroid	postgis/gserialized_gist_2d.c	/^static double box2df_distance_leaf_centroid(const BOX2DF *a, const BOX2DF *b)$/;"	f	file:
box2df_distance_node_centroid	postgis/gserialized_gist_2d.c	/^static double box2df_distance_node_centroid(const BOX2DF *node, const BOX2DF *query)$/;"	f	file:
box2df_equals	postgis/gserialized_gist_2d.c	/^static bool box2df_equals(const BOX2DF *a, const BOX2DF *b)$/;"	f	file:
box2df_from_gbox_p	postgis/gserialized_gist_2d.c	/^static inline int box2df_from_gbox_p(GBOX *box, BOX2DF *a)$/;"	f	file:
box2df_in	postgis/gserialized_gist_2d.c	/^Datum box2df_in(PG_FUNCTION_ARGS)$/;"	f
box2df_in	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(box2df_in);$/;"	v
box2df_intersection	postgis/gserialized_gist_2d.c	/^static bool box2df_intersection(const BOX2DF *a, const BOX2DF *b, BOX2DF *n)$/;"	f	file:
box2df_left	postgis/gserialized_gist_2d.c	/^static bool box2df_left(const BOX2DF *a, const BOX2DF *b)$/;"	f	file:
box2df_merge	postgis/gserialized_gist_2d.c	/^static void box2df_merge(BOX2DF *b_union, BOX2DF *b_new)$/;"	f	file:
box2df_out	postgis/gserialized_gist_2d.c	/^Datum box2df_out(PG_FUNCTION_ARGS)$/;"	f
box2df_out	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(box2df_out);$/;"	v
box2df_overabove	postgis/gserialized_gist_2d.c	/^static bool box2df_overabove(const BOX2DF *a, const BOX2DF *b)$/;"	f	file:
box2df_overbelow	postgis/gserialized_gist_2d.c	/^static bool box2df_overbelow(const BOX2DF *a, const BOX2DF *b)$/;"	f	file:
box2df_overlaps	postgis/gserialized_gist_2d.c	/^static bool box2df_overlaps(const BOX2DF *a, const BOX2DF *b)$/;"	f	file:
box2df_overleft	postgis/gserialized_gist_2d.c	/^static bool box2df_overleft(const BOX2DF *a, const BOX2DF *b)$/;"	f	file:
box2df_overright	postgis/gserialized_gist_2d.c	/^static bool box2df_overright(const BOX2DF *a, const BOX2DF *b)$/;"	f	file:
box2df_predicate	postgis/gserialized_gist_2d.c	/^typedef bool (*box2df_predicate)(const BOX2DF *a, const BOX2DF *b);$/;"	t	file:
box2df_right	postgis/gserialized_gist_2d.c	/^static bool box2df_right(const BOX2DF *a, const BOX2DF *b)$/;"	f	file:
box2df_size	postgis/gserialized_gist_2d.c	/^static float box2df_size(const BOX2DF *a)$/;"	f	file:
box2df_to_string	postgis/gserialized_gist_2d.c	/^static char* box2df_to_string(const BOX2DF *a)$/;"	f	file:
box2df_union_size	postgis/gserialized_gist_2d.c	/^static float box2df_union_size(const BOX2DF *a, const BOX2DF *b)$/;"	f	file:
box2df_validate	postgis/gserialized_gist_2d.c	/^static inline void box2df_validate(BOX2DF *b)$/;"	f	file:
box2df_within	postgis/gserialized_gist_2d.c	/^static bool box2df_within(const BOX2DF *a, const BOX2DF *b)$/;"	f	file:
box3d_from_gbox	liblwgeom/g_box.c	/^BOX3D* box3d_from_gbox(const GBOX *gbox)$/;"	f
box3d_to_box_p	postgis/lwgeom_box3d.c	/^box3d_to_box_p(BOX3D *box, BOX *out)$/;"	f	file:
box3d_to_gbox	liblwgeom/g_box.c	/^GBOX* box3d_to_gbox(const BOX3D *b3d)$/;"	f
box_penalty	postgis/gserialized_gist_2d.c	/^box_penalty(BOX2DF *original, BOX2DF *new)$/;"	f	file:
bp	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    private static JtsBinaryParser bp = new JtsBinaryParser();$/;"	f	class:JtsTestParser	file:
bp	java/jdbc/jtssrc/org/postgis/jts/JtsGeometry.java	/^    final static JtsBinaryParser bp = new JtsBinaryParser();$/;"	f	class:JtsGeometry
bp	java/jdbc/src/examples/TestParser.java	/^    private static BinaryParser bp = new BinaryParser();$/;"	f	class:TestParser	file:
bp	java/jdbc/src/org/postgis/PGgeometry.java	/^    BinaryParser bp = new BinaryParser();$/;"	f	class:PGgeometry
bridges	extras/ogc_test_suite/1_schema.sql	/^CREATE TABLE bridges ($/;"	t
bridges.fid	extras/ogc_test_suite/1_schema.sql	/^       fid           INTEGER NOT NULL PRIMARY KEY,$/;"	F
bridges.name	extras/ogc_test_suite/1_schema.sql	/^       name          VARCHAR(64)$/;"	F
buf	liblwgeom/lwhomogenize.c	/^	LWCOLLECTION* buf[NUMTYPES];$/;"	m	struct:__anon27	file:
buffer	postgis/lwgeom_geos.c	/^Datum buffer(PG_FUNCTION_ARGS)$/;"	f
buffer	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(buffer);$/;"	v
build_overview	raster/loader/raster2pgsql.c	/^build_overview(int idx, RTLOADERCFG *config, RASTERINFO *info, int ovx, STRINGBUFFER *tileset, STRINGBUFFER *buffer) {$/;"	f	file:
buildarea1	liblwgeom/cunit/cu_buildarea.c	/^static void buildarea1(void)$/;"	f	file:
buildarea2	liblwgeom/cunit/cu_buildarea.c	/^static void buildarea2(void)$/;"	f	file:
buildarea3	liblwgeom/cunit/cu_buildarea.c	/^static void buildarea3(void)$/;"	f	file:
buildarea4	liblwgeom/cunit/cu_buildarea.c	/^static void buildarea4(void)$/;"	f	file:
buildarea4b	liblwgeom/cunit/cu_buildarea.c	/^static void buildarea4b(void)$/;"	f	file:
buildarea5	liblwgeom/cunit/cu_buildarea.c	/^static void buildarea5(void)$/;"	f	file:
buildarea6	liblwgeom/cunit/cu_buildarea.c	/^static void buildarea6(void)$/;"	f	file:
buildarea7	liblwgeom/cunit/cu_buildarea.c	/^static void buildarea7(void)$/;"	f	file:
buildarea_suite	liblwgeom/cunit/cu_buildarea.c	/^CU_SuiteInfo buildarea_suite = {"buildarea",  NULL,  NULL, buildarea_tests};$/;"	v
buildarea_tests	liblwgeom/cunit/cu_buildarea.c	/^static CU_TestInfo buildarea_tests[] =$/;"	v	file:
buildings	extras/ogc_test_suite/1_schema.sql	/^CREATE TABLE buildings ($/;"	t
buildings.address	extras/ogc_test_suite/1_schema.sql	/^       address         VARCHAR(64)$/;"	F
buildings.fid	extras/ogc_test_suite/1_schema.sql	/^       fid             INTEGER NOT NULL PRIMARY KEY,$/;"	F
bw	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    private static final JtsBinaryWriter bw = new JtsBinaryWriter();$/;"	f	class:JtsTestParser	file:
bw	java/jdbc/jtssrc/org/postgis/jts/JtsGeometry.java	/^    final static JtsBinaryWriter bw = new JtsBinaryWriter();$/;"	f	class:JtsGeometry
bw	java/jdbc/src/examples/TestParser.java	/^    private static final BinaryWriter bw = new BinaryWriter();$/;"	f	class:TestParser	file:
bw	java/jdbc/src/org/postgis/PGgeometryLW.java	/^    BinaryWriter bw = new BinaryWriter();$/;"	f	class:PGgeometryLW
bx	liblwgeom/lwpsurface.c	/^	double bx, by, bz;$/;"	m	struct:struct_psurface_arcs	file:
bx	liblwgeom/lwtin.c	/^	double bx, by, bz;$/;"	m	struct:struct_tin_arcs	file:
by	liblwgeom/lwpsurface.c	/^	double bx, by, bz;$/;"	m	struct:struct_psurface_arcs	file:
by	liblwgeom/lwtin.c	/^	double bx, by, bz;$/;"	m	struct:struct_tin_arcs	file:
byte_from_wkb_state	liblwgeom/lwin_wkb.c	/^static char byte_from_wkb_state(wkb_parse_state *s)$/;"	f	file:
bytes_from_hexbytes	liblwgeom/lwin_wkb.c	/^uint8_t* bytes_from_hexbytes(const char *hexbuf, size_t hexsize)$/;"	f
byval	postgis/lwgeom_dumppoints.c	/^	bool	byval;$/;"	m	struct:dumpstate	file:
bz	liblwgeom/lwpsurface.c	/^	double bx, by, bz;$/;"	m	struct:struct_psurface_arcs	file:
bz	liblwgeom/lwtin.c	/^	double bx, by, bz;$/;"	m	struct:struct_tin_arcs	file:
c	libpgcommon/gserialized_gist.h	/^	float c[1];$/;"	m	struct:__anon3
c	regress/sfcgal/tickets.sql	/^CREATE TABLE c ( the_geom GEOMETRY);$/;"	t
c	regress/tickets.sql	/^CREATE TABLE c ( the_geom GEOMETRY);$/;"	t
c.the_geom	regress/sfcgal/tickets.sql	/^CREATE TABLE c ( the_geom GEOMETRY);$/;"	F
c.the_geom	regress/tickets.sql	/^CREATE TABLE c ( the_geom GEOMETRY);$/;"	F
cache_bbox	postgis/lwgeom_triggers.c	/^Datum cache_bbox(PG_FUNCTION_ARGS)$/;"	f
cache_bbox	postgis/lwgeom_triggers.c	/^PG_FUNCTION_INFO_V1(cache_bbox);$/;"	v
cacheable	regress/sfcgal/tickets.sql	/^CREATE TABLE cacheable (id int, g geometry);$/;"	t
cacheable	regress/tickets.sql	/^CREATE TABLE cacheable (id int, g geometry);$/;"	t
cacheable.g	regress/sfcgal/tickets.sql	/^CREATE TABLE cacheable (id int, g geometry);$/;"	F
cacheable.g	regress/tickets.sql	/^CREATE TABLE cacheable (id int, g geometry);$/;"	F
cacheable.id	regress/sfcgal/tickets.sql	/^CREATE TABLE cacheable (id int, g geometry);$/;"	F
cacheable.id	regress/tickets.sql	/^CREATE TABLE cacheable (id int, g geometry);$/;"	F
calc_tile_size	raster/loader/raster2pgsql.c	/^static void calc_tile_size($/;"	f	file:
calcbbox	java/jdbc/src/examples/TestJava2d.java	/^    static Rectangle2D calcbbox(Shape[] geometries) {$/;"	m	class:TestJava2d
calculate_block_pad_size	raster/scripts/python/raster2pgsql.py	/^def calculate_block_pad_size(band, xoff, yoff, block_size):$/;"	f
calculate_block_size	raster/scripts/python/raster2pgsql.py	/^def calculate_block_size(ds, band_from, band_to):$/;"	f
calculate_bounding_box	raster/scripts/python/raster2pgsql.py	/^def calculate_bounding_box(ds, gt):$/;"	f
calculate_corner	raster/scripts/python/window.py	/^def calculate_corner(gt, x, y):$/;"	f
calculate_geoxy	raster/scripts/python/raster2pgsql.py	/^def calculate_geoxy(gt, xy):$/;"	f
calculate_geoxy_level	raster/scripts/python/raster2pgsql.py	/^def calculate_geoxy_level(gt, xy, level):$/;"	f
calculate_grid_size	raster/scripts/python/raster2pgsql.py	/^def calculate_grid_size(raster_size, block_size):$/;"	f
calculate_overview_factor	raster/scripts/python/raster2pgsql.py	/^def calculate_overview_factor(ds, overview):$/;"	f
calculate_overviews	raster/scripts/python/raster2pgsql.py	/^def calculate_overviews(ds, band_from = None, band_to = None):$/;"	f
callback	raster/rt_pg/rtpg_mapalgebra.c	/^	rtpg_nmapalgebra_callback_arg	callback;$/;"	m	struct:rtpg_nmapalgebra_arg_t	file:
callback	raster/rt_pg/rtpg_mapalgebra.c	/^	rtpg_nmapalgebraexpr_callback_arg	callback;$/;"	m	struct:rtpg_nmapalgebraexpr_arg_t	file:
canonicalize_typename	utils/postgis_restore.pl.in	/^canonicalize_typename$/;"	s
capacity	liblwgeom/stringbuffer.h	/^	size_t capacity;$/;"	m	struct:__anon26
cart2geog	liblwgeom/lwgeodetic.c	/^void cart2geog(const POINT3D *p, GEOGRAPHIC_POINT *g)$/;"	f
cells_covered	postgis/gserialized_estimate.c	/^	float4 cells_covered;$/;"	m	struct:ND_STATS_T	file:
center	liblwgeom/lwgeodetic_tree.h	/^	GEOGRAPHIC_POINT center;$/;"	m	struct:circ_node
centroid	postgis/lwgeom_geos.c	/^Datum centroid(PG_FUNCTION_ARGS)$/;"	f
centroid	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(centroid);$/;"	v
cextent	raster/rt_pg/rtpg_mapalgebra.c	/^	rt_raster cextent; \/* custom extent of type rt_raster *\/$/;"	m	struct:rtpg_nmapalgebra_arg_t	file:
chartrim	raster/loader/raster2pgsql.c	/^chartrim(const char *input, char *remove) {$/;"	f	file:
check	liblwgeom/lwin_wkb.c	/^	int check; \/* Simple validity checks on geometries *\/$/;"	m	struct:__anon24	file:
checkConsistency	java/jdbc/src/org/postgis/ComposedGeom.java	/^    public boolean checkConsistency() {$/;"	m	class:ComposedGeom
checkConsistency	java/jdbc/src/org/postgis/Geometry.java	/^	public boolean checkConsistency() {$/;"	m	class:Geometry
checkConsistency	java/jdbc/src/org/postgis/Point.java	/^    public boolean checkConsistency() {$/;"	m	class:Point
checkSrid	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    private boolean checkSrid(Geometry geom) {$/;"	m	class:JtsBinaryWriter	file:
check_authorization	extras/WFS_locks/WFS_locks.c	/^Datum check_authorization(PG_FUNCTION_ARGS)$/;"	f
check_authorization	extras/WFS_locks/WFS_locks.c	/^PG_FUNCTION_INFO_V1(check_authorization);$/;"	v
check_authorization	postgis/long_xact.c	/^Datum check_authorization(PG_FUNCTION_ARGS)$/;"	f
check_authorization	postgis/long_xact.c	/^PG_FUNCTION_INFO_V1(check_authorization);$/;"	v
check_changes	topology/test/regress/st_modedgesplit.sql	/^CREATE OR REPLACE FUNCTION check_changes()$/;"	f
check_changes	topology/test/regress/st_newedgessplit.sql	/^CREATE OR REPLACE FUNCTION check_changes()$/;"	f
check_changes	topology/test/regress/topogeo_addlinestring.sql	/^CREATE OR REPLACE FUNCTION check_changes()$/;"	f
check_changes	topology/test/regress/topogeo_addpolygon.sql	/^CREATE OR REPLACE FUNCTION check_changes()$/;"	f
check_dimension	liblwgeom/cunit/cu_surface.c	/^check_dimension(char *ewkt, int dim)$/;"	f	file:
check_geom_equal	liblwgeom/cunit/cu_buildarea.c	23;"	d	file:
check_geom_equal	liblwgeom/cunit/cu_clean.c	22;"	d	file:
check_hex	raster/scripts/python/raster2pgsql.py	/^def check_hex(hex, bytes_size = None):$/;"	f
checkbutton_chooser_geoonly	loader/shp2pgsql-gui.c	/^static GtkWidget *checkbutton_chooser_geoonly = NULL;$/;"	v	file:
checkbutton_dumper_options_includegid	loader/shp2pgsql-gui.c	/^static GtkWidget *checkbutton_dumper_options_includegid = NULL;$/;"	v	file:
checkbutton_dumper_options_keep_fieldname_case	loader/shp2pgsql-gui.c	/^static GtkWidget *checkbutton_dumper_options_keep_fieldname_case = NULL;$/;"	v	file:
checkbutton_dumper_options_unescapedattrs	loader/shp2pgsql-gui.c	/^static GtkWidget *checkbutton_dumper_options_unescapedattrs = NULL;$/;"	v	file:
checkbutton_loader_options_autoindex	loader/shp2pgsql-gui.c	/^static GtkWidget *checkbutton_loader_options_autoindex = NULL;$/;"	v	file:
checkbutton_loader_options_dbfonly	loader/shp2pgsql-gui.c	/^static GtkWidget *checkbutton_loader_options_dbfonly = NULL;$/;"	v	file:
checkbutton_loader_options_dumpformat	loader/shp2pgsql-gui.c	/^static GtkWidget *checkbutton_loader_options_dumpformat = NULL;$/;"	v	file:
checkbutton_loader_options_forceint	loader/shp2pgsql-gui.c	/^static GtkWidget *checkbutton_loader_options_forceint = NULL;$/;"	v	file:
checkbutton_loader_options_geography	loader/shp2pgsql-gui.c	/^static GtkWidget *checkbutton_loader_options_geography = NULL;$/;"	v	file:
checkbutton_loader_options_preservecase	loader/shp2pgsql-gui.c	/^static GtkWidget *checkbutton_loader_options_preservecase = NULL;$/;"	v	file:
checkbutton_loader_options_simplegeoms	loader/shp2pgsql-gui.c	/^static GtkWidget *checkbutton_loader_options_simplegeoms = NULL;$/;"	v	file:
chooser_filtered_table_list_store	loader/shp2pgsql-gui.c	/^GtkListStore *chooser_filtered_table_list_store;$/;"	v
chooser_schema_column	loader/shp2pgsql-gui.c	/^GtkTreeViewColumn *chooser_schema_column;$/;"	v
chooser_schema_renderer	loader/shp2pgsql-gui.c	/^GtkCellRenderer *chooser_schema_renderer;$/;"	v
chooser_table_column	loader/shp2pgsql-gui.c	/^GtkTreeViewColumn *chooser_table_column;$/;"	v
chooser_table_list_store	loader/shp2pgsql-gui.c	/^GtkListStore *chooser_table_list_store;$/;"	v
chooser_table_renderer	loader/shp2pgsql-gui.c	/^GtkCellRenderer *chooser_table_renderer;$/;"	v
chooser_tree	loader/shp2pgsql-gui.c	/^GtkWidget *chooser_tree;$/;"	v
circ_center_cartesian	liblwgeom/lwgeodetic_tree.c	/^circ_center_cartesian(const GEOGRAPHIC_POINT* c1, const GEOGRAPHIC_POINT* c2, double distance, double offset, GEOGRAPHIC_POINT* center)$/;"	f	file:
circ_center_spherical	liblwgeom/lwgeodetic_tree.c	/^circ_center_spherical(const GEOGRAPHIC_POINT* c1, const GEOGRAPHIC_POINT* c2, double distance, double offset, GEOGRAPHIC_POINT* center)$/;"	f	file:
circ_node	liblwgeom/lwgeodetic_tree.h	/^typedef struct circ_node$/;"	s
circ_node_compare	liblwgeom/lwgeodetic_tree.c	/^circ_node_compare(const void* v1, const void* v2)$/;"	f	file:
circ_node_internal_new	liblwgeom/lwgeodetic_tree.c	/^circ_node_internal_new(CIRC_NODE** c, int num_nodes)$/;"	f	file:
circ_node_is_leaf	liblwgeom/lwgeodetic_tree.c	/^circ_node_is_leaf(const CIRC_NODE* node)$/;"	f	file:
circ_node_leaf_new	liblwgeom/lwgeodetic_tree.c	/^circ_node_leaf_new(const POINTARRAY* pa, int i)$/;"	f	file:
circ_node_leaf_point_new	liblwgeom/lwgeodetic_tree.c	/^circ_node_leaf_point_new(const POINTARRAY* pa)$/;"	f	file:
circ_node_max_distance	liblwgeom/lwgeodetic_tree.c	/^circ_node_max_distance(const CIRC_NODE *n1, const CIRC_NODE *n2)$/;"	f	file:
circ_node_min_distance	liblwgeom/lwgeodetic_tree.c	/^circ_node_min_distance(const CIRC_NODE* n1, const CIRC_NODE* n2)$/;"	f	file:
circ_nodes_merge	liblwgeom/lwgeodetic_tree.c	/^circ_nodes_merge(CIRC_NODE** nodes, int num_nodes)$/;"	f	file:
circ_nodes_sort	liblwgeom/lwgeodetic_tree.c	/^circ_nodes_sort(CIRC_NODE** nodes, int num_nodes)$/;"	f	file:
circ_tree_contains_point	liblwgeom/lwgeodetic_tree.c	/^int circ_tree_contains_point(const CIRC_NODE* node, const POINT2D* pt, const POINT2D* pt_outside, int* on_boundary)$/;"	f
circ_tree_distance_tree	liblwgeom/lwgeodetic_tree.c	/^circ_tree_distance_tree(const CIRC_NODE* n1, const CIRC_NODE* n2, const SPHEROID* spheroid, double threshold)$/;"	f
circ_tree_distance_tree_internal	liblwgeom/lwgeodetic_tree.c	/^circ_tree_distance_tree_internal(const CIRC_NODE* n1, const CIRC_NODE* n2, double threshold, double* min_dist, double* max_dist, GEOGRAPHIC_POINT* closest1, GEOGRAPHIC_POINT* closest2)$/;"	f	file:
circ_tree_free	liblwgeom/lwgeodetic_tree.c	/^circ_tree_free(CIRC_NODE* node)$/;"	f
circ_tree_new	liblwgeom/lwgeodetic_tree.c	/^circ_tree_new(const POINTARRAY* pa)$/;"	f
circ_tree_print	liblwgeom/lwgeodetic_tree.c	/^void circ_tree_print(const CIRC_NODE* node, int depth)$/;"	f
circstring_from_pa	liblwgeom/lwsegmentize.c	/^circstring_from_pa(const POINTARRAY *pa, int srid, int start, int end)$/;"	f	file:
circularstring	liblwgeom/lwin_wkt_parse.y	/^circularstring : $/;"	l
circularstring	regress/sql-mm-circularstring.sql	/^CREATE TABLE public.circularstring (id INTEGER, description VARCHAR,$/;"	t
circularstring	regress/typmod.sql	/^CREATE TABLE tm.circularstring (id serial, g geometry(circularstring) );$/;"	t
circularstring.description	regress/sql-mm-circularstring.sql	/^CREATE TABLE public.circularstring (id INTEGER, description VARCHAR,$/;"	F
circularstring.g	regress/typmod.sql	/^CREATE TABLE tm.circularstring (id serial, g geometry(circularstring) );$/;"	F
circularstring.id	regress/sql-mm-circularstring.sql	/^CREATE TABLE public.circularstring (id INTEGER, description VARCHAR,$/;"	F
circularstring.id	regress/typmod.sql	/^CREATE TABLE tm.circularstring (id serial, g geometry(circularstring) );$/;"	F
circularstring.the_geom_2d	regress/sql-mm-circularstring.sql	/^the_geom_2d GEOMETRY(CIRCULARSTRING),$/;"	F
circularstring.the_geom_3dm	regress/sql-mm-circularstring.sql	/^the_geom_3dm GEOMETRY(CIRCULARSTRINGM),$/;"	F
circularstring.the_geom_3dz	regress/sql-mm-circularstring.sql	/^the_geom_3dz GEOMETRY(CIRCULARSTRINGZ),$/;"	F
circularstring.the_geom_4d	regress/sql-mm-circularstring.sql	/^the_geom_4d GEOMETRY(CIRCULARSTRINGZM));$/;"	F
circularstring0	regress/typmod.sql	/^CREATE TABLE tm.circularstring0 (id serial, g geometry(circularstring, 0) );$/;"	t
circularstring0.g	regress/typmod.sql	/^CREATE TABLE tm.circularstring0 (id serial, g geometry(circularstring, 0) );$/;"	F
circularstring0.id	regress/typmod.sql	/^CREATE TABLE tm.circularstring0 (id serial, g geometry(circularstring, 0) );$/;"	F
circularstring4326	regress/typmod.sql	/^CREATE TABLE tm.circularstring4326 (id serial, g geometry(circularstring, 4326) );$/;"	t
circularstring4326.g	regress/typmod.sql	/^CREATE TABLE tm.circularstring4326 (id serial, g geometry(circularstring, 4326) );$/;"	F
circularstring4326.id	regress/typmod.sql	/^CREATE TABLE tm.circularstring4326 (id serial, g geometry(circularstring, 4326) );$/;"	F
circularstringm	regress/typmod.sql	/^CREATE TABLE tm.circularstringm (id serial, g geometry(circularstringm) );$/;"	t
circularstringm.g	regress/typmod.sql	/^CREATE TABLE tm.circularstringm (id serial, g geometry(circularstringm) );$/;"	F
circularstringm.id	regress/typmod.sql	/^CREATE TABLE tm.circularstringm (id serial, g geometry(circularstringm) );$/;"	F
circularstringm0	regress/typmod.sql	/^CREATE TABLE tm.circularstringm0 (id serial, g geometry(circularstringm, 0) );$/;"	t
circularstringm0.g	regress/typmod.sql	/^CREATE TABLE tm.circularstringm0 (id serial, g geometry(circularstringm, 0) );$/;"	F
circularstringm0.id	regress/typmod.sql	/^CREATE TABLE tm.circularstringm0 (id serial, g geometry(circularstringm, 0) );$/;"	F
circularstringm4326	regress/typmod.sql	/^CREATE TABLE tm.circularstringm4326 (id serial, g geometry(circularstringm, 4326) );$/;"	t
circularstringm4326.g	regress/typmod.sql	/^CREATE TABLE tm.circularstringm4326 (id serial, g geometry(circularstringm, 4326) );$/;"	F
circularstringm4326.id	regress/typmod.sql	/^CREATE TABLE tm.circularstringm4326 (id serial, g geometry(circularstringm, 4326) );$/;"	F
circularstringz	regress/typmod.sql	/^CREATE TABLE tm.circularstringz (id serial, g geometry(circularstringz) );$/;"	t
circularstringz.g	regress/typmod.sql	/^CREATE TABLE tm.circularstringz (id serial, g geometry(circularstringz) );$/;"	F
circularstringz.id	regress/typmod.sql	/^CREATE TABLE tm.circularstringz (id serial, g geometry(circularstringz) );$/;"	F
circularstringz0	regress/typmod.sql	/^CREATE TABLE tm.circularstringz0 (id serial, g geometry(circularstringz, 0) );$/;"	t
circularstringz0.g	regress/typmod.sql	/^CREATE TABLE tm.circularstringz0 (id serial, g geometry(circularstringz, 0) );$/;"	F
circularstringz0.id	regress/typmod.sql	/^CREATE TABLE tm.circularstringz0 (id serial, g geometry(circularstringz, 0) );$/;"	F
circularstringz4326	regress/typmod.sql	/^CREATE TABLE tm.circularstringz4326 (id serial, g geometry(circularstringz, 4326) );$/;"	t
circularstringz4326.g	regress/typmod.sql	/^CREATE TABLE tm.circularstringz4326 (id serial, g geometry(circularstringz, 4326) );$/;"	F
circularstringz4326.id	regress/typmod.sql	/^CREATE TABLE tm.circularstringz4326 (id serial, g geometry(circularstringz, 4326) );$/;"	F
circularstringzm	regress/typmod.sql	/^CREATE TABLE tm.circularstringzm (id serial, g geometry(circularstringzm) );$/;"	t
circularstringzm.g	regress/typmod.sql	/^CREATE TABLE tm.circularstringzm (id serial, g geometry(circularstringzm) );$/;"	F
circularstringzm.id	regress/typmod.sql	/^CREATE TABLE tm.circularstringzm (id serial, g geometry(circularstringzm) );$/;"	F
circularstringzm0	regress/typmod.sql	/^CREATE TABLE tm.circularstringzm0 (id serial, g geometry(circularstringzm, 0) );$/;"	t
circularstringzm0.g	regress/typmod.sql	/^CREATE TABLE tm.circularstringzm0 (id serial, g geometry(circularstringzm, 0) );$/;"	F
circularstringzm0.id	regress/typmod.sql	/^CREATE TABLE tm.circularstringzm0 (id serial, g geometry(circularstringzm, 0) );$/;"	F
circularstringzm4326	regress/typmod.sql	/^CREATE TABLE tm.circularstringzm4326 (id serial, g geometry(circularstringzm, 4326) );$/;"	t
circularstringzm4326.g	regress/typmod.sql	/^CREATE TABLE tm.circularstringzm4326 (id serial, g geometry(circularstringzm, 4326) );$/;"	F
circularstringzm4326.id	regress/typmod.sql	/^CREATE TABLE tm.circularstringzm4326 (id serial, g geometry(circularstringzm, 4326) );$/;"	F
city	regress/sfcgal/tickets.sql	/^CREATE TABLE "city" ($/;"	t
city	regress/tickets.sql	/^CREATE TABLE "city" ($/;"	t
city.city_point_id	regress/sfcgal/tickets.sql	/^CREATE INDEX "city_point_id" ON "city" USING GIST ( "point" );$/;"	i
city.city_point_id	regress/tickets.sql	/^CREATE INDEX "city_point_id" ON "city" USING GIST ( "point" );$/;"	i
city.id	regress/sfcgal/tickets.sql	/^    "id" integer,$/;"	F
city.id	regress/tickets.sql	/^    "id" integer,$/;"	F
city.name	regress/sfcgal/tickets.sql	/^    "name" varchar(30) NOT NULL,$/;"	F
city.name	regress/tickets.sql	/^    "name" varchar(30) NOT NULL,$/;"	F
city.point	regress/sfcgal/tickets.sql	/^    "point" geometry(POINT,4326) NOT NULL$/;"	F
city.point	regress/tickets.sql	/^    "point" geometry(POINT,4326) NOT NULL$/;"	F
city_streets	topology/test/load_features.sql	/^CREATE TABLE features.city_streets ( -- City streets (selected edges)$/;"	t
city_streets.feature_name	topology/test/load_features.sql	/^  feature_name VARCHAR PRIMARY KEY) with oids;$/;"	F
clairaut_cartesian	liblwgeom/lwgeodetic.c	/^int clairaut_cartesian(const POINT3D *start, const POINT3D *end, GEOGRAPHIC_POINT *g_top, GEOGRAPHIC_POINT *g_bottom)$/;"	f
clairaut_geographic	liblwgeom/lwgeodetic.c	/^int clairaut_geographic(const GEOGRAPHIC_POINT *start, const GEOGRAPHIC_POINT *end, GEOGRAPHIC_POINT *g_top, GEOGRAPHIC_POINT *g_bottom)$/;"	f
clamp_srid	liblwgeom/lwutil.c	/^clamp_srid(int srid)$/;"	f
clamp_srid	utils/postgis_restore.pl.in	/^clamp_srid$/;"	s
clean_cases	regress/clean.sql	/^CREATE TABLE clean_cases (origin varchar, caseno numeric,$/;"	t
clean_cases.caseno	regress/clean.sql	/^CREATE TABLE clean_cases (origin varchar, caseno numeric,$/;"	F
clean_cases.orig	regress/clean.sql	/^                          orig geometry,$/;"	F
clean_cases.origin	regress/clean.sql	/^CREATE TABLE clean_cases (origin varchar, caseno numeric,$/;"	F
clean_cases.valid	regress/clean.sql	/^                          valid geometry);$/;"	F
clean_cg_suite	liblwgeom/cunit/cu_algorithm.c	/^static int clean_cg_suite(void)$/;"	f	file:
clean_pgsql2shp_suite	loader/cunit/cu_pgsql2shp.c	/^int clean_pgsql2shp_suite(void)$/;"	f
clean_shp2pgsql_suite	loader/cunit/cu_shp2pgsql.c	/^int clean_shp2pgsql_suite(void)$/;"	f
clean_suite	liblwgeom/cunit/cu_clean.c	/^CU_SuiteInfo clean_suite = {"clean",  NULL,  NULL, clean_tests};$/;"	v
clean_tests	liblwgeom/cunit/cu_clean.c	/^static CU_TestInfo clean_tests[] =$/;"	v	file:
clean_wkb_in_suite	liblwgeom/cunit/cu_in_wkb.c	/^static int clean_wkb_in_suite(void)$/;"	f	file:
clean_wkb_out_suite	liblwgeom/cunit/cu_out_wkb.c	/^static int clean_wkb_out_suite(void)$/;"	f	file:
clean_wkt_in_suite	liblwgeom/cunit/cu_in_wkt.c	/^static int clean_wkt_in_suite(void)$/;"	f	file:
clean_wkt_out_suite	liblwgeom/cunit/cu_out_wkt.c	/^static int clean_wkt_out_suite(void)$/;"	f	file:
cleanup	utils/uninstall_script	/^cleanup () {$/;"	f
clip_seg_by_m_range	postgis/lwgeom_functions_lrs.c	/^clip_seg_by_m_range(POINT4D *p1, POINT4D *p2, double m0, double m1)$/;"	f	file:
clone	java/jdbc/jtssrc/org/postgis/jts/JtsGeometry.java	/^    public Object clone() {$/;"	m	class:JtsGeometry
clone	java/jdbc/src/org/postgis/PGboxbase.java	/^    public Object clone() {$/;"	m	class:PGboxbase
clone	java/jdbc/src/org/postgis/PGgeometry.java	/^    public Object clone() {$/;"	m	class:PGgeometry
clone	java/jdbc/src/org/postgis/PGgeometryLW.java	/^    public Object clone() {$/;"	m	class:PGgeometryLW
closest_point_on_segment	liblwgeom/ptarray.c	/^closest_point_on_segment(const POINT4D *p, const POINT4D *A, const POINT4D *B, POINT4D *ret)$/;"	f
cmp_int	postgis/gserialized_estimate.c	/^cmp_int (const void *a, const void *b)$/;"	f	file:
cnt	liblwgeom/lwhomogenize.c	/^	int cnt[NUMTYPES];$/;"	m	struct:__anon27	file:
cnt	liblwgeom/lwpsurface.c	/^	int cnt, face;$/;"	m	struct:struct_psurface_arcs	file:
cnt	liblwgeom/lwtin.c	/^	int cnt, face;$/;"	m	struct:struct_tin_arcs	file:
code_page_entry	loader/shp2pgsql-core.c	/^} code_page_entry;$/;"	t	typeref:struct:__anon62	file:
code_pages	loader/shp2pgsql-core.c	/^static code_page_entry code_pages[] = {$/;"	v	file:
codepage2encoding	loader/shp2pgsql-core.c	/^codepage2encoding(const char *cpg)$/;"	f	file:
col_names	loader/shp2pgsql-core.h	/^	char *col_names;$/;"	m	struct:shp_loader_state
coll	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        final GeometryCollection coll;$/;"	f	class:JTSShape.GeometryCollectionPathIterator
collectFacesWithEvenAncestors	liblwgeom/lwgeom_geos.c	/^collectFacesWithEvenAncestors(Face** faces, int nfaces)$/;"	f	file:
collect_nodata_values	raster/scripts/python/raster2pgsql.py	/^def collect_nodata_values(ds, band_from, band_to):$/;"	f
collect_pixel_types	raster/scripts/python/raster2pgsql.py	/^def collect_pixel_types(ds, band_from, band_to):$/;"	f
color	raster/rt_core/librtcore.h	/^	uint8_t color[4]; \/* RGBA *\/$/;"	m	struct:rt_colormap_entry_t
colormap	raster/rt_pg/rtpg_mapalgebra.c	/^	rt_colormap colormap;$/;"	m	struct:rtpg_colormap_arg_t	file:
colour_step	raster/scripts/python/genraster.py	/^colour_step = 8$/;"	v
column	raster/scripts/python/rtreader.py	/^    column = property(fget = lambda self: self._column)$/;"	v	class:RasterReader
column_map_dbffieldnames	loader/pgsql2shp-core.h	/^	char **column_map_dbffieldnames;$/;"	m	struct:shp_dumper_state
column_map_filename	loader/pgsql2shp-core.h	/^	char *column_map_filename;$/;"	m	struct:shp_dumper_config
column_map_pgfieldnames	loader/pgsql2shp-core.h	/^	char **column_map_pgfieldnames;$/;"	m	struct:shp_dumper_state
column_map_size	loader/pgsql2shp-core.h	/^	int column_map_size;$/;"	m	struct:shp_dumper_state
columns	raster/rt_core/librtcore.h	/^	uint32_t columns;$/;"	m	struct:rt_iterator_arg_t
columns	raster/rt_core/rt_mapalgebra.c	/^		uint32_t columns;$/;"	m	struct:_rti_iterator_arg_t::__anon47	file:
columns	raster/rt_pg/rtpg_pixel.c	/^	int columns;$/;"	m	struct:rtpg_dumpvalues_arg_t	file:
columns	raster/test/cunit/cu_mapalgebra.c	/^	uint32_t columns;$/;"	m	struct:_callback_userargs_t	file:
com.geodetix.geo.client	java/ejb2/src/com/geodetix/geo/client/Client.java	/^package com.geodetix.geo.client;$/;"	p
com.geodetix.geo.dao	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAO.java	/^package com.geodetix.geo.dao;$/;"	p
com.geodetix.geo.dao	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAOImpl.java	/^package com.geodetix.geo.dao;$/;"	p
com.geodetix.geo.ejb	java/ejb2/src/com/geodetix/geo/ejb/GeometryBean.java	/^package com.geodetix.geo.ejb;$/;"	p
com.geodetix.geo.ejb	java/ejb2/src/com/geodetix/geo/ejb/GeometryFacadeBean.java	/^package com.geodetix.geo.ejb;$/;"	p
com.geodetix.geo.exception	java/ejb2/src/com/geodetix/geo/exception/ApplicationGeoLayerException.java	/^package com.geodetix.geo.exception;$/;"	p
common_entry_cmp	postgis/gserialized_gist_2d.c	/^common_entry_cmp(const void *i1, const void *i2)$/;"	f	file:
compareLazyDim	java/jdbc/src/org/postgis/PGboxbase.java	/^    protected static boolean compareLazyDim(Point first, Point second) {$/;"	m	class:PGboxbase
compare_KB	postgis/gserialized_gist_2d.c	/^compare_KB(const void* a, const void* b)$/;"	f	file:
compare_by_envarea	liblwgeom/lwgeom_geos.c	/^compare_by_envarea(const void* g1, const void* g2)$/;"	f	file:
compound_list	liblwgeom/lwin_wkt_parse.y	/^compound_list :$/;"	l
compoundcurve	liblwgeom/lwin_wkt_parse.y	/^compoundcurve :$/;"	l
compoundcurve	regress/sql-mm-compoundcurve.sql	/^CREATE TABLE public.compoundcurve (id INTEGER, description VARCHAR,$/;"	t
compoundcurve	regress/typmod.sql	/^CREATE TABLE tm.compoundcurve (id serial, g geometry(compoundcurve) );$/;"	t
compoundcurve.description	regress/sql-mm-compoundcurve.sql	/^CREATE TABLE public.compoundcurve (id INTEGER, description VARCHAR,$/;"	F
compoundcurve.g	regress/typmod.sql	/^CREATE TABLE tm.compoundcurve (id serial, g geometry(compoundcurve) );$/;"	F
compoundcurve.id	regress/sql-mm-compoundcurve.sql	/^CREATE TABLE public.compoundcurve (id INTEGER, description VARCHAR,$/;"	F
compoundcurve.id	regress/typmod.sql	/^CREATE TABLE tm.compoundcurve (id serial, g geometry(compoundcurve) );$/;"	F
compoundcurve.the_geom_2d	regress/sql-mm-compoundcurve.sql	/^the_geom_2d GEOMETRY(COMPOUNDCURVE),$/;"	F
compoundcurve.the_geom_3dm	regress/sql-mm-compoundcurve.sql	/^the_geom_3dm GEOMETRY(COMPOUNDCURVEM),$/;"	F
compoundcurve.the_geom_3dz	regress/sql-mm-compoundcurve.sql	/^the_geom_3dz GEOMETRY(COMPOUNDCURVEZ),$/;"	F
compoundcurve.the_geom_4d	regress/sql-mm-compoundcurve.sql	/^the_geom_4d GEOMETRY(COMPOUNDCURVEZM)$/;"	F
compoundcurve0	regress/typmod.sql	/^CREATE TABLE tm.compoundcurve0 (id serial, g geometry(compoundcurve, 0) );$/;"	t
compoundcurve0.g	regress/typmod.sql	/^CREATE TABLE tm.compoundcurve0 (id serial, g geometry(compoundcurve, 0) );$/;"	F
compoundcurve0.id	regress/typmod.sql	/^CREATE TABLE tm.compoundcurve0 (id serial, g geometry(compoundcurve, 0) );$/;"	F
compoundcurve4326	regress/typmod.sql	/^CREATE TABLE tm.compoundcurve4326 (id serial, g geometry(compoundcurve, 4326) );$/;"	t
compoundcurve4326.g	regress/typmod.sql	/^CREATE TABLE tm.compoundcurve4326 (id serial, g geometry(compoundcurve, 4326) );$/;"	F
compoundcurve4326.id	regress/typmod.sql	/^CREATE TABLE tm.compoundcurve4326 (id serial, g geometry(compoundcurve, 4326) );$/;"	F
compoundcurvem	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvem (id serial, g geometry(compoundcurvem) );$/;"	t
compoundcurvem.g	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvem (id serial, g geometry(compoundcurvem) );$/;"	F
compoundcurvem.id	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvem (id serial, g geometry(compoundcurvem) );$/;"	F
compoundcurvem0	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvem0 (id serial, g geometry(compoundcurvem, 0) );$/;"	t
compoundcurvem0.g	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvem0 (id serial, g geometry(compoundcurvem, 0) );$/;"	F
compoundcurvem0.id	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvem0 (id serial, g geometry(compoundcurvem, 0) );$/;"	F
compoundcurvem4326	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvem4326 (id serial, g geometry(compoundcurvem, 4326) );$/;"	t
compoundcurvem4326.g	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvem4326 (id serial, g geometry(compoundcurvem, 4326) );$/;"	F
compoundcurvem4326.id	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvem4326 (id serial, g geometry(compoundcurvem, 4326) );$/;"	F
compoundcurvez	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvez (id serial, g geometry(compoundcurvez) );$/;"	t
compoundcurvez.g	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvez (id serial, g geometry(compoundcurvez) );$/;"	F
compoundcurvez.id	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvez (id serial, g geometry(compoundcurvez) );$/;"	F
compoundcurvez0	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvez0 (id serial, g geometry(compoundcurvez, 0) );$/;"	t
compoundcurvez0.g	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvez0 (id serial, g geometry(compoundcurvez, 0) );$/;"	F
compoundcurvez0.id	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvez0 (id serial, g geometry(compoundcurvez, 0) );$/;"	F
compoundcurvez4326	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvez4326 (id serial, g geometry(compoundcurvez, 4326) );$/;"	t
compoundcurvez4326.g	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvez4326 (id serial, g geometry(compoundcurvez, 4326) );$/;"	F
compoundcurvez4326.id	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvez4326 (id serial, g geometry(compoundcurvez, 4326) );$/;"	F
compoundcurvezm	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvezm (id serial, g geometry(compoundcurvezm) );$/;"	t
compoundcurvezm.g	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvezm (id serial, g geometry(compoundcurvezm) );$/;"	F
compoundcurvezm.id	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvezm (id serial, g geometry(compoundcurvezm) );$/;"	F
compoundcurvezm0	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvezm0 (id serial, g geometry(compoundcurvezm, 0) );$/;"	t
compoundcurvezm0.g	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvezm0 (id serial, g geometry(compoundcurvezm, 0) );$/;"	F
compoundcurvezm0.id	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvezm0 (id serial, g geometry(compoundcurvezm, 0) );$/;"	F
compoundcurvezm4326	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvezm4326 (id serial, g geometry(compoundcurvezm, 4326) );$/;"	t
compoundcurvezm4326.g	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvezm4326 (id serial, g geometry(compoundcurvezm, 4326) );$/;"	F
compoundcurvezm4326.id	regress/typmod.sql	/^CREATE TABLE tm.compoundcurvezm4326 (id serial, g geometry(compoundcurvezm, 4326) );$/;"	F
compute_gserialized_stats	postgis/gserialized_estimate.c	/^compute_gserialized_stats(VacAttrStats *stats, AnalyzeAttrFetchFunc fetchfunc,$/;"	f	file:
compute_gserialized_stats_mode	postgis/gserialized_estimate.c	/^compute_gserialized_stats_mode(VacAttrStats *stats, AnalyzeAttrFetchFunc fetchfunc,$/;"	f	file:
concat	java/jdbc/src/org/postgis/LineString.java	/^    public LineString concat(LineString other) {$/;"	m	class:LineString
config	loader/pgsql2shp-core.h	/^	SHPDUMPERCONFIG *config;$/;"	m	struct:shp_dumper_state
config	loader/shp2pgsql-core.h	/^	SHPLOADERCONFIG *config;$/;"	m	struct:shp_loader_state
conn	loader/pgsql2shp-core.h	/^	PGconn *conn;$/;"	m	struct:shp_dumper_state
conn	loader/pgsql2shp-core.h	/^	SHPCONNECTIONCONFIG *conn;$/;"	m	struct:shp_dumper_config
conn	loader/shp2pgsql-gui.c	/^static SHPCONNECTIONCONFIG *conn = NULL;$/;"	v	file:
connect	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    public static Connection connect(String url, String dbuser, String dbpass) throws SQLException {$/;"	m	class:JtsTestParser
connect	java/jdbc/jtssrc/org/postgis/jts/JtsGisWrapper.java	/^    public java.sql.Connection connect(String url, Properties info) throws SQLException {$/;"	m	class:JtsGisWrapper
connect	java/jdbc/jtssrc/org/postgis/jts/JtsWrapper.java	/^    public java.sql.Connection connect(String url, Properties info) throws SQLException {$/;"	m	class:JtsWrapper
connect	java/jdbc/src/examples/TestBoxes.java	/^    public static Connection connect(String url, String dbuser, String dbpass) throws SQLException,$/;"	m	class:TestBoxes
connect	java/jdbc/src/examples/TestParser.java	/^    public static Connection connect(String url, String dbuser, String dbpass) throws SQLException {$/;"	m	class:TestParser
connect	java/jdbc/src/org/postgis/DriverWrapper.java	/^    public java.sql.Connection connect(String url, Properties info) throws SQLException {$/;"	m	class:DriverWrapper
connect	java/jdbc/src/org/postgis/java2d/Java2DWrapper.java	/^    public java.sql.Connection connect(String url, Properties info) throws SQLException {$/;"	m	class:Java2DWrapper
connectionFactory	java/ejb3/src/org/postgis/ejb/UserBean.java	/^	private QueueConnectionFactory connectionFactory;$/;"	f	class:UserBean	file:
connection_test	loader/shp2pgsql-gui.c	/^connection_test(void)$/;"	f	file:
constraints	raster/loader/raster2pgsql.h	/^	int constraints;$/;"	m	struct:raster_loader_config
contains	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^    public boolean contains(Point2D p) {$/;"	m	class:JTSShape
contains	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^    public boolean contains(Rectangle2D r) {$/;"	m	class:JTSShape
contains	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^    public boolean contains(double x, double y) {$/;"	m	class:JTSShape
contains	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^    public boolean contains(double x, double y, double w, double h) {$/;"	m	class:JTSShape
contains	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^    public boolean contains(Point2D p) {$/;"	m	class:PGShapeGeometry
contains	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^    public boolean contains(Rectangle2D r) {$/;"	m	class:PGShapeGeometry
contains	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^    public boolean contains(double x, double y) {$/;"	m	class:PGShapeGeometry
contains	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^    public boolean contains(double x, double y, double w, double h) {$/;"	m	class:PGShapeGeometry
contains	postgis/lwgeom_geos.c	/^Datum contains(PG_FUNCTION_ARGS)$/;"	f
contains	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(contains);$/;"	v
containsproperly	postgis/lwgeom_geos.c	/^Datum containsproperly(PG_FUNCTION_ARGS)$/;"	f
containsproperly	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(containsproperly);$/;"	v
context	postgis/lwgeom_geos_prepared.c	/^	MemoryContext context;$/;"	m	struct:__anon16	file:
context_callback	postgis/lwgeom_geos_prepared.h	/^	MemoryContext               context_callback;$/;"	m	struct:__anon7
context_statement	postgis/lwgeom_geos_prepared.h	/^	MemoryContext               context_statement;$/;"	m	struct:__anon7
convertToId	doc/html/search/search.js	/^function convertToId(search)$/;"	f
convert_bytes_to_hex	loader/pgsql2shp-core.c	/^char *convert_bytes_to_hex(uint8_t *ewkb, size_t size)$/;"	f
convert_raster	raster/loader/raster2pgsql.c	/^convert_raster(int idx, RTLOADERCFG *config, RASTERINFO *info, STRINGBUFFER *tileset, STRINGBUFFER *buffer) {$/;"	f	file:
convexhull	postgis/lwgeom_geos.c	/^Datum convexhull(PG_FUNCTION_ARGS)$/;"	f
convexhull	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(convexhull);$/;"	v
coordinate	liblwgeom/lwin_wkt_parse.y	/^coordinate : $/;"	l
coordinatevalue	liblwgeom/lwin_wkt_parse.c	/^	POINT coordinatevalue;$/;"	m	union:YYSTYPE	file:
coordinatevalue	liblwgeom/lwin_wkt_parse.h	/^	POINT coordinatevalue;$/;"	m	union:YYSTYPE
copy_from	raster/loader/raster2pgsql.c	/^copy_from($/;"	f	file:
copy_from_end	raster/loader/raster2pgsql.c	/^copy_from_end(STRINGBUFFER *buffer) {$/;"	f	file:
copy_rastinfo	raster/loader/raster2pgsql.c	/^copy_rastinfo(RASTERINFO *dst, RASTERINFO *src) {$/;"	f	file:
copy_statements	raster/loader/raster2pgsql.h	/^	int copy_statements;$/;"	m	struct:raster_loader_config
copy_to	raster/scripts/python/rtreader.py	/^    def copy_to(self, file, raster_format='TIFF', output_format='HEX', sep='\\t'):$/;"	m	class:RasterReader
coreIntHandler	postgis/postgis_module.c	/^static pqsigfunc coreIntHandler = 0;$/;"	v	file:
count	raster/rt_core/librtcore.h	/^	uint32_t count; \/* # of elements in H *\/$/;"	m	struct:quantile_llist
count	raster/rt_core/librtcore.h	/^	uint32_t count;$/;"	m	struct:quantile_llist_element
count	raster/rt_core/librtcore.h	/^	uint32_t count;$/;"	m	struct:rt_bandstats_t
count	raster/rt_core/librtcore.h	/^	uint32_t count;$/;"	m	struct:rt_histogram_t
count	raster/rt_core/librtcore.h	/^	uint32_t count;$/;"	m	struct:rt_valuecount_t
count	raster/rt_core/rt_mapalgebra.c	/^	int count;$/;"	m	struct:_rti_iterator_arg_t	file:
count	raster/rt_pg/rtpg_mapalgebra.c	/^		int count;$/;"	m	struct:__anon50::__anon53	file:
count	raster/scripts/python/genraster.py	/^        count = count + 1$/;"	v
count	raster/scripts/python/genraster.py	/^count = 0$/;"	v
countParens	liblwgeom/lwgeom_geos.c	/^countParens(const Face* f)$/;"	f	file:
count_db_objects	regress/run_test	/^count_db_objects ()$/;"	f
count_db_objects	regress/run_test.pl	/^sub count_db_objects$/;"	s
count_words	extras/tiger_geocoder/tiger_2011/normalize/count_words.sql	/^CREATE OR REPLACE FUNCTION count_words(VARCHAR) RETURNS INTEGER$/;"	f
county	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE county$/;"	t
county.aland	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  aland bigint,$/;"	F
county.awater	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  awater  double precision,$/;"	F
county.cbsafp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  cbsafp character varying(5),$/;"	F
county.classfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  classfp character varying(2),$/;"	F
county.cntyidfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  cntyidfp character varying(5) NOT NULL,$/;"	F
county.countyfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  countyfp character varying(3),$/;"	F
county.countyns	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  countyns character varying(8),$/;"	F
county.csafp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  csafp character varying(3),$/;"	F
county.funcstat	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  funcstat character varying(1),$/;"	F
county.gid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  gid SERIAL NOT NULL,$/;"	F
county.idx_tiger_county	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX idx_tiger_county ON county USING btree (countyfp);$/;"	i
county.intptlat	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  intptlat character varying(11),$/;"	F
county.intptlon	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  intptlon character varying(12),$/;"	F
county.lsad	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  lsad character varying(2),$/;"	F
county.metdivfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  metdivfp character varying(5),$/;"	F
county.mtfcc	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  mtfcc character varying(5),$/;"	F
county.name	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  "name" character varying(100),$/;"	F
county.namelsad	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  namelsad character varying(100),$/;"	F
county.statefp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  statefp character varying(2),$/;"	F
county.the_geom	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  the_geom geometry,$/;"	F
county_lookup	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE county_lookup ($/;"	t
county_lookup.co_code	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    co_code INTEGER,$/;"	F
county_lookup.county_lookup_name_idx	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX county_lookup_name_idx ON county_lookup (soundex(name));$/;"	i
county_lookup.county_lookup_state_idx	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX county_lookup_state_idx ON county_lookup (state);$/;"	i
county_lookup.name	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    name    VARCHAR(90),$/;"	F
county_lookup.st_code	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    st_code INTEGER,$/;"	F
county_lookup.state	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    state   VARCHAR(2),$/;"	F
countysub_lookup	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE countysub_lookup ($/;"	t
countysub_lookup.co_code	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    co_code INTEGER,$/;"	F
countysub_lookup.county	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    county  VARCHAR(90),$/;"	F
countysub_lookup.countysub_lookup_name_idx	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX countysub_lookup_name_idx ON countysub_lookup (soundex(name));$/;"	i
countysub_lookup.countysub_lookup_state_idx	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX countysub_lookup_state_idx ON countysub_lookup (state);$/;"	i
countysub_lookup.cs_code	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    cs_code INTEGER,$/;"	F
countysub_lookup.name	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    name    VARCHAR(90),$/;"	F
countysub_lookup.st_code	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    st_code INTEGER,$/;"	F
countysub_lookup.state	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    state   VARCHAR(2),$/;"	F
cousub	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE cousub$/;"	t
cousub.aland	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  aland numeric(14),$/;"	F
cousub.awater	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  awater numeric(14),$/;"	F
cousub.classfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  classfp character varying(2),$/;"	F
cousub.cnectafp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  cnectafp character varying(3),$/;"	F
cousub.cosbidfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  cosbidfp character varying(10) NOT NULL PRIMARY KEY,$/;"	F
cousub.countyfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  countyfp character varying(3),$/;"	F
cousub.cousubfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  cousubfp character varying(5),$/;"	F
cousub.cousubns	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  cousubns character varying(8),$/;"	F
cousub.funcstat	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  funcstat character varying(1),$/;"	F
cousub.gid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  gid serial NOT NULL,$/;"	F
cousub.intptlat	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  intptlat character varying(11),$/;"	F
cousub.intptlon	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  intptlon character varying(12),$/;"	F
cousub.lsad	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  lsad character varying(2),$/;"	F
cousub.mtfcc	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  mtfcc character varying(5),$/;"	F
cousub.name	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  "name" character varying(100),$/;"	F
cousub.namelsad	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  namelsad character varying(100),$/;"	F
cousub.nctadvfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  nctadvfp character varying(5),$/;"	F
cousub.nectafp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  nectafp character varying(5),$/;"	F
cousub.statefp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  statefp character varying(2),$/;"	F
cousub.the_geom	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  the_geom geometry,$/;"	F
cousub.tige_cousub_the_geom_gist	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX tige_cousub_the_geom_gist ON cousub USING gist(the_geom);$/;"	i
coveredby	postgis/lwgeom_geos.c	/^Datum coveredby(PG_FUNCTION_ARGS)$/;"	f
coveredby	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(coveredby);$/;"	v
covers	postgis/lwgeom_geos.c	/^Datum covers(PG_FUNCTION_ARGS)$/;"	f
covers	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(covers);$/;"	v
cpg	loader/shp2pgsql-core.c	/^    int cpg;$/;"	m	struct:__anon62	file:
create	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAOImpl.java	/^    public java.lang.Integer create(com.geodetix.geo.ejb.GeometryBean ejb)$/;"	m	class:PostGisGeometryDAOImpl
createGeometry	java/ejb2/src/com/geodetix/geo/ejb/GeometryFacadeBean.java	/^    public GeometryValue createGeometry(org.postgis.Geometry geometry, String description)$/;"	m	class:GeometryFacadeBean
createGeometryTable	java/ejb2/src/com/geodetix/geo/ejb/GeometryFacadeBean.java	/^    public void createGeometryTable() throws ApplicationGeoLayerException {$/;"	m	class:GeometryFacadeBean
createGeometryTable	java/ejb2/src/com/geodetix/geo/ejb/GeometryFacadeBean.java	/^    public void createGeometryTable(String gemetryType, int srid, int geometryDimension )$/;"	m	class:GeometryFacadeBean
createRect	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^    protected Polygon createRect(double x, double y, double w, double h) {$/;"	m	class:JTSShape
createResults	doc/html/search/search.js	/^function createResults()$/;"	f
createSubGeomArray	java/jdbc/src/org/postgis/ComposedGeom.java	/^    protected abstract Geometry[] createSubGeomArray(int size);$/;"	m	class:ComposedGeom
createSubGeomArray	java/jdbc/src/org/postgis/GeometryCollection.java	/^    protected Geometry[] createSubGeomArray(int ngeoms) {$/;"	m	class:GeometryCollection
createSubGeomArray	java/jdbc/src/org/postgis/MultiLineString.java	/^    protected Geometry[] createSubGeomArray(int nlines) {$/;"	m	class:MultiLineString
createSubGeomArray	java/jdbc/src/org/postgis/MultiPolygon.java	/^    protected Geometry[] createSubGeomArray(int npolygons) {$/;"	m	class:MultiPolygon
createSubGeomArray	java/jdbc/src/org/postgis/PointComposedGeom.java	/^    protected Geometry[] createSubGeomArray(int pointcount) {$/;"	m	class:PointComposedGeom
createSubGeomArray	java/jdbc/src/org/postgis/Polygon.java	/^    protected Geometry[] createSubGeomArray(int ringcount) {$/;"	m	class:Polygon
createSubGeomInstance	java/jdbc/src/org/postgis/ComposedGeom.java	/^    protected abstract Geometry createSubGeomInstance(String token, boolean haveM)$/;"	m	class:ComposedGeom
createSubGeomInstance	java/jdbc/src/org/postgis/GeometryCollection.java	/^    protected Geometry createSubGeomInstance(String token, boolean haveM) throws SQLException {$/;"	m	class:GeometryCollection
createSubGeomInstance	java/jdbc/src/org/postgis/MultiLineString.java	/^    protected Geometry createSubGeomInstance(String token, boolean haveM) throws SQLException {$/;"	m	class:MultiLineString
createSubGeomInstance	java/jdbc/src/org/postgis/MultiPolygon.java	/^    protected Geometry createSubGeomInstance(String token, boolean haveM) throws SQLException {$/;"	m	class:MultiPolygon
createSubGeomInstance	java/jdbc/src/org/postgis/PointComposedGeom.java	/^    protected Geometry createSubGeomInstance(String token, boolean haveM) throws SQLException {$/;"	m	class:PointComposedGeom
createSubGeomInstance	java/jdbc/src/org/postgis/Polygon.java	/^    protected Geometry createSubGeomInstance(String token, boolean haveM) throws SQLException {$/;"	m	class:Polygon
create_census_base_tables	extras/tiger_geocoder/tiger_2011/census_loader.sql	/^CREATE OR REPLACE FUNCTION create_census_base_tables() $/;"	f
create_index	raster/loader/raster2pgsql.c	/^create_index($/;"	f	file:
create_linestring	loader/pgsql2shp-core.c	/^create_linestring(SHPDUMPERSTATE *state, LWLINE *lwlinestring)$/;"	f	file:
create_multilinestring	loader/pgsql2shp-core.c	/^create_multilinestring(SHPDUMPERSTATE *state, LWMLINE *lwmultilinestring)$/;"	f	file:
create_multipoint	loader/pgsql2shp-core.c	/^create_multipoint(SHPDUMPERSTATE *state, LWMPOINT *lwmultipoint)$/;"	f	file:
create_multipolygon	loader/pgsql2shp-core.c	/^create_multipolygon(SHPDUMPERSTATE *state, LWMPOLY *lwmultipolygon)$/;"	f	file:
create_new_file_config	loader/shp2pgsql-gui.c	/^create_new_file_config(const char *filename)$/;"	f	file:
create_new_table_config	loader/shp2pgsql-gui.c	/^create_new_table_config(GtkTreeIter *iter)$/;"	f	file:
create_options	raster/rt_core/librtcore.h	/^	char *create_options;$/;"	m	struct:rt_gdaldriver_t
create_point	loader/pgsql2shp-core.c	/^create_point(SHPDUMPERSTATE *state, LWPOINT *lwpoint)$/;"	f	file:
create_polygon	loader/pgsql2shp-core.c	/^create_polygon(SHPDUMPERSTATE *state, LWPOLY *lwpolygon)$/;"	f	file:
create_schema	extras/tiger_geocoder/tiger_2011/legacy_import/tiger2008/import_tiger_shps.sh	/^function create_schema () {$/;"	f
create_spatial	regress/run_test	/^create_spatial ()$/;"	f
create_spatial	regress/run_test.pl	/^sub create_spatial $/;"	s
create_table	raster/loader/raster2pgsql.c	/^create_table($/;"	f	file:
createindex	loader/shp2pgsql-core.h	/^	int createindex;$/;"	m	struct:shp_loader_config
cross_product	liblwgeom/lwgeodetic.c	/^static void cross_product(const POINT3D *a, const POINT3D *b, POINT3D *n)$/;"	f	file:
crosses	postgis/lwgeom_geos.c	/^Datum crosses(PG_FUNCTION_ARGS)$/;"	f
crosses	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(crosses);$/;"	v
crosses_dateline	liblwgeom/lwgeodetic.c	/^int crosses_dateline(const GEOGRAPHIC_POINT *s, const GEOGRAPHIC_POINT *e)$/;"	f
cs	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        CoordinateSequence cs;$/;"	f	class:JTSShape.LineStringPathIterator
csfac	java/jdbc/jtssrc/org/postgis/jts/JtsGeometry.java	/^    final static CoordinateSequenceFactory csfac = PackedCoordinateSequenceFactory.DOUBLE_FACTORY;$/;"	f	class:JtsGeometry
cstring2text	libpgcommon/lwgeom_pg.c	/^cstring2text(const char *cstring)$/;"	f
ctx	java/ejb2/src/com/geodetix/geo/ejb/GeometryFacadeBean.java	/^    private SessionContext ctx;$/;"	f	class:GeometryFacadeBean	file:
ctx_t	raster/rt_core/rt_context.c	/^static struct rt_context_t ctx_t = {$/;"	v	typeref:struct:rt_context_t	file:
cu_add_band	raster/test/cunit/cu_tester.c	/^rt_band cu_add_band(rt_raster raster, rt_pixtype pixtype, int hasnodata, double nodataval) {$/;"	f
cu_error_msg	liblwgeom/cunit/cu_tester.h	/^char cu_error_msg[MAX_CUNIT_ERROR_LENGTH+1];$/;"	v
cu_error_msg	raster/test/cunit/cu_tester.h	/^char cu_error_msg[MAX_CUNIT_MSG_LENGTH+1];$/;"	v
cu_error_msg_reset	liblwgeom/cunit/cu_tester.c	/^cu_error_msg_reset()$/;"	f
cu_error_msg_reset	raster/test/cunit/cu_tester.c	/^void cu_error_msg_reset() {$/;"	f
cu_error_reporter	raster/test/cunit/cu_tester.c	/^static void cu_error_reporter(const char *fmt, va_list ap) {$/;"	f	file:
cu_errorreporter	liblwgeom/cunit/cu_tester.c	/^cu_errorreporter(const char *fmt, va_list ap)$/;"	f	file:
cu_free_raster	raster/test/cunit/cu_tester.c	/^void cu_free_raster(rt_raster raster) {$/;"	f
cu_wkb	liblwgeom/cunit/cu_out_wkb.c	/^static void cu_wkb(char *wkt)$/;"	f	file:
cu_wkb_from_hexwkb	liblwgeom/cunit/cu_out_wkb.c	/^static void cu_wkb_from_hexwkb(char *hexwkb)$/;"	f	file:
cu_wkb_in	liblwgeom/cunit/cu_in_wkb.c	/^static void cu_wkb_in(char *wkt)$/;"	f	file:
cu_wkb_malformed_in	liblwgeom/cunit/cu_in_wkb.c	/^static void cu_wkb_malformed_in(char *hex)$/;"	f	file:
cu_wkt	liblwgeom/cunit/cu_out_wkt.c	/^static char* cu_wkt(char *wkt, uint8_t variant)$/;"	f	file:
cu_wkt_in	liblwgeom/cunit/cu_in_wkt.c	/^static char* cu_wkt_in(char *wkt, uint8_t variant)$/;"	f	file:
cull_null	extras/tiger_geocoder/tiger_2011/utility/cull_null.sql	/^CREATE OR REPLACE FUNCTION cull_null(VARCHAR) RETURNS VARCHAR$/;"	f
current	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        GeometryPathIterator current;$/;"	f	class:JTSShape.GeometryCollectionPathIterator
currentSegment	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        public int currentSegment(double[] coords) {$/;"	m	class:JTSShape.GeometryCollectionPathIterator
currentSegment	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        public int currentSegment(double[] coords) {$/;"	m	class:JTSShape.LineStringPathIterator
currentSegment	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        public int currentSegment(double[] coords) {$/;"	m	class:JTSShape.PointPathIterator
currentSegment	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        public int currentSegment(float[] coords) {$/;"	m	class:JTSShape.GeometryCollectionPathIterator
currentSegment	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        public int currentSegment(float[] coords) {$/;"	m	class:JTSShape.LineStringPathIterator
currentSegment	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        public int currentSegment(float[] coords) {$/;"	m	class:JTSShape.PointPathIterator
currescount	loader/pgsql2shp-core.h	/^	int currescount;$/;"	m	struct:shp_dumper_state
curresrow	loader/pgsql2shp-core.h	/^	int curresrow;$/;"	m	struct:shp_dumper_state
currow	loader/pgsql2shp-core.h	/^	int currow;$/;"	m	struct:shp_dumper_state
curve_list	liblwgeom/lwin_wkt_parse.y	/^curve_list :$/;"	l
curvepolygon	liblwgeom/lwin_wkt_parse.y	/^curvepolygon :$/;"	l
curvepolygon	regress/sql-mm-curvepoly.sql	/^CREATE TABLE public.curvepolygon (id INTEGER, description VARCHAR,$/;"	t
curvepolygon	regress/typmod.sql	/^CREATE TABLE tm.curvepolygon (id serial, g geometry(curvepolygon) );$/;"	t
curvepolygon.description	regress/sql-mm-curvepoly.sql	/^CREATE TABLE public.curvepolygon (id INTEGER, description VARCHAR,$/;"	F
curvepolygon.g	regress/typmod.sql	/^CREATE TABLE tm.curvepolygon (id serial, g geometry(curvepolygon) );$/;"	F
curvepolygon.id	regress/sql-mm-curvepoly.sql	/^CREATE TABLE public.curvepolygon (id INTEGER, description VARCHAR,$/;"	F
curvepolygon.id	regress/typmod.sql	/^CREATE TABLE tm.curvepolygon (id serial, g geometry(curvepolygon) );$/;"	F
curvepolygon.the_geom_2d	regress/sql-mm-curvepoly.sql	/^the_geom_2d GEOMETRY(CURVEPOLYGON),$/;"	F
curvepolygon.the_geom_3dm	regress/sql-mm-curvepoly.sql	/^the_geom_3dm GEOMETRY(CURVEPOLYGONM),$/;"	F
curvepolygon.the_geom_3dz	regress/sql-mm-curvepoly.sql	/^the_geom_3dz GEOMETRY(CURVEPOLYGONZ),$/;"	F
curvepolygon.the_geom_4d	regress/sql-mm-curvepoly.sql	/^the_geom_4d GEOMETRY(CURVEPOLYGONZM));$/;"	F
curvepolygon0	regress/typmod.sql	/^CREATE TABLE tm.curvepolygon0 (id serial, g geometry(curvepolygon, 0) );$/;"	t
curvepolygon0.g	regress/typmod.sql	/^CREATE TABLE tm.curvepolygon0 (id serial, g geometry(curvepolygon, 0) );$/;"	F
curvepolygon0.id	regress/typmod.sql	/^CREATE TABLE tm.curvepolygon0 (id serial, g geometry(curvepolygon, 0) );$/;"	F
curvepolygon4326	regress/typmod.sql	/^CREATE TABLE tm.curvepolygon4326 (id serial, g geometry(curvepolygon, 4326) );$/;"	t
curvepolygon4326.g	regress/typmod.sql	/^CREATE TABLE tm.curvepolygon4326 (id serial, g geometry(curvepolygon, 4326) );$/;"	F
curvepolygon4326.id	regress/typmod.sql	/^CREATE TABLE tm.curvepolygon4326 (id serial, g geometry(curvepolygon, 4326) );$/;"	F
curvepolygonm	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonm (id serial, g geometry(curvepolygonm) );$/;"	t
curvepolygonm.g	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonm (id serial, g geometry(curvepolygonm) );$/;"	F
curvepolygonm.id	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonm (id serial, g geometry(curvepolygonm) );$/;"	F
curvepolygonm0	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonm0 (id serial, g geometry(curvepolygonm, 0) );$/;"	t
curvepolygonm0.g	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonm0 (id serial, g geometry(curvepolygonm, 0) );$/;"	F
curvepolygonm0.id	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonm0 (id serial, g geometry(curvepolygonm, 0) );$/;"	F
curvepolygonm4326	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonm4326 (id serial, g geometry(curvepolygonm, 4326) );$/;"	t
curvepolygonm4326.g	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonm4326 (id serial, g geometry(curvepolygonm, 4326) );$/;"	F
curvepolygonm4326.id	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonm4326 (id serial, g geometry(curvepolygonm, 4326) );$/;"	F
curvepolygonz	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonz (id serial, g geometry(curvepolygonz) );$/;"	t
curvepolygonz.g	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonz (id serial, g geometry(curvepolygonz) );$/;"	F
curvepolygonz.id	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonz (id serial, g geometry(curvepolygonz) );$/;"	F
curvepolygonz0	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonz0 (id serial, g geometry(curvepolygonz, 0) );$/;"	t
curvepolygonz0.g	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonz0 (id serial, g geometry(curvepolygonz, 0) );$/;"	F
curvepolygonz0.id	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonz0 (id serial, g geometry(curvepolygonz, 0) );$/;"	F
curvepolygonz4326	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonz4326 (id serial, g geometry(curvepolygonz, 4326) );$/;"	t
curvepolygonz4326.g	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonz4326 (id serial, g geometry(curvepolygonz, 4326) );$/;"	F
curvepolygonz4326.id	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonz4326 (id serial, g geometry(curvepolygonz, 4326) );$/;"	F
curvepolygonzm	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonzm (id serial, g geometry(curvepolygonzm) );$/;"	t
curvepolygonzm.g	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonzm (id serial, g geometry(curvepolygonzm) );$/;"	F
curvepolygonzm.id	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonzm (id serial, g geometry(curvepolygonzm) );$/;"	F
curvepolygonzm0	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonzm0 (id serial, g geometry(curvepolygonzm, 0) );$/;"	t
curvepolygonzm0.g	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonzm0 (id serial, g geometry(curvepolygonzm, 0) );$/;"	F
curvepolygonzm0.id	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonzm0 (id serial, g geometry(curvepolygonzm, 0) );$/;"	F
curvepolygonzm4326	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonzm4326 (id serial, g geometry(curvepolygonzm, 4326) );$/;"	t
curvepolygonzm4326.g	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonzm4326 (id serial, g geometry(curvepolygonzm, 4326) );$/;"	F
curvepolygonzm4326.id	regress/typmod.sql	/^CREATE TABLE tm.curvepolygonzm4326 (id serial, g geometry(curvepolygonzm, 4326) );$/;"	F
curvering	liblwgeom/lwin_wkt_parse.y	/^curvering :$/;"	l
curvering_list	liblwgeom/lwin_wkt_parse.y	/^curvering_list :$/;"	l
cutint	java/jdbc/src/org/postgis/Point.java	/^    private static void cutint(StringBuffer sb) {$/;"	m	class:Point	file:
d_binary_to_hex	raster/rt_core/rt_serialize.c	/^d_binary_to_hex(const uint8_t * const raw, uint32_t size, uint32_t *hexsize) {$/;"	f
d_binptr_to_pos	raster/rt_core/rt_serialize.c	/^d_binptr_to_pos(const uint8_t * const ptr, const uint8_t * const end, size_t size) {$/;"	f
d_print_binary_hex	raster/rt_core/rt_serialize.c	/^d_print_binary_hex(const char* msg, const uint8_t * const raw, uint32_t size) {$/;"	f
data	java/jdbc/src/org/postgis/binary/ValueGetter.java	/^    ByteGetter data;$/;"	f	class:ValueGetter
data	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^    ByteSetter data;$/;"	f	class:ValueSetter
data	libpgcommon/lwgeom_cache.c	/^	char data[1];$/;"	m	struct:__anon5	file:
data	raster/rt_core/librtcore.h	/^    } data;$/;"	m	struct:rt_band_t	typeref:union:rt_band_t::__anon39
data	raster/scripts/python/ovdump.py	/^        data = ov_band.ReadRaster(0, 0, ov_band.XSize, ov_band.YSize)$/;"	v
dataSource	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAOImpl.java	/^    private DataSource  dataSource;$/;"	f	class:PostGisGeometryDAOImpl	file:
database	loader/shpcommon.h	/^	char *database;$/;"	m	struct:shp_connection_state
date	java/ejb3/src/org/postgis/ejb/PersonEntity.java	/^	private Date date;$/;"	f	class:PersonEntity	file:
db	raster/scripts/python/rtreader.py	/^    db = property(fget = lambda self: self._get_db())$/;"	v	class:RasterReader
dbf	loader/pgsql2shp-core.h	/^	DBFHandle dbf;$/;"	m	struct:shp_dumper_state
dbffieldnames	loader/pgsql2shp-core.h	/^	char **dbffieldnames;$/;"	m	struct:shp_dumper_state
dbffieldtypes	loader/pgsql2shp-core.h	/^	int *dbffieldtypes;$/;"	m	struct:shp_dumper_state
dealloc	raster/rt_core/rt_context.c	/^    rt_deallocator dealloc;$/;"	m	struct:rt_context_t	file:
debug	extras/tiger_geocoder/tiger_2011/legacy_import/tiger2008/import_tiger_shps.sh	/^function debug () {$/;"	f
decode_geohash_bbox	liblwgeom/lwalgorithm.c	/^void decode_geohash_bbox(char *geohash, double *lat, double *lon, int precision)$/;"	f
decode_wkb	extras/wkb_reader/printwkb.c	/^void decode_wkb(char *wkb, int *size)$/;"	f
decode_wkb_collection	extras/wkb_reader/printwkb.c	/^void decode_wkb_collection(char *wkb,int	*size)$/;"	f
deepCopy	java/ejb3/src/org/postgis/hibernate/GeometryType.java	/^	public Object deepCopy(Object value) throws HibernateException {$/;"	m	class:GeometryType
default_allocator	liblwgeom/lwutil.c	/^default_allocator(size_t size)$/;"	f	file:
default_errorreporter	liblwgeom/lwutil.c	/^default_errorreporter(const char *fmt, va_list ap)$/;"	f	file:
default_freeor	liblwgeom/lwutil.c	/^default_freeor(void *mem)$/;"	f	file:
default_noticereporter	liblwgeom/lwutil.c	/^default_noticereporter(const char *fmt, va_list ap)$/;"	f	file:
default_reallocator	liblwgeom/lwutil.c	/^default_reallocator(void *mem, size_t size)$/;"	f	file:
default_rt_allocator	raster/rt_core/rt_context.c	/^default_rt_allocator(size_t size)$/;"	f
default_rt_deallocator	raster/rt_core/rt_context.c	/^default_rt_deallocator(void *mem)$/;"	f
default_rt_error_handler	raster/rt_core/rt_context.c	/^default_rt_error_handler(const char *fmt, va_list ap) {$/;"	f
default_rt_info_handler	raster/rt_core/rt_context.c	/^default_rt_info_handler(const char *fmt, va_list ap) {$/;"	f
default_rt_reallocator	raster/rt_core/rt_context.c	/^default_rt_reallocator(void *mem, size_t size)$/;"	f
default_rt_warning_handler	raster/rt_core/rt_context.c	/^default_rt_warning_handler(const char *fmt, va_list ap) {$/;"	f
define_plane	liblwgeom/measures3d.c	/^define_plane(POINTARRAY *pa, PLANE3D *pl)$/;"	f
deg2rad	liblwgeom/lwgeodetic.h	60;"	d
delFace	liblwgeom/lwgeom_geos.c	/^delFace(Face* f)$/;"	f	file:
delta	postgis/gserialized_gist_2d.c	/^	float		delta;$/;"	m	struct:__anon17	file:
deltaLongitude	postgis/lwgeom_spheroid.c	/^deltaLongitude(double azimuth, double sigma, double tsm,SPHEROID *sphere)$/;"	f
deparse_hex	liblwgeom/lwgeom_api.c	/^deparse_hex(uint8_t str, char *result)$/;"	f
desc	loader/shp2pgsql-core.c	/^    char *desc;$/;"	m	struct:__anon62	file:
description	java/ejb2/src/com/geodetix/geo/ejb/GeometryBean.java	/^    private String    description;$/;"	f	class:GeometryBean	file:
description	raster/scripts/python/ovdump.py	/^                   description="Dump GDAL raster overview to separate file, GeoTIF by default")$/;"	v
description	raster/scripts/python/rtrowdump.py	/^                       description="Brute-force dump of single row from WKT Raster table as GeoTIF")$/;"	v
determineSide	postgis/lwgeom_functions_analytic.c	/^double determineSide(POINT2D *seg1, POINT2D *seg2, POINT2D *point)$/;"	f
dfDoubleField	loader/shapefil.h	/^    double      dfDoubleField;$/;"	m	struct:__anon67
dfMMax	loader/shapefil.h	/^    double	dfMMax;$/;"	m	struct:__anon65
dfMMin	loader/shapefil.h	/^    double	dfMMin;$/;"	m	struct:__anon65
dfXMax	loader/shapefil.h	/^    double	dfXMax;$/;"	m	struct:__anon65
dfXMin	loader/shapefil.h	/^    double	dfXMin;$/;"	m	struct:__anon65
dfYMax	loader/shapefil.h	/^    double	dfYMax;$/;"	m	struct:__anon65
dfYMin	loader/shapefil.h	/^    double	dfYMin;$/;"	m	struct:__anon65
dfZMax	loader/shapefil.h	/^    double	dfZMax;$/;"	m	struct:__anon65
dfZMin	loader/shapefil.h	/^    double	dfZMin;$/;"	m	struct:__anon65
dialog_about	loader/shp2pgsql-gui.c	/^static GtkWidget *dialog_about = NULL;$/;"	v	file:
dialog_dumper_options	loader/shp2pgsql-gui.c	/^static GtkWidget *dialog_dumper_options = NULL;$/;"	v	file:
dialog_filechooser	loader/shp2pgsql-gui.c	/^static GtkWidget *dialog_filechooser = NULL;$/;"	v	file:
dialog_folderchooser	loader/shp2pgsql-gui.c	/^static GtkWidget *dialog_folderchooser = NULL;$/;"	v	file:
dialog_loader_options	loader/shp2pgsql-gui.c	/^static GtkWidget *dialog_loader_options = NULL;$/;"	v	file:
dialog_progress	loader/shp2pgsql-gui.c	/^static GtkWidget *dialog_progress = NULL;$/;"	v	file:
dialog_tablechooser	loader/shp2pgsql-gui.c	/^static GtkWidget *dialog_tablechooser = NULL;$/;"	v	file:
diff	regress/run_test.pl	/^sub diff$/;"	s
diff_rastinfo	raster/loader/raster2pgsql.c	/^diff_rastinfo(RASTERINFO *x, RASTERINFO *ref) {$/;"	f	file:
difference	postgis/lwgeom_geos.c	/^Datum difference(PG_FUNCTION_ARGS)$/;"	f
difference	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(difference);$/;"	v
dim	postgis/gserialized_gist_2d.c	/^	int			dim;			\/* axis of this split *\/$/;"	m	struct:__anon18	file:
dim	raster/loader/raster2pgsql.h	/^	uint32_t dim[2];$/;"	m	struct:rasterinfo_t
dimension	java/jdbc/src/org/postgis/Geometry.java	/^	public int dimension;$/;"	f	class:Geometry
dimension	raster/rt_core/rt_mapalgebra.c	/^	} dimension;$/;"	m	struct:_rti_iterator_arg_t	typeref:struct:_rti_iterator_arg_t::__anon47	file:
dimension_qualifiers_to_wkt_sb	liblwgeom/lwout_wkt.c	/^static void dimension_qualifiers_to_wkt_sb(const LWGEOM *geom, stringbuffer_t *sb, uint8_t variant)$/;"	f	file:
direction_lookup	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE direction_lookup (name VARCHAR(20) PRIMARY KEY, abbrev VARCHAR(3));$/;"	t
direction_lookup.abbrev	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE direction_lookup (name VARCHAR(20) PRIMARY KEY, abbrev VARCHAR(3));$/;"	F
direction_lookup.direction_lookup_abbrev_idx	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX direction_lookup_abbrev_idx ON direction_lookup (abbrev);$/;"	i
direction_lookup.name	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE direction_lookup (name VARCHAR(20) PRIMARY KEY, abbrev VARCHAR(3));$/;"	F
disassemble	java/ejb3/src/org/postgis/hibernate/GeometryType.java	/^	public Serializable disassemble(Object value) throws HibernateException {$/;"	m	class:GeometryType
disjoint	postgis/lwgeom_geos.c	/^Datum disjoint(PG_FUNCTION_ARGS)$/;"	f
disjoint	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(disjoint);$/;"	v
distance	java/jdbc/src/org/postgis/Point.java	/^    public double distance(Point other) {$/;"	m	class:Point
distance	liblwgeom/measures.h	/^	double distance;	\/*the distance between p1 and p2*\/$/;"	m	struct:__anon29
distance	liblwgeom/measures3d.h	/^	double distance;	\/*the distance between p1 and p2*\/$/;"	m	struct:__anon31
distance	postgis/lwgeom_backend_api.c	/^Datum distance(PG_FUNCTION_ARGS)$/;"	f
distance	postgis/lwgeom_backend_api.c	/^PG_FUNCTION_INFO_V1(distance);$/;"	v
distance	raster/rt_core/rt_mapalgebra.c	/^	} distance;$/;"	m	struct:_rti_iterator_arg_t	typeref:struct:_rti_iterator_arg_t::__anon46	file:
distance	raster/rt_pg/rtpg_mapalgebra.c	/^	int distance[2]; \/* distance in X and Y axis *\/$/;"	m	struct:rtpg_nmapalgebra_arg_t	file:
distance2d_pt_pt	liblwgeom/measures.c	/^distance2d_pt_pt(const POINT2D *p1, const POINT2D *p2)$/;"	f
distance2d_pt_seg	liblwgeom/measures.c	/^distance2d_pt_seg(const POINT2D *p, const POINT2D *A, const POINT2D *B)$/;"	f
distance3d	postgis/lwgeom_backend_api.c	/^Datum distance3d(PG_FUNCTION_ARGS)$/;"	f
distance3d	postgis/lwgeom_backend_api.c	/^PG_FUNCTION_INFO_V1(distance3d);$/;"	v
distance3d_fn	postgis/lwgeom_backend_api.c	/^    Datum (*distance3d_fn)    (PG_FUNCTION_ARGS);$/;"	m	struct:lwgeom_backend_definition	file:
distance_ellipse	postgis/lwgeom_spheroid.c	/^distance_ellipse(double lat1, double long1,$/;"	f
distance_ellipse_calculation	postgis/lwgeom_spheroid.c	/^distance_ellipse_calculation(double lat1, double long1,$/;"	f
distance_fn	postgis/lwgeom_backend_api.c	/^    Datum (*distance_fn)      (PG_FUNCTION_ARGS);$/;"	m	struct:lwgeom_backend_definition	file:
distance_sphere_method	postgis/lwgeom_spheroid.c	/^double distance_sphere_method(double lat1, double long1,double lat2,double long2, SPHEROID *sphere)$/;"	f
divided_routes	extras/ogc_test_suite/1_schema.sql	/^CREATE TABLE divided_routes ($/;"	t
divided_routes.fid	extras/ogc_test_suite/1_schema.sql	/^       fid               INTEGER NOT NULL PRIMARY KEY,$/;"	F
divided_routes.name	extras/ogc_test_suite/1_schema.sql	/^       name              VARCHAR(64),$/;"	F
divided_routes.num_lanes	extras/ogc_test_suite/1_schema.sql	/^       num_lanes         INTEGER$/;"	F
do_geojson_test	liblwgeom/cunit/cu_in_geojson.c	/^static void do_geojson_test(const char * exp, char * in, char * exp_srs, int precision, int has_bbox)$/;"	f	file:
do_geojson_test	liblwgeom/cunit/cu_out_geojson.c	/^static void do_geojson_test(char * in, char * out, char * srs, int precision, int has_bbox)$/;"	f	file:
do_geojson_unsupported	liblwgeom/cunit/cu_in_geojson.c	/^static void do_geojson_unsupported(char * in, char * exp)$/;"	f	file:
do_geojson_unsupported	liblwgeom/cunit/cu_out_geojson.c	/^static void do_geojson_unsupported(char * in, char * out)$/;"	f	file:
do_geom_test	liblwgeom/cunit/cu_force_sfs.c	/^static void do_geom_test(char * in, char * out)$/;"	f	file:
do_geom_test	liblwgeom/cunit/cu_homogenize.c	/^static void do_geom_test(char * in, char * out)$/;"	f	file:
do_gml2_extent_test	liblwgeom/cunit/cu_out_gml.c	/^static void do_gml2_extent_test(char * in, char * out, char * srs,$/;"	f	file:
do_gml2_test	liblwgeom/cunit/cu_out_gml.c	/^static void do_gml2_test(char * in, char * out, char * srs, int precision)$/;"	f	file:
do_gml2_test_prefix	liblwgeom/cunit/cu_out_gml.c	/^static void do_gml2_test_prefix(char * in, char * out, char * srs, int precision, const char *prefix)$/;"	f	file:
do_gml2_unsupported	liblwgeom/cunit/cu_out_gml.c	/^static void do_gml2_unsupported(char * in, char * out)$/;"	f	file:
do_gml3_extent_test	liblwgeom/cunit/cu_out_gml.c	/^static void do_gml3_extent_test(char * in, char * out, char * srs,$/;"	f	file:
do_gml3_test	liblwgeom/cunit/cu_out_gml.c	/^static void do_gml3_test(char * in, char * out, char * srs, int precision, int is_geodetic)$/;"	f	file:
do_gml3_test_nodims	liblwgeom/cunit/cu_out_gml.c	/^static void do_gml3_test_nodims(char * in, char * out, char * srs, int precision, int is_geodetic, int is_dims, const char *prefix)$/;"	f	file:
do_gml3_test_opts	liblwgeom/cunit/cu_out_gml.c	/^static void do_gml3_test_opts(char * in, char * out, char * srs, int precision, int opts)$/;"	f	file:
do_gml3_test_prefix	liblwgeom/cunit/cu_out_gml.c	/^static void do_gml3_test_prefix(char * in, char * out, char * srs, int precision, int is_geodetic, const char *prefix)$/;"	f	file:
do_gml3_unsupported	liblwgeom/cunit/cu_out_gml.c	/^static void do_gml3_unsupported(char * in, char * out)$/;"	f	file:
do_kml_test	liblwgeom/cunit/cu_out_kml.c	/^static void do_kml_test(char * in, char * out, int precision)$/;"	f	file:
do_kml_test_prefix	liblwgeom/cunit/cu_out_kml.c	/^static void do_kml_test_prefix(char * in, char * out, int precision, const char *prefix)$/;"	f	file:
do_kml_unsupported	liblwgeom/cunit/cu_out_kml.c	/^static void do_kml_unsupported(char * in, char * out)$/;"	f	file:
do_lwgeom_flip_coordinates	liblwgeom/cunit/cu_libgeom.c	/^static void do_lwgeom_flip_coordinates(char *in, char *out)$/;"	f	file:
do_svg_test	liblwgeom/cunit/cu_out_svg.c	/^static void do_svg_test(char * in, char * out, int precision, int relative)$/;"	f	file:
do_svg_unsupported	liblwgeom/cunit/cu_out_svg.c	/^static void do_svg_unsupported(char * in, char * out)$/;"	f	file:
do_test_mindistance2d_tolerance	liblwgeom/cunit/cu_measures.c	/^static void do_test_mindistance2d_tolerance(char *in1, char *in2, double expected_res, int line)$/;"	f	file:
do_type_test	liblwgeom/cunit/cu_force_sfs.c	/^static void do_type_test(char * in, int type)$/;"	f	file:
do_x3d3_test	liblwgeom/cunit/cu_out_x3d.c	/^static void do_x3d3_test(char * in, char * out, char * srs, int precision)$/;"	f	file:
do_x3d3_unsupported	liblwgeom/cunit/cu_out_x3d.c	/^static void do_x3d3_unsupported(char * in, char * out)$/;"	f	file:
dot_product	liblwgeom/lwgeodetic.c	/^static double dot_product(const POINT3D *p1, const POINT3D *p2)$/;"	f	file:
dot_product_side	liblwgeom/lwgeodetic.c	/^dot_product_side(const POINT3D *p, const POINT3D *q)$/;"	f	file:
double_equals	java/jdbc/src/org/postgis/Point.java	/^	public static boolean double_equals(double a, double b) {$/;"	m	class:Point
double_from_wkb_state	liblwgeom/lwin_wkb.c	/^static double double_from_wkb_state(wkb_parse_state *s)$/;"	f	file:
double_to_wkb_buf	liblwgeom/lwout_wkb.c	/^static uint8_t* double_to_wkb_buf(const double d, uint8_t *buf, uint8_t variant)$/;"	f	file:
doublevalue	liblwgeom/lwin_wkt_parse.c	/^	double doublevalue;$/;"	m	union:YYSTYPE	file:
doublevalue	liblwgeom/lwin_wkt_parse.h	/^	double doublevalue;$/;"	m	union:YYSTYPE
draw	raster/scripts/python/genraster.py	/^draw = ImageDraw.Draw(img)$/;"	v
drawGeometry	doc/html/image_src/generator.c	/^drawGeometry(char *output, LWGEOM *lwgeom, LAYERSTYLE *styles )$/;"	f	file:
drawLineString	doc/html/image_src/generator.c	/^drawLineString(char *output, LWLINE *lwl, LAYERSTYLE *style)$/;"	f	file:
drawPoint	doc/html/image_src/generator.c	/^drawPoint(char *output, LWPOINT *lwp, LAYERSTYLE *styles)$/;"	f	file:
drawPolygon	doc/html/image_src/generator.c	/^drawPolygon(char *output, LWPOLY *lwp, LAYERSTYLE *style)$/;"	f	file:
dropDbTable	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAOImpl.java	/^    public void dropDbTable() {$/;"	m	class:PostGisGeometryDAOImpl
dropGeometryTable	java/ejb2/src/com/geodetix/geo/ejb/GeometryFacadeBean.java	/^    public void dropGeometryTable() throws ApplicationGeoLayerException {$/;"	m	class:GeometryFacadeBean
drop_dupe_featnames_generate_script	extras/tiger_geocoder/tiger_2011/geocode/other_helper_functions.sql	/^CREATE OR REPLACE FUNCTION drop_dupe_featnames_generate_script() RETURNS text $/;"	f
drop_spatial	regress/run_test	/^drop_spatial()$/;"	f
drop_spatial	regress/run_test.pl	/^sub drop_spatial$/;"	s
drop_spatial_extensions	regress/run_test	/^drop_spatial_extensions()$/;"	f
drop_spatial_extensions	regress/run_test.pl	/^sub drop_spatial_extensions$/;"	s
drop_table	raster/loader/raster2pgsql.c	/^drop_table(const char *schema, const char *table, STRINGBUFFER *buffer) {$/;"	f	file:
drop_table	regress/run_test.pl	/^sub drop_table$/;"	s
drop_table_if_exists	regress/run_test	/^drop_table_if_exists()$/;"	f
drv	raster/rt_core/rt_warp.c	/^		GDALDriverH drv;$/;"	m	struct:_rti_warp_arg_t::__anon41	file:
ds	raster/rt_core/rt_warp.c	/^		GDALDatasetH ds;$/;"	m	struct:_rti_warp_arg_t::__anon41	file:
ds	raster/scripts/python/pixval.py	/^ds = gdal.Open(infile, gdalc.GA_ReadOnly);$/;"	v
ds	raster/scripts/python/window.py	/^ds = gdal.Open(infile, gdalc.GA_ReadOnly);$/;"	v
dst	raster/rt_core/librtcore.h	/^	} src, dst;$/;"	m	struct:rt_reclassexpr_t	typeref:struct:rt_reclassexpr_t::rt_reclassrange
dst	raster/rt_core/rt_warp.c	/^	} src, dst;$/;"	m	struct:_rti_warp_arg_t	typeref:struct:_rti_warp_arg_t::__anon41	file:
dst_band	raster/scripts/python/ovdump.py	/^        dst_band = dst_ds.GetRasterBand(nb)$/;"	v
dst_drv	raster/scripts/python/ovdump.py	/^    dst_drv = gdal.GetDriverByName(dst_format)$/;"	v
dst_ds	raster/scripts/python/ovdump.py	/^    dst_ds = None$/;"	v
dst_ds	raster/scripts/python/ovdump.py	/^    dst_ds = dst_drv.Create(dst_file, ov_band.XSize, ov_band.YSize, src_ds.RasterCount, ov_band.DataType)$/;"	v
dst_file	raster/scripts/python/ovdump.py	/^    dst_file = os.path.basename(opts.raster) + "_ov_" + str(ovf) + ".tif"$/;"	v
dst_format	raster/scripts/python/ovdump.py	/^    dst_format = "GTiff"$/;"	v
dst_pixel	raster/rt_core/librtcore.h	/^	int dst_pixel[2];$/;"	m	struct:rt_iterator_arg_t
dswitchprovided	loader/pgsql2shp-core.h	/^	int dswitchprovided;$/;"	m	struct:shp_dumper_config
dumb_upper_map	liblwgeom/g_util.c	/^const char dumb_upper_map[128] = "................................................0123456789.......ABCDEFGHIJKLMNOPQRSTUVWXYZ......ABCDEFGHIJKLMNOPQRSTUVWXYZ.....";$/;"	v
dump_block_numpy	raster/scripts/python/raster2pgsql.py	/^def dump_block_numpy(pixels):$/;"	f
dump_bytes	extras/wkb_reader/readwkb.c	/^void dump_bytes( char *a, int numb)$/;"	f
dump_format	loader/shp2pgsql-core.h	/^	int dump_format;$/;"	m	struct:shp_loader_config
dump_stringbuffer	raster/loader/raster2pgsql.c	/^dump_stringbuffer(STRINGBUFFER *buffer) {$/;"	f	file:
dump_toupper	liblwgeom/g_util.c	/^static char dump_toupper(int in)$/;"	f	file:
dumper_config	loader/cunit/cu_pgsql2shp.c	/^SHPDUMPERCONFIG *dumper_config;$/;"	v
dumper_state	loader/cunit/cu_pgsql2shp.c	/^SHPDUMPERSTATE *dumper_state;$/;"	v
dumpnode	postgis/lwgeom_dumppoints.c	/^struct dumpnode {$/;"	s	file:
dumpstate	postgis/lwgeom_dumppoints.c	/^struct dumpstate {$/;"	s	file:
e	doc/html/jquery.js	/^(function(){var l=this,g,y=l.jQuery,p=l.$,o=l.jQuery=l.$=function(E,F){return new o.fn.init(E,F)},D=\/^[^<]*(<(.|\\s)+>)[^>]*$|^#([\\w-]+)$\/,f=\/^.[^:#\\[\\.,]*$\/;o.fn=o.prototype={init:function(E,H){E=E||document;if(E.nodeType){this[0]=E;this.length=1;this.context=E;return this}if(typeof E==="string"){var G=D.exec(E);if(G&&(G[1]||!H)){if(G[1]){E=o.clean([G[1]],H)}else{var I=document.getElementById(G[3]);if(I&&I.id!=G[3]){return o().find(E)}var F=o(I||[]);F.context=document;F.selector=E;return F}}else{return o(H).find(E)}}else{if(o.isFunction(E)){return o(document).ready(E)}}if(E.selector&&E.context){this.selector=E.selector;this.context=E.context}return this.setArray(o.isArray(E)?E:o.makeArray(E))},selector:"",jquery:"1.3.2",size:function(){return this.length},get:function(E){return E===g?Array.prototype.slice.call(this):this[E]},pushStack:function(F,H,E){var G=o(F);G.prevObject=this;G.context=this.context;if(H==="find"){G.selector=this.selector+(this.selector?" ":"")+E}else{if(H){G.selector=this.selector+"."+H+"("+E+")"}}return G},setArray:function(E){this.length=0;Array.prototype.push.apply(this,E);return this},each:function(F,E){return o.each(this,F,E)},index:function(E){return o.inArray(E&&E.jquery?E[0]:E,this)},attr:function(F,H,G){var E=F;if(typeof F==="string"){if(H===g){return this[0]&&o[G||"attr"](this[0],F)}else{E={};E[F]=H}}return this.each(function(I){for(F in E){o.attr(G?this.style:this,F,o.prop(this,E[F],G,I,F))}})},css:function(E,F){if((E=="width"||E=="height")&&parseFloat(F)<0){F=g}return this.attr(E,F,"curCSS")},text:function(F){if(typeof F!=="object"&&F!=null){return this.empty().append((this[0]&&this[0].ownerDocument||document).createTextNode(F))}var E="";o.each(F||this,function(){o.each(this.childNodes,function(){if(this.nodeType!=8){E+=this.nodeType!=1?this.nodeValue:o.fn.text([this])}})});return E},wrapAll:function(E){if(this[0]){var F=o(E,this[0].ownerDocument).clone();if(this[0].parentNode){F.insertBefore(this[0])}F.map(function(){var G=this;while(G.firstChild){G=G.firstChild}return G}).append(this)}return this},wrapInner:function(E){return this.each(function(){o(this).contents().wrapAll(E)})},wrap:function(E){return this.each(function(){o(this).wrapAll(E)})},append:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.appendChild(E)}})},prepend:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.insertBefore(E,this.firstChild)}})},before:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this)})},after:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this.nextSibling)})},end:function(){return this.prevObject||o([])},push:[].push,sort:[].sort,splice:[].splice,find:function(E){if(this.length===1){var F=this.pushStack([],"find",E);F.length=0;o.find(E,this[0],F);return F}else{return this.pushStack(o.unique(o.map(this,function(G){return o.find(E,G)})),"find",E)}},clone:function(G){var E=this.map(function(){if(!o.support.noCloneEvent&&!o.isXMLDoc(this)){var I=this.outerHTML;if(!I){var J=this.ownerDocument.createElement("div");J.appendChild(this.cloneNode(true));I=J.innerHTML}return o.clean([I.replace(\/ jQuery\\d+="(?:\\d+|null)"\/g,"").replace(\/^\\s*\/,"")])[0]}else{return this.cloneNode(true)}});if(G===true){var H=this.find("*").andSelf(),F=0;E.find("*").andSelf().each(function(){if(this.nodeName!==H[F].nodeName){return}var I=o.data(H[F],"events");for(var K in I){for(var J in I[K]){o.event.add(this,K,I[K][J],I[K][J].data)}}F++})}return E},filter:function(E){return this.pushStack(o.isFunction(E)&&o.grep(this,function(G,F){return E.call(G,F)})||o.multiFilter(E,o.grep(this,function(F){return F.nodeType===1})),"filter",E)},closest:function(E){var G=o.expr.match.POS.test(E)?o(E):null,F=0;return this.map(function(){var H=this;while(H&&H.ownerDocument){if(G?G.index(H)>-1:o(H).is(E)){o.data(H,"closest",F);return H}H=H.parentNode;F++}})},not:function(E){if(typeof E==="string"){if(f.test(E)){return this.pushStack(o.multiFilter(E,this,true),"not",E)}else{E=o.multiFilter(E,this)}}var F=E.length&&E[E.length-1]!==g&&!E.nodeType;return this.filter(function(){return F?o.inArray(this,E)<0:this!=E})},add:function(E){return this.pushStack(o.unique(o.merge(this.get(),typeof E==="string"?o(E):o.makeArray(E))))},is:function(E){return !!E&&o.multiFilter(E,this).length>0},hasClass:function(E){return !!E&&this.is("."+E)},val:function(K){if(K===g){var E=this[0];if(E){if(o.nodeName(E,"option")){return(E.attributes.value||{}).specified?E.value:E.text}if(o.nodeName(E,"select")){var I=E.selectedIndex,L=[],M=E.options,H=E.type=="select-one";if(I<0){return null}for(var F=H?I:0,J=H?I+1:M.length;F<J;F++){var G=M[F];if(G.selected){K=o(G).val();if(H){return K}L.push(K)}}return L}return(E.value||"").replace(\/\\r\/g,"")}return g}if(typeof K==="number"){K+=""}return this.each(function(){if(this.nodeType!=1){return}if(o.isArray(K)&&\/radio|checkbox\/.test(this.type)){this.checked=(o.inArray(this.value,K)>=0||o.inArray(this.name,K)>=0)}else{if(o.nodeName(this,"select")){var N=o.makeArray(K);o("option",this).each(function(){this.selected=(o.inArray(this.value,N)>=0||o.inArray(this.text,N)>=0)});if(!N.length){this.selectedIndex=-1}}else{this.value=K}}})},html:function(E){return E===g?(this[0]?this[0].innerHTML.replace(\/ jQuery\\d+="(?:\\d+|null)"\/g,""):null):this.empty().append(E)},replaceWith:function(E){return this.after(E).remove()},eq:function(E){return this.slice(E,+E+1)},slice:function(){return this.pushStack(Array.prototype.slice.apply(this,arguments),"slice",Array.prototype.slice.call(arguments).join(","))},map:function(E){return this.pushStack(o.map(this,function(G,F){return E.call(G,F,G)}))},andSelf:function(){return this.add(this.prevObject)},domManip:function(J,M,L){if(this[0]){var I=(this[0].ownerDocument||this[0]).createDocumentFragment(),F=o.clean(J,(this[0].ownerDocument||this[0]),I),H=I.firstChild;if(H){for(var G=0,E=this.length;G<E;G++){L.call(K(this[G],H),this.length>1||G>0?I.cloneNode(true):I)}}if(F){o.each(F,z)}}return this;function K(N,O){return M&&o.nodeName(N,"table")&&o.nodeName(O,"tr")?(N.getElementsByTagName("tbody")[0]||N.appendChild(N.ownerDocument.createElement("tbody"))):N}}};o.fn.init.prototype=o.fn;function z(E,F){if(F.src){o.ajax({url:F.src,async:false,dataType:"script"})}else{o.globalEval(F.text||F.textContent||F.innerHTML||"")}if(F.parentNode){F.parentNode.removeChild(F)}}function e(){return +new Date}o.extend=o.fn.extend=function(){var J=arguments[0]||{},H=1,I=arguments.length,E=false,G;if(typeof J==="boolean"){E=J;J=arguments[1]||{};H=2}if(typeof J!=="object"&&!o.isFunction(J)){J={}}if(I==H){J=this;--H}for(;H<I;H++){if((G=arguments[H])!=null){for(var F in G){var K=J[F],L=G[F];if(J===L){continue}if(E&&L&&typeof L==="object"&&!L.nodeType){J[F]=o.extend(E,K||(L.length!=null?[]:{}),L)}else{if(L!==g){J[F]=L}}}}}return J};var b=\/z-?index|font-?weight|opacity|zoom|line-?height\/i,q=document.defaultView||{},s=Object.prototype.toString;o.extend({noConflict:function(E){l.$=p;if(E){l.jQuery=y}return o},isFunction:function(E){return s.call(E)==="[object Function]"},isArray:function(E){return s.call(E)==="[object Array]"},isXMLDoc:function(E){return E.nodeType===9&&E.documentElement.nodeName!=="HTML"||!!E.ownerDocument&&o.isXMLDoc(E.ownerDocument)},globalEval:function(G){if(G&&\/\\S\/.test(G)){var F=document.getElementsByTagName("head")[0]||document.documentElement,E=document.createElement("script");E.type="text\/javascript";if(o.support.scriptEval){E.appendChild(document.createTextNode(G))}else{E.text=G}F.insertBefore(E,F.firstChild);F.removeChild(E)}},nodeName:function(F,E){return F.nodeName&&F.nodeName.toUpperCase()==E.toUpperCase()},each:function(G,K,F){var E,H=0,I=G.length;if(F){if(I===g){for(E in G){if(K.apply(G[E],F)===false){break}}}else{for(;H<I;){if(K.apply(G[H++],F)===false){break}}}}else{if(I===g){for(E in G){if(K.call(G[E],E,G[E])===false){break}}}else{for(var J=G[0];H<I&&K.call(J,H,J)!==false;J=G[++H]){}}}return G},prop:function(H,I,G,F,E){if(o.isFunction(I)){I=I.call(H,F)}return typeof I==="number"&&G=="curCSS"&&!b.test(E)?I+"px":I},className:{add:function(E,F){o.each((F||"").split(\/\\s+\/),function(G,H){if(E.nodeType==1&&!o.className.has(E.className,H)){E.className+=(E.className?" ":"")+H}})},remove:function(E,F){if(E.nodeType==1){E.className=F!==g?o.grep(E.className.split(\/\\s+\/),function(G){return !o.className.has(F,G)}).join(" "):""}},has:function(F,E){return F&&o.inArray(E,(F.className||F).toString().split(\/\\s+\/))>-1}},swap:function(H,G,I){var E={};for(var F in G){E[F]=H.style[F];H.style[F]=G[F]}I.call(H);for(var F in G){H.style[F]=E[F]}},css:function(H,F,J,E){if(F=="width"||F=="height"){var L,G={position:"absolute",visibility:"hidden",display:"block"},K=F=="width"?["Left","Right"]:["Top","Bottom"];function I(){L=F=="width"?H.offsetWidth:H.offsetHeight;if(E==="border"){return}o.each(K,function(){if(!E){L-=parseFloat(o.curCSS(H,"padding"+this,true))||0}if(E==="margin"){L+=parseFloat(o.curCSS(H,"margin"+this,true))||0}else{L-=parseFloat(o.curCSS(H,"border"+this+"Width",true))||0}})}if(H.offsetWidth!==0){I()}else{o.swap(H,G,I)}return Math.max(0,Math.round(L))}return o.curCSS(H,F,J)},curCSS:function(I,F,G){var L,E=I.style;if(F=="opacity"&&!o.support.opacity){L=o.attr(E,"opacity");return L==""?"1":L}if(F.match(\/float\/i)){F=w}if(!G&&E&&E[F]){L=E[F]}else{if(q.getComputedStyle){if(F.match(\/float\/i)){F="float"}F=F.replace(\/([A-Z])\/g,"-$1").toLowerCase();var M=q.getComputedStyle(I,null);if(M){L=M.getPropertyValue(F)}if(F=="opacity"&&L==""){L="1"}}else{if(I.currentStyle){var J=F.replace(\/\\-(\\w)\/g,function(N,O){return O.toUpperCase()});L=I.currentStyle[F]||I.currentStyle[J];if(!\/^\\d+(px)?$\/i.test(L)&&\/^\\d\/.test(L)){var H=E.left,K=I.runtimeStyle.left;I.runtimeStyle.left=I.currentStyle.left;E.left=L||0;L=E.pixelLeft+"px";E.left=H;I.runtimeStyle.left=K}}}}return L},clean:function(F,K,I){K=K||document;if(typeof K.createElement==="undefined"){K=K.ownerDocument||K[0]&&K[0].ownerDocument||document}if(!I&&F.length===1&&typeof F[0]==="string"){var H=\/^<(\\w+)\\s*\\\/?>$\/.exec(F[0]);if(H){return[K.createElement(H[1])]}}var G=[],E=[],L=K.createElement("div");o.each(F,function(P,S){if(typeof S==="number"){S+=""}if(!S){return}if(typeof S==="string"){S=S.replace(\/(<(\\w+)[^>]*?)\\\/>\/g,function(U,V,T){return T.match(\/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$\/i)?U:V+"><\/"+T+">"});var O=S.replace(\/^\\s+\/,"").substring(0,10).toLowerCase();var Q=!O.indexOf("<opt")&&[1,"<select multiple='multiple'>","<\/select>"]||!O.indexOf("<leg")&&[1,"<fieldset>","<\/fieldset>"]||O.match(\/^<(thead|tbody|tfoot|colg|cap)\/)&&[1,"<table>","<\/table>"]||!O.indexOf("<tr")&&[2,"<table><tbody>","<\/tbody><\/table>"]||(!O.indexOf("<td")||!O.indexOf("<th"))&&[3,"<table><tbody><tr>","<\/tr><\/tbody><\/table>"]||!O.indexOf("<col")&&[2,"<table><tbody><\/tbody><colgroup>","<\/colgroup><\/table>"]||!o.support.htmlSerialize&&[1,"div<div>","<\/div>"]||[0,"",""];L.innerHTML=Q[1]+S+Q[2];while(Q[0]--){L=L.lastChild}if(!o.support.tbody){var R=\/<tbody\/i.test(S),N=!O.indexOf("<table")&&!R?L.firstChild&&L.firstChild.childNodes:Q[1]=="<table>"&&!R?L.childNodes:[];for(var M=N.length-1;M>=0;--M){if(o.nodeName(N[M],"tbody")&&!N[M].childNodes.length){N[M].parentNode.removeChild(N[M])}}}if(!o.support.leadingWhitespace&&\/^\\s\/.test(S)){L.insertBefore(K.createTextNode(S.match(\/^\\s*\/)[0]),L.firstChild)}S=o.makeArray(L.childNodes)}if(S.nodeType){G.push(S)}else{G=o.merge(G,S)}});if(I){for(var J=0;G[J];J++){if(o.nodeName(G[J],"script")&&(!G[J].type||G[J].type.toLowerCase()==="text\/javascript")){E.push(G[J].parentNode?G[J].parentNode.removeChild(G[J]):G[J])}else{if(G[J].nodeType===1){G.splice.apply(G,[J+1,0].concat(o.makeArray(G[J].getElementsByTagName("script"))))}I.appendChild(G[J])}}return E}return G},attr:function(J,G,K){if(!J||J.nodeType==3||J.nodeType==8){return g}var H=!o.isXMLDoc(J),L=K!==g;G=H&&o.props[G]||G;if(J.tagName){var F=\/href|src|style\/.test(G);if(G=="selected"&&J.parentNode){J.parentNode.selectedIndex}if(G in J&&H&&!F){if(L){if(G=="type"&&o.nodeName(J,"input")&&J.parentNode){throw"type property can't be changed"}J[G]=K}if(o.nodeName(J,"form")&&J.getAttributeNode(G)){return J.getAttributeNode(G).nodeValue}if(G=="tabIndex"){var I=J.getAttributeNode("tabIndex");return I&&I.specified?I.value:J.nodeName.match(\/(button|input|object|select|textarea)\/i)?0:J.nodeName.match(\/^(a|area)$\/i)&&J.href?0:g}return J[G]}if(!o.support.style&&H&&G=="style"){return o.attr(J.style,"cssText",K)}if(L){J.setAttribute(G,""+K)}var E=!o.support.hrefNormalized&&H&&F?J.getAttribute(G,2):J.getAttribute(G);return E===null?g:E}if(!o.support.opacity&&G=="opacity"){if(L){J.zoom=1;J.filter=(J.filter||"").replace(\/alpha\\([^)]*\\)\/,"")+(parseInt(K)+""=="NaN"?"":"alpha(opacity="+K*100+")")}return J.filter&&J.filter.indexOf("opacity=")>=0?(parseFloat(J.filter.match(\/opacity=([^)]*)\/)[1])\/100)+"":""}G=G.replace(\/-([a-z])\/ig,function(M,N){return N.toUpperCase()});if(L){J[G]=K}return J[G]},trim:function(E){return(E||"").replace(\/^\\s+|\\s+$\/g,"")},makeArray:function(G){var E=[];if(G!=null){var F=G.length;if(F==null||typeof G==="string"||o.isFunction(G)||G.setInterval){E[0]=G}else{while(F){E[--F]=G[F]}}}return E},inArray:function(G,H){for(var E=0,F=H.length;E<F;E++){if(H[E]===G){return E}}return -1},merge:function(H,E){var F=0,G,I=H.length;if(!o.support.getAll){while((G=E[F++])!=null){if(G.nodeType!=8){H[I++]=G}}}else{while((G=E[F++])!=null){H[I++]=G}}return H},unique:function(K){var F=[],E={};try{for(var G=0,H=K.length;G<H;G++){var J=o.data(K[G]);if(!E[J]){E[J]=true;F.push(K[G])}}}catch(I){F=K}return F},grep:function(F,J,E){var G=[];for(var H=0,I=F.length;H<I;H++){if(!E!=!J(F[H],H)){G.push(F[H])}}return G},map:function(E,J){var F=[];for(var G=0,H=E.length;G<H;G++){var I=J(E[G],G);if(I!=null){F[F.length]=I}}return F.concat.apply([],F)}});var C=navigator.userAgent.toLowerCase();o.browser={version:(C.match(\/.+(?:rv|it|ra|ie)[\\\/: ]([\\d.]+)\/)||[0,"0"])[1],safari:\/webkit\/.test(C),opera:\/opera\/.test(C),msie:\/msie\/.test(C)&&!\/opera\/.test(C),mozilla:\/mozilla\/.test(C)&&!\/(compatible|webkit)\/.test(C)};o.each({parent:function(E){return E.parentNode},parents:function(E){return o.dir(E,"parentNode")},next:function(E){return o.nth(E,2,"nextSibling")},prev:function(E){return o.nth(E,2,"previousSibling")},nextAll:function(E){return o.dir(E,"nextSibling")},prevAll:function(E){return o.dir(E,"previousSibling")},siblings:function(E){return o.sibling(E.parentNode.firstChild,E)},children:function(E){return o.sibling(E.firstChild)},contents:function(E){return o.nodeName(E,"iframe")?E.contentDocument||E.contentWindow.document:o.makeArray(E.childNodes)}},function(E,F){o.fn[E]=function(G){var H=o.map(this,F);if(G&&typeof G=="string"){H=o.multiFilter(G,H)}return this.pushStack(o.unique(H),E,G)}});o.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(E,F){o.fn[E]=function(G){var J=[],L=o(G);for(var K=0,H=L.length;K<H;K++){$/;"	f
echo_inline	regress/run_test	/^echo_inline()$/;"	f
echo_inline	regress/run_test.pl	/^sub echo_inline$/;"	s
edge_calculate_gbox	liblwgeom/lwgeodetic.c	/^int edge_calculate_gbox(const POINT3D *A1, const POINT3D *A2, GBOX *gbox)$/;"	f
edge_calculate_gbox_slow	liblwgeom/lwgeodetic.c	/^int edge_calculate_gbox_slow(const GEOGRAPHIC_EDGE *e, GBOX *gbox)$/;"	f
edge_contains_coplanar_point	liblwgeom/lwgeodetic.c	/^int edge_contains_coplanar_point(const GEOGRAPHIC_EDGE *e, const GEOGRAPHIC_POINT *p)$/;"	f
edge_contains_point	liblwgeom/lwgeodetic.c	/^int edge_contains_point(const GEOGRAPHIC_EDGE *e, const GEOGRAPHIC_POINT *p)$/;"	f
edge_deg2rad	liblwgeom/cunit/cu_geodetic.c	/^static void edge_deg2rad(GEOGRAPHIC_EDGE *e)$/;"	f	file:
edge_distance_to_edge	liblwgeom/lwgeodetic.c	/^double edge_distance_to_edge(const GEOGRAPHIC_EDGE *e1, const GEOGRAPHIC_EDGE *e2, GEOGRAPHIC_POINT *closest1, GEOGRAPHIC_POINT *closest2)$/;"	f
edge_distance_to_point	liblwgeom/lwgeodetic.c	/^double edge_distance_to_point(const GEOGRAPHIC_EDGE *e, const GEOGRAPHIC_POINT *gp, GEOGRAPHIC_POINT *closest)$/;"	f
edge_intersection	liblwgeom/lwgeodetic.c	/^int edge_intersection(const GEOGRAPHIC_EDGE *e1, const GEOGRAPHIC_EDGE *e2, GEOGRAPHIC_POINT *g)$/;"	f
edge_intersects	liblwgeom/lwgeodetic.c	/^edge_intersects(const POINT3D *A1, const POINT3D *A2, const POINT3D *B1, const POINT3D *B2)$/;"	f
edge_num	liblwgeom/lwgeodetic_tree.h	/^	int edge_num;$/;"	m	struct:circ_node
edge_point_in_cone	liblwgeom/lwgeodetic.c	/^int edge_point_in_cone(const GEOGRAPHIC_EDGE *e, const GEOGRAPHIC_POINT *p)$/;"	f
edge_point_on_plane	liblwgeom/lwgeodetic.c	/^int edge_point_on_plane(const GEOGRAPHIC_EDGE *e, const GEOGRAPHIC_POINT *p)$/;"	f
edge_point_side	liblwgeom/lwgeodetic.c	/^edge_point_side(const GEOGRAPHIC_EDGE *e, const GEOGRAPHIC_POINT *p)$/;"	f	file:
edge_set	liblwgeom/cunit/cu_geodetic.c	/^static void edge_set(double lon1, double lat1, double lon2, double lat2, GEOGRAPHIC_EDGE *e)$/;"	f	file:
edgemap	topology/test/regress/topojson.sql	/^CREATE TEMP TABLE edgemap (arc_id serial, edge_id int unique);$/;"	t
edgemap.arc_id	topology/test/regress/topojson.sql	/^CREATE TEMP TABLE edgemap (arc_id serial, edge_id int unique);$/;"	F
edgemap.edge_id	topology/test/regress/topojson.sql	/^CREATE TEMP TABLE edgemap (arc_id serial, edge_id int unique);$/;"	F
edges	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE edges$/;"	t
edges.artpath	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  artpath character varying(1),$/;"	F
edges.countyfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  countyfp character varying(3),$/;"	F
edges.deckedroad	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  deckedroad character varying(1),$/;"	F
edges.divroad	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  divroad character varying(1),$/;"	F
edges.exttyp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  exttyp character varying(1),$/;"	F
edges.featcat	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  featcat character varying(1),$/;"	F
edges.fullname	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  fullname character varying(100),$/;"	F
edges.gcseflg	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  gcseflg character varying(1),$/;"	F
edges.gid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  gid SERIAL NOT NULL  PRIMARY KEY,$/;"	F
edges.hydroflg	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  hydroflg character varying(1),$/;"	F
edges.idx_edges_tlid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX idx_edges_tlid ON edges USING btree(tlid);$/;"	i
edges.idx_tiger_edges_countyfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX idx_tiger_edges_countyfp ON edges USING btree(countyfp);$/;"	i
edges.idx_tiger_edges_countyfp	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^CREATE INDEX idx_tiger_edges_countyfp ON edges USING btree(countyfp);$/;"	i
edges.idx_tiger_edges_the_geom_gist	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX idx_tiger_edges_the_geom_gist ON edges USING gist(the_geom);$/;"	i
edges.lfromadd	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  lfromadd character varying(12),$/;"	F
edges.ltoadd	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  ltoadd character varying(12),$/;"	F
edges.mtfcc	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  mtfcc character varying(5),$/;"	F
edges.offsetl	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  offsetl character varying(1),$/;"	F
edges.offsetr	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  offsetr character varying(1),$/;"	F
edges.olfflg	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  olfflg character varying(1),$/;"	F
edges.passflg	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  passflg character varying(1),$/;"	F
edges.persist	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  persist character varying(1),$/;"	F
edges.railflg	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  railflg character varying(1),$/;"	F
edges.rfromadd	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  rfromadd character varying(12),$/;"	F
edges.roadflg	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  roadflg character varying(1),$/;"	F
edges.rtoadd	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  rtoadd character varying(12),$/;"	F
edges.smid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  smid character varying(22),$/;"	F
edges.statefp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  statefp character varying(2),$/;"	F
edges.tfidl	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  tfidl numeric(10),$/;"	F
edges.tfidr	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  tfidr numeric(10),$/;"	F
edges.the_geom	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  the_geom geometry,$/;"	F
edges.tiger_edges_the_geom_gist	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^CREATE INDEX tiger_edges_the_geom_gist ON edges USING gist(the_geom);$/;"	i
edges.tlid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  tlid bigint,$/;"	F
edges.tnidf	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  tnidf numeric(10),$/;"	F
edges.tnidt	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  tnidt numeric(10),$/;"	F
edges.ttyp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  ttyp character varying(1),$/;"	F
edges.zipl	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  zipl character varying(5),$/;"	F
edges.zipr	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  zipr character varying(5),$/;"	F
eg	regress/sfcgal/tickets.sql	/^CREATE TABLE eg(g geography, gm geometry);$/;"	t
eg	regress/sfcgal/tickets.sql	/^create table eg (g geography);$/;"	t
eg	regress/tickets.sql	/^CREATE TABLE eg(g geography, gm geometry);$/;"	t
eg	regress/tickets.sql	/^create table eg (g geography);$/;"	t
eg.egi	regress/sfcgal/tickets.sql	/^CREATE INDEX egi on eg using gist (g);$/;"	i
eg.egi	regress/sfcgal/tickets.sql	/^create index egi on eg using gist (g);$/;"	i
eg.egi	regress/tickets.sql	/^CREATE INDEX egi on eg using gist (g);$/;"	i
eg.egi	regress/tickets.sql	/^create index egi on eg using gist (g);$/;"	i
eg.egind	regress/sfcgal/tickets.sql	/^CREATE INDEX egind on eg using gist (gm gist_geometry_ops_nd);$/;"	i
eg.egind	regress/tickets.sql	/^CREATE INDEX egind on eg using gist (gm gist_geometry_ops_nd);$/;"	i
eg.g	regress/sfcgal/tickets.sql	/^CREATE TABLE eg(g geography, gm geometry);$/;"	F
eg.g	regress/sfcgal/tickets.sql	/^create table eg (g geography);$/;"	F
eg.g	regress/tickets.sql	/^CREATE TABLE eg(g geography, gm geometry);$/;"	F
eg.g	regress/tickets.sql	/^create table eg (g geography);$/;"	F
eg.gm	regress/sfcgal/tickets.sql	/^CREATE TABLE eg(g geography, gm geometry);$/;"	F
eg.gm	regress/tickets.sql	/^CREATE TABLE eg(g geography, gm geometry);$/;"	F
ejbCreate	java/ejb2/src/com/geodetix/geo/ejb/GeometryBean.java	/^    public Integer ejbCreate(org.postgis.Geometry geometry,String description)$/;"	m	class:GeometryBean
ejbCreate	java/ejb2/src/com/geodetix/geo/ejb/GeometryFacadeBean.java	/^    public void ejbCreate() throws CreateException {}$/;"	m	class:GeometryFacadeBean
ejbFindByPolygon	java/ejb2/src/com/geodetix/geo/ejb/GeometryBean.java	/^    public abstract Collection ejbFindByPolygon(org.postgis.Polygon polygon)$/;"	m	class:GeometryBean
ejbFindByPrimaryKey	java/ejb2/src/com/geodetix/geo/ejb/GeometryBean.java	/^    public abstract Integer ejbFindByPrimaryKey(Integer primaryKey)$/;"	m	class:GeometryBean
ejbHomeDropDbTable	java/ejb2/src/com/geodetix/geo/ejb/GeometryBean.java	/^    public abstract void ejbHomeDropDbTable();$/;"	m	class:GeometryBean
ejbHomeMakeDbTable	java/ejb2/src/com/geodetix/geo/ejb/GeometryBean.java	/^    public abstract void ejbHomeMakeDbTable();$/;"	m	class:GeometryBean
ejbHomeMakeDbTable	java/ejb2/src/com/geodetix/geo/ejb/GeometryBean.java	/^    public abstract void ejbHomeMakeDbTable(String gemetryType, int srid, int geometryDimension);$/;"	m	class:GeometryBean
ejbPostCreate	java/ejb2/src/com/geodetix/geo/ejb/GeometryBean.java	/^    public void ejbPostCreate(org.postgis.Geometry geometry) {$/;"	m	class:GeometryBean
ejbPostCreate	java/ejb2/src/com/geodetix/geo/ejb/GeometryFacadeBean.java	/^    public void ejbPostCreate() throws CreateException {}$/;"	m	class:GeometryFacadeBean
element	raster/rt_core/librtcore.h	/^	struct quantile_llist_element *element;$/;"	m	struct:quantile_llist_index	typeref:struct:quantile_llist_index::quantile_llist_element
element	raster/rt_pg/rtpg_mapalgebra.c	/^	char **element;$/;"	m	struct:rtpg_colormap_arg_t	file:
ellipsoid_in	postgis/lwgeom_spheroid.c	/^Datum ellipsoid_in(PG_FUNCTION_ARGS)$/;"	f
ellipsoid_in	postgis/lwgeom_spheroid.c	/^PG_FUNCTION_INFO_V1(ellipsoid_in);$/;"	v
ellipsoid_out	postgis/lwgeom_spheroid.c	/^Datum ellipsoid_out(PG_FUNCTION_ARGS)$/;"	f
ellipsoid_out	postgis/lwgeom_spheroid.c	/^PG_FUNCTION_INFO_V1(ellipsoid_out);$/;"	v
elog_ERROR	postgis/lwgeom_inout.c	/^void elog_ERROR(const char* string)$/;"	f
empty	raster/rt_core/rt_mapalgebra.c	/^	} empty;$/;"	m	struct:_rti_iterator_arg_t	typeref:struct:_rti_iterator_arg_t::__anon48	file:
empty_raster_test	raster/test/regress/rt_hasnoband.sql	/^CREATE TABLE empty_raster_test ($/;"	t
empty_raster_test	raster/test/regress/rt_isempty.sql	/^CREATE TABLE empty_raster_test ($/;"	t
empty_raster_test.rast	raster/test/regress/rt_hasnoband.sql	/^	rast raster$/;"	F
empty_raster_test.rast	raster/test/regress/rt_isempty.sql	/^	rast raster$/;"	F
empty_raster_test.rid	raster/test/regress/rt_hasnoband.sql	/^	rid numeric,$/;"	F
empty_raster_test.rid	raster/test/regress/rt_isempty.sql	/^	rid numeric,$/;"	F
empty_to_twkb_buf	liblwgeom/lwout_twkb.c	/^static uint8_t* empty_to_twkb_buf(const LWGEOM *geom, uint8_t *buf, uint8_t variant,int8_t prec, uint32_t id)$/;"	f	file:
empty_to_twkb_size	liblwgeom/lwout_twkb.c	/^static size_t empty_to_twkb_size(const LWGEOM *geom, uint8_t variant, uint32_t id) $/;"	f	file:
empty_to_wkb_buf	liblwgeom/lwout_wkb.c	/^static uint8_t* empty_to_wkb_buf(const LWGEOM *geom, uint8_t *buf, uint8_t variant)$/;"	f	file:
empty_to_wkb_size	liblwgeom/lwout_wkb.c	/^static size_t empty_to_wkb_size(const LWGEOM *geom, uint8_t variant)$/;"	f	file:
empty_to_wkt_sb	liblwgeom/lwout_wkt.c	/^static void empty_to_wkt_sb(stringbuffer_t *sb)$/;"	f	file:
encoding	loader/shp2pgsql-core.h	/^	char *encoding;$/;"	m	struct:shp_loader_config
end	liblwgeom/lwgeodetic.h	/^	GEOGRAPHIC_POINT end;$/;"	m	struct:__anon22
end_soundex	extras/tiger_geocoder/tiger_2011/normalize/end_soundex.sql	/^CREATE OR REPLACE FUNCTION end_soundex(VARCHAR) RETURNS VARCHAR$/;"	f
endian	java/jdbc/src/org/postgis/binary/ValueGetter.java	/^    public final byte endian;$/;"	f	class:ValueGetter
endian	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^    public final byte endian;$/;"	f	class:ValueSetter
endian	raster/loader/raster2pgsql.h	/^	int endian;$/;"	m	struct:raster_loader_config
endian_to_wkb_buf	liblwgeom/lwout_wkb.c	/^static uint8_t* endian_to_wkb_buf(uint8_t *buf, uint8_t variant)$/;"	f	file:
entityManager	java/ejb3/src/org/postgis/ejb/UserBean.java	/^	@PersistenceContext(unitName="People") private EntityManager entityManager;$/;"	f	class:UserBean	file:
entityManager	java/ejb3/src/org/postgis/ejb/mdb/IngestMDB.java	/^	@PersistenceContext(unitName="People") private EntityManager entityManager;$/;"	f	class:IngestMDB	file:
entriesCount	postgis/gserialized_gist_2d.c	/^	int			entriesCount;	\/* total number of entries being split *\/$/;"	m	struct:__anon18	file:
entry	libpgcommon/lwgeom_cache.c	/^	GenericCache* entry[NUM_CACHE_ENTRIES];$/;"	m	struct:__anon6	file:
entry	raster/rt_core/librtcore.h	/^	rt_colormap_entry entry;$/;"	m	struct:rt_colormap_t
entry	raster/rt_pg/rtpg_mapalgebra.c	/^	char **entry;$/;"	m	struct:rtpg_colormap_arg_t	file:
entry_number	libpgcommon/lwgeom_cache.h	/^	int entry_number; \/* What kind of structure is this? *\/$/;"	m	struct:__anon2
entry_options_encoding	loader/shp2pgsql-gui.c	/^static GtkWidget *entry_options_encoding = NULL;$/;"	v	file:
entry_pg_db	loader/shp2pgsql-gui.c	/^static GtkWidget *entry_pg_db = NULL;$/;"	v	file:
entry_pg_host	loader/shp2pgsql-gui.c	/^static GtkWidget *entry_pg_host = NULL;$/;"	v	file:
entry_pg_pass	loader/shp2pgsql-gui.c	/^static GtkWidget *entry_pg_pass = NULL;$/;"	v	file:
entry_pg_port	loader/shp2pgsql-gui.c	/^static GtkWidget *entry_pg_port = NULL;$/;"	v	file:
entry_pg_user	loader/shp2pgsql-gui.c	/^static GtkWidget *entry_pg_user = NULL;$/;"	v	file:
env	liblwgeom/lwgeom_geos.c	/^  GEOSGeometry* env;$/;"	m	struct:Face_t	file:
envarea	liblwgeom/lwgeom_geos.c	/^  double envarea;$/;"	m	struct:Face_t	file:
equals	java/ejb3/src/org/postgis/hibernate/GeometryType.java	/^	public boolean equals(Object x, Object y) throws HibernateException {$/;"	m	class:GeometryType
equals	java/jdbc/jtssrc/org/postgis/jts/JtsGeometry.java	/^    public boolean equals(Object obj) {$/;"	m	class:JtsGeometry
equals	java/jdbc/src/org/postgis/Geometry.java	/^	public boolean equals(Geometry other) {$/;"	m	class:Geometry
equals	java/jdbc/src/org/postgis/Geometry.java	/^	public boolean equals(Object other) {$/;"	m	class:Geometry
equals	java/jdbc/src/org/postgis/PGboxbase.java	/^    public boolean equals(Object other) {$/;"	m	class:PGboxbase
equals	java/jdbc/src/org/postgis/Point.java	/^    public final boolean equals(Point other) {$/;"	m	class:Point
equals	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^    public boolean equals(Object obj) {$/;"	m	class:PGShapeGeometry
equalsintern	java/jdbc/src/org/postgis/ComposedGeom.java	/^    protected boolean equalsintern(Geometry other) {$/;"	m	class:ComposedGeom
equalsintern	java/jdbc/src/org/postgis/Geometry.java	/^	protected abstract boolean equalsintern(Geometry other);$/;"	m	class:Geometry
equalsintern	java/jdbc/src/org/postgis/Point.java	/^    protected boolean equalsintern(Geometry otherg) {$/;"	m	class:Point
err	raster/rt_core/rt_context.c	/^    rt_message_handler err;$/;"	m	struct:rt_context_t	file:
error	extras/tiger_geocoder/tiger_2011/legacy_import/tiger2008/import_tiger_shps.sh	/^function error () {$/;"	f
errorIfGeometryCollection	postgis/lwgeom_geos.c	/^void errorIfGeometryCollection(GSERIALIZED *g1, GSERIALIZED *g2)$/;"	f
error_if_srid_mismatch	liblwgeom/lwutil.c	/^error_if_srid_mismatch(int srid1, int srid2)$/;"	f
escape_connection_string	loader/shpcommon.c	/^escape_connection_string(char *str)$/;"	f
escape_copy_string	loader/shp2pgsql-core.c	/^escape_copy_string(char *str)$/;"	f
escape_insert_string	loader/shp2pgsql-core.c	/^escape_insert_string(char *str)$/;"	f
estimateBytes	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    protected int estimateBytes(Geometry geom) {$/;"	m	class:JtsBinaryWriter
estimateBytes	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    protected int estimateBytes(Geometry geom) {$/;"	m	class:BinaryWriter
estimateCollection	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    private int estimateCollection(GeometryCollection geom) {$/;"	m	class:JtsBinaryWriter	file:
estimateCollection	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    private int estimateCollection(GeometryCollection geom) {$/;"	m	class:BinaryWriter	file:
estimateGeometryArray	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    private int estimateGeometryArray(Geometry container) {$/;"	m	class:JtsBinaryWriter	file:
estimateGeometryArray	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    private int estimateGeometryArray(Geometry[] container) {$/;"	m	class:BinaryWriter	file:
estimateLineString	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    private int estimateLineString(LineString geom) {$/;"	m	class:JtsBinaryWriter	file:
estimateLineString	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    private int estimateLineString(LineString geom) {$/;"	m	class:BinaryWriter	file:
estimateLinearRing	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    private int estimateLinearRing(LinearRing geom) {$/;"	m	class:BinaryWriter	file:
estimateMultiLineString	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    private int estimateMultiLineString(MultiLineString geom) {$/;"	m	class:JtsBinaryWriter	file:
estimateMultiLineString	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    private int estimateMultiLineString(MultiLineString geom) {$/;"	m	class:BinaryWriter	file:
estimateMultiPoint	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    private int estimateMultiPoint(MultiPoint geom) {$/;"	m	class:JtsBinaryWriter	file:
estimateMultiPoint	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    private int estimateMultiPoint(MultiPoint geom) {$/;"	m	class:BinaryWriter	file:
estimateMultiPolygon	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    private int estimateMultiPolygon(MultiPolygon geom) {$/;"	m	class:JtsBinaryWriter	file:
estimateMultiPolygon	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    private int estimateMultiPolygon(MultiPolygon geom) {$/;"	m	class:BinaryWriter	file:
estimatePoint	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    private int estimatePoint(Point geom) {$/;"	m	class:JtsBinaryWriter	file:
estimatePoint	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    private int estimatePoint(Point geom) {$/;"	m	class:BinaryWriter	file:
estimatePointArray	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    private int estimatePointArray(Point[] geom) {$/;"	m	class:BinaryWriter	file:
estimatePolygon	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    private int estimatePolygon(Polygon geom) {$/;"	m	class:JtsBinaryWriter	file:
estimatePolygon	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    private int estimatePolygon(Polygon geom) {$/;"	m	class:BinaryWriter	file:
estimate_join_selectivity	postgis/gserialized_estimate.c	/^estimate_join_selectivity(const ND_STATS *s1, const ND_STATS *s2)$/;"	f	file:
estimate_selectivity	postgis/gserialized_estimate.c	/^estimate_selectivity(const GBOX *box, const ND_STATS *nd_stats, int mode)$/;"	f	file:
eval_file	regress/run_test.pl	/^sub eval_file$/;"	s
ewkbViaSQL	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    private static Geometry ewkbViaSQL(String rep, Statement stat) throws SQLException {$/;"	m	class:JtsTestParser	file:
ewkbViaSQL	java/jdbc/src/examples/TestParser.java	/^    private static Geometry ewkbViaSQL(String rep, Statement stat) throws SQLException {$/;"	m	class:TestParser	file:
ewktViaSQL	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    private static Geometry ewktViaSQL(String rep, Statement stat) throws SQLException {$/;"	m	class:JtsTestParser	file:
ewktViaSQL	java/jdbc/src/examples/TestParser.java	/^    private static Geometry ewktViaSQL(String rep, Statement stat) throws SQLException {$/;"	m	class:TestParser	file:
examples	java/jdbc/jtssrc/examples/JtsTestParser.java	/^package examples;$/;"	p
examples	java/jdbc/src/examples/Test.java	/^package examples;$/;"	p
examples	java/jdbc/src/examples/TestAutoregister.java	/^package examples;$/;"	p
examples	java/jdbc/src/examples/TestBoxes.java	/^package examples;$/;"	p
examples	java/jdbc/src/examples/TestJava2d.java	/^package examples;$/;"	p
examples	java/jdbc/src/examples/TestParser.java	/^package examples;$/;"	p
examples	java/jdbc/src/examples/TestServer.java	/^package examples;$/;"	p
examples	java/jdbc/src/examples/VersionPrinter.java	/^package examples;$/;"	p
exc_max	raster/rt_core/librtcore.h	/^		int exc_max; \/* exceed max *\/$/;"	m	struct:rt_reclassexpr_t::rt_reclassrange
exc_min	raster/rt_core/librtcore.h	/^		int exc_min; \/* exceed min *\/$/;"	m	struct:rt_reclassexpr_t::rt_reclassrange
executeNonOpenGisTest	java/ejb2/src/com/geodetix/geo/client/Client.java	/^    private void executeNonOpenGisTest() throws ApplicationGeoLayerException, RemoteException {$/;"	m	class:Client	file:
executeOpenGisTest	java/ejb2/src/com/geodetix/geo/client/Client.java	/^    private void executeOpenGisTest() throws ApplicationGeoLayerException, RemoteException {$/;"	m	class:Client	file:
exit_nicely	extras/wkb_reader/readwkb.c	/^exit_nicely(PGconn *conn)$/;"	f
expand_box3d	postgis/lwgeom_box3d.c	/^expand_box3d(BOX3D *box, double d)$/;"	f
export_filename_column	loader/shp2pgsql-gui.c	/^GtkTreeViewColumn *export_filename_column;$/;"	v
export_filename_renderer	loader/shp2pgsql-gui.c	/^GtkCellRenderer *export_filename_renderer;$/;"	v
export_geom_column	loader/shp2pgsql-gui.c	/^GtkTreeViewColumn *export_geom_column;$/;"	v
export_geom_column_combo	loader/shp2pgsql-gui.c	/^GtkWidget *export_geom_column_combo;$/;"	v
export_geom_column_renderer	loader/shp2pgsql-gui.c	/^GtkCellRenderer *export_geom_column_renderer;$/;"	v
export_remove_column	loader/shp2pgsql-gui.c	/^GtkTreeViewColumn *export_remove_column;$/;"	v
export_remove_renderer	loader/shp2pgsql-gui.c	/^GtkCellRenderer *export_remove_renderer;$/;"	v
export_schema_column	loader/shp2pgsql-gui.c	/^GtkTreeViewColumn *export_schema_column;$/;"	v
export_schema_renderer	loader/shp2pgsql-gui.c	/^GtkCellRenderer *export_schema_renderer;$/;"	v
export_table_column	loader/shp2pgsql-gui.c	/^GtkTreeViewColumn *export_table_column;$/;"	v
export_table_list_store	loader/shp2pgsql-gui.c	/^GtkListStore *export_table_list_store;$/;"	v
export_table_renderer	loader/shp2pgsql-gui.c	/^GtkCellRenderer *export_table_renderer;$/;"	v
export_tree	loader/shp2pgsql-gui.c	/^GtkWidget *export_tree;$/;"	v
expr	raster/rt_core/rt_mapalgebra.c	/^	rt_reclassexpr *expr;$/;"	m	struct:_rti_colormap_arg_t	file:
expr	raster/rt_pg/rtpg_mapalgebra.c	/^	} expr[3];$/;"	m	struct:__anon50	typeref:struct:__anon50::__anon51	file:
exprcount	raster/rt_pg/rtpg_mapalgebra.c	/^	int exprcount;$/;"	m	struct:__anon50	file:
extent	postgis/gserialized_estimate.c	/^	ND_BOX extent;$/;"	m	struct:ND_STATS_T	file:
extenttype	raster/rt_pg/rtpg_mapalgebra.c	/^	rt_extenttype extenttype; \/* ouput raster's extent type *\/$/;"	m	struct:rtpg_nmapalgebra_arg_t	file:
extenttype	raster/rt_pg/rtpg_mapalgebra.c	/^	rt_extenttype extenttype;$/;"	m	struct:rtpg_clip_arg_t	file:
f	topology/test/regress/st_modedgeheal.sql	/^CREATE TABLE t.f(id varchar);$/;"	t
f	topology/test/regress/st_newedgeheal.sql	/^CREATE TABLE t.f(id varchar);$/;"	t
f.id	topology/test/regress/st_modedgeheal.sql	/^CREATE TABLE t.f(id varchar);$/;"	F
f.id	topology/test/regress/st_newedgeheal.sql	/^CREATE TABLE t.f(id varchar);$/;"	F
f_areal	topology/test/regress/createtopogeom.sql	/^CREATE TABLE "MiX".f_areal (id int);$/;"	t
f_areal	topology/test/regress/totopogeom.sql	/^CREATE TABLE tt.f_areal(id serial);$/;"	t
f_areal.id	topology/test/regress/createtopogeom.sql	/^CREATE TABLE "MiX".f_areal (id int);$/;"	F
f_areal.id	topology/test/regress/totopogeom.sql	/^CREATE TABLE tt.f_areal(id serial);$/;"	F
f_coll	topology/test/regress/totopogeom.sql	/^CREATE TABLE tt.f_coll(id serial);$/;"	t
f_coll.id	topology/test/regress/totopogeom.sql	/^CREATE TABLE tt.f_coll(id serial);$/;"	F
f_hier	topology/test/regress/totopogeom.sql	/^CREATE TABLE tt.f_hier(id serial);$/;"	t
f_hier.id	topology/test/regress/totopogeom.sql	/^CREATE TABLE tt.f_hier(id serial);$/;"	F
f_lineal	topology/test/regress/createtopogeom.sql	/^CREATE TABLE "MiX".f_lineal (id int);$/;"	t
f_lineal	topology/test/regress/totopogeom.sql	/^CREATE TABLE tt.f_lineal(id serial);$/;"	t
f_lineal.id	topology/test/regress/createtopogeom.sql	/^CREATE TABLE "MiX".f_lineal (id int);$/;"	F
f_lineal.id	topology/test/regress/totopogeom.sql	/^CREATE TABLE tt.f_lineal(id serial);$/;"	F
f_mix	topology/test/regress/createtopogeom.sql	/^CREATE TABLE "MiX".f_mix (id int);$/;"	t
f_mix.id	topology/test/regress/createtopogeom.sql	/^CREATE TABLE "MiX".f_mix (id int);$/;"	F
f_puntal	topology/test/regress/totopogeom.sql	/^CREATE TABLE tt.f_puntal(id serial);$/;"	t
f_puntal.id	topology/test/regress/totopogeom.sql	/^CREATE TABLE tt.f_puntal(id serial);$/;"	F
fac	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^    static GeometryFactory fac = new GeometryFactory();$/;"	f	class:JTSShape
face	liblwgeom/lwpsurface.c	/^	int cnt, face;$/;"	m	struct:struct_psurface_arcs	file:
face	liblwgeom/lwtin.c	/^	int cnt, face;$/;"	m	struct:struct_tin_arcs	file:
faces	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE faces$/;"	t
faces	topology/test/regress/topo2.5d.sql	/^CREATE TABLE public.faces (id serial);$/;"	t
faces.aiannhce	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  aiannhce varchar(4),$/;"	F
faces.aiannhce00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  aiannhce00 varchar(4),$/;"	F
faces.aiannhfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  aiannhfp varchar(5),$/;"	F
faces.aiannhfp00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  aiannhfp00 varchar(5),$/;"	F
faces.anrcfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  anrcfp varchar(5),$/;"	F
faces.anrcfp00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  anrcfp00 varchar(5),$/;"	F
faces.atotal	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  atotal double precision,$/;"	F
faces.blkgrpce	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  blkgrpce varchar(1),$/;"	F
faces.blkgrpce00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  blkgrpce00 varchar(1),$/;"	F
faces.blockce	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  blockce varchar(4),$/;"	F
faces.blockce00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  blockce00 varchar(4),$/;"	F
faces.cbsafp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  cbsafp varchar(5),$/;"	F
faces.cd108fp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  cd108fp varchar(2),$/;"	F
faces.cd111fp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  cd111fp varchar(2),$/;"	F
faces.cnectafp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  cnectafp varchar(3),$/;"	F
faces.comptyp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  comptyp varchar(1),$/;"	F
faces.comptyp00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  comptyp00 varchar(1),$/;"	F
faces.conctyfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  conctyfp varchar(5),$/;"	F
faces.conctyfp00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  conctyfp00 varchar(5),$/;"	F
faces.countyfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  countyfp varchar(3),$/;"	F
faces.countyfp00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  countyfp00 varchar(3),$/;"	F
faces.cousubfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  cousubfp varchar(5),$/;"	F
faces.cousubfp00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  cousubfp00 varchar(5),$/;"	F
faces.csafp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  csafp varchar(3),$/;"	F
faces.elsdlea	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  elsdlea varchar(5),$/;"	F
faces.elsdlea00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  elsdlea00 varchar(5),$/;"	F
faces.gid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^gid serial NOT NULL PRIMARY KEY,$/;"	F
faces.id	topology/test/regress/topo2.5d.sql	/^CREATE TABLE public.faces (id serial);$/;"	F
faces.idx_tiger_faces_countyfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX idx_tiger_faces_countyfp ON faces USING btree(countyfp);$/;"	i
faces.idx_tiger_faces_countyfp	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^CREATE INDEX idx_tiger_faces_countyfp ON faces USING btree(countyfp);$/;"	i
faces.idx_tiger_faces_tfid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX idx_tiger_faces_tfid ON faces USING btree (tfid);$/;"	i
faces.intptlat	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  intptlat varchar(11),$/;"	F
faces.intptlon	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  intptlon varchar(12),$/;"	F
faces.lwflag	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  lwflag varchar(1),$/;"	F
faces.metdivfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  metdivfp varchar(5),$/;"	F
faces.nctadvfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  nctadvfp varchar(5),$/;"	F
faces.nectafp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  nectafp varchar(5),$/;"	F
faces.offset	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  "offset" varchar(1),$/;"	F
faces.placefp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  placefp varchar(5),$/;"	F
faces.placefp00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  placefp00 varchar(5),$/;"	F
faces.puma5ce	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  puma5ce varchar(5),$/;"	F
faces.puma5ce00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  puma5ce00 varchar(5),$/;"	F
faces.scsdlea	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  scsdlea varchar(5),$/;"	F
faces.scsdlea00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  scsdlea00 varchar(5),$/;"	F
faces.sldlst	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  sldlst varchar(3),$/;"	F
faces.sldlst00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  sldlst00 varchar(3),$/;"	F
faces.sldust	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  sldust varchar(3),$/;"	F
faces.sldust00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  sldust00 varchar(3),$/;"	F
faces.statefp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  statefp varchar(2),$/;"	F
faces.statefp00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  statefp00 varchar(2),$/;"	F
faces.submcdfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  submcdfp varchar(5),$/;"	F
faces.submcdfp00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  submcdfp00 varchar(5),$/;"	F
faces.tazce	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  tazce varchar(6),$/;"	F
faces.tazce00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  tazce00 varchar(6),$/;"	F
faces.tblkgpce	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  tblkgpce varchar(1),$/;"	F
faces.tfid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  tfid numeric(10,0),$/;"	F
faces.the_geom	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  the_geom geometry,$/;"	F
faces.tiger_faces_the_geom_gist	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX tiger_faces_the_geom_gist ON faces USING gist(the_geom);$/;"	i
faces.tiger_state_the_geom_gist	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^CREATE INDEX tiger_state_the_geom_gist ON faces USING gist(the_geom);$/;"	i
faces.tractce	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  tractce varchar(6),$/;"	F
faces.tractce00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  tractce00 varchar(6),$/;"	F
faces.trsubce	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  trsubce varchar(3),$/;"	F
faces.trsubce00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  trsubce00 varchar(3),$/;"	F
faces.trsubfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  trsubfp varchar(5),$/;"	F
faces.trsubfp00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  trsubfp00 varchar(5),$/;"	F
faces.ttractce	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  ttractce varchar(6),$/;"	F
faces.uace	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  uace varchar(5),$/;"	F
faces.uace00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  uace00 varchar(5),$/;"	F
faces.ugace	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  ugace varchar(5),$/;"	F
faces.ugace00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  ugace00 varchar(5),$/;"	F
faces.unsdlea	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  unsdlea varchar(5),$/;"	F
faces.unsdlea00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  unsdlea00 varchar(5),$/;"	F
faces.vtdst	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  vtdst varchar(6),$/;"	F
faces.vtdst00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  vtdst00 varchar(6),$/;"	F
faces.zcta5ce	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  zcta5ce varchar(5),$/;"	F
faces.zcta5ce00	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  zcta5ce00 varchar(5),$/;"	F
fail	regress/run_test	/^fail ()$/;"	f
fail	regress/run_test.pl	/^sub fail$/;"	s
failcount	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    public static int failcount = 0;$/;"	f	class:JtsTestParser
failcount	java/jdbc/src/examples/TestBoxes.java	/^    public static int failcount = 0;$/;"	f	class:TestBoxes
failcount	java/jdbc/src/examples/TestParser.java	/^    public static int failcount = 0;$/;"	f	class:TestParser
fallbackSplit	postgis/gserialized_gist_2d.c	/^fallbackSplit(GistEntryVector *entryvec, GIST_SPLITVEC *v)$/;"	f	file:
fc	topology/test/regress/st_addedgemodface.sql	/^CREATE TABLE city_data.fc(id varchar);$/;"	t
fc	topology/test/regress/st_addedgenewfaces.sql	/^CREATE TABLE city_data.fc(id varchar);$/;"	t
fc.id	topology/test/regress/st_addedgemodface.sql	/^CREATE TABLE city_data.fc(id varchar);$/;"	F
fc.id	topology/test/regress/st_addedgenewfaces.sql	/^CREATE TABLE city_data.fc(id varchar);$/;"	F
featnames	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE featnames$/;"	t
featnames.fullname	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  fullname character varying(100),$/;"	F
featnames.gid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  gid SERIAL NOT NULL,$/;"	F
featnames.idx_tiger_featnames_lname	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX idx_tiger_featnames_lname ON featnames USING btree (lower(name));$/;"	i
featnames.idx_tiger_featnames_snd_name	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX idx_tiger_featnames_snd_name ON featnames USING btree (soundex(name));$/;"	i
featnames.idx_tiger_featnames_tlid_statefp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX idx_tiger_featnames_tlid_statefp ON featnames USING btree (tlid,statefp);$/;"	i
featnames.linearid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  linearid character varying(22),$/;"	F
featnames.mtfcc	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  mtfcc character varying(5),$/;"	F
featnames.name	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  "name" character varying(100),$/;"	F
featnames.paflag	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  paflag character varying(1),$/;"	F
featnames.predir	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  predir character varying(2),$/;"	F
featnames.predirabrv	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  predirabrv character varying(15),$/;"	F
featnames.prequal	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  prequal character varying(2),$/;"	F
featnames.prequalabr	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  prequalabr character varying(15),$/;"	F
featnames.pretyp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  pretyp character varying(3),$/;"	F
featnames.pretypabrv	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  pretypabrv character varying(50),$/;"	F
featnames.sufdir	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  sufdir character varying(2),$/;"	F
featnames.sufdirabrv	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  sufdirabrv character varying(15),$/;"	F
featnames.sufqual	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  sufqual character varying(2),$/;"	F
featnames.sufqualabr	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  sufqualabr character varying(15),$/;"	F
featnames.suftyp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  suftyp character varying(3),$/;"	F
featnames.suftypabrv	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  suftypabrv character varying(50),$/;"	F
featnames.tlid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  tlid bigint,$/;"	F
feature	topology/test/regress/addtopogeometrycolumn.sql	/^create table feature(id integer);$/;"	t
feature.id	topology/test/regress/addtopogeometrycolumn.sql	/^create table feature(id integer);$/;"	F
fetch_band_nodata	raster/scripts/python/raster2pgsql.py	/^def fetch_band_nodata(band, default = 0):$/;"	f
fetch_query	loader/pgsql2shp-core.h	/^	char *fetch_query;$/;"	m	struct:shp_dumper_state
fetchres	loader/pgsql2shp-core.h	/^	PGresult *fetchres;$/;"	m	struct:shp_dumper_state
fetchsize	loader/pgsql2shp-core.h	/^	int fetchsize;$/;"	m	struct:shp_dumper_config
field_names	loader/shp2pgsql-core.h	/^	char **field_names;$/;"	m	struct:shp_loader_state
fieldcount	loader/pgsql2shp-core.h	/^	int fieldcount;$/;"	m	struct:shp_dumper_state
file_column	raster/loader/raster2pgsql.h	/^	int file_column;$/;"	m	struct:raster_loader_config
file_column_name	raster/loader/raster2pgsql.h	/^	char *file_column_name;$/;"	m	struct:raster_loader_config
fillRasterToPolygonize	raster/test/cunit/cu_gdal.c	/^static rt_raster fillRasterToPolygonize(int hasnodata, double nodataval) {$/;"	f	file:
findByPolygon	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAOImpl.java	/^    public java.util.Collection findByPolygon(org.postgis.Polygon polygon)$/;"	m	class:PostGisGeometryDAOImpl
findByPolygon	java/ejb2/src/com/geodetix/geo/ejb/GeometryFacadeBean.java	/^    public Collection findByPolygon(org.postgis.Polygon polygon)$/;"	m	class:GeometryFacadeBean
findByPrimaryKey	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAOImpl.java	/^    public java.lang.Integer findByPrimaryKey(java.lang.Integer primaryKey)$/;"	m	class:PostGisGeometryDAOImpl
findFaceHoles	liblwgeom/lwgeom_geos.c	/^findFaceHoles(Face** faces, int nfaces)$/;"	f	file:
findMemberByName	liblwgeom/lwin_geojson.c	/^findMemberByName(json_object* poObj, const char* pszName )$/;"	f	file:
findPerson	java/ejb3/src/org/postgis/ejb/UserBean.java	/^	public String[] findPerson(@WebParam(name = "name") String name, @WebParam(name = "surname") String surname)$/;"	m	class:UserBean
findPerson	java/ejb3/src/org/postgis/ejb/UserBeanRemote.java	/^	public String[] findPerson(String name, String surname) throws RemoteException;$/;"	m	interface:UserBeanRemote
find_WKB_typeid	extras/wkb_reader/readwkb.c	/^int	find_WKB_typeid(PGconn 	*conn)$/;"	f
first	postgis/gserialized_gist_2d.c	/^	bool		first;			\/* true if no split was selected yet *\/$/;"	m	struct:__anon18	file:
first_column	liblwgeom/lwin_wkt_parse.c	/^  int first_column;$/;"	m	struct:YYLTYPE	file:
first_column	liblwgeom/lwin_wkt_parse.h	/^  int first_column;$/;"	m	struct:YYLTYPE
first_line	liblwgeom/lwin_wkt_parse.c	/^  int first_line;$/;"	m	struct:YYLTYPE	file:
first_line	liblwgeom/lwin_wkt_parse.h	/^  int first_line;$/;"	m	struct:YYLTYPE
flags	liblwgeom/lwin_wkt.h	/^	uint8_t flags;$/;"	m	struct:__anon25
flattenLayers	doc/html/image_src/generator.c	/^flattenLayers(char* filename)$/;"	f	file:
flex_int16_t	liblwgeom/lwin_wkt_lex.c	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_int16_t	liblwgeom/lwin_wkt_lex.c	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int32_t	liblwgeom/lwin_wkt_lex.c	/^typedef int flex_int32_t;$/;"	t	file:
flex_int32_t	liblwgeom/lwin_wkt_lex.c	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_int8_t	liblwgeom/lwin_wkt_lex.c	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_int8_t	liblwgeom/lwin_wkt_lex.c	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_uint16_t	liblwgeom/lwin_wkt_lex.c	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_uint16_t	liblwgeom/lwin_wkt_lex.c	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint32_t	liblwgeom/lwin_wkt_lex.c	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_uint32_t	liblwgeom/lwin_wkt_lex.c	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
flex_uint8_t	liblwgeom/lwin_wkt_lex.c	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_uint8_t	liblwgeom/lwin_wkt_lex.c	/^typedef unsigned char flex_uint8_t; $/;"	t	file:
flip_endian_16	raster/rt_core/rt_serialize.c	/^flip_endian_16(uint8_t *d) {$/;"	f
flip_endian_32	raster/rt_core/rt_serialize.c	/^flip_endian_32(uint8_t *d) {$/;"	f
flip_endian_64	raster/rt_core/rt_serialize.c	/^flip_endian_64(uint8_t *d) {$/;"	f
flip_endian_double	extras/wkb_reader/printwkb.c	/^void	flip_endian_double(char 	*d)$/;"	f
flip_endian_int32	extras/wkb_reader/printwkb.c	/^void		flip_endian_int32(char		*i)$/;"	f
flush_stringbuffer	raster/loader/raster2pgsql.c	/^flush_stringbuffer(STRINGBUFFER *buffer) {$/;"	f	file:
fmt	raster/scripts/python/pixval.py	/^fmt = pt2fmt(src_band.DataType)$/;"	v
fmt2printfmt	raster/scripts/python/raster2pgsql.py	/^def fmt2printfmt(fmt):$/;"	f
font	raster/scripts/python/genraster.py	/^        font = ImageFont.truetype('\/usr\/share\/fonts\/truetype\/freefont\/FreeSans.ttf',$/;"	v
foo	regress/sfcgal/tickets.sql	/^CREATE TABLE foo (id integer, the_geom geometry);$/;"	t
foo	regress/tickets.sql	/^CREATE TABLE foo (id integer, the_geom geometry);$/;"	t
foo.id	regress/sfcgal/tickets.sql	/^CREATE TABLE foo (id integer, the_geom geometry);$/;"	F
foo.id	regress/tickets.sql	/^CREATE TABLE foo (id integer, the_geom geometry);$/;"	F
foo.the_geom	regress/sfcgal/tickets.sql	/^CREATE TABLE foo (id integer, the_geom geometry);$/;"	F
foo.the_geom	regress/tickets.sql	/^CREATE TABLE foo (id integer, the_geom geometry);$/;"	F
force_output	loader/shp2pgsql-core.h	/^	int force_output;$/;"	m	struct:shp_loader_config
force_sfs_suite	liblwgeom/cunit/cu_force_sfs.c	/^CU_SuiteInfo force_sfs_suite = {"force_sfs",  NULL,  NULL, force_sfs_tests};$/;"	v
force_sfs_tests	liblwgeom/cunit/cu_force_sfs.c	/^CU_TestInfo force_sfs_tests[] =$/;"	v
forceint4	loader/shp2pgsql-core.h	/^	int forceint4;$/;"	m	struct:shp_loader_config
forests	extras/ogc_test_suite/1_schema.sql	/^CREATE TABLE forests ($/;"	t
forests.fid	extras/ogc_test_suite/1_schema.sql	/^       fid            INTEGER NOT NULL PRIMARY KEY,$/;"	F
forests.name	extras/ogc_test_suite/1_schema.sql	/^       name           VARCHAR(64)$/;"	F
fp	loader/shapefil.h	/^    SAFile	fp;$/;"	m	struct:__anon67
fp	topology/test/regress/st_addedgemodface.sql	/^CREATE TABLE city_data.fp(id varchar);$/;"	t
fp	topology/test/regress/st_addedgenewfaces.sql	/^CREATE TABLE city_data.fp(id varchar);$/;"	t
fp.id	topology/test/regress/st_addedgemodface.sql	/^CREATE TABLE city_data.fp(id varchar);$/;"	F
fp.id	topology/test/regress/st_addedgenewfaces.sql	/^CREATE TABLE city_data.fp(id varchar);$/;"	F
fpSHP	loader/shapefil.h	/^    SAFile      fpSHP;$/;"	m	struct:__anon64
fpSHX	loader/shapefil.h	/^    SAFile 	fpSHX;$/;"	m	struct:__anon64
freeStyles	doc/html/image_src/styles.c	/^freeStyles( LAYERSTYLE **headRef )$/;"	f
free_dumper_config	loader/shp2pgsql-gui.c	/^free_dumper_config(SHPDUMPERCONFIG *config)$/;"	f	file:
free_loader_config	loader/shp2pgsql-gui.c	/^free_loader_config(SHPLOADERCONFIG *config)$/;"	f	file:
fromP1toP2	java/ejb2/src/com/geodetix/geo/client/Client.java	/^    private LineString fromP1toP2;$/;"	f	class:Client	file:
from_srid	loader/shp2pgsql-core.h	/^	int from_srid;$/;"	m	struct:shp_loader_state
func	raster/rt_core/rt_warp.c	/^		GDALTransformerFunc func;$/;"	m	struct:_rti_warp_arg_t::__anon42	file:
g2d_counter_internal	postgis/gserialized_gist_2d.c	/^static int g2d_counter_internal = 0;$/;"	v	file:
g2d_counter_leaf	postgis/gserialized_gist_2d.c	/^static int g2d_counter_leaf = 0;$/;"	v	file:
g_box_consider_split	postgis/gserialized_gist_2d.c	/^g_box_consider_split(ConsiderSplitContext *context, int dimNum,$/;"	f	file:
g_cell_size	raster/scripts/python/genraster.py	/^g_cell_size = ( int(sys.argv[3]), int(sys.argv[4]) )$/;"	v
g_file	raster/scripts/python/genraster.py	/^g_file = "out.png"$/;"	v
g_outline	raster/scripts/python/genraster.py	/^    g_outline = None$/;"	v
g_outline	raster/scripts/python/genraster.py	/^    g_outline = int(sys.argv[5])$/;"	v
g_rt_catalog	raster/scripts/python/raster2pgsql.py	/^g_rt_catalog = ''$/;"	v
g_rt_column	raster/scripts/python/raster2pgsql.py	/^g_rt_column = 'rast'$/;"	v
g_rt_endian	raster/scripts/python/raster2pgsql.py	/^g_rt_endian = NDR$/;"	v
g_rt_schema	raster/scripts/python/raster2pgsql.py	/^g_rt_schema = 'public'$/;"	v
g_rt_version	raster/scripts/python/raster2pgsql.py	/^g_rt_version = 0$/;"	v
g_size	raster/scripts/python/genraster.py	/^g_size = ( int(sys.argv[1]), int(sys.argv[2]) )$/;"	v
gbox_angular_height	liblwgeom/lwgeodetic.c	/^gbox_angular_height(const GBOX* gbox)$/;"	f
gbox_angular_width	liblwgeom/lwgeodetic.c	/^gbox_angular_width(const GBOX* gbox)$/;"	f
gbox_centroid	liblwgeom/lwgeodetic.c	/^gbox_centroid(const GBOX* gbox, POINT2D* out)$/;"	f
gbox_check_poles	liblwgeom/lwgeodetic.c	/^static int gbox_check_poles(GBOX *gbox)$/;"	f	file:
gbox_clone	liblwgeom/g_box.c	/^GBOX* gbox_clone(const GBOX *gbox)$/;"	f
gbox_contains_point3d	liblwgeom/g_box.c	/^int gbox_contains_point3d(const GBOX *gbox, const POINT3D *pt)$/;"	f
gbox_copy	liblwgeom/g_box.c	/^GBOX* gbox_copy(const GBOX *box)$/;"	f
gbox_data	liblwgeom/cunit/cu_geodetic_data.h	/^char gbox_data[][512] =$/;"	v
gbox_data_length	liblwgeom/cunit/cu_geodetic_data.h	/^int gbox_data_length = 55;$/;"	v
gbox_duplicate	liblwgeom/g_box.c	/^void gbox_duplicate(const GBOX *original, GBOX *duplicate)$/;"	f
gbox_expand	liblwgeom/g_box.c	/^void gbox_expand(GBOX *g, double d)$/;"	f
gbox_float_round	liblwgeom/g_box.c	/^void gbox_float_round(GBOX *gbox)$/;"	f
gbox_from_gidx	libpgcommon/gserialized_gist.c	/^void gbox_from_gidx(GIDX *a, GBOX *gbox)$/;"	f
gbox_from_string	liblwgeom/g_box.c	/^GBOX* gbox_from_string(const char *str)$/;"	f
gbox_geocentric_slow	liblwgeom/lwgeodetic.c	/^int gbox_geocentric_slow = LW_FALSE;$/;"	v
gbox_init	liblwgeom/g_box.c	/^void gbox_init(GBOX *gbox)$/;"	f
gbox_init_point3d	liblwgeom/g_box.c	/^int gbox_init_point3d(const POINT3D *p, GBOX *gbox)$/;"	f
gbox_is_valid	liblwgeom/g_box.c	/^int gbox_is_valid(const GBOX *gbox)$/;"	f
gbox_merge	liblwgeom/g_box.c	/^int gbox_merge(const GBOX *new_box, GBOX *merge_box)$/;"	f
gbox_merge_point3d	liblwgeom/g_box.c	/^int gbox_merge_point3d(const POINT3D *p, GBOX *gbox)$/;"	f
gbox_ndims	postgis/gserialized_estimate.c	/^gbox_ndims(const GBOX* gbox)$/;"	f	file:
gbox_new	liblwgeom/g_box.c	/^GBOX* gbox_new(uint8_t flags)$/;"	f
gbox_overlaps	liblwgeom/g_box.c	/^int gbox_overlaps(const GBOX *g1, const GBOX *g2)$/;"	f
gbox_overlaps_2d	liblwgeom/g_box.c	/^gbox_overlaps_2d(const GBOX *g1, const GBOX *g2)$/;"	f
gbox_pt_outside	liblwgeom/lwgeodetic.c	/^void gbox_pt_outside(const GBOX *gbox, POINT2D *pt_outside)$/;"	f
gbox_same	liblwgeom/g_box.c	/^int gbox_same(const GBOX *g1, const GBOX *g2)$/;"	f
gbox_serialized_size	liblwgeom/g_box.c	/^size_t gbox_serialized_size(uint8_t flags)$/;"	f
gbox_to_gml2	liblwgeom/lwout_gml.c	/^gbox_to_gml2(const GBOX *bbox, const char *srs, int precision, const char *prefix)$/;"	f	file:
gbox_to_gml3	liblwgeom/lwout_gml.c	/^gbox_to_gml3(const GBOX *bbox, const char *srs, int precision, int opts, const char *prefix)$/;"	f	file:
gbox_to_string	liblwgeom/g_box.c	/^char* gbox_to_string(const GBOX *gbox)$/;"	f
gbox_union	liblwgeom/g_box.c	/^int gbox_union(const GBOX *g1, const GBOX *g2, GBOX *gout)$/;"	f
gdal_suite	raster/test/cunit/cu_gdal.c	/^CU_SuiteInfo gdal_suite = {"gdal",  NULL,  NULL, gdal_tests};$/;"	v
gdal_tests	raster/test/cunit/cu_gdal.c	/^CU_TestInfo gdal_tests[] = {$/;"	v
gdalbandtype	raster/loader/raster2pgsql.h	/^	GDALDataType *gdalbandtype;$/;"	m	struct:rasterinfo_t
gdaldatapath	raster/rt_pg/rtpostgis.c	/^static char *gdaldatapath;$/;"	v	file:
gdt2pt	raster/scripts/python/raster2pgsql.py	/^def gdt2pt(gdt):$/;"	f
geo_col	loader/shp2pgsql-core.h	/^	char *geo_col; $/;"	m	struct:shp_loader_config
geo_col	loader/shp2pgsql-core.h	/^	char *geo_col; $/;"	m	struct:shp_loader_state
geo_col_name	loader/pgsql2shp-core.h	/^	char *geo_col_name;$/;"	m	struct:shp_dumper_config
geo_col_name	loader/pgsql2shp-core.h	/^	char *geo_col_name;$/;"	m	struct:shp_dumper_state
geocode	extras/tiger_geocoder/tiger_2011/geocode/geocode.sql	/^CREATE OR REPLACE FUNCTION geocode($/;"	f
geocode_address	extras/tiger_geocoder/tiger_2011/geocode/geocode_address.sql	/^CREATE OR REPLACE FUNCTION geocode_address(IN parsed norm_addy, max_results integer DEFAULT 10, restrict_geom geometry DEFAULT NULL, OUT addy norm_addy, OUT geomout geometry, OUT rating integer)$/;"	f
geocode_intersection	extras/tiger_geocoder/tiger_2011/geocode/geocode_intersection.sql	/^CREATE OR REPLACE FUNCTION geocode_intersection(IN roadway1 text, IN roadway2 text, IN in_state text, IN in_city text DEFAULT '', IN in_zip text DEFAULT '', $/;"	f
geocode_location	extras/tiger_geocoder/tiger_2011/geocode/geocode_location.sql	/^CREATE OR REPLACE FUNCTION geocode_location($/;"	f
geocode_settings	extras/tiger_geocoder/tiger_2011/geocode_settings.sql	/^		CREATE TABLE geocode_settings(name text primary key, setting text, unit text, category text, short_desc text);$/;"	t
geocode_settings.category	extras/tiger_geocoder/tiger_2011/geocode_settings.sql	/^		CREATE TABLE geocode_settings(name text primary key, setting text, unit text, category text, short_desc text);$/;"	F
geocode_settings.name	extras/tiger_geocoder/tiger_2011/geocode_settings.sql	/^		CREATE TABLE geocode_settings(name text primary key, setting text, unit text, category text, short_desc text);$/;"	F
geocode_settings.setting	extras/tiger_geocoder/tiger_2011/geocode_settings.sql	/^		CREATE TABLE geocode_settings(name text primary key, setting text, unit text, category text, short_desc text);$/;"	F
geocode_settings.short_desc	extras/tiger_geocoder/tiger_2011/geocode_settings.sql	/^		CREATE TABLE geocode_settings(name text primary key, setting text, unit text, category text, short_desc text);$/;"	F
geocode_settings.unit	extras/tiger_geocoder/tiger_2011/geocode_settings.sql	/^		CREATE TABLE geocode_settings(name text primary key, setting text, unit text, category text, short_desc text);$/;"	F
geodetic_suite	liblwgeom/cunit/cu_geodetic.c	/^CU_SuiteInfo geodetic_suite = {"Geodetic Suite",  NULL,  NULL, geodetic_tests};$/;"	v
geodetic_tests	liblwgeom/cunit/cu_geodetic.c	/^CU_TestInfo geodetic_tests[] =$/;"	v
geofac	java/jdbc/jtssrc/org/postgis/jts/JtsGeometry.java	/^    final static GeometryFactory geofac = new GeometryFactory(prec, 0, csfac);$/;"	f	class:JtsGeometry
geog2cart	liblwgeom/lwgeodetic.c	/^void geog2cart(const GEOGRAPHIC_POINT *g, POINT3D *p)$/;"	f
geog_counter_internal	postgis/gserialized_gist_nd.c	/^static int geog_counter_internal = 0;$/;"	v	file:
geog_counter_leaf	postgis/gserialized_gist_nd.c	/^static int geog_counter_leaf = 0;$/;"	v	file:
geog_oid	loader/pgsql2shp-core.h	/^	int geog_oid;$/;"	m	struct:shp_dumper_state
geographic_point_equals	liblwgeom/lwgeodetic.c	/^int geographic_point_equals(const GEOGRAPHIC_POINT *g1, const GEOGRAPHIC_POINT *g2)$/;"	f
geographic_point_init	liblwgeom/lwgeodetic.c	/^void geographic_point_init(double lon, double lat, GEOGRAPHIC_POINT *g)$/;"	f
geography	loader/shp2pgsql-core.h	/^	int geography;$/;"	m	struct:shp_loader_config
geography_area	postgis/geography_measurement.c	/^Datum geography_area(PG_FUNCTION_ARGS)$/;"	f
geography_area	postgis/geography_measurement.c	/^PG_FUNCTION_INFO_V1(geography_area);$/;"	v
geography_as_geojson	postgis/geography_inout.c	/^Datum geography_as_geojson(PG_FUNCTION_ARGS)$/;"	f
geography_as_geojson	postgis/geography_inout.c	/^PG_FUNCTION_INFO_V1(geography_as_geojson);$/;"	v
geography_as_gml	postgis/geography_inout.c	/^Datum geography_as_gml(PG_FUNCTION_ARGS)$/;"	f
geography_as_gml	postgis/geography_inout.c	/^PG_FUNCTION_INFO_V1(geography_as_gml);$/;"	v
geography_as_kml	postgis/geography_inout.c	/^Datum geography_as_kml(PG_FUNCTION_ARGS)$/;"	f
geography_as_kml	postgis/geography_inout.c	/^PG_FUNCTION_INFO_V1(geography_as_kml);$/;"	v
geography_as_svg	postgis/geography_inout.c	/^Datum geography_as_svg(PG_FUNCTION_ARGS)$/;"	f
geography_as_svg	postgis/geography_inout.c	/^PG_FUNCTION_INFO_V1(geography_as_svg);$/;"	v
geography_azimuth	postgis/geography_measurement.c	/^Datum geography_azimuth(PG_FUNCTION_ARGS)$/;"	f
geography_azimuth	postgis/geography_measurement.c	/^PG_FUNCTION_INFO_V1(geography_azimuth);$/;"	v
geography_bestsrid	postgis/geography_measurement.c	/^Datum geography_bestsrid(PG_FUNCTION_ARGS)$/;"	f
geography_bestsrid	postgis/geography_measurement.c	/^PG_FUNCTION_INFO_V1(geography_bestsrid);$/;"	v
geography_cmp	postgis/geography_btree.c	/^Datum geography_cmp(PG_FUNCTION_ARGS)$/;"	f
geography_cmp	postgis/geography_btree.c	/^PG_FUNCTION_INFO_V1(geography_cmp);$/;"	v
geography_covers	postgis/geography_measurement.c	/^Datum geography_covers(PG_FUNCTION_ARGS)$/;"	f
geography_covers	postgis/geography_measurement.c	/^PG_FUNCTION_INFO_V1(geography_covers);$/;"	v
geography_distance	postgis/geography_measurement.c	/^Datum geography_distance(PG_FUNCTION_ARGS)$/;"	f
geography_distance	postgis/geography_measurement.c	/^PG_FUNCTION_INFO_V1(geography_distance);$/;"	v
geography_distance_cache	postgis/geography_measurement_trees.c	/^geography_distance_cache(FunctionCallInfoData* fcinfo, const GSERIALIZED* g1, const GSERIALIZED* g2, const SPHEROID* s, double* distance)$/;"	f
geography_distance_tree	postgis/geography_measurement.c	/^Datum geography_distance_tree(PG_FUNCTION_ARGS)$/;"	f
geography_distance_tree	postgis/geography_measurement.c	/^PG_FUNCTION_INFO_V1(geography_distance_tree);$/;"	v
geography_distance_uncached	postgis/geography_measurement.c	/^Datum geography_distance_uncached(PG_FUNCTION_ARGS)$/;"	f
geography_distance_uncached	postgis/geography_measurement.c	/^PG_FUNCTION_INFO_V1(geography_distance_uncached);$/;"	v
geography_dwithin	postgis/geography_measurement.c	/^Datum geography_dwithin(PG_FUNCTION_ARGS)$/;"	f
geography_dwithin	postgis/geography_measurement.c	/^PG_FUNCTION_INFO_V1(geography_dwithin);$/;"	v
geography_dwithin_cache	postgis/geography_measurement_trees.c	/^geography_dwithin_cache(FunctionCallInfoData* fcinfo, const GSERIALIZED* g1, const GSERIALIZED* g2, const SPHEROID* s, double tolerance, int* dwithin)$/;"	f
geography_dwithin_uncached	postgis/geography_measurement.c	/^Datum geography_dwithin_uncached(PG_FUNCTION_ARGS)$/;"	f
geography_dwithin_uncached	postgis/geography_measurement.c	/^PG_FUNCTION_INFO_V1(geography_dwithin_uncached);$/;"	v
geography_enforce_typmod	postgis/gserialized_typmod.c	/^Datum geography_enforce_typmod(PG_FUNCTION_ARGS)$/;"	f
geography_enforce_typmod	postgis/gserialized_typmod.c	/^PG_FUNCTION_INFO_V1(geography_enforce_typmod);$/;"	v
geography_eq	postgis/geography_btree.c	/^Datum geography_eq(PG_FUNCTION_ARGS)$/;"	f
geography_eq	postgis/geography_btree.c	/^PG_FUNCTION_INFO_V1(geography_eq);$/;"	v
geography_expand	postgis/geography_measurement.c	/^Datum geography_expand(PG_FUNCTION_ARGS)$/;"	f
geography_expand	postgis/geography_measurement.c	/^PG_FUNCTION_INFO_V1(geography_expand);$/;"	v
geography_from_binary	postgis/geography_inout.c	/^Datum geography_from_binary(PG_FUNCTION_ARGS)$/;"	f
geography_from_binary	postgis/geography_inout.c	/^PG_FUNCTION_INFO_V1(geography_from_binary);$/;"	v
geography_from_geometry	postgis/geography_inout.c	/^Datum geography_from_geometry(PG_FUNCTION_ARGS)$/;"	f
geography_from_geometry	postgis/geography_inout.c	/^PG_FUNCTION_INFO_V1(geography_from_geometry);$/;"	v
geography_from_text	postgis/geography_inout.c	/^Datum geography_from_text(PG_FUNCTION_ARGS)$/;"	f
geography_from_text	postgis/geography_inout.c	/^PG_FUNCTION_INFO_V1(geography_from_text);$/;"	v
geography_ge	postgis/geography_btree.c	/^Datum geography_ge(PG_FUNCTION_ARGS)$/;"	f
geography_ge	postgis/geography_btree.c	/^PG_FUNCTION_INFO_V1(geography_ge);$/;"	v
geography_gidx_center	postgis/geography_btree.c	/^static void geography_gidx_center(GIDX *gidx, POINT3D *p)$/;"	f	file:
geography_gt	postgis/geography_btree.c	/^Datum geography_gt(PG_FUNCTION_ARGS)$/;"	f
geography_gt	postgis/geography_btree.c	/^PG_FUNCTION_INFO_V1(geography_gt);$/;"	v
geography_in	postgis/geography_inout.c	/^Datum geography_in(PG_FUNCTION_ARGS)$/;"	f
geography_in	postgis/geography_inout.c	/^PG_FUNCTION_INFO_V1(geography_in);$/;"	v
geography_le	postgis/geography_btree.c	/^Datum geography_le(PG_FUNCTION_ARGS)$/;"	f
geography_le	postgis/geography_btree.c	/^PG_FUNCTION_INFO_V1(geography_le);$/;"	v
geography_length	postgis/geography_measurement.c	/^Datum geography_length(PG_FUNCTION_ARGS)$/;"	f
geography_length	postgis/geography_measurement.c	/^PG_FUNCTION_INFO_V1(geography_length);$/;"	v
geography_lt	postgis/geography_btree.c	/^Datum geography_lt(PG_FUNCTION_ARGS)$/;"	f
geography_lt	postgis/geography_btree.c	/^PG_FUNCTION_INFO_V1(geography_lt);$/;"	v
geography_out	postgis/geography_inout.c	/^Datum geography_out(PG_FUNCTION_ARGS)$/;"	f
geography_out	postgis/geography_inout.c	/^PG_FUNCTION_INFO_V1(geography_out);$/;"	v
geography_perimeter	postgis/geography_measurement.c	/^Datum geography_perimeter(PG_FUNCTION_ARGS)$/;"	f
geography_perimeter	postgis/geography_measurement.c	/^PG_FUNCTION_INFO_V1(geography_perimeter);$/;"	v
geography_point_outside	postgis/geography_measurement.c	/^Datum geography_point_outside(PG_FUNCTION_ARGS)$/;"	f
geography_point_outside	postgis/geography_measurement.c	/^PG_FUNCTION_INFO_V1(geography_point_outside);$/;"	v
geography_project	postgis/geography_measurement.c	/^Datum geography_project(PG_FUNCTION_ARGS)$/;"	f
geography_project	postgis/geography_measurement.c	/^PG_FUNCTION_INFO_V1(geography_project);$/;"	v
geography_recv	postgis/geography_inout.c	/^Datum geography_recv(PG_FUNCTION_ARGS)$/;"	f
geography_recv	postgis/geography_inout.c	/^PG_FUNCTION_INFO_V1(geography_recv);$/;"	v
geography_segmentize	postgis/geography_measurement.c	/^Datum geography_segmentize(PG_FUNCTION_ARGS)$/;"	f
geography_segmentize	postgis/geography_measurement.c	/^PG_FUNCTION_INFO_V1(geography_segmentize);$/;"	v
geography_send	postgis/geography_inout.c	/^Datum geography_send(PG_FUNCTION_ARGS)$/;"	f
geography_send	postgis/geography_inout.c	/^PG_FUNCTION_INFO_V1(geography_send);$/;"	v
geography_serialize	libpgcommon/lwgeom_pg.c	/^GSERIALIZED* geography_serialize(LWGEOM *lwgeom)$/;"	f
geography_tree_distance	postgis/geography_measurement_trees.c	/^geography_tree_distance(const GSERIALIZED* g1, const GSERIALIZED* g2, const SPHEROID* s, double tolerance, double* distance)$/;"	f
geography_typmod_in	postgis/gserialized_typmod.c	/^Datum geography_typmod_in(PG_FUNCTION_ARGS)$/;"	f
geography_typmod_in	postgis/gserialized_typmod.c	/^PG_FUNCTION_INFO_V1(geography_typmod_in);$/;"	v
geography_valid_type	postgis/geography_inout.c	/^void geography_valid_type(uint8_t type)$/;"	f
geohash_lwerror	postgis/lwgeom_in_geohash.c	/^static void geohash_lwerror(char *msg, int error_code)$/;"	f	file:
geohash_point	liblwgeom/lwalgorithm.c	/^char *geohash_point(double longitude, double latitude, int precision)$/;"	f
geohash_point_as_int	liblwgeom/lwalgorithm.c	/^unsigned int geohash_point_as_int(POINT2D *pt)$/;"	f
geojson_lwerror	liblwgeom/lwin_geojson.c	/^static void geojson_lwerror(char *msg, int error_code)$/;"	f	file:
geom	java/ejb3/src/org/postgis/hibernate/ContainsExpression.java	/^	private Geometry geom;$/;"	f	class:ContainsExpression	file:
geom	java/ejb3/src/org/postgis/hibernate/IntersectsExpression.java	/^	private Geometry geom;$/;"	f	class:IntersectsExpression	file:
geom	java/ejb3/src/org/postgis/hibernate/WithinExpression.java	/^	private Geometry geom;$/;"	f	class:WithinExpression	file:
geom	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^    Geometry geom;$/;"	f	class:JTSShape
geom	java/jdbc/jtssrc/org/postgis/jts/JtsGeometry.java	/^    Geometry geom;$/;"	f	class:JtsGeometry
geom	java/jdbc/src/org/postgis/PGgeometry.java	/^    Geometry geom;$/;"	f	class:PGgeometry
geom	liblwgeom/lwgeom_geos.c	/^  const GEOSGeometry* geom;$/;"	m	struct:Face_t	file:
geom	postgis/lwgeom_accum.c	/^	Datum geom;	\/\/the geometry from function parameter$/;"	m	struct:__anon9	file:
geom	postgis/lwgeom_dump.c	/^	LWGEOM *geom;$/;"	m	struct:GEOMDUMPNODE_T	file:
geom	postgis/lwgeom_dumppoints.c	/^	LWGEOM *geom;$/;"	m	struct:dumpnode	file:
geom	postgis/lwgeom_geos_prepared.c	/^	const GEOSGeometry* geom;$/;"	m	struct:__anon16	file:
geom	postgis/lwgeom_geos_prepared.h	/^	const GEOSGeometry*         geom;$/;"	m	struct:__anon7
geom	raster/rt_core/librtcore.h	/^	LWGEOM *geom;$/;"	m	struct:rt_pixel_t
geom	raster/rt_core/librtcore.h	/^	LWPOLY *geom;$/;"	m	struct:rt_geomval_t
geom	raster/rt_pg/rtpg_pixel.c	/^	LWGEOM *geom;$/;"	m	struct:rtpg_setvaluesgv_geomval_t	file:
geom1	libpgcommon/lwgeom_cache.h	/^	GSERIALIZED*                geom1;$/;"	m	struct:__anon1
geom1	postgis/geography_measurement_trees.c	/^	GSERIALIZED*                geom1;      \/\/ $/;"	m	struct:__anon11	file:
geom1	postgis/lwgeom_geos_prepared.h	/^	GSERIALIZED*                geom1;      \/\/ $/;"	m	struct:__anon7
geom1	postgis/lwgeom_rtree.h	/^	GSERIALIZED*                geom1;      \/\/ $/;"	m	struct:__anon14
geom1_size	libpgcommon/lwgeom_cache.h	/^	size_t                      geom1_size;$/;"	m	struct:__anon1
geom1_size	postgis/geography_measurement_trees.c	/^	size_t                      geom1_size; \/\/ $/;"	m	struct:__anon11	file:
geom1_size	postgis/lwgeom_geos_prepared.h	/^	size_t                      geom1_size; \/\/ $/;"	m	struct:__anon7
geom1_size	postgis/lwgeom_rtree.h	/^	size_t                      geom1_size; \/\/ $/;"	m	struct:__anon14
geom2	libpgcommon/lwgeom_cache.h	/^	GSERIALIZED*                geom2;$/;"	m	struct:__anon1
geom2	postgis/geography_measurement_trees.c	/^	GSERIALIZED*                geom2;      \/\/ $/;"	m	struct:__anon11	file:
geom2	postgis/lwgeom_geos_prepared.h	/^	GSERIALIZED*                geom2;      \/\/ $/;"	m	struct:__anon7
geom2	postgis/lwgeom_rtree.h	/^	GSERIALIZED*                geom2;      \/\/ $/;"	m	struct:__anon14
geom2_size	libpgcommon/lwgeom_cache.h	/^	size_t                      geom2_size;$/;"	m	struct:__anon1
geom2_size	postgis/geography_measurement_trees.c	/^	size_t                      geom2_size; \/\/ $/;"	m	struct:__anon11	file:
geom2_size	postgis/lwgeom_geos_prepared.h	/^	size_t                      geom2_size; \/\/ $/;"	m	struct:__anon7
geom2_size	postgis/lwgeom_rtree.h	/^	size_t                      geom2_size; \/\/ $/;"	m	struct:__anon14
geomFromString	java/jdbc/jtssrc/org/postgis/jts/JtsGeometry.java	/^    public static Geometry geomFromString(String value) throws SQLException {$/;"	m	class:JtsGeometry
geomFromString	java/jdbc/src/org/postgis/PGgeometry.java	/^    public static Geometry geomFromString(String value) throws SQLException {$/;"	m	class:PGgeometry
geomFromString	java/jdbc/src/org/postgis/PGgeometry.java	/^    public static Geometry geomFromString(String value, BinaryParser bp) throws SQLException {$/;"	m	class:PGgeometry
geomFromString	java/jdbc/src/org/postgis/PGgeometry.java	/^    public static Geometry geomFromString(String value, BinaryParser bp, boolean haveM)$/;"	m	class:PGgeometry
geomFromString	java/jdbc/src/org/postgis/PGgeometry.java	/^    public static Geometry geomFromString(String value, boolean haveM) throws SQLException {$/;"	m	class:PGgeometry
geom_clip	raster/test/regress/rt_clip.sql	/^CREATE TABLE geom_clip ($/;"	t
geom_clip.geom	raster/test/regress/rt_clip.sql	/^	geom geometry$/;"	F
geom_clip.gid	raster/test/regress/rt_clip.sql	/^	gid integer,$/;"	F
geom_from_geojson	postgis/lwgeom_in_geojson.c	/^Datum geom_from_geojson(PG_FUNCTION_ARGS)$/;"	f
geom_from_geojson	postgis/lwgeom_in_geojson.c	/^PG_FUNCTION_INFO_V1(geom_from_geojson);$/;"	v
geom_from_gml	postgis/lwgeom_in_gml.c	/^Datum geom_from_gml(PG_FUNCTION_ARGS)$/;"	f
geom_from_gml	postgis/lwgeom_in_gml.c	/^PG_FUNCTION_INFO_V1(geom_from_gml);$/;"	v
geom_from_kml	postgis/lwgeom_in_kml.c	/^Datum geom_from_kml(PG_FUNCTION_ARGS)$/;"	f
geom_from_kml	postgis/lwgeom_in_kml.c	/^PG_FUNCTION_INFO_V1(geom_from_kml);$/;"	v
geom_from_pa	liblwgeom/lwsegmentize.c	/^geom_from_pa(const POINTARRAY *pa, int srid, int is_arc, int start, int end)$/;"	f	file:
geom_id	postgis/lwgeom_accum.c	/^geom_id;$/;"	t	typeref:struct:__anon9	file:
geom_oid	loader/pgsql2shp-core.h	/^	int geom_oid;$/;"	m	struct:shp_dumper_state
geometries	java/jdbc/src/examples/TestJava2d.java	/^        final Shape[] geometries;$/;"	f	class:TestJava2d.GisCanvas
geometry	java/ejb2/src/com/geodetix/geo/ejb/GeometryBean.java	/^    private Geometry  geometry;$/;"	f	class:GeometryBean	file:
geometry	liblwgeom/lwin_wkt_parse.y	/^geometry:$/;"	l
geometry	regress/typmod.sql	/^CREATE TABLE tm.geometry (id serial, g geometry(geometry), gg geography(geometry) );$/;"	t
geometry.g	regress/typmod.sql	/^CREATE TABLE tm.geometry (id serial, g geometry(geometry), gg geography(geometry) );$/;"	F
geometry.gg	regress/typmod.sql	/^CREATE TABLE tm.geometry (id serial, g geometry(geometry), gg geography(geometry) );$/;"	F
geometry.id	regress/typmod.sql	/^CREATE TABLE tm.geometry (id serial, g geometry(geometry), gg geography(geometry) );$/;"	F
geometry0	regress/typmod.sql	/^CREATE TABLE tm.geometry0 (id serial, g geometry(geometry, 0), gg geography(geometry, 0) );$/;"	t
geometry0.g	regress/typmod.sql	/^CREATE TABLE tm.geometry0 (id serial, g geometry(geometry, 0), gg geography(geometry, 0) );$/;"	F
geometry0.gg	regress/typmod.sql	/^CREATE TABLE tm.geometry0 (id serial, g geometry(geometry, 0), gg geography(geometry, 0) );$/;"	F
geometry0.id	regress/typmod.sql	/^CREATE TABLE tm.geometry0 (id serial, g geometry(geometry, 0), gg geography(geometry, 0) );$/;"	F
geometry4326	regress/typmod.sql	/^CREATE TABLE tm.geometry4326 (id serial, g geometry(geometry, 4326), gg geography(geometry, 4326) );$/;"	t
geometry4326.g	regress/typmod.sql	/^CREATE TABLE tm.geometry4326 (id serial, g geometry(geometry, 4326), gg geography(geometry, 4326) );$/;"	F
geometry4326.gg	regress/typmod.sql	/^CREATE TABLE tm.geometry4326 (id serial, g geometry(geometry, 4326), gg geography(geometry, 4326) );$/;"	F
geometry4326.id	regress/typmod.sql	/^CREATE TABLE tm.geometry4326 (id serial, g geometry(geometry, 4326), gg geography(geometry, 4326) );$/;"	F
geometryFacade	java/ejb2/src/com/geodetix/geo/client/Client.java	/^    private GeometryFacade geometryFacade;$/;"	f	class:Client	file:
geometry_distance_spheroid	postgis/lwgeom_spheroid.c	/^Datum geometry_distance_spheroid(PG_FUNCTION_ARGS)$/;"	f
geometry_distance_spheroid	postgis/lwgeom_spheroid.c	/^PG_FUNCTION_INFO_V1(geometry_distance_spheroid);$/;"	v
geometry_enforce_typmod	postgis/gserialized_typmod.c	/^Datum geometry_enforce_typmod(PG_FUNCTION_ARGS)$/;"	f
geometry_enforce_typmod	postgis/gserialized_typmod.c	/^PG_FUNCTION_INFO_V1(geometry_enforce_typmod);$/;"	v
geometry_estimated_extent	postgis/gserialized_estimate.c	/^Datum geometry_estimated_extent(PG_FUNCTION_ARGS)$/;"	f
geometry_estimated_extent	postgis/gserialized_estimate.c	/^PG_FUNCTION_INFO_V1(geometry_estimated_extent);$/;"	v
geometry_from_geography	postgis/geography_inout.c	/^Datum geometry_from_geography(PG_FUNCTION_ARGS)$/;"	f
geometry_from_geography	postgis/geography_inout.c	/^PG_FUNCTION_INFO_V1(geometry_from_geography);$/;"	v
geometry_geometrytype	postgis/lwgeom_ogc.c	/^Datum geometry_geometrytype(PG_FUNCTION_ARGS)$/;"	f
geometry_geometrytype	postgis/lwgeom_ogc.c	/^PG_FUNCTION_INFO_V1(geometry_geometrytype);$/;"	v
geometry_list	liblwgeom/lwin_wkt_parse.y	/^geometry_list :$/;"	l
geometry_no_srid	liblwgeom/lwin_wkt_parse.y	/^geometry_no_srid : $/;"	l
geometry_serialize	libpgcommon/lwgeom_pg.c	/^GSERIALIZED* geometry_serialize(LWGEOM *lwgeom)$/;"	f
geometry_to_path	postgis/geometry_inout.c	/^Datum geometry_to_path(PG_FUNCTION_ARGS)$/;"	f
geometry_to_path	postgis/geometry_inout.c	/^PG_FUNCTION_INFO_V1(geometry_to_path);$/;"	v
geometry_to_point	postgis/geometry_inout.c	/^Datum geometry_to_point(PG_FUNCTION_ARGS)$/;"	f
geometry_to_point	postgis/geometry_inout.c	/^PG_FUNCTION_INFO_V1(geometry_to_point);$/;"	v
geometry_to_polygon	postgis/geometry_inout.c	/^Datum geometry_to_polygon(PG_FUNCTION_ARGS)$/;"	f
geometry_to_polygon	postgis/geometry_inout.c	/^PG_FUNCTION_INFO_V1(geometry_to_polygon);$/;"	v
geometry_type_from_string	liblwgeom/g_util.c	/^int geometry_type_from_string(const char *str, uint8_t *type, int *z, int *m)$/;"	f
geometry_typmod_in	postgis/gserialized_typmod.c	/^Datum geometry_typmod_in(PG_FUNCTION_ARGS)$/;"	f
geometry_typmod_in	postgis/gserialized_typmod.c	/^PG_FUNCTION_INFO_V1(geometry_typmod_in);$/;"	v
geometrycollection	liblwgeom/lwin_wkt_parse.y	/^geometrycollection :$/;"	l
geometrycollection	regress/typmod.sql	/^CREATE TABLE tm.geometrycollection (id serial, g geometry(geometrycollection), gg geography(geometrycollection) );$/;"	t
geometrycollection.g	regress/typmod.sql	/^CREATE TABLE tm.geometrycollection (id serial, g geometry(geometrycollection), gg geography(geometrycollection) );$/;"	F
geometrycollection.gg	regress/typmod.sql	/^CREATE TABLE tm.geometrycollection (id serial, g geometry(geometrycollection), gg geography(geometrycollection) );$/;"	F
geometrycollection.id	regress/typmod.sql	/^CREATE TABLE tm.geometrycollection (id serial, g geometry(geometrycollection), gg geography(geometrycollection) );$/;"	F
geometrycollection0	regress/typmod.sql	/^CREATE TABLE tm.geometrycollection0 (id serial, g geometry(geometrycollection, 0), gg geography(geometrycollection, 0) );$/;"	t
geometrycollection0.g	regress/typmod.sql	/^CREATE TABLE tm.geometrycollection0 (id serial, g geometry(geometrycollection, 0), gg geography(geometrycollection, 0) );$/;"	F
geometrycollection0.gg	regress/typmod.sql	/^CREATE TABLE tm.geometrycollection0 (id serial, g geometry(geometrycollection, 0), gg geography(geometrycollection, 0) );$/;"	F
geometrycollection0.id	regress/typmod.sql	/^CREATE TABLE tm.geometrycollection0 (id serial, g geometry(geometrycollection, 0), gg geography(geometrycollection, 0) );$/;"	F
geometrycollection4326	regress/typmod.sql	/^CREATE TABLE tm.geometrycollection4326 (id serial, g geometry(geometrycollection, 4326), gg geography(geometrycollection, 4326) );$/;"	t
geometrycollection4326.g	regress/typmod.sql	/^CREATE TABLE tm.geometrycollection4326 (id serial, g geometry(geometrycollection, 4326), gg geography(geometrycollection, 4326) );$/;"	F
geometrycollection4326.gg	regress/typmod.sql	/^CREATE TABLE tm.geometrycollection4326 (id serial, g geometry(geometrycollection, 4326), gg geography(geometrycollection, 4326) );$/;"	F
geometrycollection4326.id	regress/typmod.sql	/^CREATE TABLE tm.geometrycollection4326 (id serial, g geometry(geometrycollection, 4326), gg geography(geometrycollection, 4326) );$/;"	F
geometrycollectionm	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionm (id serial, g geometry(geometrycollectionm), gg geography(geometrycollectionm) );$/;"	t
geometrycollectionm.g	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionm (id serial, g geometry(geometrycollectionm), gg geography(geometrycollectionm) );$/;"	F
geometrycollectionm.gg	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionm (id serial, g geometry(geometrycollectionm), gg geography(geometrycollectionm) );$/;"	F
geometrycollectionm.id	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionm (id serial, g geometry(geometrycollectionm), gg geography(geometrycollectionm) );$/;"	F
geometrycollectionm0	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionm0 (id serial, g geometry(geometrycollectionm, 0), gg geography(geometrycollectionm, 0) );$/;"	t
geometrycollectionm0.g	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionm0 (id serial, g geometry(geometrycollectionm, 0), gg geography(geometrycollectionm, 0) );$/;"	F
geometrycollectionm0.gg	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionm0 (id serial, g geometry(geometrycollectionm, 0), gg geography(geometrycollectionm, 0) );$/;"	F
geometrycollectionm0.id	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionm0 (id serial, g geometry(geometrycollectionm, 0), gg geography(geometrycollectionm, 0) );$/;"	F
geometrycollectionm4326	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionm4326 (id serial, g geometry(geometrycollectionm, 4326), gg geography(geometrycollectionm, 4326) );$/;"	t
geometrycollectionm4326.g	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionm4326 (id serial, g geometry(geometrycollectionm, 4326), gg geography(geometrycollectionm, 4326) );$/;"	F
geometrycollectionm4326.gg	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionm4326 (id serial, g geometry(geometrycollectionm, 4326), gg geography(geometrycollectionm, 4326) );$/;"	F
geometrycollectionm4326.id	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionm4326 (id serial, g geometry(geometrycollectionm, 4326), gg geography(geometrycollectionm, 4326) );$/;"	F
geometrycollectionz	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionz (id serial, g geometry(geometrycollectionz), gg geography(geometrycollectionz) );$/;"	t
geometrycollectionz.g	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionz (id serial, g geometry(geometrycollectionz), gg geography(geometrycollectionz) );$/;"	F
geometrycollectionz.gg	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionz (id serial, g geometry(geometrycollectionz), gg geography(geometrycollectionz) );$/;"	F
geometrycollectionz.id	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionz (id serial, g geometry(geometrycollectionz), gg geography(geometrycollectionz) );$/;"	F
geometrycollectionz0	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionz0 (id serial, g geometry(geometrycollectionz, 0), gg geography(geometrycollectionz, 0) );$/;"	t
geometrycollectionz0.g	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionz0 (id serial, g geometry(geometrycollectionz, 0), gg geography(geometrycollectionz, 0) );$/;"	F
geometrycollectionz0.gg	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionz0 (id serial, g geometry(geometrycollectionz, 0), gg geography(geometrycollectionz, 0) );$/;"	F
geometrycollectionz0.id	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionz0 (id serial, g geometry(geometrycollectionz, 0), gg geography(geometrycollectionz, 0) );$/;"	F
geometrycollectionz4326	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionz4326 (id serial, g geometry(geometrycollectionz, 4326), gg geography(geometrycollectionz, 4326) );$/;"	t
geometrycollectionz4326.g	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionz4326 (id serial, g geometry(geometrycollectionz, 4326), gg geography(geometrycollectionz, 4326) );$/;"	F
geometrycollectionz4326.gg	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionz4326 (id serial, g geometry(geometrycollectionz, 4326), gg geography(geometrycollectionz, 4326) );$/;"	F
geometrycollectionz4326.id	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionz4326 (id serial, g geometry(geometrycollectionz, 4326), gg geography(geometrycollectionz, 4326) );$/;"	F
geometrycollectionzm	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionzm (id serial, g geometry(geometrycollectionzm), gg geography(geometrycollectionzm) );$/;"	t
geometrycollectionzm.g	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionzm (id serial, g geometry(geometrycollectionzm), gg geography(geometrycollectionzm) );$/;"	F
geometrycollectionzm.gg	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionzm (id serial, g geometry(geometrycollectionzm), gg geography(geometrycollectionzm) );$/;"	F
geometrycollectionzm.id	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionzm (id serial, g geometry(geometrycollectionzm), gg geography(geometrycollectionzm) );$/;"	F
geometrycollectionzm0	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionzm0 (id serial, g geometry(geometrycollectionzm, 0), gg geography(geometrycollectionzm, 0) );$/;"	t
geometrycollectionzm0.g	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionzm0 (id serial, g geometry(geometrycollectionzm, 0), gg geography(geometrycollectionzm, 0) );$/;"	F
geometrycollectionzm0.gg	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionzm0 (id serial, g geometry(geometrycollectionzm, 0), gg geography(geometrycollectionzm, 0) );$/;"	F
geometrycollectionzm0.id	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionzm0 (id serial, g geometry(geometrycollectionzm, 0), gg geography(geometrycollectionzm, 0) );$/;"	F
geometrycollectionzm4326	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionzm4326 (id serial, g geometry(geometrycollectionzm, 4326), gg geography(geometrycollectionzm, 4326) );$/;"	t
geometrycollectionzm4326.g	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionzm4326 (id serial, g geometry(geometrycollectionzm, 4326), gg geography(geometrycollectionzm, 4326) );$/;"	F
geometrycollectionzm4326.gg	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionzm4326 (id serial, g geometry(geometrycollectionzm, 4326), gg geography(geometrycollectionzm, 4326) );$/;"	F
geometrycollectionzm4326.id	regress/typmod.sql	/^CREATE TABLE tm.geometrycollectionzm4326 (id serial, g geometry(geometrycollectionzm, 4326), gg geography(geometrycollectionzm, 4326) );$/;"	F
geometrym	regress/typmod.sql	/^CREATE TABLE tm.geometrym (id serial, g geometry(geometrym), gg geography(geometrym) );$/;"	t
geometrym.g	regress/typmod.sql	/^CREATE TABLE tm.geometrym (id serial, g geometry(geometrym), gg geography(geometrym) );$/;"	F
geometrym.gg	regress/typmod.sql	/^CREATE TABLE tm.geometrym (id serial, g geometry(geometrym), gg geography(geometrym) );$/;"	F
geometrym.id	regress/typmod.sql	/^CREATE TABLE tm.geometrym (id serial, g geometry(geometrym), gg geography(geometrym) );$/;"	F
geometrym0	regress/typmod.sql	/^CREATE TABLE tm.geometrym0 (id serial, g geometry(geometrym, 0), gg geography(geometrym, 0) );$/;"	t
geometrym0.g	regress/typmod.sql	/^CREATE TABLE tm.geometrym0 (id serial, g geometry(geometrym, 0), gg geography(geometrym, 0) );$/;"	F
geometrym0.gg	regress/typmod.sql	/^CREATE TABLE tm.geometrym0 (id serial, g geometry(geometrym, 0), gg geography(geometrym, 0) );$/;"	F
geometrym0.id	regress/typmod.sql	/^CREATE TABLE tm.geometrym0 (id serial, g geometry(geometrym, 0), gg geography(geometrym, 0) );$/;"	F
geometrym4326	regress/typmod.sql	/^CREATE TABLE tm.geometrym4326 (id serial, g geometry(geometrym, 4326), gg geography(geometrym, 4326) );$/;"	t
geometrym4326.g	regress/typmod.sql	/^CREATE TABLE tm.geometrym4326 (id serial, g geometry(geometrym, 4326), gg geography(geometrym, 4326) );$/;"	F
geometrym4326.gg	regress/typmod.sql	/^CREATE TABLE tm.geometrym4326 (id serial, g geometry(geometrym, 4326), gg geography(geometrym, 4326) );$/;"	F
geometrym4326.id	regress/typmod.sql	/^CREATE TABLE tm.geometrym4326 (id serial, g geometry(geometrym, 4326), gg geography(geometrym, 4326) );$/;"	F
geometryvalue	liblwgeom/lwin_wkt_parse.c	/^	LWGEOM *geometryvalue;$/;"	m	union:YYSTYPE	file:
geometryvalue	liblwgeom/lwin_wkt_parse.h	/^	LWGEOM *geometryvalue;$/;"	m	union:YYSTYPE
geometryz	regress/typmod.sql	/^CREATE TABLE tm.geometryz (id serial, g geometry(geometryz), gg geography(geometryz) );$/;"	t
geometryz.g	regress/typmod.sql	/^CREATE TABLE tm.geometryz (id serial, g geometry(geometryz), gg geography(geometryz) );$/;"	F
geometryz.gg	regress/typmod.sql	/^CREATE TABLE tm.geometryz (id serial, g geometry(geometryz), gg geography(geometryz) );$/;"	F
geometryz.id	regress/typmod.sql	/^CREATE TABLE tm.geometryz (id serial, g geometry(geometryz), gg geography(geometryz) );$/;"	F
geometryz0	regress/typmod.sql	/^CREATE TABLE tm.geometryz0 (id serial, g geometry(geometryz, 0), gg geography(geometryz, 0) );$/;"	t
geometryz0.g	regress/typmod.sql	/^CREATE TABLE tm.geometryz0 (id serial, g geometry(geometryz, 0), gg geography(geometryz, 0) );$/;"	F
geometryz0.gg	regress/typmod.sql	/^CREATE TABLE tm.geometryz0 (id serial, g geometry(geometryz, 0), gg geography(geometryz, 0) );$/;"	F
geometryz0.id	regress/typmod.sql	/^CREATE TABLE tm.geometryz0 (id serial, g geometry(geometryz, 0), gg geography(geometryz, 0) );$/;"	F
geometryz4326	regress/typmod.sql	/^CREATE TABLE tm.geometryz4326 (id serial, g geometry(geometryz, 4326), gg geography(geometryz, 4326) );$/;"	t
geometryz4326.g	regress/typmod.sql	/^CREATE TABLE tm.geometryz4326 (id serial, g geometry(geometryz, 4326), gg geography(geometryz, 4326) );$/;"	F
geometryz4326.gg	regress/typmod.sql	/^CREATE TABLE tm.geometryz4326 (id serial, g geometry(geometryz, 4326), gg geography(geometryz, 4326) );$/;"	F
geometryz4326.id	regress/typmod.sql	/^CREATE TABLE tm.geometryz4326 (id serial, g geometry(geometryz, 4326), gg geography(geometryz, 4326) );$/;"	F
geometryzm	regress/typmod.sql	/^CREATE TABLE tm.geometryzm (id serial, g geometry(geometryzm), gg geography(geometryzm) );$/;"	t
geometryzm.g	regress/typmod.sql	/^CREATE TABLE tm.geometryzm (id serial, g geometry(geometryzm), gg geography(geometryzm) );$/;"	F
geometryzm.gg	regress/typmod.sql	/^CREATE TABLE tm.geometryzm (id serial, g geometry(geometryzm), gg geography(geometryzm) );$/;"	F
geometryzm.id	regress/typmod.sql	/^CREATE TABLE tm.geometryzm (id serial, g geometry(geometryzm), gg geography(geometryzm) );$/;"	F
geometryzm0	regress/typmod.sql	/^CREATE TABLE tm.geometryzm0 (id serial, g geometry(geometryzm, 0), gg geography(geometryzm, 0) );$/;"	t
geometryzm0.g	regress/typmod.sql	/^CREATE TABLE tm.geometryzm0 (id serial, g geometry(geometryzm, 0), gg geography(geometryzm, 0) );$/;"	F
geometryzm0.gg	regress/typmod.sql	/^CREATE TABLE tm.geometryzm0 (id serial, g geometry(geometryzm, 0), gg geography(geometryzm, 0) );$/;"	F
geometryzm0.id	regress/typmod.sql	/^CREATE TABLE tm.geometryzm0 (id serial, g geometry(geometryzm, 0), gg geography(geometryzm, 0) );$/;"	F
geometryzm4326	regress/typmod.sql	/^CREATE TABLE tm.geometryzm4326 (id serial, g geometry(geometryzm, 4326), gg geography(geometryzm, 4326) );$/;"	t
geometryzm4326.g	regress/typmod.sql	/^CREATE TABLE tm.geometryzm4326 (id serial, g geometry(geometryzm, 4326), gg geography(geometryzm, 4326) );$/;"	F
geometryzm4326.gg	regress/typmod.sql	/^CREATE TABLE tm.geometryzm4326 (id serial, g geometry(geometryzm, 4326), gg geography(geometryzm, 4326) );$/;"	F
geometryzm4326.id	regress/typmod.sql	/^CREATE TABLE tm.geometryzm4326 (id serial, g geometry(geometryzm, 4326), gg geography(geometryzm, 4326) );$/;"	F
geoms	postgis/lwgeom_accum.c	/^	geom_id *geoms;$/;"	m	struct:__anon10	file:
geoms	regress/binary.sql	/^CREATE TABLE tm.geoms (id serial, g geometry);$/;"	t
geoms.g	regress/binary.sql	/^CREATE TABLE tm.geoms (id serial, g geometry);$/;"	F
geoms.id	regress/binary.sql	/^CREATE TABLE tm.geoms (id serial, g geometry);$/;"	F
geomtype_struct	liblwgeom/g_util.c	/^struct geomtype_struct$/;"	s	file:
geomtype_struct_array	liblwgeom/g_util.c	/^struct geomtype_struct geomtype_struct_array[] =$/;"	v	typeref:struct:geomtype_struct
geomunion	postgis/lwgeom_geos.c	/^Datum geomunion(PG_FUNCTION_ARGS)$/;"	f
geomunion	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(geomunion);$/;"	v
geomval_arealweightedstate	raster/scripts/plpgsql/st_areaweightedsummarystats.sql	/^CREATE OR REPLACE FUNCTION geomval_arealweightedstate(aws arealweightedstatsstate, geom geometry, val double precision)$/;"	f
geomval_arealweightedstate	raster/scripts/plpgsql/st_areaweightedsummarystats.sql	/^CREATE OR REPLACE FUNCTION geomval_arealweightedstate(aws arealweightedstatsstate, gv geomval)$/;"	f
geosInterruptCallback	postgis/postgis_module.c	/^static void geosInterruptCallback() {$/;"	f	file:
geos_intersection	postgis/lwgeom_geos.c	/^Datum geos_intersection(PG_FUNCTION_ARGS)$/;"	f
geos_intersection	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(geos_intersection);$/;"	v
geos_intersects	postgis/lwgeom_geos.c	/^Datum geos_intersects(PG_FUNCTION_ARGS)$/;"	f
geos_intersects	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(geos_intersects);$/;"	v
geos_suite	liblwgeom/cunit/cu_geos.c	/^CU_SuiteInfo geos_suite = {"GEOS",  NULL,  NULL, geos_tests};$/;"	v
geos_tests	liblwgeom/cunit/cu_geos.c	/^CU_TestInfo geos_tests[] =$/;"	v
get	java/jdbc/src/org/postgis/binary/ByteGetter.java	/^        public int get(int index) {$/;"	m	class:ByteGetter.BinaryByteGetter
get	java/jdbc/src/org/postgis/binary/ByteGetter.java	/^        public int get(int index) {$/;"	m	class:ByteGetter.StringByteGetter
get	java/jdbc/src/org/postgis/binary/ByteGetter.java	/^    public abstract int get(int index);$/;"	m	class:ByteGetter
getBounds	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^    public Rectangle getBounds() {$/;"	m	class:JTSShape
getBounds	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^    public Rectangle getBounds() {$/;"	m	class:PGShapeGeometry
getBounds2D	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^    public Rectangle2D getBounds2D() {$/;"	m	class:JTSShape
getBounds2D	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^    public Rectangle2D getBounds2D() {$/;"	m	class:PGShapeGeometry
getByte	java/jdbc/src/org/postgis/binary/ValueGetter.java	/^    public byte getByte() {$/;"	m	class:ValueGetter
getCoordDim	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    public static final int getCoordDim(Geometry geom) {$/;"	m	class:JtsBinaryWriter
getCoordSequenceDim	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    public static final int getCoordSequenceDim(CoordinateSequence coords) {$/;"	m	class:JtsBinaryWriter
getDate	java/ejb3/src/org/postgis/ejb/PersonEntity.java	/^	public Date getDate() {$/;"	m	class:PersonEntity
getDescription	java/ejb2/src/com/geodetix/geo/ejb/GeometryBean.java	/^    public String getDescription() {$/;"	m	class:GeometryBean
getDimension	java/jdbc/src/org/postgis/Geometry.java	/^	public int getDimension() {$/;"	m	class:Geometry
getDouble	java/jdbc/src/org/postgis/binary/ValueGetter.java	/^    public double getDouble() {$/;"	m	class:ValueGetter
getFirstPoint	java/jdbc/src/org/postgis/ComposedGeom.java	/^    public Point getFirstPoint() {$/;"	m	class:ComposedGeom
getFirstPoint	java/jdbc/src/org/postgis/Geometry.java	/^	public abstract Point getFirstPoint();$/;"	m	class:Geometry
getFirstPoint	java/jdbc/src/org/postgis/Point.java	/^    public Point getFirstPoint() {$/;"	m	class:Point
getFullVersion	java/jdbc/src/org/postgis/Version.java	/^    public static String getFullVersion() {$/;"	m	class:Version
getGeoType	java/jdbc/src/org/postgis/PGgeometry.java	/^    public int getGeoType() {$/;"	m	class:PGgeometry
getGeometries	java/jdbc/src/org/postgis/GeometryCollection.java	/^    public Geometry[] getGeometries() {$/;"	m	class:GeometryCollection
getGeometry	java/ejb2/src/com/geodetix/geo/ejb/GeometryBean.java	/^    public org.postgis.Geometry getGeometry() {$/;"	m	class:GeometryBean
getGeometry	java/jdbc/jtssrc/org/postgis/jts/JtsGeometry.java	/^    public Geometry getGeometry() {$/;"	m	class:JtsGeometry
getGeometry	java/jdbc/src/org/postgis/PGgeometry.java	/^    public Geometry getGeometry() {$/;"	m	class:PGgeometry
getGeometryValue	java/ejb2/src/com/geodetix/geo/ejb/GeometryBean.java	/^    public abstract GeometryValue getGeometryValue();$/;"	m	class:GeometryBean
getId	java/ejb2/src/com/geodetix/geo/ejb/GeometryBean.java	/^    public Integer getId() {$/;"	m	class:GeometryBean
getId	java/ejb3/src/org/postgis/ejb/PersonEntity.java	/^	public long getId() {$/;"	m	class:PersonEntity
getInitialContext	java/ejb2/src/com/geodetix/geo/client/Client.java	/^    private static Context getInitialContext()$/;"	m	class:Client	file:
getInt	java/jdbc/src/org/postgis/binary/ValueGetter.java	/^        protected int getInt(int index) {$/;"	m	class:ValueGetter.NDR
getInt	java/jdbc/src/org/postgis/binary/ValueGetter.java	/^        protected int getInt(int index) {$/;"	m	class:ValueGetter.XDR
getInt	java/jdbc/src/org/postgis/binary/ValueGetter.java	/^    protected abstract int getInt(int index);$/;"	m	class:ValueGetter
getInt	java/jdbc/src/org/postgis/binary/ValueGetter.java	/^    public int getInt() {$/;"	m	class:ValueGetter
getLLB	java/jdbc/src/org/postgis/PGboxbase.java	/^    public Point getLLB() {$/;"	m	class:PGboxbase
getLastPoint	java/jdbc/src/org/postgis/ComposedGeom.java	/^    public Point getLastPoint() {$/;"	m	class:ComposedGeom
getLastPoint	java/jdbc/src/org/postgis/Geometry.java	/^	public abstract Point getLastPoint();$/;"	m	class:Geometry
getLastPoint	java/jdbc/src/org/postgis/Point.java	/^    public Point getLastPoint() {$/;"	m	class:Point
getLine	java/jdbc/src/org/postgis/MultiLineString.java	/^    public LineString getLine(int idx) {$/;"	m	class:MultiLineString
getLines	java/jdbc/src/org/postgis/MultiLineString.java	/^    public LineString[] getLines() {$/;"	m	class:MultiLineString
getLocation	java/ejb3/src/org/postgis/ejb/PersonEntity.java	/^	public Geometry getLocation() {$/;"	m	class:PersonEntity
getLong	java/jdbc/src/org/postgis/binary/ValueGetter.java	/^        protected long getLong(int index) {$/;"	m	class:ValueGetter.NDR
getLong	java/jdbc/src/org/postgis/binary/ValueGetter.java	/^        protected long getLong(int index) {$/;"	m	class:ValueGetter.XDR
getLong	java/jdbc/src/org/postgis/binary/ValueGetter.java	/^    protected abstract long getLong(int index);$/;"	m	class:ValueGetter
getLong	java/jdbc/src/org/postgis/binary/ValueGetter.java	/^    public long getLong() {$/;"	m	class:ValueGetter
getM	java/jdbc/src/org/postgis/Point.java	/^    public double getM() {$/;"	m	class:Point
getMachineEndian	liblwgeom/lwutil.c	/^getMachineEndian(void)$/;"	f
getMajorVersion	java/jdbc/jtssrc/org/postgis/jts/JtsGisWrapper.java	/^    public int getMajorVersion() {$/;"	m	class:JtsGisWrapper
getMajorVersion	java/jdbc/jtssrc/org/postgis/jts/JtsWrapper.java	/^    public int getMajorVersion() {$/;"	m	class:JtsWrapper
getMajorVersion	java/jdbc/src/org/postgis/java2d/Java2DWrapper.java	/^    public int getMajorVersion() {$/;"	m	class:Java2DWrapper
getMaxFieldSize	loader/pgsql2shp-core.c	/^getMaxFieldSize(PGconn *conn, char *schema, char *table, char *fname)$/;"	f	file:
getMinorVersion	java/jdbc/jtssrc/org/postgis/jts/JtsGisWrapper.java	/^    public int getMinorVersion() {$/;"	m	class:JtsGisWrapper
getMinorVersion	java/jdbc/jtssrc/org/postgis/jts/JtsWrapper.java	/^    public int getMinorVersion() {$/;"	m	class:JtsWrapper
getMinorVersion	java/jdbc/src/org/postgis/java2d/Java2DWrapper.java	/^    public int getMinorVersion() {$/;"	m	class:Java2DWrapper
getName	java/ejb3/src/org/postgis/ejb/PersonEntity.java	/^	public String getName() {$/;"	m	class:PersonEntity
getPGtype	java/jdbc/src/org/postgis/PGbox2d.java	/^    public String getPGtype() {$/;"	m	class:PGbox2d
getPGtype	java/jdbc/src/org/postgis/PGbox3d.java	/^    public String getPGtype() {$/;"	m	class:PGbox3d
getPGtype	java/jdbc/src/org/postgis/PGboxbase.java	/^    public abstract String getPGtype();$/;"	m	class:PGboxbase
getParentLogger	java/jdbc/src/org/postgis/DriverWrapper.java	/^    public Logger getParentLogger() throws SQLFeatureNotSupportedException {$/;"	m	class:DriverWrapper
getParentLogger	java/jdbc/src/org/postgis/java2d/Java2DWrapper.java	/^    public Logger getParentLogger() throws SQLFeatureNotSupportedException {$/;"	m	class:Java2DWrapper
getPathIterator	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^    public PathIterator getPathIterator(AffineTransform at) {$/;"	m	class:JTSShape
getPathIterator	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^    public PathIterator getPathIterator(AffineTransform at, double flatness) {$/;"	m	class:JTSShape
getPathIterator	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^    public static GeometryPathIterator getPathIterator(Geometry geometry, AffineTransform _at) {$/;"	m	class:JTSShape
getPathIterator	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^    public PathIterator getPathIterator(AffineTransform at) {$/;"	m	class:PGShapeGeometry
getPathIterator	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^    public PathIterator getPathIterator(AffineTransform at, double flatness) {$/;"	m	class:PGShapeGeometry
getPoint	java/jdbc/src/org/postgis/ComposedGeom.java	/^    public Point getPoint(int n) {$/;"	m	class:ComposedGeom
getPoint	java/jdbc/src/org/postgis/Geometry.java	/^	public abstract Point getPoint(int n);$/;"	m	class:Geometry
getPoint	java/jdbc/src/org/postgis/Point.java	/^    public Point getPoint(int index) {$/;"	m	class:Point
getPoint	java/jdbc/src/org/postgis/PointComposedGeom.java	/^    public Point getPoint(int idx) {$/;"	m	class:PointComposedGeom
getPoint2d	liblwgeom/lwgeom_api.c	/^getPoint2d(const POINTARRAY *pa, int n)$/;"	f
getPoint2d_cp	liblwgeom/lwgeom_api.c	/^getPoint2d_cp(const POINTARRAY *pa, int n)$/;"	f
getPoint2d_p	liblwgeom/lwgeom_api.c	/^getPoint2d_p(const POINTARRAY *pa, int n, POINT2D *point)$/;"	f
getPoint2d_p_ro	liblwgeom/lwgeodetic.c	/^int getPoint2d_p_ro(const POINTARRAY *pa, int n, POINT2D **point)$/;"	f
getPoint3dm	liblwgeom/lwgeom_api.c	/^getPoint3dm(const POINTARRAY *pa, int n)$/;"	f
getPoint3dm_p	liblwgeom/lwgeom_api.c	/^getPoint3dm_p(const POINTARRAY *pa, int n, POINT3DM *op)$/;"	f
getPoint3dz	liblwgeom/lwgeom_api.c	/^getPoint3dz(const POINTARRAY *pa, int n)$/;"	f
getPoint3dz_p	liblwgeom/lwgeom_api.c	/^getPoint3dz_p(const POINTARRAY *pa, int n, POINT3DZ *op)$/;"	f
getPoint4d	liblwgeom/lwgeom_api.c	/^getPoint4d(const POINTARRAY *pa, int n)$/;"	f
getPoint4d_p	liblwgeom/lwgeom_api.c	/^getPoint4d_p(const POINTARRAY *pa, int n, POINT4D *op)$/;"	f
getPoint_internal	liblwgeom/ptarray.c	/^getPoint_internal(const POINTARRAY *pa, int n)$/;"	f
getPoints	java/jdbc/src/org/postgis/PointComposedGeom.java	/^    public Point[] getPoints() {$/;"	m	class:PointComposedGeom
getPolygon	java/jdbc/src/org/postgis/MultiPolygon.java	/^    public Polygon getPolygon(int idx) {$/;"	m	class:MultiPolygon
getPolygons	java/jdbc/src/org/postgis/MultiPolygon.java	/^    public Polygon[] getPolygons() {$/;"	m	class:MultiPolygon
getPostgisMajor	java/jdbc/src/examples/TestAutoregister.java	/^    public static int getPostgisMajor(Statement stat) throws SQLException {$/;"	m	class:TestAutoregister
getPrefix	java/jdbc/src/org/postgis/PGbox2d.java	/^    public String getPrefix() {$/;"	m	class:PGbox2d
getPrefix	java/jdbc/src/org/postgis/PGbox3d.java	/^    public String getPrefix() {$/;"	m	class:PGbox3d
getPrefix	java/jdbc/src/org/postgis/PGboxbase.java	/^    public abstract String getPrefix();$/;"	m	class:PGboxbase
getProtoString	java/jdbc/src/org/postgis/DriverWrapper.java	/^    protected String getProtoString() {$/;"	m	class:DriverWrapper
getProtoString	java/jdbc/src/org/postgis/DriverWrapperAutoprobe.java	/^    protected String getProtoString() {$/;"	m	class:DriverWrapperAutoprobe
getProtoString	java/jdbc/src/org/postgis/DriverWrapperLW.java	/^    protected String getProtoString() {$/;"	m	class:DriverWrapperLW
getRing	java/jdbc/src/org/postgis/Polygon.java	/^    public LinearRing getRing(int idx) {$/;"	m	class:Polygon
getSRID	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^    public int getSRID() {$/;"	m	class:PGShapeGeometry
getSRIDbySRS	postgis/lwgeom_export.c	/^int getSRIDbySRS(const char* srs)$/;"	f
getSRSbySRID	postgis/lwgeom_export.c	/^char * getSRSbySRID(int srid, bool short_crs)$/;"	f
getSrid	java/jdbc/src/org/postgis/Geometry.java	/^	public int getSrid() {$/;"	m	class:Geometry
getStyle	doc/html/image_src/styles.c	/^getStyle( LAYERSTYLE *headRef, char* styleName )$/;"	f
getStyleName	doc/html/image_src/generator.c	/^getStyleName(char **styleName, char* line)$/;"	f
getStyles	doc/html/image_src/styles.c	/^getStyles( LAYERSTYLE **headRef )$/;"	f
getSubGeometry	java/jdbc/src/org/postgis/ComposedGeom.java	/^    public Geometry getSubGeometry(int index) {$/;"	m	class:ComposedGeom
getSurname	java/ejb3/src/org/postgis/ejb/PersonEntity.java	/^	public String getSurname() {$/;"	m	class:PersonEntity
getTableInfo	loader/pgsql2shp-core.c	/^getTableInfo(SHPDUMPERSTATE *state)$/;"	f	file:
getTransactionID	extras/WFS_locks/WFS_locks.c	/^Datum getTransactionID(PG_FUNCTION_ARGS)$/;"	f
getTransactionID	extras/WFS_locks/WFS_locks.c	/^PG_FUNCTION_INFO_V1(getTransactionID);$/;"	v
getTransactionID	postgis/long_xact.c	/^Datum getTransactionID(PG_FUNCTION_ARGS)$/;"	f
getTransactionID	postgis/long_xact.c	/^PG_FUNCTION_INFO_V1(getTransactionID);$/;"	v
getType	java/jdbc/src/org/postgis/Geometry.java	/^	public int getType() {$/;"	m	class:Geometry
getTypeString	java/jdbc/src/org/postgis/Geometry.java	/^	public String getTypeString() {$/;"	m	class:Geometry
getTypeString	java/jdbc/src/org/postgis/Geometry.java	/^	public static String getTypeString(int type) {$/;"	m	class:Geometry
getTypedValues	java/ejb3/src/org/postgis/hibernate/ContainsExpression.java	/^	public TypedValue[] getTypedValues(Criteria criteria, CriteriaQuery criteriaQuery) throws HibernateException {$/;"	m	class:ContainsExpression
getTypedValues	java/ejb3/src/org/postgis/hibernate/IntersectsExpression.java	/^	public TypedValue[] getTypedValues(Criteria criteria, CriteriaQuery criteriaQuery) throws HibernateException {$/;"	m	class:IntersectsExpression
getTypedValues	java/ejb3/src/org/postgis/hibernate/WithinExpression.java	/^	public TypedValue[] getTypedValues(Criteria criteria, CriteriaQuery criteriaQuery) throws HibernateException {$/;"	m	class:WithinExpression
getTypesAdder	java/jdbc/src/org/postgis/DriverWrapper.java	/^    protected static TypesAdder getTypesAdder(Driver d) throws SQLException {$/;"	m	class:DriverWrapper
getURT	java/jdbc/src/org/postgis/PGboxbase.java	/^    public Point getURT() {$/;"	m	class:PGboxbase
getValue	java/jdbc/jtssrc/org/postgis/jts/JtsGeometry.java	/^    public String getValue() {$/;"	m	class:JtsGeometry
getValue	java/jdbc/src/org/postgis/Geometry.java	/^	public String getValue() {$/;"	m	class:Geometry
getValue	java/jdbc/src/org/postgis/PGboxbase.java	/^    public String getValue() {$/;"	m	class:PGboxbase
getValue	java/jdbc/src/org/postgis/PGgeometry.java	/^    public String getValue() {$/;"	m	class:PGgeometry
getValue	java/jdbc/src/org/postgis/PGgeometryLW.java	/^    public String getValue() {$/;"	m	class:PGgeometryLW
getValue	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^    public String getValue() {$/;"	m	class:PGShapeGeometry
getVersion	java/jdbc/jtssrc/org/postgis/jts/JtsGisWrapper.java	/^    public static String getVersion() {$/;"	m	class:JtsGisWrapper
getVersion	java/jdbc/jtssrc/org/postgis/jts/JtsWrapper.java	/^    public static String getVersion() {$/;"	m	class:JtsWrapper
getVersion	java/jdbc/src/org/postgis/DriverWrapper.java	/^    public static String getVersion() {$/;"	m	class:DriverWrapper
getVersion	java/jdbc/src/org/postgis/DriverWrapperAutoprobe.java	/^    public static String getVersion() {$/;"	m	class:DriverWrapperAutoprobe
getVersion	java/jdbc/src/org/postgis/DriverWrapperLW.java	/^    public static String getVersion() {$/;"	m	class:DriverWrapperLW
getVersion	java/jdbc/src/org/postgis/java2d/Java2DWrapper.java	/^    public static String getVersion() {$/;"	m	class:Java2DWrapper
getVersionString	java/jdbc/src/examples/VersionPrinter.java	/^    public static String getVersionString(String function, Statement stat) {$/;"	m	class:VersionPrinter
getWKBType	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    public static int getWKBType(Geometry geom) {$/;"	m	class:JtsBinaryWriter
getWindingRule	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        public final int getWindingRule() {$/;"	m	class:JTSShape.GeometryPathIterator
getX	java/jdbc/src/org/postgis/Point.java	/^    public double getX() {$/;"	m	class:Point
getXPos	doc/html/search/search.js	/^function getXPos(item)$/;"	f
getY	java/jdbc/src/org/postgis/Point.java	/^    public double getY() {$/;"	m	class:Point
getYPos	doc/html/search/search.js	/^function getYPos(item)$/;"	f
getZ	java/jdbc/src/org/postgis/Point.java	/^    public double getZ() {$/;"	m	class:Point
get_3dcross_product	liblwgeom/measures3d.h	/^get_3dcross_product(VECTOR3D *v1,VECTOR3D *v2, VECTOR3D *v)$/;"	f
get_3dvector_from_points	liblwgeom/measures3d.h	/^get_3dvector_from_points(POINT3DZ *p1,POINT3DZ *p2, VECTOR3D *v)$/;"	f
get_gdal_geotransform	raster/scripts/python/raster2pgsql.py	/^def get_gdal_geotransform(ds):$/;"	f
get_geocode_setting	extras/tiger_geocoder/tiger_2011/geocode_settings.sql	/^CREATE OR REPLACE FUNCTION get_geocode_setting(setting_name text)$/;"	f
get_geometry_type	utils/test_geography_joinestimation.pl	/^sub get_geometry_type$/;"	s
get_geometry_type	utils/test_joinestimation.pl	/^sub get_geometry_type$/;"	s
get_last_words	extras/tiger_geocoder/tiger_2011/normalize/get_last_words.sql	/^CREATE OR REPLACE FUNCTION get_last_words($/;"	f
get_num_rows	utils/test_geography_joinestimation.pl	/^sub get_num_rows$/;"	s
get_num_rows	utils/test_joinestimation.pl	/^sub get_num_rows$/;"	s
get_tract	extras/tiger_geocoder/tiger_2011/geocode/census_tracts_functions.sql	/^CREATE OR REPLACE FUNCTION get_tract(IN loc_geom geometry, output_field text DEFAULT 'name')$/;"	f
get_value	raster/scripts/python/rtreader.py	/^    def get_value(self, band, x, y):$/;"	m	class:RasterReader
get_xlink_node	postgis/lwgeom_in_gml.c	/^static xmlNodePtr get_xlink_node(xmlNodePtr xnode)$/;"	f	file:
gflags	liblwgeom/g_util.c	/^uint8_t gflags(int hasz, int hasm, int geodetic)$/;"	f
gidx_contains	postgis/gserialized_gist_nd.c	/^static bool gidx_contains(GIDX *a, GIDX *b)$/;"	f	file:
gidx_copy	postgis/gserialized_gist_nd.c	/^static GIDX* gidx_copy(GIDX *b)$/;"	f	file:
gidx_dimensionality_check	postgis/gserialized_gist_nd.c	/^static void gidx_dimensionality_check(GIDX **a, GIDX **b)$/;"	f	file:
gidx_equals	postgis/gserialized_gist_nd.c	/^static bool gidx_equals(GIDX *a, GIDX *b)$/;"	f	file:
gidx_expand	libpgcommon/gserialized_gist.c	/^void gidx_expand(GIDX *a, float d)$/;"	f
gidx_from_gbox	libpgcommon/gserialized_gist.c	/^GIDX* gidx_from_gbox(GBOX box)$/;"	f
gidx_from_gbox_p	libpgcommon/gserialized_gist.c	/^static int gidx_from_gbox_p(GBOX box, GIDX *a)$/;"	f	file:
gidx_in	postgis/gserialized_gist_nd.c	/^Datum gidx_in(PG_FUNCTION_ARGS)$/;"	f
gidx_in	postgis/gserialized_gist_nd.c	/^PG_FUNCTION_INFO_V1(gidx_in); $/;"	v
gidx_inter_volume	postgis/gserialized_gist_nd.c	/^static float gidx_inter_volume(GIDX *a, GIDX *b)$/;"	f	file:
gidx_is_unknown	postgis/gserialized_gist_nd.c	/^static inline bool gidx_is_unknown(const GIDX *a)$/;"	f	file:
gidx_merge	postgis/gserialized_gist_nd.c	/^static void gidx_merge(GIDX **b_union, GIDX *b_new)$/;"	f	file:
gidx_new	libpgcommon/gserialized_gist.c	/^GIDX* gidx_new(int ndims)$/;"	f
gidx_out	postgis/gserialized_gist_nd.c	/^Datum gidx_out(PG_FUNCTION_ARGS)$/;"	f
gidx_out	postgis/gserialized_gist_nd.c	/^PG_FUNCTION_INFO_V1(gidx_out); $/;"	v
gidx_overlaps	postgis/gserialized_gist_nd.c	/^static bool gidx_overlaps(GIDX *a, GIDX *b)$/;"	f	file:
gidx_predicate	postgis/gserialized_gist_nd.c	/^typedef bool (*gidx_predicate)(GIDX *a, GIDX *b);$/;"	t	file:
gidx_set_unknown	postgis/gserialized_gist_nd.c	/^static inline void gidx_set_unknown(GIDX *a)$/;"	f	file:
gidx_to_string	libpgcommon/gserialized_gist.c	/^char* gidx_to_string(GIDX *a)$/;"	f
gidx_union_volume	postgis/gserialized_gist_nd.c	/^static float gidx_union_volume(GIDX *a, GIDX *b)$/;"	f	file:
gidx_validate	postgis/gserialized_gist_nd.c	/^static inline void gidx_validate(GIDX *b)$/;"	f	file:
gidx_volume	postgis/gserialized_gist_nd.c	/^static float gidx_volume(GIDX *a)$/;"	f	file:
giveup	autogen.sh	/^giveup()$/;"	f
global_dumper_config	loader/shp2pgsql-gui.c	/^static SHPDUMPERCONFIG *global_dumper_config = NULL;$/;"	v	file:
global_loader_config	loader/shp2pgsql-gui.c	/^static SHPLOADERCONFIG *global_loader_config = NULL;$/;"	v	file:
global_parser_result	liblwgeom/lwin_wkt_parse.c	/^LWGEOM_PARSER_RESULT global_parser_result;$/;"	v
global_total_width	liblwgeom/vsprintf.c	/^int global_total_width;$/;"	v
gmlGetProp	postgis/lwgeom_in_gml.c	/^static xmlChar *gmlGetProp(xmlNodePtr xnode, xmlChar *prop)$/;"	f	file:
gmlSrs	postgis/lwgeom_in_gml.c	/^gmlSrs;$/;"	t	typeref:struct:struct_gmlSrs	file:
gml_is_srid_planar	postgis/lwgeom_in_gml.c	/^static int gml_is_srid_planar(int srid)$/;"	f	file:
gml_lwerror	postgis/lwgeom_in_gml.c	/^static void gml_lwerror(char *msg, int error_code) $/;"	f	file:
gml_reproject_pa	postgis/lwgeom_in_gml.c	/^static POINTARRAY* gml_reproject_pa(POINTARRAY *pa, int srid_in, int srid_out)$/;"	f	file:
goodDBFValue	loader/pgsql2shp-core.c	/^goodDBFValue(char *in, char fieldType)$/;"	f	file:
grid_isNull	postgis/lwgeom_functions_analytic.c	/^grid_isNull(const gridspec *grid)$/;"	f	file:
grid_print	postgis/lwgeom_functions_analytic.c	/^grid_print(const gridspec *grid)$/;"	f	file:
gridspec	postgis/lwgeom_functions_analytic.c	/^gridspec;$/;"	t	typeref:struct:gridspec_t	file:
gridspec_t	postgis/lwgeom_functions_analytic.c	/^typedef struct gridspec_t$/;"	s	file:
gserialized_above_2d	postgis/gserialized_gist_2d.c	/^Datum gserialized_above_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_above_2d	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(gserialized_above_2d);$/;"	v
gserialized_analyze_nd	postgis/gserialized_estimate.c	/^Datum gserialized_analyze_nd(PG_FUNCTION_ARGS)$/;"	f
gserialized_analyze_nd	postgis/gserialized_estimate.c	/^PG_FUNCTION_INFO_V1(gserialized_analyze_nd);$/;"	v
gserialized_below_2d	postgis/gserialized_gist_2d.c	/^Datum gserialized_below_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_below_2d	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(gserialized_below_2d);$/;"	v
gserialized_contains	postgis/gserialized_gist_nd.c	/^Datum gserialized_contains(PG_FUNCTION_ARGS)$/;"	f
gserialized_contains	postgis/gserialized_gist_nd.c	/^PG_FUNCTION_INFO_V1(gserialized_contains);$/;"	v
gserialized_contains_2d	postgis/gserialized_gist_2d.c	/^Datum gserialized_contains_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_contains_2d	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(gserialized_contains_2d);$/;"	v
gserialized_copy	liblwgeom/g_serialized.c	/^GSERIALIZED* gserialized_copy(const GSERIALIZED *g)$/;"	f
gserialized_datum_get_box2df_p	postgis/gserialized_gist_2d.c	/^gserialized_datum_get_box2df_p(Datum gsdatum, BOX2DF *box2df)$/;"	f	file:
gserialized_datum_get_flags	libpgcommon/gserialized_gist.c	/^gserialized_datum_get_flags(Datum gsdatum)$/;"	f	file:
gserialized_datum_get_gbox_p	libpgcommon/gserialized_gist.c	/^gserialized_datum_get_gbox_p(Datum gsdatum, GBOX *gbox)$/;"	f
gserialized_datum_get_gidx_p	libpgcommon/gserialized_gist.c	/^gserialized_datum_get_gidx_p(Datum gsdatum, GIDX *gidx)$/;"	f
gserialized_datum_predicate	postgis/gserialized_gist_nd.c	/^gserialized_datum_predicate(Datum gs1, Datum gs2, gidx_predicate predicate)$/;"	f	file:
gserialized_datum_predicate_2d	postgis/gserialized_gist_2d.c	/^gserialized_datum_predicate_2d(Datum gs1, Datum gs2, box2df_predicate predicate)$/;"	f	file:
gserialized_distance_box_2d	postgis/gserialized_gist_2d.c	/^Datum gserialized_distance_box_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_distance_box_2d	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(gserialized_distance_box_2d);$/;"	v
gserialized_distance_centroid_2d	postgis/gserialized_gist_2d.c	/^Datum gserialized_distance_centroid_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_distance_centroid_2d	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(gserialized_distance_centroid_2d);$/;"	v
gserialized_drop_gidx	libpgcommon/gserialized_gist.c	/^GSERIALIZED* gserialized_drop_gidx(GSERIALIZED *g)$/;"	f
gserialized_estimated_extent	postgis/gserialized_estimate.c	/^Datum gserialized_estimated_extent(PG_FUNCTION_ARGS)$/;"	f
gserialized_estimated_extent	postgis/gserialized_estimate.c	/^PG_FUNCTION_INFO_V1(gserialized_estimated_extent);$/;"	v
gserialized_expand	postgis/gserialized_gist_nd.c	/^gserialized_expand(GSERIALIZED *g, double distance)$/;"	f
gserialized_from_any_size	liblwgeom/g_serialized.c	/^static size_t gserialized_from_any_size(const LWGEOM *geom)$/;"	f	file:
gserialized_from_gbox	liblwgeom/g_serialized.c	/^static size_t gserialized_from_gbox(const GBOX *gbox, uint8_t *buf)$/;"	f	file:
gserialized_from_lwcircstring	liblwgeom/g_serialized.c	/^static size_t gserialized_from_lwcircstring(const LWCIRCSTRING *curve, uint8_t *buf)$/;"	f	file:
gserialized_from_lwcircstring_size	liblwgeom/g_serialized.c	/^static size_t gserialized_from_lwcircstring_size(const LWCIRCSTRING *curve)$/;"	f	file:
gserialized_from_lwcollection	liblwgeom/g_serialized.c	/^static size_t gserialized_from_lwcollection(const LWCOLLECTION *coll, uint8_t *buf)$/;"	f	file:
gserialized_from_lwcollection_size	liblwgeom/g_serialized.c	/^static size_t gserialized_from_lwcollection_size(const LWCOLLECTION *col)$/;"	f	file:
gserialized_from_lwgeom	liblwgeom/g_serialized.c	/^GSERIALIZED* gserialized_from_lwgeom(LWGEOM *geom, int is_geodetic, size_t *size)$/;"	f
gserialized_from_lwgeom_any	liblwgeom/g_serialized.c	/^static size_t gserialized_from_lwgeom_any(const LWGEOM *geom, uint8_t *buf)$/;"	f	file:
gserialized_from_lwgeom_size	liblwgeom/g_serialized.c	/^size_t gserialized_from_lwgeom_size(const LWGEOM *geom)$/;"	f
gserialized_from_lwline	liblwgeom/g_serialized.c	/^static size_t gserialized_from_lwline(const LWLINE *line, uint8_t *buf)$/;"	f	file:
gserialized_from_lwline_size	liblwgeom/g_serialized.c	/^static size_t gserialized_from_lwline_size(const LWLINE *line)$/;"	f	file:
gserialized_from_lwpoint	liblwgeom/g_serialized.c	/^static size_t gserialized_from_lwpoint(const LWPOINT *point, uint8_t *buf)$/;"	f	file:
gserialized_from_lwpoint_size	liblwgeom/g_serialized.c	/^static size_t gserialized_from_lwpoint_size(const LWPOINT *point)$/;"	f	file:
gserialized_from_lwpoly	liblwgeom/g_serialized.c	/^static size_t gserialized_from_lwpoly(const LWPOLY *poly, uint8_t *buf)$/;"	f	file:
gserialized_from_lwpoly_size	liblwgeom/g_serialized.c	/^static size_t gserialized_from_lwpoly_size(const LWPOLY *poly)$/;"	f	file:
gserialized_from_lwtriangle	liblwgeom/g_serialized.c	/^static size_t gserialized_from_lwtriangle(const LWTRIANGLE *triangle, uint8_t *buf)$/;"	f	file:
gserialized_from_lwtriangle_size	liblwgeom/g_serialized.c	/^static size_t gserialized_from_lwtriangle_size(const LWTRIANGLE *triangle)$/;"	f	file:
gserialized_geography_from_lwgeom	postgis/geography_inout.c	/^GSERIALIZED* gserialized_geography_from_lwgeom(LWGEOM *lwgeom, int32 geog_typmod)$/;"	f
gserialized_get_gbox_p	liblwgeom/g_serialized.c	/^int gserialized_get_gbox_p(const GSERIALIZED *geom, GBOX *box)$/;"	f
gserialized_get_gidx_p	libpgcommon/gserialized_gist.c	/^int gserialized_get_gidx_p(GSERIALIZED *g, GIDX *gidx)$/;"	f
gserialized_get_srid	liblwgeom/g_serialized.c	/^int32_t gserialized_get_srid(const GSERIALIZED *s)$/;"	f
gserialized_get_type	liblwgeom/g_serialized.c	/^uint32_t gserialized_get_type(const GSERIALIZED *s)$/;"	f
gserialized_get_zm	liblwgeom/g_serialized.c	/^int gserialized_get_zm(const GSERIALIZED *gser)$/;"	f
gserialized_gist_compress	postgis/gserialized_gist_nd.c	/^Datum gserialized_gist_compress(PG_FUNCTION_ARGS)$/;"	f
gserialized_gist_compress	postgis/gserialized_gist_nd.c	/^PG_FUNCTION_INFO_V1(gserialized_gist_compress);$/;"	v
gserialized_gist_compress_2d	postgis/gserialized_gist_2d.c	/^Datum gserialized_gist_compress_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_gist_compress_2d	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(gserialized_gist_compress_2d);$/;"	v
gserialized_gist_consistent	postgis/gserialized_gist_nd.c	/^Datum gserialized_gist_consistent(PG_FUNCTION_ARGS)$/;"	f
gserialized_gist_consistent	postgis/gserialized_gist_nd.c	/^PG_FUNCTION_INFO_V1(gserialized_gist_consistent);$/;"	v
gserialized_gist_consistent_2d	postgis/gserialized_gist_2d.c	/^Datum gserialized_gist_consistent_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_gist_consistent_2d	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(gserialized_gist_consistent_2d);$/;"	v
gserialized_gist_consistent_internal	postgis/gserialized_gist_nd.c	/^static inline bool gserialized_gist_consistent_internal(GIDX *key, GIDX *query, StrategyNumber strategy)$/;"	f	file:
gserialized_gist_consistent_internal_2d	postgis/gserialized_gist_2d.c	/^static inline bool gserialized_gist_consistent_internal_2d(BOX2DF *key, BOX2DF *query, StrategyNumber strategy)$/;"	f	file:
gserialized_gist_consistent_leaf	postgis/gserialized_gist_nd.c	/^static inline bool gserialized_gist_consistent_leaf(GIDX *key, GIDX *query, StrategyNumber strategy)$/;"	f	file:
gserialized_gist_consistent_leaf_2d	postgis/gserialized_gist_2d.c	/^static inline bool gserialized_gist_consistent_leaf_2d(BOX2DF *key, BOX2DF *query, StrategyNumber strategy)$/;"	f	file:
gserialized_gist_decompress	postgis/gserialized_gist_nd.c	/^Datum gserialized_gist_decompress(PG_FUNCTION_ARGS)$/;"	f
gserialized_gist_decompress	postgis/gserialized_gist_nd.c	/^PG_FUNCTION_INFO_V1(gserialized_gist_decompress);$/;"	v
gserialized_gist_decompress_2d	postgis/gserialized_gist_2d.c	/^Datum gserialized_gist_decompress_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_gist_decompress_2d	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(gserialized_gist_decompress_2d);$/;"	v
gserialized_gist_distance_2d	postgis/gserialized_gist_2d.c	/^Datum gserialized_gist_distance_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_gist_distance_2d	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(gserialized_gist_distance_2d);$/;"	v
gserialized_gist_joinsel	postgis/gserialized_estimate.c	/^Datum gserialized_gist_joinsel(PG_FUNCTION_ARGS)$/;"	f
gserialized_gist_joinsel	postgis/gserialized_estimate.c	/^PG_FUNCTION_INFO_V1(gserialized_gist_joinsel);$/;"	v
gserialized_gist_joinsel_2d	postgis/gserialized_estimate.c	/^Datum gserialized_gist_joinsel_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_gist_joinsel_2d	postgis/gserialized_estimate.c	/^PG_FUNCTION_INFO_V1(gserialized_gist_joinsel_2d);$/;"	v
gserialized_gist_joinsel_nd	postgis/gserialized_estimate.c	/^Datum gserialized_gist_joinsel_nd(PG_FUNCTION_ARGS)$/;"	f
gserialized_gist_joinsel_nd	postgis/gserialized_estimate.c	/^PG_FUNCTION_INFO_V1(gserialized_gist_joinsel_nd);$/;"	v
gserialized_gist_penalty	postgis/gserialized_gist_nd.c	/^Datum gserialized_gist_penalty(PG_FUNCTION_ARGS)$/;"	f
gserialized_gist_penalty	postgis/gserialized_gist_nd.c	/^PG_FUNCTION_INFO_V1(gserialized_gist_penalty);$/;"	v
gserialized_gist_penalty_2d	postgis/gserialized_gist_2d.c	/^Datum gserialized_gist_penalty_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_gist_penalty_2d	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(gserialized_gist_penalty_2d);$/;"	v
gserialized_gist_picksplit	postgis/gserialized_gist_nd.c	/^Datum gserialized_gist_picksplit(PG_FUNCTION_ARGS)$/;"	f
gserialized_gist_picksplit	postgis/gserialized_gist_nd.c	/^PG_FUNCTION_INFO_V1(gserialized_gist_picksplit);$/;"	v
gserialized_gist_picksplit_2d	postgis/gserialized_gist_2d.c	/^Datum gserialized_gist_picksplit_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_gist_picksplit_2d	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(gserialized_gist_picksplit_2d);$/;"	v
gserialized_gist_picksplit_addlist	postgis/gserialized_gist_nd.c	/^static void gserialized_gist_picksplit_addlist(OffsetNumber *list, GIDX **box_union, GIDX *box_current, int *pos, int num)$/;"	f	file:
gserialized_gist_picksplit_badratio	postgis/gserialized_gist_nd.c	/^static int gserialized_gist_picksplit_badratio(int x, int y)$/;"	f	file:
gserialized_gist_picksplit_badratios	postgis/gserialized_gist_nd.c	/^static bool gserialized_gist_picksplit_badratios(int *pos, int dims)$/;"	f	file:
gserialized_gist_picksplit_constructsplit	postgis/gserialized_gist_nd.c	/^static void gserialized_gist_picksplit_constructsplit(GIST_SPLITVEC *v, OffsetNumber *list1, int nlist1, GIDX **union1, OffsetNumber *list2, int nlist2, GIDX **union2)$/;"	f	file:
gserialized_gist_picksplit_fallback	postgis/gserialized_gist_nd.c	/^static void gserialized_gist_picksplit_fallback(GistEntryVector *entryvec, GIST_SPLITVEC *v)$/;"	f	file:
gserialized_gist_same	postgis/gserialized_gist_nd.c	/^Datum gserialized_gist_same(PG_FUNCTION_ARGS)$/;"	f
gserialized_gist_same	postgis/gserialized_gist_nd.c	/^PG_FUNCTION_INFO_V1(gserialized_gist_same);$/;"	v
gserialized_gist_same_2d	postgis/gserialized_gist_2d.c	/^Datum gserialized_gist_same_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_gist_same_2d	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(gserialized_gist_same_2d);$/;"	v
gserialized_gist_sel	postgis/gserialized_estimate.c	/^Datum gserialized_gist_sel(PG_FUNCTION_ARGS)$/;"	f
gserialized_gist_sel	postgis/gserialized_estimate.c	/^PG_FUNCTION_INFO_V1(gserialized_gist_sel);$/;"	v
gserialized_gist_sel_2d	postgis/gserialized_estimate.c	/^Datum gserialized_gist_sel_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_gist_sel_2d	postgis/gserialized_estimate.c	/^PG_FUNCTION_INFO_V1(gserialized_gist_sel_2d);$/;"	v
gserialized_gist_sel_nd	postgis/gserialized_estimate.c	/^Datum gserialized_gist_sel_nd(PG_FUNCTION_ARGS)$/;"	f
gserialized_gist_sel_nd	postgis/gserialized_estimate.c	/^PG_FUNCTION_INFO_V1(gserialized_gist_sel_nd);$/;"	v
gserialized_gist_union	postgis/gserialized_gist_nd.c	/^Datum gserialized_gist_union(PG_FUNCTION_ARGS)$/;"	f
gserialized_gist_union	postgis/gserialized_gist_nd.c	/^PG_FUNCTION_INFO_V1(gserialized_gist_union);$/;"	v
gserialized_gist_union_2d	postgis/gserialized_gist_2d.c	/^Datum gserialized_gist_union_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_gist_union_2d	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(gserialized_gist_union_2d);$/;"	v
gserialized_has_bbox	liblwgeom/g_serialized.c	/^int gserialized_has_bbox(const GSERIALIZED *gser)$/;"	f
gserialized_has_m	liblwgeom/g_serialized.c	/^int gserialized_has_m(const GSERIALIZED *gser)$/;"	f
gserialized_has_z	liblwgeom/g_serialized.c	/^int gserialized_has_z(const GSERIALIZED *gser)$/;"	f
gserialized_is_empty	liblwgeom/g_serialized.c	/^int gserialized_is_empty(const GSERIALIZED *g)$/;"	f
gserialized_left_2d	postgis/gserialized_gist_2d.c	/^Datum gserialized_left_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_left_2d	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(gserialized_left_2d);$/;"	v
gserialized_ndims	liblwgeom/g_serialized.c	/^int gserialized_ndims(const GSERIALIZED *gser)$/;"	f
gserialized_overabove_2d	postgis/gserialized_gist_2d.c	/^Datum gserialized_overabove_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_overabove_2d	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(gserialized_overabove_2d);$/;"	v
gserialized_overbelow_2d	postgis/gserialized_gist_2d.c	/^Datum gserialized_overbelow_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_overbelow_2d	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(gserialized_overbelow_2d);$/;"	v
gserialized_overlaps	postgis/gserialized_gist_nd.c	/^Datum gserialized_overlaps(PG_FUNCTION_ARGS)$/;"	f
gserialized_overlaps	postgis/gserialized_gist_nd.c	/^PG_FUNCTION_INFO_V1(gserialized_overlaps);$/;"	v
gserialized_overlaps_2d	postgis/gserialized_gist_2d.c	/^Datum gserialized_overlaps_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_overlaps_2d	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(gserialized_overlaps_2d);$/;"	v
gserialized_overleft_2d	postgis/gserialized_gist_2d.c	/^Datum gserialized_overleft_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_overleft_2d	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(gserialized_overleft_2d);$/;"	v
gserialized_overright_2d	postgis/gserialized_gist_2d.c	/^Datum gserialized_overright_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_overright_2d	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(gserialized_overright_2d);$/;"	v
gserialized_read_gbox_p	liblwgeom/g_serialized.c	/^int gserialized_read_gbox_p(const GSERIALIZED *g, GBOX *gbox)$/;"	f
gserialized_right_2d	postgis/gserialized_gist_2d.c	/^Datum gserialized_right_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_right_2d	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(gserialized_right_2d);$/;"	v
gserialized_same_2d	postgis/gserialized_gist_2d.c	/^Datum gserialized_same_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_same_2d	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(gserialized_same_2d);$/;"	v
gserialized_set_gidx	libpgcommon/gserialized_gist.c	/^GSERIALIZED* gserialized_set_gidx(GSERIALIZED *g, GIDX *gidx)$/;"	f
gserialized_set_srid	liblwgeom/g_serialized.c	/^void gserialized_set_srid(GSERIALIZED *s, int32_t srid)$/;"	f
gserialized_to_string	liblwgeom/g_serialized.c	/^char* gserialized_to_string(const GSERIALIZED *g)$/;"	f
gserialized_typmod_in	postgis/gserialized_typmod.c	/^static uint32 gserialized_typmod_in(ArrayType *arr, int is_geography)$/;"	f	file:
gserialized_within	postgis/gserialized_gist_nd.c	/^Datum gserialized_within(PG_FUNCTION_ARGS)$/;"	f
gserialized_within	postgis/gserialized_gist_nd.c	/^PG_FUNCTION_INFO_V1(gserialized_within);$/;"	v
gserialized_within_2d	postgis/gserialized_gist_2d.c	/^Datum gserialized_within_2d(PG_FUNCTION_ARGS)$/;"	f
gserialized_within_2d	postgis/gserialized_gist_2d.c	/^PG_FUNCTION_INFO_V1(gserialized_within_2d);$/;"	v
gt	raster/loader/raster2pgsql.h	/^	double gt[6];$/;"	m	struct:rasterinfo_t
gt	raster/scripts/python/window.py	/^gt = ds.GetGeoTransform()$/;"	v
gtk_dialog_get_content_area	loader/shp2pgsql-gui.c	43;"	d	file:
gv	raster/rt_pg/rtpg_pixel.c	/^	rtpg_setvaluesgv_geomval gv;$/;"	m	struct:rtpg_setvaluesgv_arg_t	file:
hDBFHandle	loader/shp2pgsql-core.h	/^	DBFHandle hDBFHandle;$/;"	m	struct:shp_loader_state
hSHP	loader/shapefil.h	/^    SHPHandle   hSHP;$/;"	m	struct:__anon66
hSHPHandle	loader/shp2pgsql-core.h	/^	SHPHandle hSHPHandle;$/;"	m	struct:shp_loader_state
handleInterrupt	postgis/postgis_module.c	/^handleInterrupt(int sig)$/;"	f	file:
has_m	liblwgeom/lwin_wkb.c	/^	int has_m; \/* M? *\/$/;"	m	struct:__anon24	file:
has_m	loader/shp2pgsql-core.h	/^	int has_m;$/;"	m	struct:shp_loader_state
has_srid	liblwgeom/lwin_wkb.c	/^	int has_srid; \/* SRID? *\/$/;"	m	struct:__anon24	file:
has_value	raster/rt_core/librtcore.h	/^	uint32_t has_value;$/;"	m	struct:rt_quantile_t
has_z	liblwgeom/lwin_wkb.c	/^	int has_z; \/* Z? *\/$/;"	m	struct:__anon24	file:
has_z	loader/shp2pgsql-core.h	/^	int has_z;$/;"	m	struct:shp_loader_state
hasband	raster/rt_pg/rtpg_mapalgebra.c	/^	uint8_t *hasband; \/* does source raster have band at index nband? *\/$/;"	m	struct:rtpg_nmapalgebra_arg_t	file:
hashCode	java/ejb3/src/org/postgis/hibernate/GeometryType.java	/^	public int hashCode(Object arg0) throws HibernateException {$/;"	m	class:GeometryType
hashCode	java/jdbc/src/org/postgis/ComposedGeom.java	/^    public int hashCode() {$/;"	m	class:ComposedGeom
hashCode	java/jdbc/src/org/postgis/Geometry.java	/^	public int hashCode() {$/;"	m	class:Geometry
hashCode	java/jdbc/src/org/postgis/MultiLineString.java	/^    public int hashCode() {$/;"	m	class:MultiLineString
hashCode	java/jdbc/src/org/postgis/Point.java	/^    public int hashCode() {$/;"	m	class:Point
hashCode	java/jdbc/src/org/postgis/Point.java	/^    public static int hashCode(double value) {$/;"	m	class:Point
hashcode	java/jdbc/src/org/postgis/ComposedGeom.java	/^    int hashcode = 0;$/;"	f	class:ComposedGeom
hasnodata	raster/loader/raster2pgsql.h	/^	int *hasnodata;$/;"	m	struct:rasterinfo_t
hasnodata	raster/loader/raster2pgsql.h	/^	int hasnodata;$/;"	m	struct:raster_loader_config
hasnodata	raster/rt_core/librtcore.h	/^    int32_t hasnodata; \/* a flag indicating if this band contains nodata values *\/$/;"	m	struct:rt_band_t
hasnodata	raster/rt_core/rt_mapalgebra.c	/^		int *hasnodata;$/;"	m	struct:_rti_iterator_arg_t::__anon45	file:
hasnodata	raster/rt_core/rt_mapalgebra.c	/^	int hasnodata;$/;"	m	struct:_rti_colormap_arg_t	file:
hasnodata	raster/rt_core/rt_raster.c	/^	uint8_t *hasnodata;$/;"	m	struct:_rti_rasterize_arg_t	file:
hasnodata	raster/rt_pg/rtpg_mapalgebra.c	/^	int hasnodata; \/* NODATA flag *\/$/;"	m	struct:rtpg_nmapalgebra_arg_t	file:
hasnodata	raster/rt_pg/rtpg_mapalgebra.c	/^	int hasnodata; \/* is there a user-specified NODATA? *\/$/;"	m	struct:rtpg_clip_band_t	file:
hasval	raster/rt_pg/rtpg_mapalgebra.c	/^		int hasval;$/;"	m	struct:__anon50::__anon51	file:
hasval	raster/rt_pg/rtpg_mapalgebra.c	/^		int hasval;$/;"	m	struct:__anon50::__anon52	file:
hausdorffdistance	postgis/lwgeom_geos.c	/^Datum hausdorffdistance(PG_FUNCTION_ARGS)$/;"	f
hausdorffdistance	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(hausdorffdistance);$/;"	v
hausdorffdistancedensify	postgis/lwgeom_geos.c	/^Datum hausdorffdistancedensify(PG_FUNCTION_ARGS)$/;"	f
hausdorffdistancedensify	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(hausdorffdistancedensify);$/;"	v
haveMeasure	java/jdbc/src/org/postgis/Geometry.java	/^	public boolean haveMeasure = false;$/;"	f	class:Geometry
head	raster/rt_core/librtcore.h	/^	struct quantile_llist_element *head; \/* H index 0 *\/$/;"	m	struct:quantile_llist	typeref:struct:quantile_llist::quantile_llist_element
height	raster/rt_core/librtcore.h	/^    uint16_t height; \/* pixel rows - max 65535 *\/$/;"	m	struct:rt_raster_t
height	raster/rt_core/librtcore.h	/^    uint16_t height; \/* pixel rows: 2 bytes *\/$/;"	m	struct:rt_raster_serialized_t
height	raster/rt_core/librtcore.h	/^    uint16_t height;$/;"	m	struct:rt_band_t
height	raster/rt_core/rt_mapalgebra.c	/^	int *height;$/;"	m	struct:_rti_iterator_arg_t	file:
height	raster/scripts/python/rtreader.py	/^    height = property(fget = lambda self: self._get_height())$/;"	v	class:RasterReader
help	raster/scripts/python/ovdump.py	/^               help="1-based index of raster overview, optional")$/;"	v
help	raster/scripts/python/ovdump.py	/^               help="input raster file")$/;"	v
help	raster/scripts/python/rtrowdump.py	/^            help="GeoTIFF output file for pixel data read from WKT Raster table")$/;"	v
help	raster/scripts/python/rtrowdump.py	/^            help="PostgreSQL database connection string, required")$/;"	v
help	raster/scripts/python/rtrowdump.py	/^            help="SQL WHERE clause to filter record")$/;"	v
help	raster/scripts/python/rtrowdump.py	/^            help="be excessively verbose and useful for debugging")$/;"	v
help	raster/scripts/python/rtrowdump.py	/^            help="table with raster column [<schema>.]<table>, required")$/;"	v
hex2char	liblwgeom/lwin_wkb.c	/^static uint8_t hex2char[256] = {$/;"	v	file:
hex_a	liblwgeom/cunit/cu_in_wkb.c	/^char *hex_a;$/;"	v
hex_b	liblwgeom/cunit/cu_in_wkb.c	/^char *hex_b;$/;"	v
hexbytes_from_bytes	liblwgeom/lwout_wkb.c	/^char* hexbytes_from_bytes(uint8_t *bytes, size_t size) $/;"	f
hexchr	liblwgeom/lwout_wkb.c	/^static char *hexchr = "0123456789ABCDEF";$/;"	v	file:
hextypes	java/jdbc/src/org/postgis/binary/ByteSetter.java	/^        protected static final char[] hextypes = "0123456789ABCDEF".toCharArray();$/;"	f	class:ByteSetter.StringByteSetter
histogram_cells	postgis/gserialized_estimate.c	/^	float4 histogram_cells;$/;"	m	struct:ND_STATS_T	file:
histogram_features	postgis/gserialized_estimate.c	/^	float4 histogram_features;$/;"	m	struct:ND_STATS_T	file:
homogenize_suite	liblwgeom/cunit/cu_homogenize.c	/^CU_SuiteInfo homogenize_suite = {"homogenize",  NULL,  NULL, homogenize_tests};$/;"	v
homogenize_tests	liblwgeom/cunit/cu_homogenize.c	/^CU_TestInfo homogenize_tests[] =$/;"	v
host	loader/shpcommon.h	/^	char *host;$/;"	m	struct:shp_connection_state
iLanguageDriver	loader/shapefil.h	/^    int         iLanguageDriver;$/;"	m	struct:__anon67
iconv	loader/shp2pgsql-core.c	/^    char *iconv;$/;"	m	struct:__anon62	file:
id	java/ejb2/src/com/geodetix/geo/ejb/GeometryBean.java	/^    private Integer   id;$/;"	f	class:GeometryBean	file:
id	java/ejb3/src/org/postgis/ejb/PersonEntity.java	/^	private long id;$/;"	f	class:PersonEntity	file:
id	postgis/lwgeom_accum.c	/^	Datum id;	\/\/Id, from function parameter$/;"	m	struct:__anon9	file:
idx	postgis/lwgeom_dump.c	/^	int idx;$/;"	m	struct:GEOMDUMPNODE_T	file:
idx	postgis/lwgeom_dumppoints.c	/^	int idx; \/* which member geom we're working on *\/$/;"	m	struct:dumpnode	file:
idx	raster/loader/raster2pgsql.h	/^	int idx;$/;"	m	struct:raster_loader_config
idx	raster/rt_core/librtcore.h	/^	int idx;$/;"	m	struct:rt_gdaldriver_t
idx_tablespace	raster/loader/raster2pgsql.h	/^	char *idx_tablespace;$/;"	m	struct:raster_loader_config
idxtablespace	loader/shp2pgsql-core.h	/^	char *idxtablespace;$/;"	m	struct:shp_loader_config
ieee_float_shape_type	liblwgeom/lwgeom_api.c	/^} ieee_float_shape_type;$/;"	t	typeref:union:__anon28	file:
imageSize	doc/html/image_src/generator.c	/^char *imageSize = "200x200";$/;"	v
img	raster/scripts/python/genraster.py	/^img = Image.new("L", g_size, 255)$/;"	v
imgproj	raster/rt_core/rt_warp.c	/^			void *imgproj;$/;"	m	struct:_rti_warp_arg_t::__anon42::__anon44	file:
import_file_list_store	loader/shp2pgsql-gui.c	/^GtkListStore *import_file_list_store;$/;"	v
import_filename_column	loader/shp2pgsql-gui.c	/^GtkTreeViewColumn *import_filename_column;$/;"	v
import_filename_renderer	loader/shp2pgsql-gui.c	/^GtkCellRenderer *import_filename_renderer;$/;"	v
import_geom_column	loader/shp2pgsql-gui.c	/^GtkTreeViewColumn *import_geom_column;$/;"	v
import_geom_column_renderer	loader/shp2pgsql-gui.c	/^GtkCellRenderer *import_geom_column_renderer;$/;"	v
import_mode_column	loader/shp2pgsql-gui.c	/^GtkTreeViewColumn *import_mode_column;$/;"	v
import_mode_renderer	loader/shp2pgsql-gui.c	/^GtkCellRenderer *import_mode_renderer;$/;"	v
import_remove_column	loader/shp2pgsql-gui.c	/^GtkTreeViewColumn *import_remove_column;$/;"	v
import_remove_renderer	loader/shp2pgsql-gui.c	/^GtkCellRenderer *import_remove_renderer;$/;"	v
import_schema_column	loader/shp2pgsql-gui.c	/^GtkTreeViewColumn *import_schema_column;$/;"	v
import_schema_renderer	loader/shp2pgsql-gui.c	/^GtkCellRenderer *import_schema_renderer;$/;"	v
import_srid_column	loader/shp2pgsql-gui.c	/^GtkTreeViewColumn *import_srid_column;$/;"	v
import_srid_renderer	loader/shp2pgsql-gui.c	/^GtkCellRenderer *import_srid_renderer;$/;"	v
import_table_column	loader/shp2pgsql-gui.c	/^GtkTreeViewColumn *import_table_column;$/;"	v
import_table_renderer	loader/shp2pgsql-gui.c	/^GtkCellRenderer *import_table_renderer;$/;"	v
import_tree	loader/shp2pgsql-gui.c	/^GtkWidget *import_tree;$/;"	v
in_geojson_suite	liblwgeom/cunit/cu_in_geojson.c	/^CU_SuiteInfo in_geojson_suite = {"in_geojson",  NULL,  NULL, in_geojson_tests};$/;"	v
in_geojson_test_bbox	liblwgeom/cunit/cu_in_geojson.c	/^static void in_geojson_test_bbox(void)$/;"	f	file:
in_geojson_test_geoms	liblwgeom/cunit/cu_in_geojson.c	/^static void in_geojson_test_geoms(void)$/;"	f	file:
in_geojson_test_srid	liblwgeom/cunit/cu_in_geojson.c	/^static void in_geojson_test_srid(void)$/;"	f	file:
in_geojson_tests	liblwgeom/cunit/cu_in_geojson.c	/^CU_TestInfo in_geojson_tests[] =$/;"	v
inc_max	raster/rt_core/librtcore.h	/^		int inc_max; \/* include max *\/$/;"	m	struct:rt_reclassexpr_t::rt_reclassrange
inc_max	raster/rt_core/librtcore.h	/^	int inc_max;$/;"	m	struct:rt_histogram_t
inc_min	raster/rt_core/librtcore.h	/^		int inc_min; \/* include min *\/$/;"	m	struct:rt_reclassexpr_t::rt_reclassrange
inc_min	raster/rt_core/librtcore.h	/^	int inc_min;$/;"	m	struct:rt_histogram_t
includegid	loader/pgsql2shp-core.h	/^	int includegid;$/;"	m	struct:shp_dumper_config
includes_address	extras/tiger_geocoder/tiger_2011/geocode/includes_address.sql	/^CREATE OR REPLACE FUNCTION includes_address($/;"	f
index	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        protected int index=0;$/;"	f	class:JTSShape.GeometryPathIterator
index	liblwgeom/lwgeodetic.h	/^	uint32_t index;$/;"	m	struct:__anon23
index	postgis/geography_measurement_trees.c	/^	CIRC_NODE*                  index;$/;"	m	struct:__anon11	file:
index	postgis/gserialized_gist_2d.c	/^	int			index;$/;"	m	struct:__anon17	file:
index	postgis/lwgeom_rtree.h	/^	RTREE_POLY_CACHE*           index;$/;"	m	struct:__anon14
index	raster/rt_core/librtcore.h	/^	struct quantile_llist_index *index;$/;"	m	struct:quantile_llist	typeref:struct:quantile_llist::quantile_llist_index
index	raster/rt_core/librtcore.h	/^	uint32_t index;$/;"	m	struct:quantile_llist_index
indexSectionNames	doc/html/search/search.js	/^var indexSectionNames =$/;"	v
indexSectionsWithContent	doc/html/search/search.js	/^var indexSectionsWithContent =$/;"	v
index_max	raster/rt_core/librtcore.h	/^	uint32_t index_max; \/* max # of elements in index *\/$/;"	m	struct:quantile_llist
indexempty	regress/regress_index_nulls.sql	/^create table indexempty (g geography, id integer);$/;"	t
indexempty	regress/regress_index_nulls.sql	/^create table indexempty (g geometry, id integer);$/;"	t
indexempty.empty_gix	regress/regress_index_nulls.sql	/^create index empty_gix on indexempty using gist (g);$/;"	i
indexempty.g	regress/regress_index_nulls.sql	/^create table indexempty (g geography, id integer);$/;"	F
indexempty.g	regress/regress_index_nulls.sql	/^create table indexempty (g geometry, id integer);$/;"	F
indexempty.id	regress/regress_index_nulls.sql	/^create table indexempty (g geography, id integer);$/;"	F
indexempty.id	regress/regress_index_nulls.sql	/^create table indexempty (g geometry, id integer);$/;"	F
indexnulls	regress/regress_index_nulls.sql	/^create table indexnulls (g geography, id integer);$/;"	t
indexnulls	regress/regress_index_nulls.sql	/^create table indexnulls (g geometry, id integer);$/;"	t
indexnulls.g	regress/regress_index_nulls.sql	/^create table indexnulls (g geography, id integer);$/;"	F
indexnulls.g	regress/regress_index_nulls.sql	/^create table indexnulls (g geometry, id integer);$/;"	F
indexnulls.id	regress/regress_index_nulls.sql	/^create table indexnulls (g geography, id integer);$/;"	F
indexnulls.id	regress/regress_index_nulls.sql	/^create table indexnulls (g geometry, id integer);$/;"	F
indexnulls.nulls_gix	regress/regress_index_nulls.sql	/^create index nulls_gix on indexnulls using gist (g);$/;"	i
infile	raster/scripts/python/pixval.py	/^infile = sys.argv[1]$/;"	v
infile	raster/scripts/python/window.py	/^infile = sys.argv[1]$/;"	v
info	raster/rt_core/rt_context.c	/^    rt_message_handler info;$/;"	m	struct:rt_context_t	file:
ingest	java/ejb3/src/org/postgis/ejb/UserBean.java	/^	public void ingest(@WebParam(name = "name") String name,@WebParam(name = "surname") String surname,@WebParam(name = "lat") double lat, @WebParam(name = "lon") double lon){$/;"	m	class:UserBean
ingest	java/ejb3/src/org/postgis/ejb/UserBeanRemote.java	/^	public void ingest(String name, String surname, double lat, double lon) throws RemoteException;$/;"	m	interface:UserBeanRemote
init	java/ejb2/src/com/geodetix/geo/client/Client.java	/^    private void init(){$/;"	m	class:Client	file:
init	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAOImpl.java	/^    public void init() {$/;"	m	class:PostGisGeometryDAOImpl
init	raster/rt_core/rt_raster.c	/^	double *init;$/;"	m	struct:_rti_rasterize_arg_t	file:
initSRID	java/jdbc/src/org/postgis/Geometry.java	/^	protected String initSRID(String value) {$/;"	m	class:Geometry
init_cg_suite	liblwgeom/cunit/cu_algorithm.c	/^static int init_cg_suite(void)$/;"	f	file:
init_config	raster/loader/raster2pgsql.c	/^init_config(RTLOADERCFG *config) {$/;"	f	file:
init_db_error	regress/run_test	/^init_db_error ()$/;"	f
init_homogenizebuffer	liblwgeom/lwhomogenize.c	/^init_homogenizebuffer(HomogenizeBuffer *buffer)$/;"	f	file:
init_pgsql2shp_suite	loader/cunit/cu_pgsql2shp.c	/^int init_pgsql2shp_suite(void)$/;"	f
init_rastinfo	raster/loader/raster2pgsql.c	/^init_rastinfo(RASTERINFO *info) {$/;"	f	file:
init_rt_allocator	raster/rt_core/rt_context.c	/^init_rt_allocator(size_t size)$/;"	f
init_rt_deallocator	raster/rt_core/rt_context.c	/^init_rt_deallocator(void *mem)$/;"	f
init_rt_errorreporter	raster/rt_core/rt_context.c	/^init_rt_errorreporter(const char *fmt, va_list ap)$/;"	f
init_rt_inforeporter	raster/rt_core/rt_context.c	/^init_rt_inforeporter(const char *fmt, va_list ap)$/;"	f
init_rt_reallocator	raster/rt_core/rt_context.c	/^init_rt_reallocator(void *mem, size_t size)$/;"	f
init_rt_warnreporter	raster/rt_core/rt_context.c	/^init_rt_warnreporter(const char *fmt, va_list ap)$/;"	f
init_shp2pgsql_suite	loader/cunit/cu_shp2pgsql.c	/^int init_shp2pgsql_suite(void)$/;"	f
init_stringbuffer	raster/loader/raster2pgsql.c	/^init_stringbuffer(STRINGBUFFER *buffer) {$/;"	f	file:
init_wkb_in_suite	liblwgeom/cunit/cu_in_wkb.c	/^static int init_wkb_in_suite(void)$/;"	f	file:
init_wkb_out_suite	liblwgeom/cunit/cu_out_wkb.c	/^static int init_wkb_out_suite(void)$/;"	f	file:
init_wkt_in_suite	liblwgeom/cunit/cu_in_wkt.c	/^static int init_wkt_in_suite(void)$/;"	f	file:
init_wkt_out_suite	liblwgeom/cunit/cu_out_wkt.c	/^static int init_wkt_out_suite(void)$/;"	f	file:
innerWKT	java/jdbc/src/org/postgis/ComposedGeom.java	/^    protected void innerWKT(StringBuffer sb) {$/;"	m	class:ComposedGeom
innerWKT	java/jdbc/src/org/postgis/Geometry.java	/^	protected abstract void innerWKT(StringBuffer SB);$/;"	m	class:Geometry
innerWKT	java/jdbc/src/org/postgis/GeometryCollection.java	/^    protected void innerWKT(StringBuffer SB) {$/;"	m	class:GeometryCollection
innerWKT	java/jdbc/src/org/postgis/Point.java	/^    public void innerWKT(StringBuffer sb) {$/;"	m	class:Point
innerWKT	java/jdbc/src/org/postgis/PointComposedGeom.java	/^    protected void innerWKT(StringBuffer sb) {$/;"	m	class:PointComposedGeom
insert_all	regress/typmod.sql	/^CREATE FUNCTION tm.insert_all(tmpfile_prefix text)$/;"	f
insert_records	raster/loader/raster2pgsql.c	/^insert_records($/;"	f	file:
install_geocode_settings	extras/tiger_geocoder/tiger_2011/geocode_settings.sql	/^CREATE OR REPLACE FUNCTION install_geocode_settings() $/;"	f
install_pagc_tables	extras/tiger_geocoder/tiger_2011/pagc_normalize/pagc_tables.sql	/^CREATE OR REPLACE FUNCTION install_pagc_tables() $/;"	f
int32	extras/wkb_reader/wkbtest.h	/^typedef signed int int32;               \/* == 32 bits *\/$/;"	t
int32	loader/shpopen.c	/^typedef unsigned int	      int32;$/;"	t	file:
int32	loader/shpopen.c	/^typedef unsigned long	      int32;$/;"	t	file:
int_vasprintf	liblwgeom/vsprintf.c	/^int_vasprintf (result, format, args)$/;"	f	file:
integer_from_wkb_state	liblwgeom/lwin_wkb.c	/^static uint32_t integer_from_wkb_state(wkb_parse_state *s)$/;"	f	file:
integer_to_wkb_buf	liblwgeom/lwout_wkb.c	/^static uint8_t* integer_to_wkb_buf(const int ival, uint8_t *buf, uint8_t variant)$/;"	f	file:
integervalue	liblwgeom/lwin_wkt_parse.c	/^	int integervalue;$/;"	m	union:YYSTYPE	file:
integervalue	liblwgeom/lwin_wkt_parse.h	/^	int integervalue;$/;"	m	union:YYSTYPE
interpolate_arc	liblwgeom/lwsegmentize.c	/^static double interpolate_arc(double angle, double a1, double a2, double a3, double zm1, double zm2, double zm3)$/;"	f	file:
interpolate_from_address	extras/tiger_geocoder/tiger_2011/geocode/interpolate_from_address.sql	/^CREATE OR REPLACE FUNCTION interpolate_from_address(given_address INTEGER, in_addr1 VARCHAR, in_addr2 VARCHAR, in_road GEOMETRY, $/;"	f
interpolate_point4d	liblwgeom/lwgeom_api.c	/^interpolate_point4d(POINT4D *A, POINT4D *B, POINT4D *I, double F)$/;"	f
intersection	postgis/lwgeom_backend_api.c	/^Datum intersection(PG_FUNCTION_ARGS)$/;"	f
intersection	postgis/lwgeom_backend_api.c	/^PG_FUNCTION_INFO_V1(intersection);$/;"	v
intersection_fn	postgis/lwgeom_backend_api.c	/^    Datum (*intersection_fn)  (PG_FUNCTION_ARGS);$/;"	m	struct:lwgeom_backend_definition	file:
intersects	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^    public boolean intersects(Rectangle2D r) {$/;"	m	class:JTSShape
intersects	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^    public boolean intersects(double x, double y, double w, double h) {$/;"	m	class:JTSShape
intersects	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^    public boolean intersects(Rectangle2D r) {$/;"	m	class:PGShapeGeometry
intersects	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^    public boolean intersects(double x, double y, double w, double h) {$/;"	m	class:PGShapeGeometry
intersects	postgis/lwgeom_backend_api.c	/^Datum intersects(PG_FUNCTION_ARGS)$/;"	f
intersects	postgis/lwgeom_backend_api.c	/^PG_FUNCTION_INFO_V1(intersects);$/;"	v
intersects3d	postgis/lwgeom_backend_api.c	/^Datum intersects3d(PG_FUNCTION_ARGS)$/;"	f
intersects3d	postgis/lwgeom_backend_api.c	/^PG_FUNCTION_INFO_V1(intersects3d);$/;"	v
intersects3d_dwithin	postgis/lwgeom_backend_api.c	/^Datum intersects3d_dwithin(PG_FUNCTION_ARGS)$/;"	f
intersects3d_dwithin	postgis/lwgeom_backend_api.c	/^PG_FUNCTION_INFO_V1(intersects3d_dwithin);$/;"	v
intersects3d_fn	postgis/lwgeom_backend_api.c	/^    Datum (*intersects3d_fn)  (PG_FUNCTION_ARGS);$/;"	m	struct:lwgeom_backend_definition	file:
intersects_fn	postgis/lwgeom_backend_api.c	/^    Datum (*intersects_fn)    (PG_FUNCTION_ARGS);$/;"	m	struct:lwgeom_backend_definition	file:
interval	postgis/lwgeom_rtree.h	/^	RTREE_INTERVAL *interval;$/;"	m	struct:rtree_node
interval_cmp_lower	postgis/gserialized_gist_2d.c	/^interval_cmp_lower(const void *i1, const void *i2)$/;"	f	file:
interval_cmp_upper	postgis/gserialized_gist_2d.c	/^interval_cmp_upper(const void *i1, const void *i2)$/;"	f	file:
inxoff	raster/scripts/python/window.py	/^inxoff = int(sys.argv[2])$/;"	v
inxsize	raster/scripts/python/window.py	/^inxsize = int(sys.argv[4])$/;"	v
inyoff	raster/scripts/python/window.py	/^inyoff = int(sys.argv[3])$/;"	v
inysize	raster/scripts/python/window.py	/^inysize = int(sys.argv[5])$/;"	v
iowa_data	liblwgeom/cunit/cu_geodetic_data.h	/^char *iowa_data = "POLYGON((-94.015492 40.573914,-94.016088 40.5739,-94.016968 40.57388,-94.018058 40.573856,-94.02663 40.57371,-94.034211 40.573585,-94.038853 40.573525,-94.043491 40.573466,-94.046656 40.573426,-94.060375 40.573209,-94.069402 40.573067,-94.07214 40.573026,-94.079332 40.573147,-94.080122 40.57316,-94.080249 40.573147,-94.080315 40.57314,-94.080401 40.573143,-94.080409 40.573145,-94.080481 40.57314,-94.081532 40.57306,-94.081625 40.573059,-94.081866 40.573056,-94.083211 40.573037,-94.083542 40.573033,-94.083802 40.57303,-94.089019 40.572976,-94.089168 40.572956,-94.090421 40.572936,-94.090962 40.572941,-94.091084 40.572951,-94.091111 40.572956,-94.091169 40.572968,-94.095698 40.572951,-94.095709 40.572951,-94.10931 40.572902,-94.110406 40.572901,-94.118548 40.572903,-94.119918 40.572904,-94.119946 40.572904,-94.120008 40.572903,-94.120097 40.572901,-94.125259 40.57279,-94.128286 40.572768,-94.128303 40.572768,-94.130131 40.572754,-94.137859 40.572698,-94.146244 40.572638,-94.155089 40.572574,-94.163567 40.572508,-94.167509 40.572477,-94.167902 40.572474,-94.175618 40.572406,-94.199871 40.572168,-94.20377 40.572137,-94.213262 40.572061,-94.23224 40.571901,-94.234023 40.57189,-94.237434 40.571873,-94.24315 40.571845,-94.248117 40.571818,-94.248902 40.571814,-94.249265 40.571807,-94.24927 40.571807,-94.250172 40.571789,-94.250708 40.571779,-94.250798 40.571777,-94.25509 40.571693,-94.259163 40.571671,-94.263235 40.571642,-94.266531 40.57162,-94.269827 40.571597,-94.269901 40.571597,-94.270456 40.571531,-94.282994 40.571469,-94.283158 40.571476,-94.287344 40.571656,-94.28745 40.571661,-94.287529 40.571661,-94.287641 40.57166,-94.28809 40.571659,-94.288522 40.571657,-94.288608 40.571657,-94.288944 40.571634,-94.289214 40.571653,-94.289321 40.57166,-94.290732 40.571676,-94.29417 40.571656,-94.294288 40.571632,-94.294671 40.571428,-94.294813 40.571428,-94.294921 40.571428,-94.295172 40.571428,-94.304389 40.571421,-94.304554 40.571422,-94.305829 40.57156,-94.306066 40.571575,-94.306071 40.571575,-94.306569 40.571602,-94.307489 40.571594,-94.30811 40.571617,-94.30853 40.571648,-94.310423 40.57163,-94.311602 40.571647,-94.312491 40.571632,-94.313067 40.571601,-94.313952 40.571595,-94.314865 40.571608,-94.316439 40.571592,-94.31707 40.571589,-94.317923 40.571586,-94.319277 40.57157,-94.319883 40.571575,-94.320623 40.571565,-94.322007 40.571541,-94.324711 40.571542,-94.324765 40.571542,-94.325494 40.57154,-94.326363 40.571559,-94.327626 40.571552,-94.32847 40.571555,-94.334317 40.571548,-94.334461 40.571549,-94.335677 40.571554,-94.33598 40.571555,-94.33652 40.571538,-94.336763 40.57153,-94.33691 40.571528,-94.34602 40.571412,-94.346197 40.571411,-94.353988 40.571377,-94.355216 40.571373,-94.35739 40.571371,-94.358082 40.571371,-94.358236 40.571371,-94.358391 40.571371,-94.360623 40.571356,-94.372032 40.571252,-94.374625 40.57123,-94.374621 40.571316,-94.374651 40.571353,-94.374695 40.571379,-94.374793 40.571391,-94.375009 40.571396,-94.375868 40.571383,-94.376699 40.57138,-94.376782 40.571385,-94.377053 40.571368,-94.384005 40.571279,-94.38401 40.571279,-94.387546 40.571399,-94.389203 40.571453,-94.389206 40.571453,-94.38944 40.571425,-94.389871 40.571402,-94.391457 40.571364,-94.391917 40.571336,-94.392408 40.571326,-94.393203 40.571343,-94.393905 40.571339,-94.394146 40.571341,-94.395375 40.571353,-94.395829 40.571346,-94.396745 40.571331,-94.398112 40.571309,-94.39924 40.571309,-94.399755 40.571316,-94.400829 40.571312,-94.40179 40.57128,-94.402263 40.571295,-94.402582 40.571323,-94.402817 40.571334,-94.403314 40.571339,-94.403388 40.571318,-94.403432 40.571295,-94.403481 40.571312,-94.403549 40.57132,-94.403993 40.571309,-94.405541 40.571294,-94.405543 40.571294,-94.405815 40.571291,-94.40613 40.571286,-94.407294 40.571292,-94.40799 40.57129,-94.409646 40.571286,-94.409938 40.571282,-94.409963 40.571282,-94.412328 40.57125,-94.413798 40.571255,-94.414069 40.571269,-94.417054 40.571279,-94.418513 40.571298,-94.419029 40.571289,-94.419398 40.571273,-94.420664 40.571275,-94.420962 40.571285,-94.421524 40.571304,-94.421591 40.571305,-94.422342 40.571317,-94.423261 40.571306,-94.424308 40.571276,-94.425231 40.571264,-94.426098 40.571265,-94.426758 40.571288,-94.427368 40.571278,-94.427956 40.571256,-94.428728 40.571253,-94.429668 40.571236,-94.432654 40.571029,-94.435031 40.571018,-94.445015 40.570976,-94.456895 40.570934,-94.456954 40.570933,-94.457166 40.570931,-94.457441 40.570928,-94.457486 40.570928,-94.457866 40.570924,-94.458068 40.570938,-94.46047 40.571101,-94.460662 40.571098,-94.462174 40.571078,-94.466122 40.571064,-94.469396 40.571053,-94.469781 40.571049,-94.470406 40.571042,-94.470445 40.571045,-94.470541 40.571022,-94.471213 40.570825,-94.472549 40.570814,-94.473295 40.570808,-94.473459 40.570807,-94.474848 40.570795,-94.482828 40.570729,-94.482994 40.570728,-94.489109 40.570706,-94.489122 40.570857,-94.489131 40.57097,-94.489216 40.570989,-94.48932 40.57099,-94.489634 40.570982,-94.489869 40.570984,-94.490152 40.570969,-94.490223 40.570975,-94.490435 40.571005,-94.490746 40.570994,-94.490997 40.570986,-94.492014 40.570978,-94.49528 40.570977,-94.496069 40.570966,-94.49783 40.570957,-94.501191 40.570969,-94.50196 40.570958,-94.504516 40.570953,-94.504942 40.570948,-94.505838 40.570951,-94.509322 40.570931,-94.50943 40.57093,-94.510163 40.570926,-94.513507 40.570906,-94.51472 40.570895,-94.517605 40.570881,-94.517883 40.570876,-94.518352 40.570888,-94.519045 40.570893,-94.523188 40.570879,-94.524904 40.570868,-94.525489 40.570861,-94.525527 40.570866,-94.525761 40.570866,-94.525862 40.570866,-94.528929 40.57086,-94.52905 40.57086,-94.529166 40.57086,-94.530773 40.570856,-94.532379 40.570852,-94.532834 40.570851,-94.533289 40.57085,-94.533463 40.57085,-94.533925 40.570843,-94.536494 40.570818,-94.536699 40.570819,-94.537194 40.570822,-94.537486 40.57083,-94.537848 40.570836,-94.538315 40.570844,-94.538405 40.570844,-94.539193 40.570845,-94.53965 40.570846,-94.540087 40.570859,-94.540272 40.570854,-94.540766 40.570839,-94.541014 40.570828,-94.541648 40.570825,-94.541828 40.570819,-94.542154 40.570809,-94.544189 40.570816,-94.546014 40.570815,-94.547405 40.57082,-94.552281 40.57084,-94.566853 40.570881,-94.577568 40.570917,-94.577727 40.570918,-94.579041 40.570922,-94.585766 40.57094,-94.586048 40.570941,-94.594196 40.57096,-94.594293 40.571007,-94.594391 40.57103,-94.594951 40.571038,-94.596435 40.57106,-94.603368 40.571089,-94.604207 40.571096,-94.604633 40.571116,-94.604701 40.571113,-94.60497 40.571106,-94.606379 40.571133,-94.606615 40.571138,-94.607238 40.571145,-94.607836 40.57116,-94.608262 40.571152,-94.608944 40.571155,-94.609674 40.571153,-94.610334 40.571156,-94.610694 40.571164,-94.611289 40.571191,-94.61294 40.571187,-94.61377 40.571198,-94.61451 40.5712,-94.615343 40.571213,-94.616156 40.57122,-94.617231 40.571217,-94.61852 40.571224,-94.622442 40.571278,-94.622849 40.57128,-94.622963 40.571289,-94.62771 40.571317,-94.63203 40.571367,-94.63216 40.57137,-94.632954 40.571376,-94.635112 40.571385,-94.637042 40.571415,-94.638869 40.571432,-94.639967 40.571434,-94.640897 40.571429,-94.641472 40.571426,-94.642601 40.571437,-94.642899 40.57144,-94.643706 40.571468,-94.644536 40.571478,-94.645303 40.571476,-94.647342 40.571495,-94.649735 40.571535,-94.65097 40.571545,-94.651276 40.571547,-94.654257 40.571567,-94.654275 40.571568,-94.655334 40.571577,-94.657773 40.571616,-94.659154 40.57163,-94.659156 40.571631,-94.659526 40.571635,-94.65996 40.571629,-94.660619 40.57165,-94.661678 40.571652,-94.662644 40.571643,-94.66463 40.571658,-94.665838 40.571672,-94.667316 40.571711,-94.668784 40.571714,-94.668787 40.571715,-94.669073 40.571716,-94.670127 40.57174,-94.671078 40.571762,-94.671711 40.571769,-94.674848 40.571803,-94.677096 40.571849,-94.679507 40.57188,-94.682589 40.57193,-94.682595 40.57193,-94.682758 40.571933,-94.683078 40.571933,-94.683601 40.571934,-94.686827 40.571965,-94.687087 40.571968,-94.687292 40.57197,-94.688308 40.571995,-94.688331 40.571996,-94.688353 40.571996,-94.688398 40.571998,-94.688759 40.572006,-94.690936 40.572015,-94.692535 40.572046,-94.697806 40.572105,-94.699914 40.572132,-94.701815 40.572166,-94.703362 40.572189,-94.705568 40.57221,-94.706043 40.572218,-94.708066 40.57225,-94.708314 40.572254,-94.70927 40.57227,-94.710707 40.57227,-94.712971 40.572315,-94.71416 40.572318,-94.714512 40.572325,-94.71632 40.572363,-94.716323 40.572363,-94.716535 40.572343,-94.717318 40.572365,-94.717624 40.572366,-94.717629 40.572367,-94.717859 40.572367,-94.717863 40.572368,-94.719147 40.572375,-94.719977 40.572392,-94.720912 40.572399,-94.72212 40.572419,-94.723173 40.572431,-94.72432 40.572456,-94.725211 40.572476,-94.72751 40.572495,-94.728787 40.572514,-94.729918 40.572526,-94.731693 40.572537,-94.733256 40.572564,-94.733616 40.57257,-94.734522 40.572594,-94.736227 40.572618,-94.736881 40.572612,-94.736882 40.572612,-94.738155 40.572635,-94.739925 40.57265,-94.740662 40.572668,-94.742055 40.572685,-94.742677 40.572683,-94.743299 40.572691,-94.74424 40.57271,-94.744818 40.572717,-94.745519 40.572726,-94.747527 40.572752,-94.74844 40.572771,-94.748931 40.572772,-94.749568 40.572782,-94.750042 40.572795,-94.750371 40.572807,-94.751263 40.57284,-94.751841 40.572844,-94.75273 40.572858,-94.752732 40.572859,-94.753375 40.57287,-94.753746 40.572881,-94.754503 40.572861,-94.754644 40.572822,-94.754694 40.572792,-94.754738 40.572793,-94.756165 40.572827,-94.757436 40.572848,-94.75825 40.572862,-94.759063 40.57287,-94.760815 40.572897,-94.762927 40.57294,-94.765223 40.572992,-94.767007 40.57304,-94.767014 40.573039,-94.767014 40.573038,-94.767014 40.573037,-94.767014 40.573036,-94.767014 40.573035,-94.767014 40.573034,-94.767014 40.573033,-94.767014 40.573032,-94.767216 40.573032,-94.768193 40.573071,-94.768627 40.573075,-94.768628 40.573076,-94.769149 40.573082,-94.769487 40.57308,-94.769822 40.573078,-94.769826 40.573077,-94.769966 40.573077,-94.771211 40.573096,-94.77229 40.573096,-94.773895 40.573105,-94.774935 40.573115,-94.78122 40.573174,-94.78203 40.573181,-94.78446 40.573204,-94.78527 40.573212,-94.787684 40.573234,-94.794928 40.573302,-94.797343 40.573325,-94.797358 40.573325,-94.797403 40.573325,-94.797419 40.573326,-94.797423 40.573326,-94.797438 40.573326,-94.797443 40.573326,-94.797461 40.573326,-94.797515 40.573326,-94.797533 40.573327,-94.797631 40.573328,-94.797928 40.573333,-94.798027 40.573335,-94.79957 40.573358,-94.799887 40.573363,-94.801475 40.573387,-94.801484 40.573387,-94.806417 40.573488,-94.811008 40.573581,-94.811085 40.573583,-94.81112 40.573607,-94.811251 40.573629,-94.812439 40.573636,-94.814992 40.573679,-94.815863 40.573683,-94.815993 40.573684,-94.816003 40.573684,-94.818721 40.573724,-94.819756 40.573729,-94.81995 40.573756,-94.821813 40.573768,-94.822887 40.573785,-94.823381 40.573792,-94.823382 40.573792,-94.823453 40.573793,-94.824283 40.573804,-94.826773 40.573837,-94.827604 40.573849,-94.829913 40.57388,-94.836841 40.573973,-94.839151 40.574004,-94.839222 40.574001,-94.839437 40.573995,-94.83951 40.573994,-94.841214 40.574023,-94.846329 40.57411,-94.848034 40.57414,-94.848045 40.57414,-94.848078 40.57414,-94.84809 40.574141,-94.848099 40.574141,-94.848126 40.574141,-94.848135 40.574142,-94.853273 40.57422,-94.858557 40.5743,-94.858567 40.574301,-94.875248 40.574519,-94.878201 40.574563,-94.88578 40.574674,-94.886885 40.574689,-94.887084 40.574694,-94.888998 40.574702,-94.894773 40.574728,-94.896595 40.574737,-94.896699 40.574737,-94.896773 40.574737,-94.896774 40.57474,-94.896819 40.574761,-94.89971 40.5748,-94.90055 40.574815,-94.900572 40.574816,-94.900885 40.574822,-94.901101 40.574859,-94.901107 40.574863,-94.914781 40.575066,-94.914896 40.575068,-94.921114 40.57516,-94.921225 40.575161,-94.933987 40.575352,-94.936634 40.575392,-94.936911 40.575396,-94.948199 40.575567,-94.953271 40.575641,-94.95392 40.575651,-94.955058 40.575668,-94.955134 40.575669,-94.966279 40.575836,-94.966491 40.575839,-94.971223 40.575688,-94.972045 40.575687,-94.991333 40.575692,-94.99166 40.575692,-95.000265 40.575936,-95.000555 40.575939,-95.010169 40.576039,-95.021797 40.57618,-95.021836 40.576181,-95.022769 40.576189,-95.023063 40.576192,-95.030676 40.576263,-95.036265 40.576354,-95.036362 40.576355,-95.038232 40.576341,-95.039152 40.576348,-95.039613 40.576355,-95.040027 40.576362,-95.040328 40.576368,-95.048786 40.57652,-95.048797 40.57652,-95.059337 40.57671,-95.062875 40.576772,-95.062997 40.576774,-95.06872 40.576878,-95.073022 40.576916,-95.073404 40.576919,-95.076369 40.576872,-95.077591 40.576907,-95.077992 40.576889,-95.078377 40.576897,-95.079666 40.576912,-95.084503 40.577032,-95.084525 40.577033,-95.087726 40.577118,-95.097266 40.577161,-95.107098 40.577269,-95.107207 40.577252,-95.107421 40.57724,-95.107973 40.577251,-95.108608 40.577244,-95.109632 40.577244,-95.109949 40.577244,-95.11012 40.577254,-95.110243 40.577281,-95.11041 40.577337,-95.110468 40.577363,-95.112109 40.577318,-95.112135 40.577313,-95.112224 40.577308,-95.112549 40.577306,-95.11398 40.577339,-95.115481 40.577341,-95.116419 40.577361,-95.1207 40.577427,-95.120705 40.577425,-95.120705 40.577424,-95.120825 40.577426,-95.120898 40.577415,-95.120986 40.577417,-95.122047 40.577423,-95.124405 40.577436,-95.125295 40.577443,-95.131592 40.577503,-95.1316 40.577503,-95.135489 40.577561,-95.144886 40.577704,-95.145089 40.577707,-95.145115 40.577707,-95.15441 40.577861,-95.157467 40.577908,-95.157712 40.577912,-95.164008 40.578016,-95.166331 40.578057,-95.167655 40.578066,-95.17062 40.578128,-95.174887 40.578174,-95.176189 40.578175,-95.179176 40.578236,-95.180197 40.57823,-95.183136 40.578265,-95.183459 40.578269,-95.184035 40.578267,-95.18501 40.578265,-95.187398 40.578305,-95.188453 40.57831,-95.188976 40.57833,-95.189023 40.578331,-95.189116 40.578334,-95.189843 40.578336,-95.190467 40.578345,-95.191484 40.578342,-95.193247 40.578374,-95.194188 40.578381,-95.194695 40.578391,-95.195415 40.578404,-95.198186 40.578434,-95.19882 40.578446,-95.199422 40.578451,-95.199854 40.578442,-95.200396 40.57844,-95.200955 40.578467,-95.201447 40.57847,-95.202265 40.578488,-95.203948 40.578517,-95.203983 40.578518,-95.205344 40.578533,-95.206587 40.578556,-95.207125 40.578558,-95.208043 40.578561,-95.209379 40.578594,-95.210074 40.578593,-95.211407 40.578617,-95.21154 40.578619,-95.21159 40.578624,-95.211754 40.57864,-95.211831 40.57866,-95.213318 40.578689,-95.216016 40.578734,-95.217363 40.578758,-95.218692 40.578779,-95.220047 40.578802,-95.221335 40.578824,-95.222796 40.579079,-95.224561 40.57888,-95.224733 40.578883,-95.225308 40.578894,-95.230674 40.578964,-95.232787 40.57899,-95.23279 40.57899,-95.233055 40.578995,-95.249191 40.579206,-95.250258 40.579189,-95.259008 40.579149,-95.25901 40.57915,-95.276644 40.579316,-95.278096 40.579322,-95.278116 40.579322,-95.297183 40.57951,-95.302554 40.57956,-95.308312 40.579614,-95.316264 40.57969,-95.316288 40.57969,-95.335483 40.580018,-95.335485 40.580018,-95.336474 40.580019,-95.337369 40.58003,-95.338082 40.580046,-95.339985 40.58006,-95.340264 40.580064,-95.340607 40.580067,-95.340844 40.580071,-95.341006 40.580073,-95.341176 40.580075,-95.342572 40.580092,-95.343737 40.580106,-95.346438 40.580138,-95.347476 40.580153,-95.349234 40.580171,-95.350431 40.580186,-95.353323 40.580234,-95.354508 40.580245,-95.357022 40.580254,-95.360839 40.580175,-95.364446 40.580263,-95.364651 40.580268,-95.368262 40.580356,-95.370491 40.580414,-95.373923 40.580503,-95.373951 40.580503,-95.375311 40.580626,-95.389268 40.580759,-95.392922 40.580793,-95.392926 40.580793,-95.411932 40.580979,-95.411985 40.58098,-95.412011 40.58098,-95.413824 40.580998,-95.415406 40.581014,-95.429239 40.581148,-95.431075 40.581167,-95.431095 40.581167,-95.44058 40.581259,-95.449753 40.581349,-95.45019 40.581353,-95.450206 40.581353,-95.460657 40.581455,-95.460812 40.581457,-95.469213 40.581548,-95.469255 40.581548,-95.469634 40.581548,-95.470332 40.581558,-95.471381 40.581579,-95.472055 40.581586,-95.473033 40.581583,-95.474974 40.581625,-95.475882 40.581639,-95.476481 40.58167,-95.47695 40.581667,-95.477582 40.581679,-95.480115 40.581665,-95.481354 40.581682,-95.483869 40.581697,-95.483914 40.581698,-95.484021 40.581702,-95.484298 40.581708,-95.485319 40.581724,-95.486088 40.581731,-95.486539 40.581722,-95.488144 40.581733,-95.488196 40.581733,-95.488514 40.581735,-95.490631 40.581777,-95.491616 40.581776,-95.492009 40.581781,-95.493391 40.581803,-95.494819 40.581833,-95.496945 40.581857,-95.498021 40.581881,-95.499155 40.581899,-95.499169 40.5819,-95.500967 40.581927,-95.501912 40.581928,-95.503033 40.581947,-95.503859 40.581952,-95.507142 40.581993,-95.507477 40.582004,-95.509146 40.582035,-95.509764 40.582051,-95.511071 40.582073,-95.512743 40.582083,-95.514244 40.5821,-95.51487 40.582101,-95.517384 40.582146,-95.519145 40.582165,-95.520514 40.582189,-95.521393 40.582198,-95.522252 40.582215,-95.523654 40.582224,-95.523906 40.582233,-95.525098 40.582243,-95.525201 40.582244,-95.525703 40.582232,-95.525873 40.582235,-95.525873 40.582234,-95.526498 40.582234,-95.52653 40.582235,-95.527504 40.582257,-95.528431 40.58227,-95.528858 40.582271,-95.530009 40.582301,-95.530346 40.582305,-95.531491 40.582338,-95.532626 40.582356,-95.533024 40.582358,-95.533115 40.582358,-95.533437 40.582356,-95.534335 40.582371,-95.53528 40.582377,-95.536445 40.582398,-95.538891 40.582449,-95.539424 40.582455,-95.540881 40.582441,-95.541593 40.58245,-95.542548 40.582453,-95.543436 40.582468,-95.54449 40.582469,-95.544932 40.582487,-95.545306 40.5825,-95.545306 40.582517,-95.545737 40.582529,-95.546468 40.58253,-95.547057 40.582543,-95.548209 40.582546,-95.548258 40.582547,-95.548306 40.582547,-95.548915 40.582565,-95.549636 40.582562,-95.550197 40.582573,-95.550914 40.582582,-95.55293 40.582635,-95.554391 40.582649,-95.554826 40.582656,-95.554875 40.582657,-95.556719 40.582677,-95.557384 40.582695,-95.558314 40.582699,-95.559952 40.582724,-95.562275 40.582759,-95.563865 40.582789,-95.565264 40.582814,-95.565364 40.582816,-95.566571 40.582841,-95.570387 40.582889,-95.571762 40.582919,-95.57208 40.582919,-95.572717 40.582939,-95.573954 40.582946,-95.573967 40.582946,-95.58496 40.583113,-95.585048 40.583114,-95.591526 40.583203,-95.593194 40.583228,-95.593195 40.583228,-95.59325 40.583228,-95.593317 40.583231,-95.601397 40.58335,-95.601441 40.583349,-95.602355 40.583365,-95.606904 40.583433,-95.607046 40.583435,-95.610881 40.583491,-95.610928 40.583492,-95.625269 40.583792,-95.630619 40.583901,-95.631692 40.583954,-95.631732 40.583955,-95.632106 40.583974,-95.632177 40.583977,-95.637722 40.584123,-95.637817 40.584127,-95.638063 40.584133,-95.638208 40.584137,-95.638459 40.584142,-95.641662 40.584229,-95.641695 40.584229,-95.647973 40.584398,-95.648534 40.584396,-95.652198 40.584389,-95.652303 40.584389,-95.652775 40.584388,-95.656646 40.584381,-95.657169 40.58438,-95.658705 40.584378,-95.658764 40.584378,-95.658797 40.584377,-95.673127 40.58435,-95.673257 40.58435,-95.685421 40.584327,-95.68631 40.584328,-95.687253 40.58437,-95.687374 40.584375,-95.687432 40.584378,-95.68748 40.584312,-95.687573 40.584295,-95.687694 40.584273,-95.69046 40.584354,-95.694246 40.584425,-95.701831 40.584537,-95.703792 40.584556,-95.705476 40.584575,-95.709173 40.584627,-95.712851 40.584646,-95.716233 40.584686,-95.716291 40.584686,-95.717391 40.584715,-95.720576 40.584753,-95.725782 40.584835,-95.731026 40.584893,-95.734317 40.584919,-95.735283 40.584911,-95.735429 40.584905,-95.735514 40.5849,-95.735606 40.584896,-95.735828 40.584912,-95.737565 40.584927,-95.742848 40.584997,-95.743969 40.585022,-95.744892 40.585029,-95.744937 40.585029,-95.745452 40.585013,-95.745543 40.585001,-95.745769 40.584972,-95.746 40.584959,-95.746165 40.584963,-95.746384 40.585012,-95.746647 40.585039,-95.747247 40.58505,-95.748016 40.585057,-95.749457 40.585014,-95.749776 40.585014,-95.750079 40.585066,-95.750481 40.585073,-95.751872 40.585076,-95.752307 40.585092,-95.752826 40.585079,-95.754648 40.585088,-95.763855 40.585207,-95.764549 40.585208,-95.765645 40.585208,-95.76463 40.585883,-95.758895 40.588973,-95.75524 40.591469,-95.753148 40.59284,-95.751195 40.595253,-95.750274 40.596317,-95.750053 40.597052,-95.749344 40.598803,-95.748858 40.599965,-95.748572 40.601265,-95.748626 40.603355,-95.749028 40.605333,-95.749685 40.606842,-95.750274 40.6076,-95.751271 40.609057,-95.752793 40.6102,-95.753545 40.610764,-95.75534 40.612056,-95.755583 40.612231,-95.758045 40.613759,-95.761683 40.615353,-95.764412 40.61709,-95.766823 40.61878,-95.768926 40.621264,-95.769759 40.622884,-95.770083 40.624425,-95.769671 40.625001,-95.769783 40.625463,-95.769904 40.626044,-95.770082 40.627504,-95.770189 40.628512,-95.770236 40.629117,-95.770293 40.629811,-95.770339 40.631486,-95.770442 40.635285,-95.770559 40.63635,-95.770834 40.63756,-95.771069 40.638456,-95.771296 40.639151,-95.771325 40.639393,-95.77147 40.639788,-95.772832 40.642496,-95.774143 40.644472,-95.774268 40.64466,-95.774598 40.645157,-95.776251 40.647463,-95.778276 40.64961,-95.77975 40.651131,-95.780239 40.651635,-95.781909 40.653272,-95.783822 40.654974,-95.785957 40.656734,-95.786568 40.657253,-95.787474 40.657919,-95.789485 40.659388,-95.793061 40.661227,-95.795489 40.662384,-95.797729 40.663209,-95.798669 40.663536,-95.801472 40.664283,-95.804307 40.664886,-95.805313 40.66502,-95.805641 40.665061,-95.808724 40.66527,-95.811151 40.665418,-95.812762 40.665507,-95.81415 40.66557,-95.815707 40.665779,-95.816491 40.665879,-95.817338 40.66598,-95.818354 40.666106,-95.820047 40.666468,-95.821412 40.666838,-95.822226 40.667083,-95.822913 40.66724,-95.824393 40.667784,-95.824891 40.667969,-95.826199 40.668498,-95.828372 40.669453,-95.82997 40.670224,-95.83074 40.670571,-95.830834 40.670613,-95.830845 40.670618,-95.832397 40.671309,-95.834419 40.672444,-95.836056 40.67343,-95.836365 40.673614,-95.837137 40.674067,-95.837399 40.674205,-95.837788 40.674413,-95.839395 40.675272,-95.840966 40.676295,-95.842316 40.677171,-95.842801 40.677496,-95.843841 40.678589,-95.844481 40.679382,-95.844827 40.679867,-95.844986 40.68012,-95.845172 40.680417,-95.845443 40.681046,-95.845765 40.681806,-95.846034 40.682605,-95.846239 40.68346,-95.846465 40.684324,-95.846712 40.685171,-95.846858 40.686206,-95.846883 40.686381,-95.846949 40.687252,-95.847015 40.688244,-95.84705 40.689211,-95.847116 40.690179,-95.847241 40.691086,-95.847266 40.69126,-95.847428 40.692163,-95.847581 40.692954,-95.847756 40.693583,-95.847931 40.694197,-95.84868 40.695973,-95.849166 40.696893,-95.849828 40.698147,-95.850582 40.699383,-95.851336 40.700523,-95.852615 40.702262,-95.854456 40.704164,-95.856362 40.705769,-95.857901 40.70713,-95.857984 40.707182,-95.859378 40.708055,-95.859875 40.708275,-95.860773 40.708738,-95.861798 40.709242,-95.863034 40.709715,-95.865954 40.710832,-95.868196 40.71164,-95.86954 40.712137,-95.870481 40.71248,-95.871836 40.712832,-95.872937 40.713127,-95.87528 40.71412,-95.877015 40.714287,-95.880993 40.716428,-95.883178 40.717579,-95.885349 40.721093,-95.886573 40.724637,-95.886592 40.724691,-95.887154 40.726317,-95.888907 40.731855,-95.888842 40.733226,-95.888697 40.736292,-95.88669 40.742101,-95.883643 40.747831,-95.881921 40.750001,-95.881529 40.750611,-95.879027 40.753081,-95.876896 40.754913,-95.875281 40.756011,-95.874492 40.756714,-95.873335 40.757616,-95.872281 40.758349,-95.871173 40.758896,-95.869982 40.759645,-95.868618 40.760177,-95.867224 40.76079,-95.865765 40.761299,-95.864349 40.76188,-95.862868 40.76234,-95.861695 40.762871,-95.860202 40.763291,-95.858426 40.76389,-95.856668 40.764319,-95.855051 40.764893,-95.852776 40.765631,-95.851572 40.766179,-95.850144 40.766663,-95.849005 40.767331,-95.847801 40.767943,-95.84662 40.768619,-95.844964 40.769693,-95.84372 40.770467,-95.842824 40.771093,-95.84154 40.772158,-95.840173 40.773392,-95.838879 40.774545,-95.837923 40.775511,-95.837289 40.776111,-95.836903 40.776477,-95.836162 40.777709,-95.835232 40.779151,-95.835178 40.779313,-95.834881 40.78021,-95.834462 40.781811,-95.834156 40.783016,-95.83412 40.783783,-95.834104 40.78413,-95.834065 40.785592,-95.834214 40.786665,-95.834523 40.787778,-95.835207 40.789309,-95.835815 40.79063,-95.83683 40.792288,-95.838578 40.794976,-95.84007 40.797471,-95.841527 40.799821,-95.842317 40.801247,-95.842738 40.801866,-95.843225 40.802816,-95.843745 40.803783,-95.843961 40.805178,-95.844408 40.806274,-95.844704 40.807209,-95.844994 40.808508,-95.845097 40.809108,-95.84522 40.809831,-95.845342 40.811324,-95.845251 40.812818,-95.844968 40.814217,-95.844922 40.814646,-95.844852 40.815307,-95.844397 40.816553,-95.843921 40.817686,-95.842948 40.819217,-95.842081 40.820569,-95.841581 40.821533,-95.841157 40.82204,-95.840437 40.822903,-95.839894 40.823786,-95.839269 40.825057,-95.838601 40.826175,-95.838351 40.826963,-95.8382 40.827437,-95.837665 40.829216,-95.837303 40.831164,-95.837266 40.832755,-95.837146 40.833474,-95.837122 40.834257,-95.837186 40.835347,-95.83757 40.836524,-95.838224 40.838079,-95.838688 40.839804,-95.839201 40.841094,-95.840014 40.842599,-95.840506 40.843953,-95.841309 40.845604,-95.841893 40.846603,-95.842681 40.847713,-95.843523 40.848976,-95.84434 40.849949,-95.845074 40.851035,-95.846076 40.85237,-95.847084 40.854174,-95.8475 40.855407,-95.847972 40.856809,-95.848112 40.857295,-95.84849 40.858607,-95.848565 40.859665,-95.848571 40.860016,-95.848587 40.860888,-95.84859 40.861061,-95.848242 40.862315,-95.847785 40.864328,-95.847397 40.864871,-95.846938 40.865745,-95.845974 40.867034,-95.844913 40.868202,-95.844073 40.869248,-95.842521 40.870266,-95.840788 40.871236,-95.840483 40.871377,-95.838735 40.872191,-95.836996 40.872644,-95.835054 40.872985,-95.833484 40.87326,-95.832103 40.873412,-95.830735 40.873702,-95.827787 40.874444,-95.824989 40.875,-95.824588 40.875158,-95.82328 40.875694,-95.821193 40.876682,-95.81959 40.877439,-95.817897 40.878448,-95.815933 40.879846,-95.81402 40.881808,-95.812083 40.884239,-95.810709 40.886681,-95.809994 40.889149,-95.809474 40.891228,-95.809379 40.893279,-95.809775 40.895447,-95.810886 40.897907,-95.812757 40.900642,-95.813465 40.901693,-95.814302 40.902936,-95.81618 40.904791,-95.818709 40.906818,-95.822081 40.909079,-95.822951 40.909639,-95.824959 40.910933,-95.827905 40.913069,-95.830699 40.915004,-95.833041 40.917243,-95.834906 40.919574,-95.836438 40.921642,-95.837774 40.924712,-95.838417 40.927408,-95.838446 40.927531,-95.83913 40.930341,-95.839743 40.93278,-95.840139 40.93548,-95.840207 40.937021,-95.840253 40.937909,-95.840277 40.938715,-95.840275 40.939942,-95.839979 40.941309,-95.839364 40.944059,-95.838877 40.946105,-95.838446 40.948385,-95.837951 40.950618,-95.836558 40.953205,-95.835095 40.955471,-95.833499 40.957988,-95.833015 40.958724,-95.832004 40.960269,-95.830801 40.962105,-95.829829 40.963857,-95.829507 40.965652,-95.829354 40.96738,-95.828991 40.969248,-95.828665 40.970793,-95.828329 40.972378,-95.828545 40.973901,-95.829074 40.975688,-95.829792 40.977344,-95.830297 40.978332,-95.831118 40.979777,-95.832055 40.98114,-95.833537 40.98266,-95.835434 40.984184,-95.837681 40.985599,-95.838908 40.986484,-95.840144 40.987243,-95.841186 40.987883,-95.842754 40.988812,-95.844351 40.989524,-95.84732 40.990214,-95.849232 40.990688,-95.851413 40.991362,-95.852547 40.991738,-95.854453 40.992479,-95.856071 40.993206,-95.857305 40.99384,-95.858668 40.994521,-95.860116 40.995242,-95.860445 40.995425,-95.8612 40.995845,-95.86248 40.996607,-95.863492 40.99734,-95.864391 40.998284,-95.865096 40.999076,-95.86601 40.999999,-95.86615 41.000015,-95.866423 41.000383,-95.866695 41.000734,-95.866786 41.000899,-95.8669 41.001026,-95.866951 41.001085,-95.867303 41.001645,-95.867305 41.001649,-95.867318 41.001673,-95.867327 41.001689,-95.867662 41.002304,-95.868037 41.003214,-95.86838 41.003753,-95.8687 41.004395,-95.868915 41.005133,-95.869216 41.005988,-95.869495 41.00709,-95.869567 41.007745,-95.869623 41.008432,-95.869526 41.009162,-95.869502 41.009429,-95.869301 41.009868,-95.868924 41.010954,-95.868643 41.011969,-95.868387 41.012727,-95.868002 41.013566,-95.867521 41.01442,-95.866872 41.01537,-95.866287 41.016349,-95.865886 41.017418,-95.865349 41.018164,-95.8647 41.018922,-95.864011 41.019753,-95.863265 41.020607,-95.862329 41.021808,-95.861616 41.022714,-95.860959 41.02362,-95.860786 41.023999,-95.860744 41.024058,-95.860294 41.024691,-95.859918 41.025403,-95.859622 41.026423,-95.859398 41.027787,-95.85919 41.028931,-95.859142 41.030323,-95.859102 41.031599,-95.85919 41.032591,-95.859278 41.033379,-95.859494 41.034467,-95.859654 41.035695,-95.86007 41.037011,-95.860386 41.037699,-95.860462 41.037887,-95.860862 41.038547,-95.861782 41.039427,-95.862686 41.040151,-95.863686 41.040971,-95.865158 41.042215,-95.866454 41.043103,-95.867246 41.043671,-95.86823 41.044271,-95.86923 41.044847,-95.869807 41.045199,-95.869863 41.045251,-95.870903 41.045823,-95.871783 41.046383,-95.872375 41.046955,-95.872903 41.047471,-95.873399 41.048031,-95.874247 41.048879,-95.874711 41.049323,-95.874998 41.049972,-95.875072 41.05014,-95.875147 41.050308,-95.875187 41.050399,-95.875287 41.050599,-95.875498 41.050743,-95.877258 41.051946,-95.877569 41.052135,-95.879462 41.053277,-95.879487 41.053299,-95.879488 41.053313,-95.879497 41.053448,-95.879724 41.053549,-95.879927 41.053639,-95.88082 41.054036,-95.881586 41.054376,-95.881588 41.054378,-95.881173 41.055938,-95.881387 41.056471,-95.881809 41.057521,-95.881939 41.057909,-95.882101 41.058359,-95.882342 41.059419,-95.882394 41.060412,-95.882476 41.06136,-95.882225 41.063539,-95.881768 41.064561,-95.881478 41.065359,-95.881011 41.066303,-95.880234 41.067457,-95.879367 41.068532,-95.877441 41.070357,-95.874998 41.072266,-95.873967 41.073071,-95.873877 41.073136,-95.873762 41.073218,-95.873761 41.073219,-95.87376 41.07322,-95.873757 41.073222,-95.873754 41.073224,-95.873743 41.073232,-95.873733 41.073239,-95.87257 41.07407,-95.871594 41.07495,-95.871464 41.075022,-95.870323 41.075809,-95.866912 41.078855,-95.865835 41.080079,-95.864782 41.081611,-95.864551 41.08216,-95.863843 41.083456,-95.86332 41.084915,-95.862937 41.086178,-95.862427 41.089687,-95.862517 41.090583,-95.862514 41.091123,-95.862587 41.091876,-95.862783 41.09258,-95.863044 41.093195,-95.863097 41.09366,-95.863113 41.093693,-95.863114 41.093695,-95.863115 41.093697,-95.863121 41.093711,-95.863131 41.093733,-95.863304 41.0941,-95.863279 41.094495,-95.863632 41.095392,-95.864396 41.097124,-95.864833 41.098487,-95.865076 41.09899,-95.865273 41.099913,-95.865726 41.1012,-95.86574 41.101263,-95.865862 41.101833,-95.865921 41.102108,-95.866172 41.10328,-95.866173 41.103287,-95.866213 41.103471,-95.866661 41.104975,-95.867072 41.108379,-95.866976 41.108714,-95.867102 41.109116,-95.867099 41.109511,-95.866818 41.110935,-95.8668 41.111074,-95.866397 41.114376,-95.866304 41.115116,-95.866415 41.117416,-95.866425 41.117812,-95.866641 41.119278,-95.867086 41.120603,-95.867228 41.121493,-95.867566 41.122086,-95.868382 41.123886,-95.868546 41.124103,-95.868689 41.124667,-95.868961 41.125166,-95.869092 41.125548,-95.869493 41.126034,-95.869624 41.126234,-95.870021 41.126839,-95.870087 41.127084,-95.870122 41.127135,-95.870716 41.128004,-95.871168 41.128795,-95.872053 41.129731,-95.872412 41.129966,-95.872679 41.130219,-95.872913 41.130571,-95.873121 41.130766,-95.87347 41.131397,-95.873902 41.131731,-95.874549 41.132486,-95.874757 41.132809,-95.874949 41.133025,-95.875633 41.133793,-95.875864 41.134021,-95.876048 41.134132,-95.876386 41.134649,-95.877042 41.135399,-95.877375 41.13586,-95.877476 41.136,-95.877699 41.136176,-95.87802 41.136658,-95.878302 41.136947,-95.878673 41.137685,-95.879316 41.138584,-95.879318 41.138586,-95.87933 41.138603,-95.879686 41.138938,-95.880044 41.139563,-95.880171 41.139947,-95.880609 41.140625,-95.880865 41.140883,-95.881222 41.141665,-95.881313 41.142127,-95.882032 41.143534,-95.882136 41.143994,-95.882138 41.144005,-95.882304 41.144738,-95.882591 41.145722,-95.882755 41.146021,-95.882875 41.146446,-95.882883 41.146657,-95.882776 41.146898,-95.882803 41.147221,-95.882961 41.147821,-95.883129 41.148196,-95.883172 41.148806,-95.883095 41.149342,-95.883346 41.151056,-95.883271 41.151484,-95.88309 41.151855,-95.883203 41.152652,-95.883144 41.153259,-95.882991 41.153674,-95.882944 41.154572,-95.882718 41.154937,-95.882643 41.155061,-95.882626 41.155193,-95.882625 41.155201,-95.88254 41.155881,-95.882392 41.156185,-95.882152 41.156495,-95.881958 41.156935,-95.881477 41.158361,-95.881062 41.158841,-95.880521 41.159874,-95.879959 41.160947,-95.879654 41.161267,-95.879171 41.161968,-95.877368 41.163914,-95.875798 41.165268,-95.875397 41.16552,-95.874398 41.166216,-95.873692 41.166642,-95.87271 41.167003,-95.872066 41.16731,-95.87111 41.167635,-95.870574 41.167784,-95.869178 41.168013,-95.867309 41.168153,-95.865929 41.168129,-95.864852 41.167939,-95.864399 41.167859,-95.863261 41.167495,-95.862345 41.167297,-95.86091 41.166911,-95.860316 41.166685,-95.859258 41.166535,-95.857637 41.166113,-95.856813 41.165935,-95.856296 41.165877,-95.853451 41.165518,-95.850882 41.165674,-95.849855 41.165833,-95.849363 41.165967,-95.848892 41.166018,-95.847938 41.166239,-95.846957 41.166604,-95.845451 41.167423,-95.844378 41.168241,-95.843883 41.168768,-95.843443 41.169096,-95.842731 41.170031,-95.842623 41.170345,-95.842039 41.171367,-95.842015 41.171654,-95.841789 41.172314,-95.841655 41.17317,-95.841611 41.173925,-95.841673 41.17486,-95.841616 41.175469,-95.84171 41.175858,-95.841816 41.175977,-95.841929 41.176256,-95.841956 41.176321,-95.842051 41.176772,-95.842188 41.177421,-95.84241 41.177778,-95.842746 41.178127,-95.843351 41.179677,-95.843657 41.180041,-95.844175 41.180411,-95.844535 41.180791,-95.844842 41.181155,-95.845121 41.181612,-95.845433 41.18193,-95.846295 41.182546,-95.847241 41.183351,-95.848798 41.184296,-95.849358 41.184545,-95.849861 41.18477,-95.850374 41.18509,-95.850757 41.185234,-95.851169 41.185321,-95.851268 41.185365,-95.852314 41.185833,-95.853094 41.185988,-95.854142 41.186411,-95.854836 41.186529,-95.855286 41.186697,-95.856125 41.186949,-95.85688 41.186995,-95.858032 41.18733,-95.858728 41.187375,-95.859224 41.187501,-95.86044 41.187666,-95.86097 41.187826,-95.861659 41.187965,-95.862084 41.188007,-95.862558 41.187993,-95.863797 41.188245,-95.864554 41.188205,-95.865782 41.188296,-95.866304 41.188277,-95.867624 41.188416,-95.868373 41.188324,-95.869538 41.188342,-95.870101 41.188272,-95.871288 41.188324,-95.872031 41.188209,-95.873608 41.188223,-95.873877 41.188153,-95.874537 41.188089,-95.875726 41.188048,-95.876582 41.188067,-95.877133 41.187961,-95.878133 41.187941,-95.878636 41.187836,-95.879586 41.187787,-95.880089 41.187681,-95.880658 41.187663,-95.885516 41.186773,-95.886131 41.186582,-95.886739 41.186496,-95.88784 41.186239,-95.888923 41.186128,-95.889651 41.185962,-95.891187 41.185721,-95.894134 41.185336,-95.898155 41.184775,-95.898962 41.184794,-95.8998 41.184655,-95.90051 41.184609,-95.90089 41.184626,-95.901348 41.184718,-95.901818 41.18466,-95.904169 41.184554,-95.904735 41.184499,-95.905591 41.184528,-95.90758 41.184368,-95.908668 41.184454,-95.910236 41.184403,-95.910787 41.184481,-95.911365 41.184642,-95.911984 41.18467,-95.912506 41.184638,-95.913168 41.184691,-95.913668 41.184809,-95.9142 41.18504,-95.914668 41.185111,-95.915428 41.185145,-95.916119 41.185279,-95.916699 41.185525,-95.9172 41.185907,-95.91891 41.18654,-95.919561 41.186901,-95.919916 41.187239,-95.920178 41.18766,-95.920783 41.188071,-95.92127 41.188401,-95.921454 41.188525,-95.922182 41.189092,-95.922358 41.189305,-95.922531 41.189678,-95.923205 41.190282,-95.923394 41.190532,-95.923548 41.19085,-95.924152 41.191474,-95.924454 41.192078,-95.925086 41.192796,-95.925235 41.19306,-95.925322 41.193376,-95.925901 41.194119,-95.926029 41.194683,-95.926334 41.195211,-95.926694 41.195633,-95.926771 41.196148,-95.92725 41.197086,-95.927296 41.197408,-95.927263 41.197802,-95.927663 41.199025,-95.927738 41.199453,-95.927908 41.199749,-95.927975 41.200069,-95.927932 41.200426,-95.927748 41.200833,-95.927733 41.200866,-95.927739 41.201082,-95.927752 41.201126,-95.927935 41.20175,-95.927985 41.202056,-95.928011 41.202211,-95.928071 41.202569,-95.928047 41.202892,-95.927934 41.20324,-95.928019 41.204895,-95.927988 41.205398,-95.927846 41.205888,-95.927528 41.206327,-95.927523 41.206369,-95.927459 41.206905,-95.927454 41.206947,-95.927453 41.206956,-95.927445 41.207023,-95.927262 41.208554,-95.927183 41.208971,-95.926912 41.20943,-95.926865 41.209585,-95.926838 41.209675,-95.92683 41.209998,-95.926765 41.210218,-95.926736 41.210314,-95.926572 41.210613,-95.92634 41.210885,-95.92628 41.211082,-95.926275 41.211098,-95.926117 41.211619,-95.925932 41.211911,-95.925678 41.212171,-95.92563 41.212284,-95.925461 41.212686,-95.925084 41.213269,-95.924683 41.213555,-95.924618 41.213601,-95.924538 41.213658,-95.924524 41.213668,-95.924522 41.21367,-95.924463 41.213712,-95.924189 41.214119,-95.924179 41.214134,-95.923686 41.214866,-95.923426 41.215369,-95.923045 41.215824,-95.922764 41.216069,-95.922488 41.216231,-95.922426 41.216267,-95.922319 41.216394,-95.922284 41.216436,-95.92228 41.216441,-95.922279 41.216442,-95.922278 41.216443,-95.922277 41.216445,-95.922273 41.21645,-95.922257 41.216469,-95.922225 41.216507,-95.922143 41.216605,-95.921865 41.216936,-95.92096 41.217676,-95.920512 41.218037,-95.920026 41.218428,-95.919342 41.218979,-95.919221 41.219076,-95.919037 41.219224,-95.919026 41.219233,-95.918502 41.219667,-95.91849 41.219677,-95.9173 41.220617,-95.917005 41.221027,-95.915814 41.222105,-95.915556 41.222506,-95.915523 41.222557,-95.914272 41.223858,-95.913843 41.22458,-95.913661 41.224988,-95.912977 41.225895,-95.912763 41.226294,-95.912711 41.226528,-95.912669 41.226719,-95.912374 41.227328,-95.911801 41.228316,-95.911734 41.228457,-95.911496 41.228962,-95.911363 41.22978,-95.91106 41.230461,-95.911053 41.230892,-95.910918 41.231531,-95.910912 41.231546,-95.910879 41.231631,-95.910676 41.23215,-95.910712 41.232685,-95.910666 41.233223,-95.910735 41.233615,-95.910724 41.233993,-95.910724 41.234002,-95.910716 41.234299,-95.910629 41.234579,-95.910712 41.235043,-95.910703 41.23623,-95.910955 41.237769,-95.910955 41.238032,-95.91113 41.23848,-95.911296 41.239442,-95.91164 41.239994,-95.91186 41.241023,-95.912225 41.241566,-95.912472 41.242295,-95.912932 41.242924,-95.913015 41.243098,-95.913109 41.243296,-95.913175 41.243542,-95.913265 41.24365,-95.91329 41.24368,-95.913305 41.243698,-95.913306 41.2437,-95.913308 41.243702,-95.913309 41.243703,-95.913338 41.243738,-95.913508 41.243942,-95.913961 41.244485,-95.914168 41.245,-95.914408 41.245352,-95.915113 41.246075,-95.915389 41.246647,-95.915408 41.246663,-95.915434 41.246685,-95.915793 41.246999,-95.91602 41.247274,-95.916211 41.247755,-95.91642 41.248012,-95.916469 41.248073,-95.916573 41.248201,-95.916732 41.248398,-95.916899 41.248831,-95.917399 41.249685,-95.917438 41.24976,-95.917443 41.249769,-95.917447 41.249778,-95.91745 41.249784,-95.917455 41.249792,-95.917459 41.249801,-95.91747 41.249821,-95.917472 41.249826,-95.917475 41.249832,-95.91748 41.249842,-95.917646 41.250164,-95.918352 41.251532,-95.918526 41.251805,-95.918534 41.251818,-95.918535 41.251819,-95.918587 41.2519,-95.919093 41.252698,-95.919532 41.253724,-95.919564 41.253876,-95.919567 41.253895,-95.919577 41.253943,-95.919582 41.253968,-95.919616 41.254123,-95.920225 41.255296,-95.920265 41.255374,-95.920445 41.255722,-95.920719 41.256712,-95.92134 41.258129,-95.921345 41.258139,-95.921364 41.258181,-95.921427 41.258456,-95.921429 41.258464,-95.92143 41.258469,-95.921432 41.258482,-95.921606 41.259279,-95.921627 41.259412,-95.921629 41.259426,-95.921631 41.25944,-95.921632 41.259444,-95.921633 41.259448,-95.921634 41.259455,-95.921645 41.259527,-95.92166 41.259626,-95.921669 41.259688,-95.92168 41.259763,-95.921692 41.259838,-95.921776 41.260387,-95.922104 41.261399,-95.922113 41.261722,-95.922042 41.262033,-95.922304 41.26302,-95.922308 41.263848,-95.922423 41.264635,-95.922395 41.26546,-95.921704 41.26687,-95.921643 41.267262,-95.921497 41.267604,-95.92056 41.26851,-95.920119 41.269085,-95.920034 41.269143,-95.919867 41.269255,-95.919701 41.269367,-95.918732 41.269824,-95.917927 41.270553,-95.917755 41.270709,-95.917646 41.270782,-95.91747 41.2709,-95.916662 41.271201,-95.916343 41.271468,-95.915741 41.271821,-95.915316 41.271985,-95.915181 41.272014,-95.915121 41.272027,-95.915097 41.272032,-95.914813 41.272092,-95.914671 41.272158,-95.914091 41.272428,-95.914909 41.272559,-95.91573 41.272691,-95.915832 41.272707,-95.915937 41.272725,-95.916045 41.272802,-95.916772 41.273322,-95.917872 41.274085,-95.917914 41.274115,-95.918041 41.274208,-95.918187 41.2743,-95.918585 41.274567,-95.91887 41.274758,-95.924811 41.278741,-95.924835 41.278759,-95.925884 41.27953,-95.925948 41.27957,-95.926036 41.279627,-95.927075 41.280306,-95.927076 41.280307,-95.927102 41.280324,-95.927332 41.280474,-95.927407 41.280523,-95.927453 41.280553,-95.927477 41.280569,-95.927496 41.280581,-95.927497 41.280582,-95.927503 41.280585,-95.927504 41.280586,-95.927526 41.2806,-95.927783 41.280768,-95.928646 41.281332,-95.929619 41.285077,-95.929602 41.290449,-95.929607 41.290629,-95.929651 41.292262,-95.929219 41.29359,-95.929066 41.29406,-95.928968 41.294361,-95.92896 41.294386,-95.928958 41.294392,-95.928957 41.294395,-95.928957 41.294397,-95.928952 41.294413,-95.928936 41.294462,-95.928925 41.294495,-95.92881 41.294849,-95.928341 41.296291,-95.928309 41.29639,-95.928295 41.296432,-95.928294 41.296435,-95.92828 41.296477,-95.928258 41.296545,-95.928128 41.296945,-95.928043 41.297206,-95.92797 41.297431,-95.927965 41.297446,-95.927959 41.297466,-95.927958 41.297469,-95.92795 41.297494,-95.927905 41.297632,-95.927642 41.29844,-95.926393 41.298887,-95.924691 41.299597,-95.92236 41.300392,-95.920247 41.301191,-95.913781 41.301377,-95.913576 41.301383,-95.912055 41.301258,-95.911712 41.301243,-95.911413 41.30123,-95.911305 41.301225,-95.911262 41.301223,-95.911251 41.301223,-95.911248 41.301223,-95.910806 41.301204,-95.910791 41.301203,-95.910788 41.301203,-95.909997 41.301168,-95.90972 41.301157,-95.909566 41.30115,-95.909545 41.301149,-95.909541 41.301149,-95.909539 41.301149,-95.909538 41.301148,-95.909535 41.301148,-95.909514 41.301147,-95.909491 41.301146,-95.909462 41.301145,-95.90944 41.301144,-95.909435 41.301144,-95.909431 41.301144,-95.909424 41.301144,-95.909422 41.301143,-95.90942 41.301143,-95.909418 41.301143,-95.909416 41.301143,-95.90935 41.30114,-95.909302 41.301138,-95.908971 41.301124,-95.908506 41.301103,-95.908387 41.3011,-95.908245 41.301096,-95.908198 41.301095,-95.908137 41.301094,-95.908111 41.301093,-95.908008 41.30109,-95.907557 41.301079,-95.907407 41.301075,-95.907307 41.301073,-95.907302 41.301073,-95.907256 41.301072,-95.907129 41.301069,-95.906079 41.301043,-95.905969 41.30104,-95.90596 41.30104,-95.905958 41.301039,-95.905956 41.301039,-95.905952 41.301039,-95.905939 41.301039,-95.905932 41.301039,-95.905899 41.301038,-95.904865 41.299787,-95.904683 41.299408,-95.904659 41.299359,-95.904518 41.299065,-95.904481 41.298987,-95.90441 41.298839,-95.904393 41.298804,-95.904356 41.298543,-95.904318 41.298275,-95.904241 41.297729,-95.904222 41.297591,-95.904229 41.297497,-95.904235 41.297424,-95.904242 41.297341,-95.904262 41.297102,-95.904262 41.297098,-95.904263 41.29709,-95.904379 41.295672,-95.904383 41.295613,-95.904384 41.295604,-95.90439 41.295536,-95.904392 41.295506,-95.904404 41.295358,-95.90441 41.29528,-95.904421 41.295149,-95.904427 41.295079,-95.904444 41.294873,-95.904444 41.29487,-95.904444 41.294868,-95.904445 41.294867,-95.904445 41.294865,-95.904445 41.294863,-95.904449 41.294821,-95.904457 41.29472,-95.904478 41.294457,-95.904505 41.294127,-95.904514 41.294016,-95.904514 41.294014,-95.904515 41.293999,-95.904518 41.293965,-95.904554 41.293519,-95.904576 41.293255,-95.904825 41.293255,-95.905146 41.293346,-95.905411 41.293176,-95.90539 41.293076,-95.904786 41.292959,-95.90471 41.292883,-95.904766 41.292586,-95.905216 41.291616,-95.905123 41.291341,-95.905322 41.291242,-95.905357 41.291224,-95.905482 41.29123,-95.905952 41.288572,-95.905961 41.288521,-95.905965 41.288502,-95.905965 41.2885,-95.905966 41.288497,-95.905966 41.288494,-95.905967 41.288488,-95.905969 41.288476,-95.905974 41.28845,-95.906144 41.287488,-95.906192 41.287369,-95.906666 41.286195,-95.906668 41.286139,-95.906682 41.286105,-95.906769 41.2859,-95.906814 41.285795,-95.906901 41.285589,-95.906906 41.285577,-95.906912 41.285563,-95.90693 41.285521,-95.907117 41.28508,-95.907118 41.285077,-95.907119 41.285074,-95.907122 41.285067,-95.907131 41.285046,-95.90716 41.284977,-95.907177 41.284938,-95.9074 41.284734,-95.907604 41.284528,-95.907705 41.28442,-95.907751 41.284366,-95.907793 41.284316,-95.908038 41.284069,-95.9082 41.283906,-95.909059 41.283051,-95.909558 41.282551,-95.910543 41.281564,-95.910791 41.281317,-95.910974 41.281134,-95.912581 41.279527,-95.912576 41.279524,-95.909856 41.277913,-95.90866 41.277198,-95.908151 41.276893,-95.90794 41.276767,-95.907121 41.276279,-95.906905 41.276141,-95.906891 41.276132,-95.906837 41.276097,-95.906707 41.276014,-95.906701 41.27601,-95.906695 41.276006,-95.906661 41.275984,-95.906651 41.275978,-95.906562 41.275921,-95.906551 41.275914,-95.906418 41.275829,-95.905998 41.275561,-95.905976 41.275547,-95.905907 41.275503,-95.905724 41.275386,-95.905178 41.275037,-95.90505 41.275,-95.90493 41.274967,-95.904921 41.274964,-95.904719 41.274907,-95.90388 41.274669,-95.9029 41.274391,-95.90284 41.274374,-95.902812 41.274378,-95.902793 41.274381,-95.902709 41.274393,-95.90266 41.2744,-95.902633 41.274404,-95.902618 41.274406,-95.902615 41.274406,-95.902599 41.274408,-95.902538 41.274417,-95.902468 41.274427,-95.902262 41.274456,-95.901985 41.274496,-95.901523 41.274683,-95.899846 41.2752,-95.898441 41.275537,-95.898031 41.27572,-95.897634 41.275977,-95.896875 41.276191,-95.896114 41.276322,-95.89611 41.276324,-95.896067 41.276342,-95.896058 41.276346,-95.896043 41.276352,-95.896026 41.276359,-95.896018 41.276362,-95.896 41.27637,-95.895432 41.276611,-95.893148 41.277348,-95.892506 41.277555,-95.892481 41.277563,-95.892478 41.277564,-95.892476 41.277564,-95.892474 41.277565,-95.892468 41.277567,-95.892446 41.277574,-95.892439 41.277576,-95.892438 41.277577,-95.892435 41.277578,-95.89238 41.277596,-95.891895 41.277752,-95.891849 41.277767,-95.891845 41.277768,-95.891841 41.277769,-95.891828 41.277773,-95.891823 41.277775,-95.89145 41.277895,-95.891214 41.277971,-95.891212 41.277972,-95.891209 41.277973,-95.891201 41.277976,-95.891191 41.277979,-95.891171 41.277985,-95.891155 41.27799,-95.891137 41.277996,-95.891115 41.278003,-95.89109 41.278011,-95.891078 41.278015,-95.891066 41.278019,-95.891 41.27804,-95.887615 41.279366,-95.884495 41.280689,-95.883316 41.281301,-95.881448 41.282171,-95.880659 41.28264,-95.880512 41.282727,-95.880496 41.282736,-95.879619 41.283238,-95.878881 41.283661,-95.878408 41.284016,-95.877481 41.284583,-95.877432 41.284623,-95.877191 41.284818,-95.877137 41.284861,-95.87681 41.285125,-95.876051 41.285739,-95.875593 41.286199,-95.875309 41.286615,-95.874716 41.287032,-95.874324 41.287394,-95.874139 41.287646,-95.874004 41.287953,-95.873723 41.288259,-95.873652 41.288337,-95.873378 41.28886,-95.873317 41.288951,-95.873231 41.289079,-95.872937 41.289517,-95.872917 41.289546,-95.872894 41.289581,-95.872892 41.289584,-95.872872 41.289614,-95.872817 41.289696,-95.872816 41.289698,-95.872814 41.2897,-95.872813 41.289701,-95.872807 41.28971,-95.872806 41.289712,-95.872667 41.289919,-95.872634 41.290019,-95.872631 41.290028,-95.872539 41.290302,-95.872128 41.291145,-95.871809 41.292378,-95.871589 41.292735,-95.871442 41.293408,-95.871483 41.294018,-95.871382 41.294295,-95.871368 41.295054,-95.871367 41.295083,-95.871192 41.296044,-95.871141 41.29669,-95.871304 41.297286,-95.871277 41.298077,-95.871391 41.298572,-95.871395 41.299482,-95.87161 41.300069,-95.871679 41.300967,-95.871819 41.301348,-95.871871 41.301813,-95.872269 41.30307,-95.87247 41.303435,-95.872705 41.30428,-95.873049 41.304871,-95.873404 41.305879,-95.873643 41.306287,-95.874071 41.307466,-95.874184 41.307924,-95.87435 41.308183,-95.874578 41.308414,-95.875109 41.309453,-95.875503 41.309857,-95.875725 41.310293,-95.876461 41.311087,-95.87676 41.311537,-95.877399 41.312071,-95.878292 41.313081,-95.878634 41.313331,-95.879163 41.313571,-95.879868 41.314381,-95.88022 41.314624,-95.880649 41.314825,-95.881868 41.315687,-95.882257 41.316179,-95.882916 41.316647,-95.883313 41.316847,-95.883793 41.317006,-95.884576 41.317417,-95.885554 41.318097,-95.88635 41.318422,-95.886941 41.318567,-95.887214 41.318604,-95.887316 41.318618,-95.887802 41.318833,-95.887808 41.318836,-95.888109 41.318969,-95.888236 41.319025,-95.888244 41.319029,-95.888414 41.319104,-95.888442 41.319116,-95.888481 41.319133,-95.888633 41.3192,-95.888926 41.31933,-95.889251 41.319474,-95.889914 41.319677,-95.890921 41.319902,-95.891506 41.320211,-95.892035 41.320374,-95.893449 41.320536,-95.893817 41.320612,-95.894405 41.320848,-95.894818 41.320937,-95.895244 41.320974,-95.896006 41.320945,-95.896839 41.321103,-95.897284 41.321234,-95.89879 41.321249,-95.899943 41.321481,-95.900878 41.321341,-95.901736 41.321474,-95.902577 41.321347,-95.904145 41.321238,-95.905181 41.321108,-95.907631 41.320656,-95.907696 41.320644,-95.907705 41.320643,-95.907918 41.320604,-95.908814 41.320498,-95.909734 41.320304,-95.910541 41.320286,-95.911457 41.320191,-95.912337 41.320079,-95.912371 41.320075,-95.912736 41.320075,-95.914116 41.320077,-95.914618 41.319962,-95.915091 41.319918,-95.915566 41.319948,-95.916495 41.320113,-95.917705 41.320136,-95.918174 41.320074,-95.918651 41.320079,-95.921378 41.320434,-95.922744 41.320861,-95.925185 41.321355,-95.925835 41.32158,-95.927206 41.322267,-95.927444 41.322386,-95.92779 41.322559,-95.929383 41.32313,-95.931008 41.324236,-95.931717 41.324602,-95.932144 41.324771,-95.932146 41.324772,-95.932859 41.325054,-95.934463 41.32596,-95.934972 41.326173,-95.93573 41.326473,-95.936383 41.326997,-95.93786 41.327853,-95.939024 41.328416,-95.939386 41.32851,-95.939578 41.328597,-95.939605 41.328609,-95.940121 41.328843,-95.940672 41.329337,-95.941778 41.330025,-95.941789 41.330032,-95.942955 41.330756,-95.94365 41.331243,-95.943654 41.331246,-95.944087 41.33155,-95.944843 41.33208,-95.946532 41.333139,-95.947626 41.334084,-95.947645 41.334101,-95.948258 41.334631,-95.950198 41.336221,-95.951208 41.337179,-95.951657 41.337502,-95.952646 41.338692,-95.953418 41.33947,-95.955294 41.341896,-95.955764 41.342633,-95.956038 41.343063,-95.956693 41.344721,-95.956994 41.345521,-95.957008 41.345558,-95.957052 41.345676,-95.957097 41.345794,-95.957137 41.345902,-95.957301 41.347369,-95.957249 41.348879,-95.95713 41.349593,-95.956635 41.350716,-95.956294 41.351062,-95.955671 41.351994,-95.954883 41.352808,-95.954271 41.353508,-95.954171 41.353592,-95.953953 41.353776,-95.953443 41.354042,-95.952317 41.354871,-95.950965 41.355479,-95.950402 41.355677,-95.949894 41.355777,-95.949341 41.355986,-95.948597 41.356115,-95.948268 41.35626,-95.946914 41.356609,-95.945699 41.356801,-95.945121 41.356865,-95.943337 41.357063,-95.943017 41.357135,-95.941359 41.35769,-95.940811 41.357813,-95.940586 41.357904,-95.940055 41.358119,-95.939718 41.358206,-95.939062 41.358375,-95.938294 41.35874,-95.936923 41.359247,-95.936555 41.359475,-95.936258 41.359756,-95.935468 41.360135,-95.935042 41.360521,-95.933642 41.361551,-95.933347 41.361834,-95.933128 41.362153,-95.932184 41.36296,-95.931711 41.363626,-95.931421 41.364035,-95.93135 41.364108,-95.931015 41.364454,-95.930965 41.364495,-95.930767 41.365008,-95.930296 41.365803,-95.930245 41.365889,-95.929681 41.367058,-95.928774 41.37008,-95.928824 41.370545,-95.928768 41.37166,-95.928951 41.372441,-95.929008 41.37316,-95.929173 41.373857,-95.929294 41.374365,-95.929457 41.375182,-95.929486 41.375326,-95.929714 41.375875,-95.929799 41.376228,-95.930281 41.376995,-95.930388 41.377345,-95.930575 41.377676,-95.932246 41.379815,-95.932485 41.379997,-95.93314 41.380875,-95.933878 41.381714,-95.934896 41.383136,-95.935286 41.383811,-95.935407 41.384021,-95.936073 41.385252,-95.936411 41.385876,-95.936644 41.386573,-95.936721 41.38729,-95.93699 41.387834,-95.937237 41.388334,-95.937418 41.389516,-95.937791 41.390752,-95.937666 41.391568,-95.937771 41.392255,-95.937806 41.393201,-95.937676 41.393834,-95.937726 41.394232,-95.937694 41.39477,-95.937272 41.396131,-95.937168 41.396735,-95.936871 41.397342,-95.936752 41.397873,-95.935793 41.399632,-95.935426 41.400135,-95.935062 41.400489,-95.934881 41.400836,-95.93421 41.401834,-95.933153 41.403155,-95.932439 41.404,-95.931587 41.405638,-95.930891 41.407205,-95.930214 41.409021,-95.930141 41.409219,-95.929932 41.410323,-95.929677 41.411071,-95.92961 41.412723,-95.929525 41.41344,-95.929596 41.414157,-95.929549 41.41473,-95.929472 41.415042,-95.929478 41.415329,-95.929875 41.416772,-95.93 41.417557,-95.930473 41.418894,-95.930479 41.418912,-95.930625 41.41924,-95.931224 41.420583,-95.93154 41.421066,-95.931731 41.421549,-95.931788 41.421869,-95.932254 41.423072,-95.932255 41.423073,-95.932519 41.423459,-95.932479 41.424212,-95.932767 41.425159,-95.932994 41.426186,-95.932972 41.42658,-95.933099 41.427219,-95.933135 41.428188,-95.933097 41.428941,-95.932885 41.429603,-95.932882 41.430107,-95.932778 41.430815,-95.932647 41.430946,-95.932525 41.431181,-95.932447 41.431608,-95.932311 41.432071,-95.931942 41.432571,-95.931724 41.433085,-95.931228 41.433613,-95.930921 41.434178,-95.930423 41.434747,-95.930101 41.43496,-95.929514 41.435659,-95.929108 41.435962,-95.928638 41.436501,-95.927326 41.437447,-95.926926 41.43785,-95.925961 41.438439,-95.925571 41.438802,-95.925268 41.438957,-95.924596 41.439519,-95.923285 41.440503,-95.922546 41.44134,-95.922106 41.441665,-95.921971 41.441837,-95.92174 41.44213,-95.921402 41.442838,-95.920857 41.443428,-95.920846 41.443449,-95.920618 41.443937,-95.920279 41.444978,-95.919905 41.445869,-95.91974 41.447373,-95.919537 41.448186,-95.919606 41.448975,-95.919566 41.450015,-95.919801 41.450747,-95.919779 41.451286,-95.919859 41.451494,-95.919989 41.452604,-95.920215 41.452795,-95.920498 41.45324,-95.920678 41.453627,-95.92096 41.454673,-95.921192 41.455138,-95.921655 41.455602,-95.922246 41.456358,-95.922786 41.457306,-95.923867 41.458236,-95.92451 41.458914,-95.924818 41.459127,-95.925384 41.459398,-95.925924 41.459901,-95.926464 41.46025,-95.927081 41.460811,-95.927442 41.461044,-95.927827 41.461257,-95.928419 41.461683,-95.929216 41.461993,-95.930425 41.462748,-95.933537 41.464277,-95.935054 41.464839,-95.935414 41.464936,-95.935903 41.465168,-95.93634 41.465304,-95.937137 41.465381,-95.937626 41.465536,-95.938706 41.465827,-95.939478 41.465982,-95.940481 41.466078,-95.941767 41.466349,-95.94349 41.466388,-95.944544 41.466485,-95.945007 41.466485,-95.946319 41.466272,-95.947142 41.46602,-95.947626 41.465946,-95.948016 41.465827,-95.949589 41.465538,-95.950717 41.46511,-95.952491 41.46451,-95.953829 41.464123,-95.95604 41.4636,-95.957764 41.463367,-95.95791 41.463331,-95.958372 41.463218,-95.95941 41.463154,-95.961363 41.46316,-95.962702 41.463077,-95.965042 41.463212,-95.966688 41.463425,-95.967511 41.463638,-95.968334 41.46389,-95.968745 41.464142,-95.969697 41.464491,-95.970906 41.465071,-95.97124 41.465323,-95.971574 41.465497,-95.972901 41.466082,-95.974223 41.467027,-95.975869 41.467899,-95.976435 41.468286,-95.97785 41.468809,-95.978776 41.469293,-95.979804 41.469719,-95.980499 41.469854,-95.98181 41.4703,-95.984279 41.470939,-95.986465 41.471326,-95.987327 41.471392,-95.987931 41.471481,-95.988497 41.471578,-95.990606 41.471675,-95.991086 41.471789,-95.991661 41.471849,-95.992561 41.47181,-95.993692 41.471675,-95.994207 41.471733,-95.99575 41.471578,-95.996316 41.471597,-95.997482 41.471505,-95.998052 41.47146,-95.998665 41.471528,-95.999668 41.471524,-96.00029 41.471605,-96.000468 41.471629,-96.001612 41.471695,-96.002053 41.471769,-96.004047 41.472146,-96.004936 41.472413,-96.006609 41.473038,-96.007264 41.473435,-96.007354 41.47349,-96.007683 41.473611,-96.00804 41.473742,-96.008519 41.474039,-96.009016 41.47452,-96.009457 41.474795,-96.010588 41.475721,-96.01125 41.476186,-96.011513 41.476443,-96.01176 41.476791,-96.012073 41.477075,-96.013585 41.478469,-96.014116 41.479151,-96.015 41.480048,-96.015386 41.480704,-96.016608 41.481918,-96.017836 41.483584,-96.018563 41.484991,-96.018767 41.485619,-96.019343 41.486926,-96.019532 41.488325,-96.0195 41.490451,-96.019543 41.491592,-96.019054 41.491684,-96.018591 41.491772,-96.017918 41.491976,-96.01738 41.492139,-96.01282 41.494904,-96.000649 41.50254,-96.000319 41.502857,-95.997022 41.506046,-95.996194 41.50696,-95.99328 41.512314,-95.992777 41.514596,-95.993651 41.520178,-95.994308 41.523743,-95.994751 41.524954,-95.995904 41.528152,-95.997233 41.53172,-95.998871 41.536599,-95.999537 41.538283,-95.999966 41.53948,-96.001392 41.540586,-96.003181 41.541825,-96.005112 41.54325,-96.013876 41.545315,-96.01915 41.54514,-96.022811 41.543721,-96.02349 41.543438,-96.024096 41.542833,-96.026657 41.540366,-96.027103 41.538662,-96.027747 41.534663,-96.028381 41.532125,-96.029053 41.529996,-96.02931 41.527981,-96.029915 41.526372,-96.030554 41.524564,-96.031127 41.523004,-96.031705 41.522181,-96.034441 41.521051,-96.033854 41.519935,-96.033675 41.517119,-96.034397 41.514446,-96.03429 41.513036,-96.034353 41.512761,-96.03465 41.512215,-96.034877 41.511704,-96.035076 41.511375,-96.035326 41.510962,-96.035575 41.510549,-96.035881 41.510137,-96.036603 41.509047,-96.037882 41.507899,-96.039046 41.507463,-96.039807 41.507061,-96.040613 41.506893,-96.042895 41.506927,-96.044686 41.506893,-96.046745 41.507061,-96.048311 41.507262,-96.05037 41.507732,-96.052765 41.508436,-96.055048 41.509508,-96.057331 41.511051,-96.060867 41.514101,-96.061717 41.514688,-96.06306 41.515694,-96.063796 41.51623,-96.064267 41.516727,-96.064444 41.516924,-96.064555 41.516934,-96.066842 41.517746,-96.067491 41.518292,-96.068633 41.519113,-96.069067 41.519579,-96.069386 41.519973,-96.069639 41.520284,-96.069893 41.520581,-96.069973 41.520674,-96.070543 41.521246,-96.070636 41.52134,-96.070994 41.521624,-96.071141 41.521741,-96.071384 41.52195,-96.071487 41.522031,-96.071637 41.522149,-96.072478 41.522957,-96.072651 41.523088,-96.073019 41.523299,-96.073389 41.523529,-96.073665 41.52368,-96.074156 41.523947,-96.07457 41.524157,-96.075152 41.52442,-96.075666 41.524633,-96.076761 41.525051,-96.077283 41.525233,-96.077898 41.525432,-96.078343 41.525563,-96.078802 41.52565,-96.079359 41.525781,-96.079922 41.525902,-96.080198 41.525955,-96.081431 41.525966,-96.082253 41.525973,-96.082654 41.525974,-96.084031 41.526875,-96.088305 41.530244,-96.090118 41.531702,-96.090837 41.532644,-96.091908 41.534049,-96.09343 41.537268,-96.094437 41.539463,-96.095109 41.541089,-96.095472 41.542308,-96.095758 41.543269,-96.096586 41.545397,-96.096596 41.545475,-96.096617 41.545626,-96.096359 41.549663,-96.096314 41.550948,-96.096313 41.550979,-96.096313 41.550987,-96.096313 41.550989,-96.095985 41.55164,-96.09587 41.551868,-96.095042 41.554768,-96.094706 41.555556,-96.093654 41.558288,-96.092222 41.560886,-96.091259 41.562244,-96.088842 41.56444,-96.088135 41.565047,-96.087428 41.565654,-96.084859 41.567859,-96.082486 41.571145,-96.081613 41.573274,-96.081188 41.574296,-96.081278 41.577045,-96.08139 41.5779,-96.082285 41.580683,-96.08327 41.582627,-96.083672 41.583197,-96.083963 41.583683,-96.084568 41.584337,-96.085396 41.585092,-96.087186 41.58655,-96.088898 41.58748,-96.089066 41.587572,-96.093453 41.589098,-96.093492 41.589108,-96.094591 41.589379,-96.094638 41.589391,-96.098869 41.590439,-96.101331 41.591411,-96.105296 41.593318,-96.105829 41.593574,-96.107709 41.59525,-96.109455 41.596775,-96.112386 41.600279,-96.11364 41.601955,-96.114647 41.603681,-96.11466 41.603703,-96.115811 41.605659,-96.116795 41.608073,-96.117584 41.610441,-96.118233 41.613291,-96.118277 41.614967,-96.118241 41.615278,-96.118079 41.6167,-96.118009 41.617314,-96.117718 41.618555,-96.116755 41.620901,-96.115995 41.622024,-96.114159 41.623969,-96.113107 41.62536,-96.111339 41.627137,-96.109437 41.62883,-96.108094 41.629568,-96.106796 41.630372,-96.105498 41.631495,-96.104692 41.632065,-96.103864 41.63287,-96.102163 41.634379,-96.100709 41.635451,-96.099411 41.637413,-96.097777 41.639625,-96.095937 41.644616,-96.095534 41.645856,-96.095131 41.647767,-96.095221 41.650114,-96.095254 41.650276,-96.096116 41.654472,-96.09621 41.654669,-96.097683 41.657758,-96.100055 41.661077,-96.103994 41.663223,-96.107186 41.665595,-96.107407 41.665586,-96.108918 41.666039,-96.111156 41.667547,-96.112454 41.668486,-96.114065 41.669961,-96.11505 41.670799,-96.116527 41.67204,-96.117959 41.673314,-96.118631 41.674185,-96.119347 41.674722,-96.120152 41.675694,-96.121048 41.677002,-96.121459 41.678104,-96.120865 41.678227,-96.121309 41.679552,-96.121832 41.681001,-96.122346 41.682489,-96.122578 41.683059,-96.122604 41.68304,-96.121853 41.689205,-96.121636 41.689579,-96.119861 41.692649,-96.118731 41.693781,-96.116161 41.695886,-96.115974 41.696016,-96.114222 41.697234,-96.113461 41.697569,-96.108559 41.699279,-96.107902 41.699274,-96.107695 41.699273,-96.107487 41.699271,-96.107155 41.699268,-96.106408 41.699263,-96.106405 41.699263,-96.105478 41.699345,-96.104887 41.699379,-96.104227 41.6994,-96.103814 41.699403,-96.10328 41.699398,-96.103239 41.699397,-96.102993 41.699391,-96.102981 41.699391,-96.102677 41.699379,-96.102425 41.699365,-96.102423 41.699365,-96.10242 41.699365,-96.102417 41.699365,-96.102416 41.699364,-96.102414 41.699364,-96.102302 41.699358,-96.102164 41.699348,-96.101685 41.699313,-96.101537 41.699298,-96.101052 41.699249,-96.10062 41.699194,-96.100565 41.699187,-96.100563 41.699187,-96.10056 41.699187,-96.100551 41.699186,-96.100546 41.699185,-96.100474 41.699176,-96.100421 41.699169,-96.10038 41.699163,-96.100276 41.699147,-96.100238 41.699141,-96.100236 41.69914,-96.100229 41.699139,-96.100221 41.699138,-96.100195 41.699134,-96.099669 41.699051,-96.099663 41.69905,-96.0996 41.69904,-96.099518 41.699025,-96.0995 41.699022,-96.099396 41.699002,-96.098866 41.698898,-96.098559 41.698831,-96.098172 41.69878,-96.098165 41.698779,-96.098164 41.698778,-96.098162 41.698778,-96.098155 41.698777,-96.098141 41.698775,-96.098047 41.698761,-96.097887 41.698738,-96.097845 41.698732,-96.097595 41.698697,-96.097588 41.698696,-96.097567 41.698693,-96.097505 41.698683,-96.097431 41.698671,-96.097042 41.698609,-96.097025 41.698606,-96.097008 41.698603,-96.096387 41.698495,-96.096374 41.698493,-96.096367 41.698492,-96.096357 41.69849,-96.095984 41.698425,-96.095591 41.698344,-96.095541 41.698333,-96.095539 41.698333,-96.095538 41.698332,-96.095451 41.698313,-96.09515 41.698252,-96.094857 41.698189,-96.094707 41.698156,-96.094705 41.698156,-96.0947 41.698155,-96.094697 41.698154,-96.094688 41.698152,-96.093691 41.697934,-96.093333 41.697845,-96.093013 41.697781,-96.092888 41.697761,-96.092758 41.697737,-96.092731 41.697732,-96.092729 41.697731,-96.092723 41.69773,-96.092721 41.69773,-96.092628 41.697712,-96.092534 41.697697,-96.09251 41.697693,-96.092504 41.697692,-96.092502 41.697692,-96.092495 41.697691,-96.092445 41.697683,-96.092116 41.697633,-96.091997 41.697617,-96.091995 41.697617,-96.091994 41.697616,-96.091992 41.697616,-96.091711 41.697578,-96.0916 41.697564,-96.091569 41.69756,-96.091553 41.697558,-96.091551 41.697558,-96.09149 41.697551,-96.091183 41.697516,-96.091024 41.697503,-96.090991 41.6975,-96.090529 41.697456,-96.090072 41.697425,-96.089913 41.697415,-96.089908 41.697415,-96.089906 41.697414,-96.089904 41.697414,-96.089901 41.697414,-96.089851 41.697412,-96.089819 41.697411,-96.089817 41.697411,-96.089813 41.697411,-96.089781 41.69741,-96.089547 41.697401,-96.089271 41.69739,-96.088831 41.697382,-96.088773 41.697382,-96.088684 41.697382,-96.088682 41.697382,-96.088681 41.697383,-96.088678 41.697383,-96.088672 41.697383,-96.088661 41.697383,-96.088643 41.697383,-96.088619 41.697383,-96.088592 41.697383,-96.088545 41.697383,-96.088529 41.697383,-96.088513 41.697383,-96.088328 41.697383,-96.088247 41.697385,-96.087496 41.697409,-96.087491 41.697409,-96.087483 41.697409,-96.087139 41.69742,-96.086596 41.697467,-96.086576 41.697469,-96.086556 41.697471,-96.086317 41.697492,-96.086307 41.697493,-96.086301 41.697493,-96.086269 41.697496,-96.086123 41.697512,-96.086118 41.697513,-96.085643 41.697565,-96.085628 41.697567,-96.085625 41.697567,-96.085358 41.697596,-96.08486 41.697674,-96.084816 41.697681,-96.08464 41.697709,-96.084391 41.697755,-96.084083 41.697812,-96.084078 41.697813,-96.084076 41.697813,-96.083822 41.69786,-96.083719 41.697884,-96.083717 41.697885,-96.082618 41.698143,-96.082614 41.698144,-96.082612 41.698144,-96.082608 41.698145,-96.082353 41.698205,-96.081315 41.698513,-96.081049 41.698612,-96.081047 41.698613,-96.081046 41.698614,-96.081043 41.698615,-96.081037 41.698617,-96.079875 41.69905,-96.079764 41.699095,-96.079553 41.699185,-96.079257 41.699312,-96.079053 41.699398,-96.078707 41.699544,-96.078302 41.699727,-96.078207 41.699774,-96.077712 41.700022,-96.077331 41.700232,-96.07695 41.700457,-96.076598 41.70068,-96.076248 41.700918,-96.075909 41.701165,-96.075582 41.701421,-96.075267 41.701686,-96.074964 41.701958,-96.074675 41.702238,-96.074398 41.702526,-96.074135 41.70282,-96.073886 41.703122,-96.073651 41.703429,-96.073431 41.703743,-96.073225 41.704062,-96.073128 41.704472,-96.073075 41.704731,-96.072986 41.705251,-96.072922 41.705773,-96.072883 41.706296,-96.072876 41.706517,-96.072867 41.70682,-96.072877 41.707344,-96.0729 41.707736,-96.072936 41.708129,-96.073006 41.70865,-96.073034 41.708817,-96.07305 41.70891,-96.0731 41.709169,-96.073219 41.709686,-96.073287 41.709943,-96.073361 41.710199,-96.073441 41.710454,-96.073527 41.710708,-96.073717 41.711212,-96.07393 41.711711,-96.074046 41.711959,-96.074293 41.712449,-96.074568 41.712938,-96.074707 41.713171,-96.075011 41.713643,-96.075171 41.713876,-96.075508 41.714335,-96.075865 41.714785,-96.075922 41.714853,-96.076052 41.715007,-96.07644 41.715443,-96.076642 41.715657,-96.077061 41.716077,-96.077498 41.716485,-96.077955 41.716882,-96.07819 41.717076,-96.078674 41.717455,-96.078922 41.717639,-96.079432 41.717998,-96.079693 41.718173,-96.079958 41.718344,-96.080226 41.718511,-96.080776 41.718836,-96.081313 41.719171,-96.081849 41.719495,-96.081919 41.719536,-96.081989 41.719577,-96.082135 41.719662,-96.082408 41.719821,-96.082767 41.720023,-96.082967 41.720135,-96.083533 41.720441,-96.084219 41.720798,-96.084564 41.720969,-96.084584 41.720979,-96.084594 41.720984,-96.0846 41.720987,-96.084603 41.720988,-96.084609 41.720991,-96.084685 41.721029,-96.085272 41.721313,-96.085543 41.721439,-96.085653 41.72149,-96.085865 41.721589,-96.08647 41.72186,-96.087287 41.722207,-96.087691 41.722373,-96.088303 41.722615,-96.088656 41.722748,-96.089023 41.722887,-96.089435 41.723036,-96.089524 41.723068,-96.08954 41.723074,-96.089551 41.723078,-96.089554 41.723079,-96.09018 41.723295,-96.090821 41.723508,-96.091481 41.723717,-96.091947 41.723857,-96.091967 41.723863,-96.091993 41.723871,-96.092779 41.724098,-96.093113 41.724186,-96.093205 41.724211,-96.093579 41.72431,-96.093836 41.72438,-96.09463 41.724565,-96.09468 41.724577,-96.09472 41.724586,-96.094814 41.724608,-96.094909 41.72463,-96.094986 41.724648,-96.095062 41.724666,-96.095215 41.724707,-96.095667 41.724826,-96.096118 41.72495,-96.096564 41.725083,-96.097007 41.725219,-96.097711 41.725451,-96.097972 41.725541,-96.099057 41.725935,-96.099441 41.726086,-96.099818 41.726248,-96.100187 41.726419,-96.100547 41.726601,-96.100899 41.72679,-96.101241 41.72699,-96.101576 41.727199,-96.101899 41.727415,-96.101992 41.727482,-96.102212 41.727641,-96.102515 41.727875,-96.102807 41.728116,-96.103087 41.728365,-96.103356 41.728621,-96.103402 41.728668,-96.103407 41.728673,-96.103459 41.728726,-96.103511 41.72878,-96.103512 41.728781,-96.103514 41.728783,-96.103516 41.728785,-96.103519 41.728788,-96.10352 41.72879,-96.103522 41.728792,-96.103562 41.728837,-96.103614 41.728894,-96.103856 41.729154,-96.104088 41.72943,-96.104306 41.729711,-96.104511 41.729998,-96.104702 41.730291,-96.10488 41.730588,-96.105044 41.73089,-96.105194 41.731195,-96.105329 41.731505,-96.10545 41.731818,-96.105556 41.732133,-96.10563 41.73239,-96.105648 41.732452,-96.105688 41.732612,-96.105807 41.732963,-96.105893 41.73324,-96.105973 41.733518,-96.106113 41.734078,-96.106173 41.734358,-96.106273 41.734922,-96.106314 41.735205,-96.106375 41.735772,-96.106409 41.73634,-96.106417 41.736909,-96.106399 41.737478,-96.10638 41.737762,-96.106354 41.738046,-96.106282 41.738612,-96.106237 41.738894,-96.106185 41.739176,-96.106126 41.739457,-96.106061 41.739737,-96.105911 41.740295,-96.105826 41.740572,-96.105735 41.740848,-96.105651 41.741118,-96.105471 41.741546,-96.105469 41.741634,-96.105451 41.74168,-96.105334 41.74195,-96.105211 41.742219,-96.105082 41.742487,-96.104946 41.742753,-96.104805 41.743016,-96.104657 41.743278,-96.104494 41.743552,-96.104338 41.743805,-96.104006 41.744306,-96.103828 41.744557,-96.103443 41.745069,-96.10326 41.745297,-96.102853 41.745777,-96.102396 41.746236,-96.102173 41.746466,-96.101773 41.746857,-96.101583 41.747035,-96.101462 41.747149,-96.101242 41.747346,-96.101057 41.747506,-96.101042 41.747519,-96.101025 41.747534,-96.101012 41.747545,-96.100981 41.747572,-96.100685 41.747752,-96.100313 41.747964,-96.100268 41.747989,-96.099992 41.748134,-96.099973 41.748144,-96.099969 41.748146,-96.099968 41.748147,-96.099811 41.748229,-96.099612 41.748328,-96.099609 41.74833,-96.099606 41.748331,-96.099399 41.748434,-96.099386 41.74844,-96.099384 41.748441,-96.099381 41.748442,-96.098911 41.748657,-96.098866 41.748677,-96.098536 41.748815,-96.098007 41.749023,-96.097702 41.749105,-96.097603 41.749129,-96.097597 41.749131,-96.097595 41.749132,-96.097593 41.749132,-96.097437 41.749181,-96.097331 41.74922,-96.096187 41.749605,-96.096166 41.74961,-96.096158 41.749612,-96.096125 41.74962,-96.095962 41.749659,-96.095954 41.749661,-96.095378 41.749799,-96.09513 41.749853,-96.09507 41.749866,-96.094937 41.749888,-96.09486 41.7499,-96.094782 41.749913,-96.094653 41.749934,-96.094477 41.749977,-96.094465 41.74998,-96.09427 41.750013,-96.093731 41.750093,-96.093375 41.750161,-96.092966 41.750249,-96.092706 41.750305,-96.092375 41.750383,-96.092045 41.750466,-96.091392 41.750644,-96.091293 41.75067,-96.091193 41.750701,-96.091182 41.750704,-96.091069 41.750739,-96.090972 41.750769,-96.090874 41.750798,-96.090828 41.750814,-96.090819 41.750817,-96.090673 41.750869,-96.089803 41.75118,-96.089801 41.751181,-96.089797 41.751182,-96.089794 41.751183,-96.089772 41.751191,-96.089708 41.751214,-96.089285 41.751367,-96.089105 41.751431,-96.088807 41.751546,-96.088219 41.751786,-96.08793 41.751912,-96.087644 41.752042,-96.087361 41.752176,-96.086805 41.752456,-96.086531 41.752601,-96.086261 41.75275,-96.085996 41.752903,-96.085734 41.753059,-96.085221 41.753383,-96.084969 41.753549,-96.08448 41.753893,-96.084008 41.75425,-96.083552 41.754621,-96.083114 41.755002,-96.082903 41.755198,-96.082493 41.755597,-96.082102 41.756008,-96.08173 41.75643,-96.081379 41.756861,-96.081211 41.757081,-96.08089 41.757526,-96.080738 41.757752,-96.080591 41.757981,-96.080313 41.758442,-96.080182 41.758677,-96.080057 41.758912,-96.079823 41.75939,-96.079714 41.75963,-96.079514 41.760117,-96.079337 41.760609,-96.079257 41.760856,-96.079183 41.761105,-96.078772 41.761734,-96.078696 41.761851,-96.078637 41.761939,-96.078635 41.761945,-96.07863 41.761961,-96.078629 41.761963,-96.078497 41.762632,-96.078466 41.76306,-96.078444 41.763488,-96.078432 41.763918,-96.078431 41.764346,-96.07844 41.764775,-96.078466 41.765327,-96.07858 41.766557,-96.078629 41.766914,-96.078697 41.76734,-96.078775 41.767776,-96.078889 41.768938,-96.078929 41.769438,-96.078958 41.769711,-96.07896 41.769838,-96.078964 41.7699,-96.078996 41.770205,-96.079028 41.770593,-96.079039 41.770817,-96.07905 41.771124,-96.07905 41.771455,-96.07905 41.771676,-96.07905 41.771711,-96.07905 41.771737,-96.079039 41.772044,-96.079021 41.77235,-96.078996 41.772654,-96.078979 41.772818,-96.078973 41.772879,-96.078964 41.772962,-96.078925 41.773267,-96.078878 41.773572,-96.078825 41.773876,-96.078764 41.77418,-96.078697 41.774482,-96.078622 41.774784,-96.078452 41.775384,-96.078356 41.775682,-96.078253 41.775979,-96.078144 41.776275,-96.078028 41.776569,-96.077904 41.776861,-96.077564 41.776861,-96.077077 41.776861,-96.077065 41.776901,-96.077223 41.777165,-96.077375 41.7773,-96.077462 41.777377,-96.077546 41.777456,-96.077546 41.777822,-96.077252 41.778171,-96.077026 41.778439,-96.076824 41.778579,-96.076534 41.77908,-96.076469 41.779168,-96.0764 41.779261,-96.075932 41.779904,-96.075091 41.780896,-96.074229 41.781911,-96.073197 41.783008,-96.071871 41.784186,-96.070687 41.78517,-96.069772 41.785953,-96.068319 41.787162,-96.06723 41.788097,-96.067089 41.788272,-96.06703 41.788378,-96.066984 41.78846,-96.06697 41.788485,-96.066849 41.788478,-96.066754 41.788507,-96.066677 41.788601,-96.066409 41.788941,-96.066377 41.788981,-96.066111 41.789491,-96.065243 41.790934,-96.065049 41.791347,-96.064897 41.791673,-96.064863 41.791889,-96.064801 41.792447,-96.064765 41.793006,-96.064757 41.793286,-96.064761 41.793846,-96.064772 41.794126,-96.06479 41.794406,-96.064846 41.794964,-96.064883 41.795243,-96.064978 41.795798,-96.065035 41.796075,-96.065098 41.796351,-96.065168 41.796626,-96.065327 41.797173,-96.065416 41.797445,-96.065613 41.797985,-96.065721 41.798253,-96.065881 41.798623,-96.066138 41.799027,-96.066404 41.799428,-96.066679 41.799824,-96.066964 41.800218,-96.067257 41.800607,-96.06756 41.800993,-96.067872 41.801375,-96.068192 41.801752,-96.068522 41.802125,-96.06886 41.802494,-96.069269 41.802922,-96.069561 41.803218,-96.069924 41.803573,-96.070296 41.803924,-96.070676 41.804269,-96.071063 41.80461,-96.071459 41.804945,-96.071862 41.805275,-96.072273 41.8056,-96.072691 41.805919,-96.073117 41.806233,-96.07355 41.806541,-96.073991 41.806844,-96.074438 41.80714,-96.074892 41.807431,-96.075353 41.807716,-96.07582 41.807995,-96.076294 41.808268,-96.076774 41.808534,-96.07726 41.808794,-96.077753 41.809048,-96.078685 41.80948,-96.079463 41.80974,-96.080072 41.809987,-96.080073 41.809988,-96.080077 41.809989,-96.080161 41.810023,-96.080348 41.810065,-96.081192 41.810254,-96.082219 41.810563,-96.083322 41.810811,-96.085906 41.811237,-96.086438 41.811357,-96.08644 41.811357,-96.086442 41.811358,-96.086643 41.811403,-96.087161 41.811469,-96.087164 41.811469,-96.087169 41.81147,-96.087175 41.811471,-96.087447 41.811506,-96.087519 41.811524,-96.087523 41.811525,-96.088044 41.811659,-96.089136 41.811792,-96.090845 41.812159,-96.091911 41.812311,-96.091932 41.812314,-96.091975 41.812324,-96.092851 41.812521,-96.093006 41.812588,-96.093008 41.812589,-96.093431 41.812773,-96.093924 41.812918,-96.095273 41.813182,-96.096031 41.813493,-96.097038 41.813788,-96.097042 41.813789,-96.09748 41.813917,-96.097696 41.814042,-96.097698 41.814043,-96.097935 41.814181,-96.098639 41.814422,-96.098642 41.814423,-96.098644 41.814424,-96.098722 41.814451,-96.100885 41.815389,-96.101272 41.815603,-96.101538 41.81581,-96.102332 41.816215,-96.103566 41.817072,-96.104224 41.817663,-96.105336 41.81846,-96.106565 41.819613,-96.108714 41.822099,-96.109384 41.823135,-96.109746 41.823992,-96.11056 41.826548,-96.110831 41.827914,-96.110962 41.828827,-96.111005 41.829519,-96.11101 41.829606,-96.111017 41.829726,-96.111029 41.831022,-96.110967 41.831596,-96.110797 41.832157,-96.110155 41.833605,-96.109954 41.834144,-96.10969 41.834853,-96.109514 41.835193,-96.109378 41.835457,-96.10911 41.836043,-96.108969 41.83635,-96.108963 41.83636,-96.108272 41.837698,-96.108271 41.837699,-96.108269 41.837704,-96.108267 41.837709,-96.108265 41.837714,-96.108263 41.837719,-96.108262 41.837721,-96.108171 41.837898,-96.108106 41.838109,-96.108105 41.838112,-96.10794 41.838644,-96.107939 41.838646,-96.10778 41.83916,-96.107617 41.8404,-96.107669 41.841421,-96.107669 41.841423,-96.107669 41.841425,-96.107669 41.841427,-96.107669 41.84143,-96.107669 41.841436,-96.107681 41.841678,-96.107681 41.841682,-96.107685 41.841766,-96.107754 41.842175,-96.107757 41.842194,-96.107894 41.843014,-96.107894 41.843016,-96.107936 41.843266,-96.108287 41.844535,-96.108501 41.845126,-96.108502 41.845127,-96.108503 41.845131,-96.108504 41.845134,-96.108704 41.845687,-96.109312 41.847128,-96.110548 41.849199,-96.111252 41.850229,-96.111631 41.850688,-96.112464 41.851571,-96.11451 41.853572,-96.115498 41.854348,-96.116597 41.855103,-96.120152 41.857188,-96.122354 41.858001,-96.124984 41.858892,-96.125366 41.859095,-96.125367 41.859096,-96.125369 41.859097,-96.125688 41.859266,-96.1312 41.861426,-96.132615 41.862053,-96.13496 41.863252,-96.136525 41.864151,-96.138381 41.865683,-96.138939 41.866212,-96.139008 41.866277,-96.13948 41.8668,-96.140417 41.86784,-96.140982 41.868279,-96.141539 41.868712,-96.141908 41.868999,-96.142694 41.869851,-96.143133 41.870328,-96.144359 41.871971,-96.145026 41.873433,-96.145312 41.873935,-96.145974 41.875093,-96.14605 41.875377,-96.146554 41.877244,-96.14666 41.877636,-96.146763 41.878634,-96.146755 41.880276,-96.146801 41.881998,-96.146927 41.883019,-96.146956 41.883254,-96.147292 41.884896,-96.1473 41.884917,-96.147319 41.884967,-96.147349 41.885043,-96.147379 41.885118,-96.147399 41.885169,-96.147491 41.885405,-96.14777 41.886114,-96.147772 41.88612,-96.147864 41.886351,-96.147919 41.886492,-96.148004 41.886706,-96.148087 41.886918,-96.148144 41.88706,-96.148186 41.887166,-96.148286 41.88734,-96.148757 41.888161,-96.148783 41.888205,-96.148942 41.888417,-96.149641 41.889351,-96.149874 41.889662,-96.150986 41.890934,-96.151979 41.891956,-96.152153 41.892135,-96.152881 41.892694,-96.153049 41.892823,-96.153556 41.893211,-96.1536 41.893245,-96.15372 41.893348,-96.153776 41.893396,-96.153862 41.893469,-96.153947 41.893541,-96.154004 41.89359,-96.154918 41.894368,-96.155198 41.894607,-96.156719 41.895806,-96.157668 41.89669,-96.158198 41.897184,-96.158521 41.897535,-96.158757 41.897791,-96.158926 41.897974,-96.159333 41.898411,-96.159451 41.898536,-96.159471 41.898559,-96.159643 41.898754,-96.1597 41.898823,-96.1602 41.89944,-96.161101 41.900551,-96.161538 41.901398,-96.161756 41.90182,-96.161835 41.902131,-96.162024 41.902881,-96.162067 41.903047,-96.16209 41.904022,-96.162011 41.905194,-96.161988 41.905553,-96.161841 41.90594,-96.161737 41.906214,-96.161501 41.906839,-96.16139 41.90702,-96.161238 41.907271,-96.161193 41.907344,-96.161058 41.907564,-96.161014 41.907638,-96.160943 41.907753,-96.160767 41.908044,-96.160728 41.908098,-96.160649 41.908208,-96.160013 41.909095,-96.159098 41.910057,-96.158617 41.910377,-96.15784 41.910896,-96.156302 41.91166,-96.154301 41.912421,-96.152582 41.912894,-96.150213 41.913361,-96.149332 41.913536,-96.14726 41.913862,-96.147193 41.91388,-96.147094 41.913908,-96.146994 41.913935,-96.146928 41.913954,-96.14669 41.91402,-96.146334 41.914119,-96.145976 41.914217,-96.145739 41.914283,-96.145702 41.914293,-96.145648 41.91431,-96.145592 41.914324,-96.145556 41.914334,-96.14459 41.914603,-96.144364 41.914678,-96.142265 41.915379,-96.140946 41.916115,-96.139863 41.91672,-96.139653 41.916838,-96.139275 41.917238,-96.1383 41.918273,-96.13776 41.919054,-96.137359 41.919637,-96.137321 41.919711,-96.136848 41.920622,-96.136743 41.920826,-96.136133 41.92353,-96.136134 41.923608,-96.136155 41.924635,-96.136158 41.92477,-96.136167 41.925175,-96.13617 41.925311,-96.136246 41.925631,-96.136362 41.926114,-96.136476 41.926594,-96.136553 41.926916,-96.136571 41.926993,-96.136613 41.927167,-96.136641 41.92722,-96.13668 41.92729,-96.137299 41.92842,-96.137672 41.9291,-96.1395 41.931529,-96.139526 41.931572,-96.140192 41.932676,-96.140278 41.932819,-96.140486 41.933163,-96.140549 41.933244,-96.140654 41.933376,-96.141869 41.93492,-96.142034 41.935173,-96.142718 41.936222,-96.143493 41.937387,-96.144041 41.93868,-96.14448 41.940013,-96.14457 41.941351,-96.144583 41.941544,-96.144368 41.942478,-96.143975 41.943522,-96.14366 41.944358,-96.143603 41.944512,-96.142597 41.945908,-96.141965 41.946393,-96.14164 41.946644,-96.141243 41.946918,-96.140988 41.947093,-96.140413 41.947491,-96.140223 41.947614,-96.139964 41.947782,-96.139745 41.947923,-96.139414 41.948138,-96.139173 41.948437,-96.139011 41.94864,-96.138803 41.948899,-96.138781 41.948926,-96.1381 41.949791,-96.137873 41.95008,-96.137743 41.950247,-96.137242 41.950641,-96.137076 41.950773,-96.137027 41.950798,-96.13695 41.95084,-96.136881 41.950876,-96.136833 41.950903,-96.136699 41.950968,-96.136658 41.951003,-96.136227 41.951383,-96.136203 41.951409,-96.136067 41.95156,-96.135876 41.951746,-96.135393 41.952223,-96.135334 41.952328,-96.135205 41.952562,-96.134997 41.952938,-96.134979 41.952966,-96.134241 41.954126,-96.134233 41.954138,-96.134 41.954539,-96.133476 41.955454,-96.133318 41.955732,-96.132293 41.958382,-96.131913 41.959366,-96.131742 41.959808,-96.131578 41.960234,-96.131368 41.960741,-96.131088 41.961053,-96.131034 41.961114,-96.130772 41.961407,-96.13064 41.961603,-96.130442 41.9619,-96.13025 41.962198,-96.130123 41.962398,-96.129978 41.962642,-96.129727 41.96343,-96.129186 41.965136,-96.12908 41.965973,-96.129037 41.96667,-96.128975 41.967689,-96.128971 41.967779,-96.128969 41.967797,-96.128967 41.967852,-96.128967 41.967871,-96.128933 41.968656,-96.128925 41.968883,-96.128902 41.96965,-96.1289 41.969727,-96.129254 41.97093,-96.129505 41.971673,-96.129877 41.972199,-96.130355 41.972863,-96.1312 41.97361,-96.131702 41.974,-96.132077 41.974292,-96.132537 41.974625,-96.133203 41.974944,-96.133321 41.97499,-96.133675 41.975128,-96.133794 41.975174,-96.135151 41.975701,-96.139223 41.977285,-96.140338 41.977719,-96.140581 41.977813,-96.140685 41.977852,-96.140842 41.977913,-96.140998 41.977971,-96.141103 41.978011,-96.141229 41.978063,-96.142715 41.978491,-96.144068 41.978645,-96.144439 41.978688,-96.147035 41.97905,-96.149977 41.979414,-96.15209 41.979661,-96.153136 41.979734,-96.154355 41.979819,-96.15616 41.980082,-96.156559 41.980141,-96.157212 41.980199,-96.158049 41.980275,-96.160382 41.980133,-96.160683 41.980115,-96.161437 41.980037,-96.161999 41.979978,-96.163338 41.979839,-96.16368 41.979769,-96.164234 41.979658,-96.165492 41.979404,-96.165716 41.97936,-96.168074 41.978996,-96.169285 41.978738,-96.170542 41.978472,-96.171888 41.977837,-96.173315 41.977189,-96.174154 41.976864,-96.174827 41.97671,-96.177204 41.976308,-96.177777 41.976298,-96.179567 41.976284,-96.18105 41.976365,-96.181945 41.976412,-96.182224 41.976436,-96.183179 41.976571,-96.183537 41.976663,-96.183909 41.976719,-96.184164 41.976793,-96.187219 41.977946,-96.188746 41.979027,-96.189052 41.979264,-96.189099 41.979301,-96.18925 41.979417,-96.189413 41.979542,-96.189546 41.97965,-96.189724 41.979831,-96.189781 41.979889,-96.190049 41.98016,-96.190476 41.980593,-96.190608 41.980729,-96.190802 41.980998,-96.191029 41.981312,-96.191326 41.981724,-96.191549 41.982032,-96.192141 41.984461,-96.191971 41.985347,-96.191567 41.986061,-96.191146 41.986745,-96.19037 41.987964,-96.190245 41.98816,-96.19006 41.988454,-96.189871 41.988751,-96.189747 41.988948,-96.18963 41.989134,-96.189517 41.989315,-96.189238 41.989664,-96.189102 41.989836,-96.188786 41.990238,-96.188389 41.990757,-96.187605 41.991786,-96.186427 41.993076,-96.186156 41.993441,-96.185573 41.994232,-96.185474 41.994385,-96.185407 41.994487,-96.18521 41.994795,-96.185144 41.994898,-96.184784 41.99546,-96.184255 41.996634,-96.183801 41.99776,-96.183627 41.99904,-96.183608 41.99999,-96.184188 42.001606,-96.184318 42.001831,-96.184327 42.001853,-96.184361 42.001938,-96.184465 42.002193,-96.1845 42.002279,-96.18422 42.002543,-96.184002 42.003063,-96.184258 42.003686,-96.184378 42.003978,-96.18462 42.004578,-96.184711 42.004972,-96.185249 42.005467,-96.185919 42.005914,-96.186823 42.00633,-96.187522 42.006626,-96.18773 42.006656,-96.189336 42.00689,-96.189553 42.006987,-96.189766 42.007082,-96.190207 42.007278,-96.190425 42.007376,-96.190819 42.007552,-96.190913 42.007579,-96.192436 42.008032,-96.192944 42.008183,-96.193002 42.0082,-96.193178 42.008252,-96.193237 42.00827,-96.193313 42.008292,-96.193544 42.008361,-96.193621 42.008384,-96.193714 42.008411,-96.193993 42.008495,-96.194086 42.008523,-96.194556 42.008662,-96.194838 42.008671,-96.200816 42.009196,-96.201487 42.009343,-96.203615 42.009304,-96.204042 42.009309,-96.205032 42.009289,-96.206083 42.009267,-96.207051 42.009064,-96.208486 42.008762,-96.210057 42.008432,-96.212703 42.007533,-96.213317 42.007325,-96.214095 42.007071,-96.215225 42.006701,-96.216496 42.005302,-96.216557 42.005236,-96.217637 42.003862,-96.219867 41.999987,-96.220503 41.999115,-96.22119 41.998152,-96.22161 41.997631,-96.221812 41.997382,-96.222641 41.996451,-96.223369 41.995931,-96.223827 41.995517,-96.223895 41.995457,-96.223964 41.995424,-96.224419 41.995215,-96.224571 41.995145,-96.224812 41.995033,-96.225463 41.994734,-96.225543 41.994715,-96.225802 41.994654,-96.226094 41.994584,-96.226973 41.994378,-96.227172 41.994332,-96.227269 41.994326,-96.227335 41.994321,-96.227436 41.994316,-96.227536 41.994309,-96.227603 41.994305,-96.227706 41.994298,-96.228015 41.994278,-96.228119 41.994272,-96.228197 41.994266,-96.228349 41.994257,-96.228431 41.994266,-96.22851 41.994275,-96.228646 41.99429,-96.229055 41.994335,-96.229192 41.99435,-96.229404 41.994373,-96.229739 41.99441,-96.230037 41.994465,-96.230247 41.994504,-96.230416 41.994535,-96.230671 41.994584,-96.230925 41.994631,-96.231095 41.994663,-96.231215 41.994687,-96.231395 41.994725,-96.231575 41.994761,-96.231696 41.994786,-96.231751 41.994801,-96.23325 41.995178,-96.233878 41.995384,-96.234952 41.995736,-96.236488 41.996429,-96.238183 41.99755,-96.239748 41.998605,-96.239795 41.998641,-96.240713 41.999351,-96.241372 41.999987,-96.241482 42.00014,-96.242035 42.000911,-96.242142 42.001315,-96.242323 42.001996,-96.24238 42.002898,-96.242351 42.004106,-96.242189 42.005382,-96.242162 42.005602,-96.241972 42.006732,-96.24192 42.006963,-96.24144 42.008015,-96.240832 42.009315,-96.239748 42.010889,-96.239303 42.011603,-96.23886 42.012315,-96.238382 42.012602,-96.23818 42.012722,-96.237576 42.013086,-96.237375 42.013207,-96.237365 42.013212,-96.237338 42.013229,-96.237329 42.013235,-96.23711 42.013366,-96.236702 42.013612,-96.236452 42.013755,-96.236232 42.013883,-96.236081 42.013969,-96.23563 42.014231,-96.23548 42.014318,-96.23433 42.014983,-96.232317 42.016148,-96.23087 42.016961,-96.229713 42.017613,-96.22872 42.018171,-96.227867 42.018651,-96.22603 42.020255,-96.225173 42.021005,-96.225007 42.021187,-96.224511 42.021737,-96.224346 42.02192,-96.224198 42.022066,-96.223758 42.022505,-96.223611 42.022652,-96.223101 42.023404,-96.222823 42.023817,-96.221895 42.025844,-96.22173 42.026205,-96.221747 42.026717,-96.22183 42.028262,-96.221901 42.029558,-96.222436 42.030946,-96.223364 42.032554,-96.223822 42.033346,-96.224266 42.033798,-96.224958 42.034505,-96.225656 42.035217,-96.227296 42.036315,-96.227561 42.036493,-96.22816 42.036798,-96.228258 42.036848,-96.228554 42.036999,-96.228653 42.03705,-96.228933 42.037193,-96.22907 42.037288,-96.230143 42.03803,-96.230267 42.038097,-96.230691 42.038328,-96.230973 42.038489,-96.231398 42.038732,-96.231821 42.038974,-96.232104 42.039137,-96.232356 42.039242,-96.232728 42.039398,-96.233112 42.039559,-96.233365 42.039665,-96.233447 42.039688,-96.233571 42.039723,-96.233693 42.039757,-96.233776 42.039781,-96.234027 42.039852,-96.234405 42.039959,-96.234782 42.040065,-96.235034 42.040137,-96.234747 42.040072,-96.23463 42.04004,-96.234021 42.039874,-96.233836 42.039834,-96.233764 42.039823,-96.233504 42.03978,-96.233418 42.039756,-96.233369 42.039743,-96.233151 42.039668,-96.233027 42.039618,-96.232911 42.039571,-96.232852 42.039548,-96.232568 42.03942,-96.232454 42.03937,-96.232256 42.039485,-96.232113 42.039457,-96.23194 42.039404,-96.231699 42.039296,-96.231577 42.039192,-96.231406 42.03914,-96.230775 42.039013,-96.230329 42.038923,-96.230156 42.038871,-96.229993 42.038801,-96.229844 42.038717,-96.229438 42.038429,-96.229005 42.038162,-96.228576 42.037893,-96.228183 42.037596,-96.228001 42.03743,-96.227877 42.037342,-96.227868 42.037328,-96.227871 42.037319,-96.227887 42.037311,-96.22785 42.037291,-96.227808 42.037278,-96.227761 42.037273,-96.227612 42.037273,-96.22742 42.037249,-96.227324 42.037249,-96.227229 42.037264,-96.227185 42.037278,-96.227064 42.037339,-96.227018 42.037349,-96.226977 42.037353,-96.228261 42.038302,-96.229426 42.038866,-96.230253 42.039433,-96.231294 42.039815,-96.233812 42.040553,-96.233954 42.040594,-96.234356 42.040712,-96.234969 42.040778,-96.238392 42.041088,-96.238822 42.041123,-96.24287 42.041455,-96.243104 42.041474,-96.246832 42.041616,-96.248411 42.041207,-96.248764 42.041116,-96.249754 42.040859,-96.250299 42.040718,-96.250662 42.040697,-96.251707 42.040446,-96.252696 42.040039,-96.253019 42.039907,-96.253635 42.039631,-96.254057 42.03952,-96.254489 42.039408,-96.25522 42.038945,-96.25559 42.038712,-96.255711 42.038625,-96.255719 42.038618,-96.256082 42.038305,-96.256203 42.038201,-96.256575 42.03822,-96.257068 42.038247,-96.257694 42.038263,-96.258067 42.038274,-96.258356 42.038338,-96.259223 42.038532,-96.259512 42.038597,-96.259915 42.038687,-96.260358 42.038786,-96.261116 42.038989,-96.261516 42.039097,-96.261663 42.039136,-96.262106 42.039255,-96.262254 42.039295,-96.263448 42.039616,-96.264247 42.039891,-96.265332 42.040266,-96.267195 42.04119,-96.268063 42.041705,-96.269684 42.042893,-96.269785 42.042967,-96.271146 42.044373,-96.271576 42.044904,-96.271969 42.04539,-96.272545 42.046202,-96.272767 42.046571,-96.27312 42.047158,-96.273139 42.04728,-96.273798 42.048283,-96.274393 42.049244,-96.274856 42.050118,-96.274908 42.050215,-96.276213 42.053215,-96.277202 42.056025,-96.277732 42.05753,-96.277907 42.058025,-96.278043 42.058412,-96.278646 42.06117,-96.278838 42.062049,-96.279211 42.064155,-96.279379 42.065495,-96.279536 42.068554,-96.27948 42.070804,-96.279479 42.07088,-96.279201 42.073544,-96.279086 42.07401,-96.278494 42.076404,-96.278484 42.076448,-96.277732 42.079097,-96.276753 42.081696,-96.275982 42.083346,-96.275798 42.083743,-96.274608 42.085386,-96.274559 42.085454,-96.274296 42.085779,-96.273688 42.086534,-96.273341 42.086941,-96.273333 42.086952,-96.273117 42.08739,-96.273045 42.087657,-96.272962 42.087777,-96.272246 42.088825,-96.272168 42.08894,-96.271998 42.089167,-96.271656 42.089621,-96.271492 42.089837,-96.270798 42.090761,-96.270652 42.090998,-96.270355 42.091483,-96.270181 42.091765,-96.26977 42.092437,-96.269677 42.092622,-96.26953 42.09292,-96.269129 42.093728,-96.26838 42.09524,-96.268039 42.096203,-96.267739 42.097055,-96.267439 42.098407,-96.267303 42.099027,-96.266898 42.102178,-96.266893 42.102522,-96.266875 42.103798,-96.26688 42.103907,-96.266972 42.105846,-96.266988 42.106172,-96.267313 42.10889,-96.267486 42.10978,-96.268126 42.111519,-96.26815 42.111585,-96.268618 42.112622,-96.268921 42.113291,-96.269156 42.113695,-96.269459 42.114216,-96.269909 42.114879,-96.270173 42.115267,-96.270376 42.115567,-96.270877 42.116304,-96.270995 42.116461,-96.271213 42.116752,-96.271467 42.117089,-96.272005 42.117695,-96.273001 42.118818,-96.273411 42.11928,-96.27458 42.120334,-96.274584 42.120337,-96.275575 42.121071,-96.276217 42.121547,-96.2764 42.121682,-96.277927 42.122623,-96.278265 42.122795,-96.278978 42.123159,-96.279348 42.123348,-96.2802 42.123783,-96.28047 42.123894,-96.280855 42.124054,-96.281242 42.124214,-96.282218 42.124619,-96.282398 42.124713,-96.28277 42.124909,-96.283002 42.125031,-96.283064 42.125044,-96.283604 42.125164,-96.28401 42.125296,-96.284321 42.125397,-96.285004 42.125618,-96.285952 42.125926,-96.286647 42.126,-96.287106 42.125992,-96.287564 42.125986,-96.287824 42.126007,-96.28791 42.126013,-96.288044 42.126024,-96.288165 42.126054,-96.28825 42.126075,-96.288959 42.126251,-96.289301 42.126292,-96.289532 42.126321,-96.290322 42.126497,-96.290998 42.126485,-96.292148 42.126598,-96.292501 42.126617,-96.293576 42.126675,-96.293861 42.12669,-96.294608 42.12673,-96.294714 42.126759,-96.29499 42.126835,-96.295331 42.126928,-96.295437 42.126988,-96.296035 42.127324,-96.296774 42.127387,-96.297249 42.127429,-96.29807 42.127499,-96.298245 42.127515,-96.299307 42.127552,-96.300154 42.127696,-96.300515 42.127806,-96.300959 42.127941,-96.301299 42.128065,-96.301304 42.128066,-96.30132 42.128072,-96.301326 42.128074,-96.301567 42.128162,-96.302292 42.128426,-96.302534 42.128514,-96.303309 42.128796,-96.303435 42.128842,-96.303989 42.12897,-96.305012 42.129295,-96.305658 42.12956,-96.305731 42.12959,-96.306384 42.129952,-96.308103 42.131058,-96.308681 42.131467,-96.309119 42.131778,-96.309758 42.132101,-96.310355 42.132572,-96.310695 42.132963,-96.311187 42.133308,-96.311612 42.133699,-96.311857 42.134009,-96.312624 42.134655,-96.312909 42.13503,-96.313062 42.135427,-96.314046 42.136449,-96.314488 42.137157,-96.31482 42.137688,-96.315173 42.13851,-96.315585 42.139672,-96.315728 42.140075,-96.315783 42.140282,-96.315925 42.140816,-96.316157 42.141211,-96.316384 42.141947,-96.316465 42.14207,-96.316821 42.142606,-96.316896 42.142784,-96.317121 42.14332,-96.317196 42.143499,-96.317252 42.143633,-96.317282 42.143702,-96.317493 42.143997,-96.317509 42.144019,-96.317597 42.1441,-96.317746 42.144238,-96.317812 42.1443,-96.318058 42.144758,-96.318155 42.144938,-96.318233 42.145084,-96.318333 42.145268,-96.318525 42.145483,-96.318574 42.145537,-96.318648 42.145595,-96.318797 42.145712,-96.318874 42.145772,-96.319144 42.146161,-96.319253 42.146318,-96.319406 42.146539,-96.31956 42.146761,-96.319991 42.147084,-96.320207 42.147246,-96.32074 42.147928,-96.320972 42.148114,-96.321069 42.148192,-96.321596 42.148507,-96.322349 42.149299,-96.322668 42.149519,-96.323148 42.149758,-96.323688 42.150259,-96.323993 42.150542,-96.324672 42.150855,-96.325302 42.151309,-96.325506 42.151456,-96.326415 42.151992,-96.326855 42.152324,-96.32731 42.152447,-96.32806 42.15265,-96.328388 42.152738,-96.328763 42.15284,-96.329333 42.153109,-96.329641 42.153255,-96.329818 42.153339,-96.330381 42.153444,-96.331017 42.153621,-96.331286 42.153697,-96.331773 42.153931,-96.332213 42.154279,-96.333303 42.154567,-96.334899 42.155311,-96.334918 42.155314,-96.33546 42.155419,-96.3363 42.155674,-96.336816 42.155997,-96.337202 42.156452,-96.338025 42.156796,-96.338755 42.157101,-96.339062 42.157331,-96.339305 42.157599,-96.340228 42.158057,-96.340709 42.158505,-96.341571 42.15908,-96.341904 42.159432,-96.342146 42.159938,-96.342666 42.1602,-96.342997 42.160438,-96.343013 42.16045,-96.343614 42.161012,-96.343901 42.161504,-96.344248 42.161754,-96.344431 42.161937,-96.344537 42.162043,-96.344905 42.162376,-96.345177 42.162874,-96.345666 42.163318,-96.346019 42.163789,-96.346203 42.164195,-96.346275 42.164268,-96.346688 42.164686,-96.347084 42.165302,-96.347215 42.165758,-96.347863 42.16664,-96.348015 42.167164,-96.348303 42.167496,-96.348602 42.168027,-96.348712 42.168486,-96.349168 42.169317,-96.349243 42.169815,-96.349688 42.170702,-96.349717 42.171526,-96.350043 42.172267,-96.350063 42.172312,-96.350145 42.17263,-96.350167 42.173205,-96.350101 42.173671,-96.350422 42.175227,-96.35039 42.175469,-96.350312 42.176076,-96.350319 42.176197,-96.350334 42.176442,-96.350343 42.176605,-96.350361 42.176903,-96.350343 42.177095,-96.350329 42.177259,-96.350321 42.177338,-96.350301 42.177575,-96.350294 42.177654,-96.350268 42.177943,-96.350242 42.178029,-96.349922 42.179102,-96.349911 42.179123,-96.349746 42.179466,-96.349676 42.179609,-96.349537 42.179899,-96.349521 42.180055,-96.349506 42.180214,-96.349469 42.180579,-96.349277 42.180908,-96.349206 42.181176,-96.349156 42.181366,-96.348742 42.18221,-96.348626 42.182633,-96.348261 42.183099,-96.348095 42.183398,-96.347936 42.183942,-96.347911 42.18403,-96.34786 42.184496,-96.347598 42.184881,-96.347493 42.185172,-96.347278 42.185774,-96.347251 42.186063,-96.347245 42.186132,-96.347279 42.186371,-96.347306 42.18656,-96.347307 42.186562,-96.347169 42.187119,-96.347123 42.187306,-96.346929 42.188089,-96.346914 42.18815,-96.346944 42.188545,-96.347083 42.189035,-96.346909 42.189996,-96.346927 42.190472,-96.346934 42.190643,-96.347043 42.191066,-96.347149 42.191235,-96.347206 42.191328,-96.347287 42.191457,-96.347278 42.191774,-96.347265 42.192324,-96.347374 42.193075,-96.347543 42.19347,-96.347565 42.193519,-96.347929 42.193899,-96.348097 42.194074,-96.348151 42.194195,-96.34818 42.194258,-96.348347 42.194821,-96.348374 42.19529,-96.348397 42.195665,-96.348406 42.195827,-96.348426 42.195925,-96.348474 42.196146,-96.348764 42.196627,-96.348829 42.196735,-96.348933 42.196824,-96.349057 42.196931,-96.349208 42.19706,-96.349288 42.197344,-96.349334 42.197503,-96.349411 42.197774,-96.349428 42.197834,-96.349567 42.198141,-96.349829 42.198484,-96.349841 42.198493,-96.350062 42.19867,-96.350191 42.198773,-96.350217 42.198809,-96.350583 42.199322,-96.350623 42.199377,-96.350693 42.199501,-96.35076 42.199619,-96.350961 42.199973,-96.351028 42.200092,-96.351109 42.200235,-96.351203 42.200401,-96.351427 42.200606,-96.351549 42.200718,-96.351656 42.200816,-96.351659 42.200818,-96.351935 42.201153,-96.352028 42.201266,-96.352259 42.201489,-96.352953 42.202161,-96.353119 42.202322,-96.353177 42.202393,-96.353394 42.20266,-96.35396 42.203053,-96.354025 42.203118,-96.354505 42.203603,-96.355075 42.20399,-96.355621 42.204494,-96.355919 42.204944,-96.356354 42.20523,-96.356506 42.205363,-96.357041 42.205832,-96.357249 42.206191,-96.357331 42.206333,-96.357639 42.206662,-96.357938 42.206982,-96.358182 42.207334,-96.358301 42.207608,-96.358723 42.208142,-96.358741 42.208165,-96.359029 42.208676,-96.359078 42.208762,-96.359155 42.209029,-96.359159 42.209043,-96.359551 42.209579,-96.359678 42.210016,-96.359714 42.21014,-96.359776 42.210249,-96.359837 42.210357,-96.35987 42.210553,-96.359813 42.21074,-96.35967 42.211213,-96.359345 42.21182,-96.35916 42.212168,-96.358888 42.212682,-96.358146 42.214086,-96.358007 42.21416,-96.357495 42.214436,-96.357469 42.214456,-96.357394 42.214519,-96.357369 42.21454,-96.35735 42.214551,-96.357296 42.214586,-96.357278 42.214598,-96.357264 42.214603,-96.357226 42.214621,-96.357213 42.214627,-96.357213 42.21464,-96.357213 42.21468,-96.357213 42.214694,-96.357171 42.214726,-96.357046 42.214825,-96.357005 42.214859,-96.356963 42.214872,-96.356839 42.214912,-96.356798 42.214926,-96.35675 42.21494,-96.356607 42.214986,-96.35656 42.215002,-96.356591 42.215182,-96.35558 42.215466,-96.35419 42.215714,-96.35326 42.215806,-96.352934 42.215837,-96.352606 42.215868,-96.352324 42.215895,-96.351697 42.215967,-96.351413 42.216014,-96.35062 42.216117,-96.350476 42.216153,-96.350338 42.216187,-96.3502 42.216221,-96.350155 42.216232,-96.350079 42.216251,-96.349143 42.216481,-96.345033 42.217495,-96.337025 42.217463,-96.336998 42.217466,-96.336767 42.217632,-96.336744 42.217674,-96.336598 42.217754,-96.33614 42.218084,-96.335766 42.218354,-96.335528 42.218517,-96.335355 42.21864,-96.335197 42.218737,-96.335043 42.218764,-96.334869 42.218862,-96.334402 42.21927,-96.334361 42.219339,-96.334307 42.219587,-96.334179 42.219872,-96.334052 42.21995,-96.333871 42.220102,-96.333118 42.220781,-96.332648 42.221101,-96.332511 42.221215,-96.332339 42.221318,-96.331149 42.222527,-96.330151 42.223361,-96.330041 42.223485,-96.329456 42.224256,-96.329269 42.224503,-96.329095 42.224733,-96.329003 42.224852,-96.32891 42.224959,-96.328802 42.224926,-96.328521 42.225378,-96.328308 42.225722,-96.328182 42.225795,-96.327368 42.226712,-96.327329 42.22676,-96.327251 42.226843,-96.327051 42.227082,-96.327013 42.227154,-96.326562 42.227862,-96.326256 42.228357,-96.326164 42.228448,-96.325949 42.228661,-96.324924 42.229057,-96.324792 42.229107,-96.32474 42.229128,-96.324546 42.229272,-96.323746 42.22987,-96.323723 42.229887,-96.323531 42.230246,-96.32344 42.230389,-96.323432 42.230436,-96.323368 42.230666,-96.323248 42.230666,-96.322904 42.231296,-96.322902 42.2313,-96.322827 42.231461,-96.32289 42.231655,-96.323054 42.232132,-96.322977 42.232245,-96.322793 42.232522,-96.322761 42.232564,-96.322794 42.23289,-96.322868 42.233637,-96.323032 42.23379,-96.323694 42.234409,-96.323926 42.23495,-96.324572 42.235342,-96.326423 42.236556,-96.326753 42.236949,-96.327016 42.237228,-96.3271 42.237318,-96.327387 42.237628,-96.327893 42.23816,-96.329243 42.23926,-96.329529 42.239461,-96.329545 42.239443,-96.32987 42.239748,-96.330006 42.240225,-96.329763 42.240625,-96.329693 42.241011,-96.329189 42.24158,-96.328958 42.241885,-96.328729 42.242996,-96.32861 42.243456,-96.328364 42.244453,-96.328093 42.245736,-96.328009 42.247082,-96.327982 42.248537,-96.327928 42.248818,-96.327817 42.249405,-96.327706 42.249992,-96.328897 42.254723,-96.331312 42.259408,-96.331991 42.26019,-96.332012 42.260214,-96.335964 42.264777,-96.33829 42.266615,-96.338336 42.266651,-96.339045 42.267212,-96.339801 42.26781,-96.339851 42.26785,-96.341387 42.269087,-96.342912 42.269787,-96.342977 42.269818,-96.342981 42.26982,-96.34905 42.272609,-96.349642 42.27292,-96.349708 42.272955,-96.349723 42.272963,-96.352923 42.274652,-96.355694 42.276115,-96.356023 42.276304,-96.356056 42.276326,-96.35626 42.276448,-96.356366 42.27648,-96.356395 42.276494,-96.356501 42.276562,-96.35655 42.276594,-96.360502 42.27961,-96.360732 42.279786,-96.361015 42.280089,-96.363009 42.282218,-96.365751 42.285814,-96.367453 42.28941,-96.367977 42.290681,-96.368005 42.290779,-96.368026 42.29085,-96.368467 42.292619,-96.36849 42.292822,-96.368514 42.293044,-96.368517 42.2931,-96.368721 42.296599,-96.368723 42.29662,-96.368585 42.301104,-96.368507 42.303622,-96.368675 42.304748,-96.369212 42.308344,-96.369402 42.308983,-96.369969 42.310878,-96.37179 42.314172,-96.373563 42.316189,-96.375307 42.318339,-96.379484 42.322197,-96.384169 42.325874,-96.385717 42.326511,-96.387274 42.327152,-96.390197 42.328354,-96.391863 42.329041,-96.396269 42.330857,-96.40255 42.333955,-96.402957 42.334156,-96.405124 42.335554,-96.40576 42.335964,-96.407979 42.337396,-96.407998 42.337408,-96.411867 42.341335,-96.411956 42.341425,-96.413895 42.343393,-96.415214 42.345936,-96.415251 42.346007,-96.415631 42.34674,-96.415738 42.346947,-96.416194 42.347826,-96.416344 42.348115,-96.417786 42.351449,-96.418168 42.354678,-96.417918 42.3587,-96.417093 42.361443,-96.416858 42.361784,-96.415073 42.364369,-96.413994 42.365932,-96.413887 42.366114,-96.41377 42.366312,-96.411451 42.370249,-96.40959 42.373967,-96.409396 42.374198,-96.40873 42.374993,-96.408436 42.376092,-96.408428 42.37779,-96.408519 42.378551,-96.408532 42.379078,-96.408687 42.379757,-96.409153 42.381491,-96.409539 42.382428,-96.40981 42.383084,-96.410328 42.384258,-96.410663 42.385018,-96.411124 42.38606,-96.411277 42.386305,-96.411752 42.387068,-96.412504 42.388521,-96.413257 42.389927,-96.414074 42.391193,-96.414606 42.392247,-96.41498 42.393442,-96.415348 42.395784,-96.415393 42.396276,-96.415483 42.397294,-96.415554 42.398899,-96.415509 42.400294,-96.415186 42.404203,-96.413609 42.407894,-96.411194 42.411485,-96.411262 42.411563,-96.410307 42.412965,-96.407383 42.415945,-96.403238 42.419181,-96.398808 42.422494,-96.397905 42.4233,-96.396967 42.424138,-96.396814 42.424274,-96.387608 42.432494,-96.384307 42.437294,-96.380705 42.446393,-96.380662 42.446749,-96.38066 42.446768,-96.380656 42.4468,-96.380648 42.446871,-96.380648 42.446873,-96.380629 42.447035,-96.380398 42.448999,-96.380105 42.451494,-96.380574 42.455994,-96.380905 42.459195,-96.381305 42.461695,-96.385407 42.473094,-96.385979 42.474441,-96.386003 42.474496,-96.386013 42.474506,-96.387298 42.475722,-96.392491 42.481243,-96.392648 42.48141,-96.395983 42.484241,-96.396124 42.484361,-96.401962 42.48644,-96.407217 42.487018,-96.407789 42.487168,-96.408361 42.487319,-96.409408 42.487595,-96.411641 42.487792,-96.412225 42.487844,-96.412808 42.487895,-96.41303 42.487916,-96.413217 42.487935,-96.413435 42.487953,-96.413583 42.487966,-96.413722 42.487979,-96.416773 42.488279,-96.417994 42.4884,-96.421678 42.488763,-96.422957 42.488888,-96.423892 42.48898,-96.426592 42.489057,-96.427908 42.489095,-96.428504 42.489126,-96.433808 42.489395,-96.434912 42.489429,-96.440308 42.489595,-96.441385 42.489811,-96.442462 42.490026,-96.443972 42.490328,-96.444908 42.490515,-96.445483 42.49063,-96.445508 42.49063,-96.44555 42.49064,-96.445589 42.490669,-96.445629 42.490691,-96.445819 42.490678,-96.446346 42.490625,-96.447675 42.49047,-96.447918 42.490442,-96.44794 42.490439,-96.447988 42.490439,-96.448128 42.490463,-96.448501 42.490545,-96.448963 42.490661,-96.449282 42.490752,-96.44955 42.490843,-96.449707 42.490896,-96.449728 42.490903,-96.449907 42.490953,-96.449952 42.490962,-96.449999 42.490952,-96.450046 42.490933,-96.450092 42.490925,-96.450182 42.490944,-96.45045 42.491038,-96.450729 42.491108,-96.451141 42.491212,-96.451411 42.491294,-96.452335 42.491617,-96.452595 42.491696,-96.452654 42.491714,-96.452695 42.491726,-96.453288 42.491887,-96.454482 42.492197,-96.454708 42.492263,-96.454969 42.492361,-96.455424 42.492498,-96.455609 42.492542,-96.45575 42.492564,-96.455941 42.492577,-96.456185 42.492576,-96.456291 42.492569,-96.45635 42.492565,-96.456479 42.492556,-96.456735 42.492529,-96.456852 42.492517,-96.456914 42.492511,-96.457204 42.492471,-96.457441 42.492428,-96.45767 42.492371,-96.4578 42.492326,-96.457964 42.492249,-96.458245 42.492101,-96.458371 42.492047,-96.458593 42.491975,-96.459421 42.49176,-96.460149 42.491556,-96.460461 42.491456,-96.460764 42.491341,-96.461481 42.491034,-96.461853 42.490862,-96.462025 42.490796,-96.462251 42.49073,-96.462531 42.490667,-96.462861 42.490604,-96.463243 42.490548,-96.463337 42.490528,-96.463472 42.490474,-96.463512 42.490464,-96.463535 42.490488,-96.463558 42.490524,-96.463629 42.490577,-96.463669 42.490595,-96.463714 42.490604,-96.463765 42.490606,-96.463814 42.490602,-96.463861 42.490593,-96.46418 42.490496,-96.464226 42.490488,-96.464322 42.490485,-96.464466 42.490491,-96.464951 42.49054,-96.465389 42.490572,-96.46558 42.490594,-96.465721 42.490618,-96.465904 42.490665,-96.466352 42.490809,-96.466719 42.490905,-96.467322 42.491046,-96.467698 42.491121,-96.468269 42.491213,-96.468796 42.491283,-96.468984 42.491317,-96.46926 42.49139,-96.469394 42.491437,-96.469474 42.491411,-96.469573 42.491406,-96.469619 42.491396,-96.469663 42.491377,-96.469696 42.491351,-96.469707 42.491318,-96.469708 42.49128,-96.469767 42.491067,-96.469823 42.49093,-96.469854 42.490901,-96.469893 42.49088,-96.469947 42.490886,-96.469969 42.490864,-96.469999 42.490573,-96.469991 42.490501,-96.469939 42.490323,-96.469941 42.490253,-96.469966 42.490184,-96.470047 42.490051,-96.47033 42.489712,-96.470389 42.489655,-96.470458 42.489606,-96.470576 42.489544,-96.470749 42.489473,-96.470926 42.489413,-96.471158 42.489357,-96.471299 42.489331,-96.471348 42.489334,-96.471397 42.489332,-96.471445 42.489323,-96.471505 42.489268,-96.471599 42.489262,-96.471748 42.489265,-96.472622 42.48922,-96.472962 42.48922,-96.473254 42.489234,-96.473496 42.489253,-96.473689 42.48928,-96.473827 42.489312,-96.473914 42.48935,-96.474038 42.489411,-96.474078 42.489423,-96.474114 42.489407,-96.474149 42.489376,-96.474194 42.489369,-96.474294 42.489371,-96.474436 42.489395,-96.475031 42.489533,-96.475413 42.489621,-96.475591 42.489677,-96.475852 42.489775,-96.476104 42.489887,-96.476262 42.489969,-96.476369 42.490043,-96.476461 42.490128,-96.476542 42.490218,-96.476609 42.490355,-96.476632 42.490386,-96.476663 42.490413,-96.476778 42.490482,-96.476812 42.490507,-96.47697 42.49069,-96.47711 42.490881,-96.477186 42.491011,-96.477185 42.491046,-96.477151 42.491155,-96.477121 42.491226,-96.477122 42.491261,-96.477159 42.49135,-96.477164 42.491362,-96.477313 42.49163,-96.477447 42.491901,-96.477614 42.492278,-96.477711 42.492556,-96.477775 42.492805,-96.47782 42.493054,-96.477814 42.493125,-96.477785 42.493233,-96.477785 42.49334,-96.477901 42.494346,-96.477914 42.494597,-96.477908 42.494668,-96.477873 42.494774,-96.477827 42.494877,-96.477782 42.494942,-96.477753 42.494971,-96.477574 42.495096,-96.477545 42.495124,-96.477522 42.495154,-96.477498 42.495213,-96.477489 42.495246,-96.477444 42.49547,-96.477445 42.495503,-96.477445 42.495511,-96.477456 42.495545,-96.47753 42.495659,-96.477541 42.495676,-96.477574 42.495782,-96.477577 42.495801,-96.477584 42.495854,-96.477577 42.495924,-96.477526 42.496084,-96.477498 42.496171,-96.477417 42.496468,-96.477297 42.496912,-96.477207 42.497192,-96.476975 42.497742,-96.476913 42.497879,-96.476744 42.498138,-96.476719 42.498183,-96.47653 42.498542,-96.476467 42.498638,-96.476439 42.498667,-96.476361 42.498711,-96.47632 42.498734,-96.476289 42.498761,-96.476252 42.498825,-96.476168 42.499072,-96.476094 42.499205,-96.475916 42.499467,-96.475634 42.499885,-96.475572 42.499978,-96.475523 42.499992,-96.475301 42.500266,-96.475287 42.500287,-96.474745 42.501095,-96.474712 42.501159,-96.474636 42.501305,-96.474367 42.501825,-96.47424 42.502261,-96.474168 42.502511,-96.47414 42.503179,-96.474138 42.50323,-96.474136 42.503288,-96.473334 42.503536,-96.476048 42.507783,-96.477468 42.509613,-96.478203 42.51021,-96.478784 42.510659,-96.478945 42.510783,-96.479023 42.510843,-96.479088 42.510834,-96.479231 42.510814,-96.479344 42.510799,-96.479517 42.510775,-96.479695 42.510751,-96.479917 42.510721,-96.480145 42.51069,-96.480494 42.510643,-96.480873 42.510591,-96.48263 42.510351,-96.483504 42.51028,-96.484213 42.510306,-96.484379 42.510312,-96.485269 42.510483,-96.4866 42.510739,-96.487669 42.511082,-96.488082 42.511251,-96.488163 42.511284,-96.48875 42.511621,-96.488885 42.511699,-96.488894 42.511704,-96.488971 42.511761,-96.489193 42.511925,-96.489383 42.512065,-96.489466 42.512126,-96.489741 42.512329,-96.490241 42.512697,-96.490306 42.512745,-96.490502 42.512889,-96.490752 42.513073,-96.491431 42.513465,-96.492444 42.514183,-96.493068 42.514821,-96.49357 42.515626,-96.493691 42.516309,-96.493714 42.516629,-96.493722 42.516742,-96.493617 42.517325,-96.493449 42.518259,-96.493188 42.51864,-96.493085 42.518791,-96.492869 42.51906,-96.492687 42.519191,-96.492085 42.519625,-96.492044 42.519649,-96.491557 42.519936,-96.49138 42.520018,-96.491216 42.520094,-96.491119 42.520139,-96.491042 42.520175,-96.490777 42.520239,-96.490646 42.52027,-96.490598 42.520404,-96.487687 42.521436,-96.484691 42.522499,-96.479949 42.524246,-96.479007 42.526394,-96.479041 42.526515,-96.479813 42.529601,-96.477707 42.535596,-96.477409 42.539888,-96.476866 42.544433,-96.476733 42.545383,-96.476834 42.546322,-96.476581 42.546467,-96.476838 42.546626,-96.476952 42.546696,-96.47697 42.549169,-96.476965 42.550348,-96.476948 42.554731,-96.47696 42.555972,-96.477358 42.5561,-96.478541 42.556378,-96.481281 42.556744,-96.486326 42.556961,-96.490128 42.556755,-96.491035 42.556593,-96.493098 42.556354,-96.49554 42.55644,-96.497265 42.556981,-96.498544 42.558116,-96.498835 42.55878,-96.498997 42.560832,-96.487075 42.572245,-96.48661 42.57269,-96.486288 42.573008,-96.486146 42.573149,-96.485742 42.57407,-96.485742 42.57422,-96.485742 42.574673,-96.485751 42.574732,-96.485761 42.574795,-96.485797 42.57502,-96.485863 42.575147,-96.485887 42.575192,-96.485921 42.575257,-96.486198 42.575784,-96.486669 42.576059,-96.487748 42.576365,-96.489903 42.576657,-96.491373 42.577067,-96.491748 42.577243,-96.492455 42.577575,-96.492995 42.577828,-96.493535 42.578082,-96.494107 42.578351,-96.494283 42.57845,-96.495002 42.578853,-96.495654 42.579541,-96.496026 42.580382,-96.495969 42.58175,-96.49597 42.581774,-96.495499 42.582792,-96.494909 42.583536,-96.49369 42.584555,-96.492359 42.585411,-96.491492 42.586103,-96.491336 42.586535,-96.491271 42.586806,-96.491476 42.587251,-96.49152 42.587346,-96.492338 42.587814,-96.493599 42.588141,-96.494289 42.588234,-96.494881 42.588314,-96.495474 42.588394,-96.495712 42.588425,-96.495892 42.588427,-96.497054 42.588444,-96.497851 42.588377,-96.499086 42.588425,-96.500167 42.588638,-96.500514 42.588802,-96.500995 42.589233,-96.501082 42.589311,-96.501127 42.58941,-96.501296 42.589786,-96.501466 42.590161,-96.50148 42.590187,-96.501477 42.590248,-96.501474 42.590327,-96.501477 42.590411,-96.501451 42.590519,-96.501446 42.590541,-96.501438 42.59061,-96.501358 42.59075,-96.501277 42.59089,-96.501146 42.591124,-96.501015 42.591358,-96.50072 42.591884,-96.50043 42.592396,-96.500234 42.59273,-96.500239 42.592841,-96.500216 42.593368,-96.500192 42.593896,-96.500183 42.594104,-96.500284 42.594351,-96.500554 42.595009,-96.500607 42.59514,-96.500824 42.595666,-96.500912 42.595882,-96.501001 42.596097,-96.501194 42.59657,-96.501386 42.597042,-96.503784 42.602876,-96.504624 42.604928,-96.504653 42.604998,-96.504689 42.605054,-96.504833 42.605287,-96.504978 42.60552,-96.506624 42.608166,-96.506842 42.608517,-96.50827 42.610811,-96.508499 42.611178,-96.509323 42.612497,-96.509453 42.612704,-96.510015 42.613211,-96.511842 42.614406,-96.513557 42.615469,-96.515024 42.616183,-96.51658 42.616598,-96.517582 42.616643,-96.517663 42.616647,-96.517712 42.616638,-96.518183 42.616552,-96.51834 42.616522,-96.518654 42.616465,-96.518747 42.616448,-96.518881 42.616398,-96.519169 42.616286,-96.519457 42.616174,-96.519694 42.616083,-96.51983 42.615966,-96.520371 42.615502,-96.521257 42.61457,-96.521318 42.614506,-96.521339 42.614462,-96.52204 42.612995,-96.522361 42.612641,-96.522807 42.612148,-96.523755 42.611252,-96.523876 42.611129,-96.524635 42.610355,-96.525718 42.609276,-96.525739 42.609271,-96.52653 42.60901,-96.527009 42.608946,-96.527026 42.608944,-96.527542 42.608955,-96.527816 42.608961,-96.528121 42.609095,-96.528493 42.609259,-96.528876 42.609425,-96.529169 42.609641,-96.529327 42.609757,-96.529937 42.610471,-96.530177 42.611086,-96.530456 42.611799,-96.530884 42.612795,-96.531023 42.613056,-96.531335 42.613642,-96.53147 42.614472,-96.531483 42.614539,-96.53155 42.614896,-96.531615 42.615318,-96.53147 42.615966,-96.53132 42.616624,-96.531312 42.616647,-96.531281 42.616677,-96.530929 42.617012,-96.53073 42.617266,-96.53059 42.617444,-96.529914 42.617859,-96.529034 42.61824,-96.528726 42.618308,-96.528131 42.61844,-96.527455 42.61834,-96.526844 42.618125,-96.526259 42.617925,-96.525176 42.617776,-96.524001 42.617624,-96.523754 42.617592,-96.522747 42.617578,-96.522581 42.617576,-96.521453 42.617676,-96.521073 42.617854,-96.520709 42.618024,-96.519039 42.618986,-96.518273 42.619673,-96.518114 42.619816,-96.518089 42.619855,-96.517324 42.621028,-96.516828 42.621891,-96.516426 42.622789,-96.516381 42.622941,-96.516245 42.623398,-96.516201 42.623551,-96.51607 42.623837,-96.515681 42.624696,-96.515551 42.624983,-96.5155 42.625261,-96.5155 42.625265,-96.515473 42.625515,-96.515469 42.625906,-96.515463 42.626013,-96.515448 42.626108,-96.515405 42.626388,-96.515368 42.626625,-96.515353 42.626723,-96.515226 42.627333,-96.515178 42.627569,-96.51514 42.628228,-96.515158 42.62837,-96.515335 42.629,-96.515359 42.629069,-96.515607 42.629611,-96.515661 42.629711,-96.515749 42.629838,-96.516084 42.630275,-96.516513 42.630709,-96.51684 42.630975,-96.51788 42.631727,-96.518305 42.632021,-96.518582 42.632273,-96.519159 42.632658,-96.519428 42.632858,-96.51957 42.632964,-96.51967 42.633043,-96.519824 42.633181,-96.520414 42.63375,-96.520796 42.634076,-96.520854 42.634134,-96.521158 42.634413,-96.521532 42.634832,-96.521601 42.634883,-96.521732 42.63493,-96.521779 42.634942,-96.52211 42.635003,-96.522403 42.63502,-96.522542 42.635001,-96.522681 42.634966,-96.523665 42.634649,-96.523801 42.634608,-96.523986 42.634562,-96.524271 42.634511,-96.524466 42.634498,-96.524612 42.634508,-96.524754 42.634534,-96.524799 42.634549,-96.525079 42.634692,-96.525143 42.634746,-96.525167 42.634777,-96.525377 42.635139,-96.525414 42.635242,-96.525422 42.635277,-96.525453 42.635555,-96.525458 42.635598,-96.525448 42.635919,-96.525412 42.636204,-96.525372 42.63638,-96.525248 42.636872,-96.525205 42.63737,-96.52523 42.637869,-96.525337 42.638289,-96.525573 42.639164,-96.525692 42.639474,-96.525802 42.63971,-96.525886 42.639878,-96.525945 42.640014,-96.525977 42.640118,-96.525993 42.640189,-96.526043 42.640363,-96.526188 42.640704,-96.526227 42.640807,-96.526414 42.641213,-96.526456 42.641277,-96.52663 42.64145,-96.527011 42.641675,-96.52708 42.641703,-96.527533 42.64184,-96.527671 42.641875,-96.528915 42.64208,-96.529492 42.64216,-96.529637 42.642176,-96.530267 42.642232,-96.531067 42.642398,-96.531665 42.642557,-96.53211 42.642706,-96.532453 42.642844,-96.532787 42.642994,-96.533272 42.643236,-96.533822 42.643535,-96.534007 42.643641,-96.535361 42.644419,-96.536301 42.644993,-96.536433 42.645098,-96.537075 42.645588,-96.537173 42.645668,-96.537391 42.645861,-96.537472 42.645951,-96.537708 42.646304,-96.537851 42.64657,-96.537917 42.646742,-96.538002 42.646909,-96.538073 42.647154,-96.538164 42.647686,-96.53817 42.6479,-96.538145 42.6484,-96.538116 42.648613,-96.538069 42.648788,-96.538066 42.648824,-96.538063 42.648837,-96.538035 42.648983,-96.538026 42.649032,-96.537989 42.649224,-96.537878 42.649803,-96.537842 42.649996,-96.537803 42.650203,-96.53757 42.651071,-96.537456 42.651501,-96.537413 42.651713,-96.53727 42.652781,-96.537299 42.653138,-96.537344 42.65335,-96.537361 42.653743,-96.537368 42.653815,-96.537495 42.65435,-96.537502 42.654378,-96.537579 42.654584,-96.537767 42.655425,-96.537818 42.6556,-96.537929 42.655874,-96.537976 42.655976,-96.538295 42.656458,-96.538493 42.656694,-96.538525 42.656732,-96.538595 42.656826,-96.538898 42.657193,-96.539248 42.657538,-96.539802 42.658211,-96.540167 42.65859,-96.54036 42.658797,-96.540757 42.659288,-96.540873 42.659485,-96.541012 42.659674,-96.541219 42.659916,-96.541363 42.660059,-96.541393 42.660089,-96.541455 42.660144,-96.541524 42.660194,-96.541754 42.660378,-96.541824 42.660428,-96.542237 42.660827,-96.542365 42.660934,-96.542488 42.661011,-96.542623 42.661097,-96.542858 42.661227,-96.542986 42.661279,-96.543389 42.66141,-96.543482 42.661433,-96.543913 42.661502,-96.544058 42.66152,-96.544349 42.661547,-96.545229 42.661591,-96.545816 42.661579,-96.546302 42.661534,-96.546588 42.661485,-96.547008 42.661387,-96.54712 42.661353,-96.54746 42.661251,-96.54779 42.661182,-96.547834 42.661166,-96.547999 42.661089,-96.548796 42.660816,-96.549386 42.660646,-96.549608 42.660571,-96.550022 42.66038,-96.550325 42.660264,-96.551901 42.659545,-96.5523 42.65934,-96.552591 42.659148,-96.552904 42.658977,-96.553581 42.658689,-96.554316 42.658407,-96.554446 42.658365,-96.554765 42.658274,-96.555483 42.658045,-96.55608 42.657885,-96.556542 42.657768,-96.556778 42.657725,-96.557547 42.657613,-96.557743 42.657605,-96.55833 42.657597,-96.558575 42.6576,-96.558672 42.657608,-96.558909 42.657653,-96.558999 42.657679,-96.559266 42.657769,-96.559388 42.657829,-96.559605 42.657974,-96.559751 42.658117,-96.559868 42.658352,-96.559918 42.658563,-96.559944 42.658848,-96.55994 42.658875,-96.559919 42.659025,-96.559677 42.659797,-96.55946 42.660454,-96.55943 42.660558,-96.559408 42.660664,-96.559401 42.660842,-96.559431 42.661018,-96.55955 42.661401,-96.559609 42.661537,-96.559745 42.661879,-96.559776 42.661946,-96.559797 42.662016,-96.559857 42.66255,-96.559823 42.662834,-96.559808 42.662868,-96.559674 42.663098,-96.559553 42.663254,-96.559454 42.663357,-96.559051 42.663541,-96.558869 42.663595,-96.558822 42.663605,-96.558145 42.66369,-96.557755 42.663715,-96.557021 42.663741,-96.556581 42.663724,-96.556192 42.66375,-96.556096 42.663764,-96.55605 42.663778,-96.555965 42.663812,-96.555808 42.663897,-96.555776 42.663924,-96.555761 42.663958,-96.555747 42.664029,-96.555749 42.664101,-96.55577 42.664207,-96.555867 42.664409,-96.556012 42.664596,-96.556073 42.664651,-96.556305 42.664836,-96.557292 42.665582,-96.557752 42.666045,-96.557907 42.666183,-96.558045 42.666321,-96.558339 42.666616,-96.558486 42.666802,-96.55853 42.666866,-96.558609 42.667219,-96.558672 42.667391,-96.558757 42.66752,-96.558812 42.667579,-96.558959 42.667843,-96.55931 42.668311,-96.559823 42.668834,-96.560019 42.668992,-96.56013 42.669061,-96.560164 42.669086,-96.560278 42.669152,-96.560795 42.669423,-96.561131 42.669567,-96.561306 42.669632,-96.561395 42.669661,-96.561943 42.669817,-96.562334 42.669966,-96.562651 42.670133,-96.562863 42.670276,-96.56326 42.670485,-96.563583 42.670703,-96.563687 42.670778,-96.564297 42.671244,-96.564389 42.671328,-96.564613 42.671604,-96.564741 42.671797,-96.564766 42.671828,-96.56509 42.672142,-96.565262 42.672358,-96.565301 42.672424,-96.565485 42.672676,-96.565504 42.672709,-96.565598 42.672987,-96.56563 42.673054,-96.565867 42.673447,-96.565905 42.673624,-96.565968 42.673796,-96.566003 42.673937,-96.566092 42.674791,-96.566184 42.675287,-96.566332 42.675665,-96.566463 42.675934,-96.566483 42.675967,-96.566532 42.676029,-96.566964 42.676417,-96.567001 42.67644,-96.567044 42.676458,-96.567091 42.676467,-96.567237 42.676477,-96.567384 42.676479,-96.567529 42.676464,-96.567575 42.676453,-96.56801 42.676289,-96.568049 42.676267,-96.568285 42.676086,-96.568508 42.675947,-96.56879 42.675804,-96.568904 42.675736,-96.56907 42.675605,-96.569707 42.67497,-96.569776 42.674875,-96.569895 42.674679,-96.570017 42.674334,-96.570124 42.673803,-96.570293 42.672632,-96.570424 42.672105,-96.570493 42.67201,-96.570575 42.671804,-96.570639 42.671707,-96.570939 42.67134,-96.571055 42.671218,-96.571079 42.671194,-96.571112 42.671167,-96.57122 42.671094,-96.571567 42.670896,-96.571653 42.670863,-96.572067 42.670753,-96.572304 42.670707,-96.572401 42.670697,-96.57279 42.670673,-96.573085 42.670667,-96.573134 42.670669,-96.57357 42.670721,-96.574587 42.670979,-96.57467 42.671018,-96.574716 42.671031,-96.574953 42.671077,-96.576817 42.671375,-96.577395 42.671443,-96.577852 42.671569,-96.578024 42.671636,-96.578365 42.671814,-96.578399 42.67184,-96.578428 42.671869,-96.578474 42.671932,-96.578513 42.671997,-96.578576 42.672207,-96.578574 42.672242,-96.578551 42.672312,-96.578517 42.672379,-96.578471 42.672442,-96.578441 42.67247,-96.578274 42.6726,-96.578236 42.672623,-96.577978 42.672724,-96.577344 42.672916,-96.57647 42.673003,-96.575655 42.673121,-96.575467 42.673163,-96.575336 42.673211,-96.574589 42.67355,-96.574429 42.673631,-96.574354 42.673677,-96.574257 42.673757,-96.573926 42.674017,-96.573863 42.674072,-96.573722 42.674218,-96.573338 42.674674,-96.573173 42.674893,-96.573061 42.675091,-96.572881 42.675223,-96.572745 42.675372,-96.572614 42.675564,-96.572142 42.676463,-96.572111 42.676531,-96.572053 42.676704,-96.571962 42.677055,-96.571944 42.677161,-96.571927 42.677482,-96.571962 42.67791,-96.572008 42.678157,-96.572029 42.678226,-96.57212 42.678429,-96.572141 42.678461,-96.572192 42.678522,-96.572301 42.67872,-96.572416 42.678836,-96.572448 42.678863,-96.572488 42.678884,-96.572623 42.678926,-96.572765 42.678951,-96.572861 42.678963,-96.57291 42.678965,-96.573008 42.678961,-96.57325 42.678931,-96.57353 42.678867,-96.573845 42.67877,-96.573975 42.67872,-96.574679 42.678332,-96.574981 42.67815,-96.575341 42.677964,-96.575428 42.677931,-96.57598 42.677783,-96.576263 42.677726,-96.577041 42.677651,-96.577676 42.67762,-96.577921 42.677632,-96.578016 42.67765,-96.578154 42.677685,-96.578289 42.677727,-96.578455 42.677803,-96.578492 42.677827,-96.578648 42.677964,-96.578722 42.678057,-96.578757 42.678123,-96.578768 42.678158,-96.578803 42.67837,-96.578781 42.678467,-96.578727 42.678567,-96.578704 42.678598,-96.578508 42.678757,-96.578439 42.678807,-96.578211 42.678943,-96.577848 42.679126,-96.577018 42.679432,-96.576932 42.679467,-96.576338 42.679782,-96.576119 42.679862,-96.575992 42.679914,-96.575953 42.679937,-96.575669 42.680133,-96.57523 42.68047,-96.575091 42.68061,-96.574972 42.68073,-96.574907 42.680826,-96.57467 42.681295,-96.574597 42.681502,-96.57458 42.681609,-96.574568 42.681966,-96.574573 42.682002,-96.574594 42.682071,-96.574702 42.682309,-96.574877 42.682524,-96.574906 42.682552,-96.57518 42.682757,-96.575295 42.682823,-96.575693 42.682962,-96.575784 42.682989,-96.576108 42.68307,-96.576252 42.683092,-96.576496 42.68311,-96.576692 42.683109,-96.577913 42.683035,-96.578254 42.683014,-96.578495 42.682982,-96.578691 42.682969,-96.578984 42.682981,-96.579131 42.682974,-96.580049 42.682864,-96.580292 42.682848,-96.580683 42.682872,-96.581365 42.682905,-96.582341 42.68294,-96.582684 42.68294,-96.583024 42.68291,-96.583903 42.682928,-96.584244 42.682959,-96.584635 42.682972,-96.584732 42.682982,-96.584828 42.682997,-96.585153 42.683065,-96.5852 42.683075,-96.585296 42.683088,-96.585443 42.683089,-96.585833 42.683059,-96.585881 42.683065,-96.585928 42.683076,-96.586186 42.683177,-96.586307 42.683289,-96.586332 42.68332,-96.586371 42.683385,-96.586382 42.68342,-96.58643 42.683668,-96.586431 42.683775,-96.586425 42.68381,-96.586307 42.68412,-96.58624 42.684254,-96.586015 42.684649,-96.585895 42.684844,-96.585752 42.685147,-96.585462 42.685829,-96.585451 42.685864,-96.585415 42.686076,-96.585402 42.68629,-96.585428 42.68661,-96.585493 42.687001,-96.58553 42.687141,-96.58566 42.687411,-96.58573 42.687544,-96.58587 42.687772,-96.586132 42.688115,-96.586295 42.688413,-96.586303 42.688448,-96.586252 42.689375,-96.586259 42.689589,-96.586268 42.689624,-96.586342 42.689794,-96.586383 42.689859,-96.586485 42.689981,-96.586516 42.690008,-96.586757 42.690131,-96.586801 42.690147,-96.586848 42.690158,-96.587188 42.690188,-96.587873 42.690174,-96.58797 42.690175,-96.588165 42.690168,-96.588262 42.690177,-96.588592 42.69024,-96.588636 42.690254,-96.588843 42.690348,-96.589185 42.690549,-96.589274 42.690635,-96.589428 42.690816,-96.589491 42.69087,-96.589595 42.690946,-96.589635 42.690966,-96.589721 42.691,-96.589842 42.691041,-96.590133 42.691075,-96.590427 42.691076,-96.590864 42.691039,-96.59105 42.690996,-96.591352 42.690879,-96.591592 42.690759,-96.591768 42.690634,-96.591852 42.690546,-96.591888 42.69048,-96.592014 42.690209,-96.59203 42.690139,-96.592032 42.690032,-96.592026 42.689996,-96.591922 42.689647,-96.59158 42.689055,-96.591547 42.688988,-96.591505 42.688885,-96.591418 42.688498,-96.591422 42.688356,-96.59143 42.688285,-96.591487 42.688111,-96.591656 42.687737,-96.591676 42.687705,-96.591969 42.687375,-96.592001 42.687348,-96.592295 42.68716,-96.592932 42.686893,-96.593062 42.686843,-96.593488 42.68676,-96.593827 42.686722,-96.594022 42.68671,-96.594609 42.686705,-96.595733 42.686736,-96.59666 42.686809,-96.596709 42.68681,-96.597289 42.686745,-96.597826 42.686742,-96.598884 42.686667,-96.598933 42.686672,-96.599315 42.686736,-96.599449 42.686781,-96.599639 42.686893,-96.599927 42.687137,-96.599954 42.687167,-96.599975 42.687199,-96.600042 42.687333,-96.600066 42.687365,-96.600133 42.687499,-96.60015 42.687605,-96.600177 42.687926,-96.600177 42.687997,-96.600172 42.688033,-96.60015 42.688102,-96.600098 42.688203,-96.600003 42.688367,-96.599773 42.688641,-96.599655 42.688754,-96.599621 42.688781,-96.599381 42.688904,-96.599161 42.688982,-96.599022 42.689015,-96.598974 42.689023,-96.598877 42.689031,-96.598637 42.688996,-96.598227 42.688877,-96.598184 42.68886,-96.597883 42.688678,-96.597318 42.688394,-96.596851 42.688287,-96.596754 42.688276,-96.596559 42.688288,-96.596324 42.688337,-96.59628 42.688354,-96.596074 42.688449,-96.595927 42.688544,-96.595614 42.688712,-96.595437 42.688773,-96.595251 42.688818,-96.595203 42.688824,-96.595154 42.688825,-96.594912 42.688844,-96.594828 42.688881,-96.594782 42.688895,-96.594494 42.688936,-96.594208 42.688986,-96.594119 42.689016,-96.594039 42.689057,-96.593936 42.689133,-96.593829 42.689253,-96.593735 42.689378,-96.593715 42.689411,-96.593614 42.689723,-96.593613 42.689794,-96.593663 42.690005,-96.593769 42.690205,-96.593907 42.690394,-96.594056 42.690536,-96.594157 42.690614,-96.594378 42.690755,-96.594499 42.690816,-96.594542 42.690834,-96.594851 42.690941,-96.594943 42.690966,-96.595904 42.691092,-96.596087 42.691145,-96.596125 42.691167,-96.5963 42.691291,-96.596387 42.691377,-96.596453 42.691472,-96.596466 42.691507,-96.596502 42.691647,-96.596539 42.691932,-96.596528 42.692003,-96.596429 42.692242,-96.596408 42.692275,-96.596051 42.692701,-96.596021 42.692729,-96.595922 42.6928,-96.595676 42.692917,-96.595503 42.692984,-96.594969 42.693237,-96.594418 42.693467,-96.594336 42.693505,-96.594292 42.69352,-96.594167 42.693576,-96.593906 42.693788,-96.59388 42.693818,-96.593822 42.693916,-96.593804 42.693986,-96.593829 42.694164,-96.593928 42.694327,-96.593952 42.694358,-96.593986 42.694384,-96.594252 42.694541,-96.594336 42.694579,-96.59452 42.694627,-96.594662 42.694656,-96.595338 42.694738,-96.59553 42.694767,-96.59572 42.694802,-96.595954 42.694854,-96.596635 42.695057,-96.597081 42.695278,-96.597307 42.695415,-96.597624 42.695637,-96.597746 42.695749,-96.597997 42.695968,-96.598234 42.696149,-96.598612 42.696565,-96.599028 42.696963,-96.599142 42.697121,-96.599154 42.697156,-96.59917 42.697439,-96.599115 42.69783,-96.599116 42.697866,-96.599138 42.697971,-96.599162 42.698041,-96.599168 42.698076,-96.599219 42.698214,-96.599263 42.698316,-96.599307 42.698379,-96.599505 42.698705,-96.59955 42.698769,-96.599603 42.698829,-96.599637 42.698854,-96.599858 42.698996,-96.599941 42.699032,-96.599987 42.699045,-96.600604 42.699158,-96.600653 42.699162,-96.600946 42.699159,-96.600994 42.699154,-96.601041 42.699144,-96.60113 42.699114,-96.601342 42.699024,-96.601381 42.699003,-96.601447 42.69895,-96.601494 42.698849,-96.601532 42.698708,-96.601549 42.698422,-96.601534 42.697851,-96.601537 42.697744,-96.601577 42.697641,-96.601651 42.697527,-96.601809 42.69739,-96.60189 42.697301,-96.601993 42.697224,-96.602241 42.697053,-96.602281 42.697033,-96.602555 42.696954,-96.6027 42.696938,-96.602847 42.696932,-96.603285 42.69697,-96.603857 42.697062,-96.603906 42.697065,-96.604003 42.697055,-96.604027 42.697048,-96.604186 42.697003,-96.604312 42.696948,-96.604346 42.696923,-96.604375 42.696894,-96.604523 42.696708,-96.604574 42.696533,-96.604572 42.696426,-96.60456 42.696355,-96.60456 42.69632,-96.604418 42.695903,-96.60442 42.695618,-96.604436 42.695584,-96.604526 42.695457,-96.60468 42.695275,-96.604769 42.695189,-96.604924 42.695051,-96.605265 42.694848,-96.605643 42.694683,-96.605875 42.694624,-96.605923 42.694615,-96.606116 42.694591,-96.60636 42.694572,-96.606801 42.694565,-96.607486 42.694607,-96.607873 42.694653,-96.608018 42.694667,-96.608654 42.694705,-96.608801 42.694706,-96.609143 42.69468,-96.609721 42.694598,-96.610159 42.69456,-96.610208 42.69456,-96.610687 42.694634,-96.610782 42.694652,-96.610922 42.694685,-96.611275 42.694809,-96.61158 42.694988,-96.611622 42.695006,-96.611698 42.69505,-96.611769 42.695099,-96.611795 42.69513,-96.612056 42.695512,-96.612086 42.69558,-96.612109 42.695649,-96.612181 42.695931,-96.612206 42.696108,-96.612199 42.696215,-96.612121 42.696495,-96.612045 42.696623,-96.61179 42.696885,-96.611167 42.697389,-96.611043 42.6975,-96.610583 42.69787,-96.610369 42.698017,-96.61018 42.698131,-96.609624 42.698425,-96.60958 42.698442,-96.609339 42.698473,-96.609192 42.698472,-96.609048 42.698449,-96.608922 42.698394,-96.608429 42.698101,-96.60835 42.69806,-96.608023 42.697906,-96.607896 42.697852,-96.60767 42.697785,-96.607622 42.69778,-96.60748 42.697755,-96.607432 42.69775,-96.606893 42.697733,-96.606358 42.697781,-96.605692 42.697897,-96.605602 42.697924,-96.605515 42.697956,-96.605381 42.697999,-96.605335 42.69801,-96.605247 42.698041,-96.605039 42.698136,-96.604963 42.698181,-96.604726 42.698361,-96.604603 42.698473,-96.604528 42.698565,-96.604419 42.698765,-96.604348 42.699009,-96.604331 42.699152,-96.604328 42.699295,-96.604349 42.699509,-96.604466 42.700038,-96.604683 42.700661,-96.6048 42.701189,-96.604825 42.701258,-96.604912 42.701463,-96.604946 42.70153,-96.605088 42.701694,-96.605147 42.701748,-96.605352 42.701901,-96.605469 42.701966,-96.605596 42.70202,-96.606423 42.702237,-96.60685 42.702317,-96.60787 42.702401,-96.608065 42.702414,-96.608505 42.702432,-96.60913 42.702424,-96.609436 42.702421,-96.609485 42.702416,-96.609577 42.702393,-96.609666 42.702364,-96.609713 42.702353,-96.609801 42.702324,-96.609993 42.702212,-96.610284 42.702082,-96.610426 42.701984,-96.610456 42.701956,-96.610619 42.701825,-96.610648 42.701796,-96.610791 42.70161,-96.610867 42.701519,-96.611134 42.701219,-96.611698 42.700152,-96.611767 42.700058,-96.611851 42.699969,-96.612392 42.699508,-96.612638 42.699333,-96.612956 42.699168,-96.613748 42.698978,-96.614013 42.698887,-96.614504 42.69865,-96.614687 42.698532,-96.614728 42.698513,-96.615002 42.698435,-96.61505 42.698429,-96.615148 42.698433,-96.615241 42.698457,-96.615409 42.69853,-96.615444 42.698554,-96.615508 42.698608,-96.615627 42.698765,-96.615644 42.698798,-96.615639 42.698869,-96.615627 42.698904,-96.615613 42.698975,-96.615617 42.69901,-96.61565 42.699151,-96.615649 42.699187,-96.615516 42.699713,-96.615516 42.699855,-96.615562 42.699994,-96.615722 42.700254,-96.615751 42.700283,-96.615825 42.70033,-96.615945 42.700391,-96.616053 42.700428,-96.616078 42.700437,-96.616169 42.700463,-96.616504 42.700515,-96.616601 42.700523,-96.616846 42.70051,-96.61694 42.700492,-96.616986 42.700479,-96.617294 42.700369,-96.617375 42.700329,-96.617492 42.700264,-96.617676 42.700147,-96.618278 42.69982,-96.618424 42.699742,-96.61847 42.699729,-96.618807 42.699684,-96.618905 42.699682,-96.618995 42.699711,-96.619122 42.699764,-96.619162 42.699786,-96.619194 42.699812,-96.619273 42.699903,-96.619415 42.700091,-96.619545 42.700322,-96.619604 42.700458,-96.619684 42.700663,-96.619723 42.700803,-96.619749 42.700871,-96.619776 42.700976,-96.619767 42.701011,-96.619764 42.701081,-96.619732 42.701329,-96.619726 42.701436,-96.619748 42.701721,-96.619761 42.701827,-96.619815 42.701964,-96.619964 42.702149,-96.619996 42.702176,-96.62045 42.702448,-96.620515 42.702501,-96.620822 42.702731,-96.620902 42.70282,-96.620941 42.702886,-96.620961 42.702943,-96.620991 42.703024,-96.62111 42.703589,-96.621243 42.703934,-96.62129 42.704109,-96.621408 42.704456,-96.621552 42.704768,-96.621642 42.704963,-96.621933 42.705275,-96.622 42.705347,-96.622217 42.705668,-96.622563 42.705971,-96.622666 42.706103,-96.622684 42.706126,-96.622967 42.706541,-96.623038 42.706635,-96.623358 42.70695,-96.623413 42.707009,-96.623881 42.707555,-96.623916 42.707579,-96.623957 42.7076,-96.624216 42.7077,-96.624263 42.707711,-96.624361 42.707717,-96.624497 42.70768,-96.62475 42.707571,-96.624981 42.707439,-96.6251 42.707326,-96.62517 42.707278,-96.625208 42.707253,-96.625287 42.707163,-96.625305 42.707129,-96.625392 42.706814,-96.625395 42.706493,-96.62535 42.706234,-96.625346 42.706209,-96.625275 42.705892,-96.625189 42.705686,-96.625102 42.70552,-96.624955 42.705105,-96.624916 42.704893,-96.624916 42.704822,-96.624991 42.704579,-96.62505 42.704481,-96.625077 42.704451,-96.625208 42.704345,-96.625246 42.704322,-96.625486 42.704198,-96.625529 42.704181,-96.62598 42.704042,-96.626108 42.704024,-96.626365 42.70399,-96.626414 42.703988,-96.626512 42.703995,-96.62675 42.704036,-96.626843 42.704058,-96.626978 42.7041,-96.62702 42.704119,-96.627214 42.704228,-96.627325 42.704297,-96.627406 42.704337,-96.62784 42.704677,-96.62791 42.704727,-96.628095 42.704843,-96.628384 42.704978,-96.628428 42.704995,-96.628521 42.705015,-96.629325 42.705017,-96.629372 42.705025,-96.629511 42.70506,-96.62992 42.705255,-96.630154 42.705438,-96.630207 42.705498,-96.630353 42.705684,-96.630413 42.705857,-96.630443 42.706569,-96.630467 42.706747,-96.630441 42.706888,-96.630299 42.707268,-96.630092 42.707592,-96.629832 42.707936,-96.629749 42.708065,-96.62944 42.708816,-96.629392 42.708918,-96.629333 42.709015,-96.629307 42.709046,-96.629276 42.709074,-96.62917 42.709148,-96.628962 42.709242,-96.62882 42.70927,-96.628706 42.709273,-96.628282 42.709289,-96.62814 42.709315,-96.627858 42.709374,-96.627631 42.709441,-96.627498 42.709486,-96.626888 42.7099,-96.626855 42.709926,-96.626779 42.710018,-96.626539 42.710329,-96.626345 42.710657,-96.626265 42.710747,-96.626043 42.710968,-96.625977 42.711063,-96.625951 42.711132,-96.625936 42.71118,-96.625833 42.711515,-96.625636 42.711881,-96.625448 42.712171,-96.625422 42.71224,-96.625238 42.712645,-96.625222 42.712671,-96.625144 42.712811,-96.625027 42.712924,-96.624904 42.713119,-96.62468 42.713475,-96.624559 42.713707,-96.62442 42.713977,-96.624406 42.714011,-96.624284 42.714468,-96.62426 42.714717,-96.62427 42.714895,-96.624315 42.71518,-96.624373 42.715316,-96.62453 42.715617,-96.624545 42.715643,-96.624568 42.715682,-96.624745 42.715896,-96.624799 42.715955,-96.624834 42.71598,-96.625042 42.716095,-96.625139 42.716148,-96.625186 42.716175,-96.625323 42.716277,-96.625418 42.716329,-96.62544 42.716341,-96.62551 42.716392,-96.625748 42.716771,-96.625773 42.716802,-96.625948 42.716926,-96.626146 42.717032,-96.626278 42.71708,-96.626629 42.717166,-96.626743 42.717194,-96.627141 42.717333,-96.627368 42.7174,-96.627636 42.717488,-96.627719 42.717527,-96.627936 42.717671,-96.627969 42.717697,-96.627992 42.717729,-96.628006 42.717763,-96.628011 42.717798,-96.628001 42.717833,-96.627923 42.718003,-96.627882 42.718068,-96.627826 42.718126,-96.627762 42.71818,-96.627488 42.718382,-96.627258 42.718516,-96.627019 42.718641,-96.626798 42.718718,-96.626593 42.718816,-96.626453 42.718916,-96.626389 42.71897,-96.626092 42.719251,-96.62589 42.719409,-96.625625 42.719617,-96.625498 42.719726,-96.625352 42.719821,-96.624967 42.720276,-96.624882 42.720405,-96.624545 42.720944,-96.624465 42.721113,-96.624402 42.721503,-96.624395 42.721574,-96.624413 42.721967,-96.624434 42.722073,-96.624455 42.722143,-96.624596 42.722485,-96.624745 42.72267,-96.625003 42.722929,-96.625247 42.723104,-96.625332 42.723191,-96.625393 42.723327,-96.625452 42.723609,-96.625454 42.723645,-96.625437 42.723823,-96.625428 42.723858,-96.625309 42.724168,-96.625227 42.724297,-96.624792 42.724729,-96.624755 42.724753,-96.624658 42.724832,-96.624535 42.724944,-96.624466 42.725039,-96.624447 42.725072,-96.624434 42.725106,-96.624414 42.725212,-96.624446 42.725317,-96.624464 42.72535,-96.624691 42.725626,-96.624723 42.725652,-96.624764 42.725673,-96.624937 42.72574,-96.625218 42.725803,-96.625555 42.725861,-96.6256 42.725869,-96.626039 42.725898,-96.627019 42.725934,-96.627503 42.725878,-96.628058 42.725737,-96.628626 42.725629,-96.628918 42.725599,-96.629348 42.725528,-96.629939 42.725351,-96.630466 42.725162,-96.630628 42.725081,-96.630672 42.725067,-96.631406 42.725033,-96.631598 42.725004,-96.631883 42.724951,-96.632164 42.724888,-96.632209 42.724874,-96.632425 42.72479,-96.632931 42.724507,-96.633236 42.724327,-96.63352 42.724188,-96.633703 42.724137,-96.633752 42.724135,-96.633801 42.724138,-96.633896 42.724156,-96.634118 42.724257,-96.634189 42.724306,-96.634278 42.724391,-96.634304 42.724421,-96.634509 42.724706,-96.634642 42.725011,-96.634665 42.725042,-96.6347 42.725108,-96.634812 42.725598,-96.634814 42.725741,-96.634806 42.725847,-96.634769 42.725988,-96.634743 42.726057,-96.634704 42.726122,-96.634363 42.726379,-96.634321 42.726397,-96.633781 42.726567,-96.633378 42.726699,-96.633287 42.726725,-96.633239 42.726733,-96.6331 42.726766,-96.632925 42.726831,-96.632807 42.726895,-96.632771 42.726919,-96.632572 42.727077,-96.632517 42.727136,-96.632476 42.727239,-96.632467 42.727274,-96.632462 42.727381,-96.632465 42.727453,-96.632522 42.728022,-96.632507 42.728129,-96.632376 42.728436,-96.632357 42.728469,-96.632243 42.728586,-96.632178 42.728639,-96.632056 42.728751,-96.632021 42.728776,-96.631897 42.728833,-96.631685 42.728922,-96.631186 42.729073,-96.630978 42.729167,-96.630677 42.72935,-96.630647 42.729378,-96.630623 42.72941,-96.630501 42.729605,-96.630484 42.729639,-96.630434 42.729777,-96.630426 42.729812,-96.630432 42.729919,-96.630522 42.730234,-96.630908 42.730772,-96.630985 42.730863,-96.631321 42.73117,-96.631801 42.731527,-96.632186 42.731851,-96.632289 42.731927,-96.632405 42.732042,-96.632467 42.732097,-96.632493 42.732127,-96.632587 42.732209,-96.632628 42.732228,-96.63302 42.732376,-96.633225 42.73243,-96.633343 42.732462,-96.633392 42.732466,-96.633578 42.732462,-96.634166 42.732492,-96.634509 42.732485,-96.634705 42.732491,-96.635187 42.732557,-96.635467 42.732622,-96.635643 42.732685,-96.635857 42.732773,-96.636077 42.732851,-96.63631 42.732983,-96.636398 42.733014,-96.636438 42.733034,-96.636511 42.733082,-96.636648 42.733183,-96.63672 42.733231,-96.636816 42.733312,-96.637575 42.734013,-96.637641 42.734066,-96.637988 42.734316,-96.638089 42.734394,-96.638325 42.734622,-96.638348 42.734654,-96.638947 42.735764,-96.638959 42.735786,-96.639097 42.736001,-96.639333 42.736367,-96.639364 42.736435,-96.639451 42.736758,-96.639468 42.736821,-96.639485 42.736928,-96.639484 42.736963,-96.639467 42.737034,-96.63941 42.73717,-96.639302 42.73729,-96.63927 42.737317,-96.639155 42.737383,-96.638984 42.737453,-96.638846 42.737491,-96.638749 42.737501,-96.638358 42.737476,-96.638262 42.737464,-96.638025 42.737419,-96.637551 42.737269,-96.636181 42.736838,-96.635159 42.736585,-96.635024 42.736543,-96.634545 42.736294,-96.63436 42.736177,-96.634109 42.735933,-96.634076 42.735907,-96.633715 42.735721,-96.63355 42.735644,-96.633353 42.735537,-96.633095 42.735434,-96.632964 42.735386,-96.632829 42.735343,-96.632365 42.735229,-96.632225 42.735198,-96.632034 42.735166,-96.631987 42.735155,-96.631943 42.735139,-96.631898 42.735128,-96.631751 42.735127,-96.631655 42.735113,-96.631602 42.735107,-96.631462 42.735092,-96.631367 42.735076,-96.631172 42.735078,-96.630886 42.735111,-96.630839 42.735122,-96.630684 42.735207,-96.630622 42.735261,-96.630586 42.735286,-96.630525 42.735341,-96.630436 42.735468,-96.630404 42.735536,-96.630393 42.73557,-96.630366 42.735748,-96.630383 42.735962,-96.630448 42.736171,-96.630489 42.736265,-96.630537 42.736375,-96.630728 42.736665,-96.631073 42.737054,-96.631108 42.73708,-96.631295 42.737195,-96.631808 42.737404,-96.632037 42.737468,-96.632078 42.737488,-96.632152 42.737535,-96.632247 42.737617,-96.632335 42.737703,-96.632643 42.737981,-96.633123 42.738479,-96.633326 42.738764,-96.633443 42.738878,-96.63351 42.738931,-96.633723 42.739079,-96.633876 42.739169,-96.63398 42.739245,-96.634067 42.739331,-96.634242 42.739456,-96.634442 42.73956,-96.634583 42.739659,-96.634809 42.739847,-96.634891 42.739936,-96.635148 42.74024,-96.635466 42.740683,-96.635561 42.740847,-96.635697 42.741299,-96.635728 42.741513,-96.635719 42.741555,-96.635679 42.74176,-96.635668 42.741795,-96.635612 42.741894,-96.635511 42.742017,-96.635456 42.742075,-96.63542 42.7421,-96.635079 42.742303,-96.634833 42.742421,-96.63431 42.74262,-96.633967 42.742759,-96.633875 42.742784,-96.633543 42.742845,-96.632761 42.742894,-96.632664 42.742891,-96.632371 42.742868,-96.632175 42.742868,-96.631592 42.742928,-96.631449 42.742954,-96.631356 42.742976,-96.629712 42.743452,-96.629586 42.743506,-96.629509 42.743551,-96.629479 42.743579,-96.629429 42.743641,-96.629381 42.743742,-96.629353 42.743847,-96.629351 42.743882,-96.629376 42.744024,-96.629387 42.744059,-96.62942 42.744126,-96.629496 42.744218,-96.629531 42.744243,-96.629611 42.744285,-96.629656 42.7443,-96.630407 42.744464,-96.630553 42.744475,-96.630992 42.744497,-96.631041 42.744496,-96.631378 42.744541,-96.631424 42.744554,-96.631727 42.744671,-96.631911 42.744789,-96.631944 42.744815,-96.632026 42.744904,-96.632107 42.745035,-96.632121 42.745069,-96.632155 42.74521,-96.632154 42.745281,-96.632137 42.745459,-96.632096 42.745599,-96.63198 42.745834,-96.631855 42.746028,-96.631701 42.746329,-96.631618 42.746417,-96.631549 42.746468,-96.631369 42.746589,-96.631203 42.746666,-96.631067 42.746706,-96.630408 42.746848,-96.630236 42.746916,-96.630199 42.746939,-96.630133 42.746992,-96.630022 42.747109,-96.630003 42.747142,-96.62987 42.747486,-96.62985 42.747555,-96.629819 42.747804,-96.629835 42.748018,-96.629937 42.74822,-96.629961 42.748251,-96.630294 42.74856,-96.630349 42.748619,-96.630392 42.748683,-96.630539 42.749023,-96.630559 42.749093,-96.630564 42.749129,-96.630559 42.749342,-96.630521 42.749519,-96.630412 42.749793,-96.630405 42.749865,-96.630364 42.750004,-96.630412 42.750136,-96.63042 42.750207,-96.630406 42.750241,-96.630384 42.750273,-96.630082 42.750641,-96.630019 42.750696,-96.629983 42.75072,-96.629856 42.750774,-96.629762 42.750794,-96.629618 42.750815,-96.629521 42.750823,-96.629474 42.750814,-96.629291 42.75076,-96.629024 42.75067,-96.628858 42.750594,-96.628723 42.750552,-96.628675 42.750544,-96.628384 42.750516,-96.628188 42.750518,-96.627994 42.750541,-96.627576 42.750642,-96.627532 42.750657,-96.627313 42.7508,-96.627151 42.750881,-96.627077 42.750928,-96.627046 42.750956,-96.626964 42.751086,-96.62695 42.75112,-96.62689 42.751582,-96.626895 42.751867,-96.62682 42.75211,-96.626634 42.752361,-96.626607 42.75239,-96.62648 42.7525,-96.626438 42.752515,-96.626343 42.752531,-96.626297 42.752544,-96.626255 42.752562,-96.626011 42.752699,-96.625908 42.752758,-96.625785 42.752816,-96.625748 42.752839,-96.625661 42.752926,-96.625626 42.752951,-96.625579 42.752953,-96.625436 42.752927,-96.62525 42.752882,-96.625007 42.752903,-96.624615 42.752901,-96.62408 42.752849,-96.623344 42.752852,-96.623198 42.752868,-96.622914 42.752925,-96.622552 42.753035,-96.622301 42.753147,-96.622072 42.753283,-96.621968 42.753359,-96.62193 42.753381,-96.621764 42.753459,-96.621719 42.753471,-96.621671 42.753477,-96.620887 42.75343,-96.62074 42.753438,-96.620306 42.753499,-96.620213 42.753521,-96.620126 42.753554,-96.6198 42.753713,-96.619695 42.753788,-96.619545 42.75393,-96.619491 42.753989,-96.619471 42.754022,-96.619278 42.754502,-96.619262 42.754609,-96.619269 42.754752,-96.619331 42.754849,-96.619361 42.754918,-96.6194 42.754983,-96.619711 42.755389,-96.619755 42.755453,-96.620005 42.75588,-96.620014 42.755915,-96.620064 42.756235,-96.62007 42.756342,-96.619995 42.756804,-96.619988 42.756946,-96.620004 42.757089,-96.62002 42.75716,-96.620025 42.757173,-96.62009 42.757331,-96.620212 42.757526,-96.620267 42.757585,-96.620702 42.757875,-96.621022 42.75804,-96.621399 42.758207,-96.621487 42.75824,-96.621812 42.758321,-96.622342 42.758397,-96.622391 42.758401,-96.622833 42.758398,-96.62293 42.758388,-96.623023 42.758365,-96.623396 42.758194,-96.623473 42.758149,-96.62369 42.758003,-96.624298 42.757397,-96.624367 42.757303,-96.624471 42.757102,-96.624598 42.75672,-96.624705 42.756298,-96.624878 42.755925,-96.624969 42.755611,-96.624983 42.755577,-96.625107 42.755423,-96.625176 42.755328,-96.625293 42.755095,-96.625369 42.754965,-96.625381 42.75493,-96.625389 42.75486,-96.625423 42.754757,-96.625436 42.754728,-96.625455 42.754691,-96.625503 42.754553,-96.62552 42.75452,-96.625566 42.754457,-96.625601 42.754433,-96.626086 42.754193,-96.626132 42.754179,-96.626421 42.754148,-96.62647 42.754151,-96.626661 42.75418,-96.626944 42.754232,-96.626989 42.754247,-96.627068 42.75429,-96.627243 42.754413,-96.627445 42.754738,-96.627515 42.754892,-96.627558 42.75503,-96.627594 42.755243,-96.627587 42.755314,-96.627567 42.755384,-96.627566 42.755491,-96.627525 42.755847,-96.62755 42.756132,-96.627628 42.756375,-96.627756 42.756662,-96.627811 42.756783,-96.627893 42.756913,-96.628129 42.757185,-96.628368 42.757412,-96.628672 42.757645,-96.628784 42.757714,-96.629563 42.758147,-96.629984 42.758495,-96.630012 42.758525,-96.630796 42.759759,-96.630834 42.759825,-96.630967 42.760094,-96.631022 42.760152,-96.631199 42.760276,-96.631465 42.760541,-96.631518 42.760594,-96.631905 42.760868,-96.632056 42.761009,-96.632157 42.761087,-96.632397 42.761313,-96.632523 42.761507,-96.632784 42.761786,-96.632882 42.761891,-96.633302 42.762215,-96.633557 42.762383,-96.634018 42.76265,-96.635139 42.763227,-96.635409 42.763381,-96.635607 42.76354,-96.6361 42.763986,-96.636353 42.764411,-96.636384 42.764478,-96.636489 42.764753,-96.636498 42.764824,-96.636493 42.76486,-96.636352 42.765126,-96.636275 42.765217,-96.636039 42.765399,-96.636 42.765421,-96.635792 42.765515,-96.635701 42.765542,-96.635512 42.765581,-96.635122 42.765611,-96.634877 42.765601,-96.634828 42.765595,-96.634725 42.765568,-96.634365 42.765476,-96.633799 42.765262,-96.632892 42.764989,-96.632796 42.764975,-96.632551 42.764977,-96.632307 42.764999,-96.632215 42.765023,-96.632046 42.765095,-96.632008 42.765118,-96.631975 42.765144,-96.631756 42.765382,-96.631625 42.765533,-96.631605 42.765565,-96.631551 42.765703,-96.631527 42.765845,-96.631522 42.766095,-96.63161 42.766446,-96.631655 42.766549,-96.632166 42.767631,-96.63223 42.767803,-96.632335 42.768041,-96.632641 42.768528,-96.632686 42.768592,-96.632715 42.76862,-96.63275 42.768645,-96.632904 42.768733,-96.632993 42.768765,-96.633088 42.768782,-96.633137 42.768783,-96.633323 42.768736,-96.63354 42.768653,-96.633622 42.768614,-96.634214 42.768138,-96.634291 42.768093,-96.634415 42.768036,-96.63474 42.767955,-96.634935 42.767938,-96.635081 42.767949,-96.635508 42.768034,-96.635553 42.768048,-96.635924 42.768223,-96.636036 42.768292,-96.636135 42.768371,-96.636344 42.768569,-96.636393 42.768631,-96.636551 42.769006,-96.636549 42.769077,-96.636526 42.769254,-96.636516 42.769396,-96.63647 42.769535,-96.636382 42.76974,-96.636338 42.769803,-96.636055 42.770096,-96.63567 42.770419,-96.635417 42.770589,-96.635176 42.770713,-96.635091 42.770748,-96.634036 42.771129,-96.633582 42.771262,-96.633487 42.771279,-96.633199 42.771319,-96.633054 42.771332,-96.633004 42.771329,-96.632812 42.7713,-96.63277 42.771283,-96.632733 42.77126,-96.632577 42.771122,-96.632511 42.771026,-96.632469 42.770924,-96.632365 42.770467,-96.632373 42.770397,-96.6324 42.770256,-96.632385 42.770185,-96.632312 42.770015,-96.632196 42.769858,-96.632133 42.769803,-96.631959 42.769678,-96.631918 42.769658,-96.631827 42.769631,-96.631682 42.769615,-96.631633 42.769613,-96.631486 42.769616,-96.631309 42.76965,-96.631183 42.769705,-96.631074 42.769778,-96.630961 42.769937,-96.630874 42.770023,-96.630776 42.770146,-96.630707 42.770317,-96.630648 42.770599,-96.630638 42.770669,-96.630583 42.770768,-96.630536 42.770831,-96.630306 42.771105,-96.629937 42.771482,-96.629929 42.77149,-96.629652 42.771815,-96.629587 42.771868,-96.629473 42.771934,-96.629431 42.771953,-96.629339 42.771977,-96.629245 42.771994,-96.629147 42.772001,-96.62905 42.771997,-96.628865 42.77195,-96.62865 42.771865,-96.62809 42.771576,-96.627705 42.77142,-96.627573 42.771372,-96.627126 42.771225,-96.626881 42.771215,-96.626832 42.771216,-96.626785 42.771225,-96.626398 42.77138,-96.626361 42.771403,-96.626223 42.771538,-96.626197 42.771568,-96.626073 42.771801,-96.626052 42.772194,-96.626054 42.77223,-96.626096 42.772442,-96.626264 42.772928,-96.626526 42.773312,-96.626813 42.773844,-96.626839 42.773874,-96.626905 42.773927,-96.626965 42.773983,-96.627055 42.77411,-96.627081 42.774178,-96.627138 42.774532,-96.627143 42.774711,-96.627107 42.774995,-96.627069 42.775135,-96.626985 42.775302,-96.626859 42.775456,-96.626627 42.775686,-96.626595 42.775713,-96.626523 42.775761,-96.626481 42.77578,-96.626219 42.775877,-96.626084 42.775921,-96.625614 42.776023,-96.625565 42.776026,-96.625517 42.776034,-96.625379 42.776071,-96.625216 42.77615,-96.625171 42.776163,-96.624733 42.776206,-96.624537 42.776211,-96.623608 42.776166,-96.623071 42.776202,-96.622975 42.776218,-96.622929 42.77623,-96.622621 42.77634,-96.622422 42.776445,-96.622283 42.776546,-96.622041 42.776771,-96.621985 42.77683,-96.62184 42.777134,-96.621815 42.777203,-96.621777 42.777343,-96.62177 42.777414,-96.621791 42.777628,-96.621949 42.778152,-96.621966 42.778667,-96.621968 42.778724,-96.621958 42.778795,-96.621921 42.778829,-96.621896 42.77886,-96.621767 42.779053,-96.621751 42.779086,-96.621594 42.779609,-96.621512 42.779777,-96.6215 42.779848,-96.621469 42.780132,-96.621469 42.780168,-96.621476 42.780203,-96.621503 42.780272,-96.621544 42.780337,-96.621509 42.780404,-96.621437 42.780575,-96.621191 42.781042,-96.620996 42.78137,-96.620756 42.781839,-96.620711 42.781941,-96.620502 42.782566,-96.620432 42.782737,-96.620331 42.78305,-96.620122 42.783413,-96.619849 42.783792,-96.619791 42.78385,-96.619503 42.784043,-96.619462 42.784064,-96.619285 42.784124,-96.619049 42.784174,-96.618471 42.784257,-96.617806 42.784381,-96.617306 42.784529,-96.617008 42.784653,-96.616487 42.784921,-96.616148 42.785066,-96.616101 42.785074,-96.616052 42.785075,-96.615905 42.785068,-96.615616 42.785026,-96.615569 42.785016,-96.615528 42.784997,-96.61542 42.784924,-96.615358 42.784868,-96.615284 42.784776,-96.61522 42.784603,-96.615201 42.784497,-96.615246 42.784249,-96.615367 42.783939,-96.615489 42.783557,-96.615518 42.783452,-96.615547 42.783238,-96.615549 42.783167,-96.615467 42.782815,-96.615432 42.782749,-96.615264 42.78253,-96.615204 42.782474,-96.615133 42.782425,-96.615051 42.782386,-96.614882 42.782314,-96.6148 42.782275,-96.61471 42.782247,-96.614612 42.782246,-96.614515 42.782254,-96.614326 42.782293,-96.61428 42.782306,-96.614148 42.782354,-96.614111 42.782377,-96.613945 42.782509,-96.61384 42.782629,-96.613716 42.782975,-96.613695 42.783045,-96.613624 42.783363,-96.613462 42.783812,-96.613264 42.784216,-96.613191 42.784309,-96.613073 42.784426,-96.61297 42.784503,-96.61293 42.784524,-96.612887 42.784541,-96.612707 42.784597,-96.612563 42.78462,-96.612465 42.784622,-96.612272 42.784595,-96.612226 42.784582,-96.611972 42.784475,-96.611932 42.784454,-96.61172 42.784306,-96.61169 42.784278,-96.611548 42.784012,-96.61132 42.783316,-96.611276 42.783214,-96.611046 42.782858,-96.610954 42.782775,-96.610918 42.782751,-96.610536 42.782589,-96.610489 42.782578,-96.61015 42.782538,-96.610052 42.782534,-96.610003 42.782536,-96.609907 42.78255,-96.609837 42.782526,-96.609745 42.782502,-96.609697 42.782494,-96.609599 42.78249,-96.609406 42.782518,-96.609363 42.782534,-96.609216 42.782629,-96.609152 42.782683,-96.609071 42.782772,-96.609049 42.782804,-96.609022 42.782873,-96.609014 42.782944,-96.609019 42.783016,-96.609028 42.78305,-96.609092 42.783104,-96.609102 42.783241,-96.609089 42.783384,-96.609109 42.783705,-96.609104 42.783741,-96.609052 42.783879,-96.609001 42.783979,-96.608979 42.784011,-96.608895 42.784099,-96.608791 42.784175,-96.608752 42.784197,-96.608417 42.784346,-96.608279 42.784384,-96.607993 42.784434,-96.607895 42.784441,-96.607846 42.784438,-96.607559 42.784392,-96.607384 42.784328,-96.607345 42.784306,-96.607312 42.784279,-96.60677 42.783726,-96.606719 42.783686,-96.606571 42.783569,-96.606228 42.783366,-96.606067 42.783284,-96.605982 42.783249,-96.605389 42.783078,-96.605008 42.783009,-96.604959 42.783005,-96.604862 42.783015,-96.60444 42.78311,-96.604179 42.783208,-96.60414 42.78323,-96.603964 42.783355,-96.603934 42.783382,-96.603909 42.783414,-96.603831 42.783544,-96.603695 42.783693,-96.603673 42.783725,-96.603619 42.783824,-96.603567 42.783962,-96.603565 42.783997,-96.603582 42.78414,-96.603684 42.784453,-96.603703 42.78456,-96.603859 42.785157,-96.603864 42.785192,-96.603859 42.785514,-96.603852 42.785549,-96.603723 42.785894,-96.603678 42.785996,-96.603275 42.786487,-96.602978 42.786815,-96.602686 42.787188,-96.602404 42.787759,-96.602355 42.788006,-96.602345 42.788113,-96.602358 42.788184,-96.602404 42.788323,-96.602557 42.78874,-96.60302 42.789014,-96.60331 42.789108,-96.603337 42.789138,-96.603704 42.789426,-96.604038 42.789635,-96.604234 42.789795,-96.604311 42.789839,-96.604521 42.789931,-96.604633 42.790049,-96.604682 42.790111,-96.604742 42.790167,-96.604848 42.790242,-96.604943 42.790286,-96.604981 42.790399,-96.605053 42.790532,-96.605066 42.790567,-96.605229 42.791163,-96.605231 42.79127,-96.605196 42.791447,-96.605007 42.791696,-96.60491 42.791776,-96.60484 42.791827,-96.604403 42.792112,-96.604245 42.792195,-96.604155 42.792224,-96.603732 42.792315,-96.603637 42.792332,-96.60354 42.792344,-96.603442 42.792347,-96.60305 42.792344,-96.602759 42.792315,-96.602712 42.792305,-96.602156 42.792077,-96.601761 42.791935,-96.601473 42.791871,-96.601244 42.791821,-96.600909 42.791766,-96.600765 42.791746,-96.600666 42.791749,-96.599882 42.791793,-96.599538 42.791782,-96.599293 42.791768,-96.598116 42.79181,-96.597628 42.791852,-96.597198 42.791924,-96.597108 42.791952,-96.596849 42.792055,-96.596646 42.792155,-96.596495 42.792247,-96.596059 42.792478,-96.595625 42.792645,-96.595343 42.792788,-96.595272 42.792838,-96.595214 42.792896,-96.595052 42.793115,-96.595035 42.793149,-96.595006 42.793254,-96.595003 42.793468,-96.595009 42.79354,-96.595017 42.793575,-96.59511 42.793778,-96.595173 42.793875,-96.595199 42.793906,-96.595378 42.794076,-96.595479 42.794154,-96.595552 42.794202,-96.595636 42.794238,-96.596228 42.794412,-96.596484 42.794517,-96.596596 42.794586,-96.596775 42.794757,-96.5968 42.794788,-96.596855 42.794887,-96.596968 42.795198,-96.596988 42.795268,-96.597001 42.79541,-96.596933 42.795872,-96.596937 42.795944,-96.596964 42.796049,-96.596991 42.796118,-96.597134 42.796422,-96.597175 42.796487,-96.59729 42.796603,-96.597375 42.79666,-96.597702 42.796819,-96.598145 42.796972,-96.599132 42.797372,-96.599298 42.797447,-96.599378 42.797489,-96.59941 42.797516,-96.599522 42.797634,-96.599589 42.797729,-96.599617 42.797798,-96.599637 42.797867,-96.599704 42.798186,-96.599707 42.798257,-96.599683 42.798435,-96.59946 42.798983,-96.599442 42.799016,-96.59921 42.799331,-96.598976 42.799603,-96.598945 42.799631,-96.598627 42.799854,-96.598506 42.799916,-96.598463 42.799932,-96.59827 42.799961,-96.598172 42.799966,-96.598041 42.799918,-96.597963 42.799875,-96.597832 42.799768,-96.597811 42.799736,-96.597802 42.799701,-96.597747 42.79931,-96.597607 42.79882,-96.597481 42.798512,-96.597317 42.798213,-96.597264 42.798153,-96.59688 42.797828,-96.596574 42.797648,-96.59645 42.79759,-96.596045 42.797461,-96.595857 42.79742,-96.595808 42.797415,-96.595465 42.797431,-96.595276 42.797471,-96.59496 42.79757,-96.594919 42.797588,-96.594588 42.797802,-96.594285 42.798037,-96.594076 42.798235,-96.593605 42.798779,-96.593296 42.799187,-96.592812 42.799969,-96.592594 42.800368,-96.592461 42.800637,-96.592432 42.800705,-96.592422 42.800761,-96.592345 42.801201,-96.592353 42.801272,-96.592425 42.801321,-96.592544 42.801434,-96.592598 42.801493,-96.592806 42.801776,-96.592887 42.801944,-96.592906 42.802014,-96.592911 42.802082,-96.593047 42.802178,-96.593105 42.802235,-96.593131 42.802304,-96.59318 42.802516,-96.593179 42.802587,-96.593172 42.802623,-96.593102 42.802794,-96.593005 42.802958,-96.592169 42.803968,-96.591892 42.804347,-96.591749 42.804575,-96.59161 42.804842,-96.591196 42.805451,-96.591057 42.805867,-96.591003 42.806078,-96.590981 42.806399,-96.590997 42.806578,-96.590997 42.806971,-96.590958 42.807074,-96.590884 42.807244,-96.59081 42.807377,-96.590539 42.807988,-96.590469 42.808233,-96.590465 42.808297,-96.590465 42.808304,-96.590485 42.808447,-96.590525 42.80855,-96.590673 42.808775,-96.590776 42.808897,-96.5909 42.809008,-96.591651 42.809622,-96.591968 42.809846,-96.592049 42.809887,-96.592088 42.809908,-96.592441 42.810035,-96.592912 42.810137,-96.593056 42.810159,-96.593154 42.810166,-96.593694 42.810142,-96.593936 42.810112,-96.594078 42.810085,-96.594466 42.810039,-96.594564 42.810036,-96.594613 42.810041,-96.595284 42.810146,-96.59533 42.810158,-96.595493 42.810239,-96.595566 42.810286,-96.595626 42.810343,-96.595697 42.810437,-96.595723 42.810607,-96.595712 42.810929,-96.59567 42.811177,-96.595639 42.811245,-96.595496 42.811433,-96.595263 42.811865,-96.595239 42.811934,-96.595144 42.812358,-96.595118 42.812643,-96.595121 42.812786,-96.595126 42.812822,-96.595214 42.8131,-96.595306 42.813266,-96.595374 42.813353,-96.59562 42.813671,-96.595798 42.813965,-96.595879 42.814171,-96.595962 42.81474,-96.595945 42.814954,-96.595934 42.814989,-96.595902 42.815057,-96.595677 42.815333,-96.595617 42.81539,-96.595409 42.815542,-96.595143 42.8157,-96.594896 42.815817,-96.594807 42.815846,-96.59457 42.815893,-96.594521 42.815898,-96.594375 42.815903,-96.593886 42.815873,-96.593647 42.815833,-96.592423 42.815463,-96.591632 42.81527,-96.591584 42.815262,-96.591437 42.815259,-96.591096 42.815293,-96.590724 42.815383,-96.590641 42.815421,-96.590605 42.815445,-96.590392 42.815642,-96.590165 42.815999,-96.590089 42.816131,-96.589986 42.816372,-96.589829 42.816746,-96.589782 42.816884,-96.589587 42.817913,-96.589495 42.818039,-96.589367 42.818148,-96.589239 42.8183,-96.589209 42.818328,-96.589174 42.818353,-96.588943 42.818487,-96.588824 42.818473,-96.588731 42.818449,-96.588646 42.818414,-96.588281 42.818232,-96.587665 42.817876,-96.587581 42.817839,-96.58749 42.817861,-96.587442 42.817869,-96.587345 42.817877,-96.586856 42.817848,-96.58671 42.817836,-96.58661 42.817833,-96.586415 42.817828,-96.586268 42.817835,-96.586219 42.817834,-96.586122 42.817822,-96.586029 42.8178,-96.585902 42.817847,-96.585819 42.817886,-96.585781 42.817908,-96.585455 42.818126,-96.585385 42.818177,-96.585158 42.818313,-96.585123 42.818338,-96.584813 42.818615,-96.584705 42.818689,-96.584109 42.819005,-96.584075 42.819031,-96.584051 42.819062,-96.583958 42.819339,-96.583955 42.81941,-96.583978 42.819624,-96.583997 42.819693,-96.584104 42.820004,-96.584168 42.8201,-96.584305 42.82029,-96.584446 42.820388,-96.584527 42.820429,-96.584564 42.820452,-96.584632 42.820504,-96.58488 42.820621,-96.585031 42.820712,-96.585097 42.820764,-96.585463 42.821101,-96.585793 42.821456,-96.585957 42.821715,-96.586037 42.821884,-96.586098 42.822057,-96.586131 42.822233,-96.586119 42.822805,-96.586094 42.822946,-96.585971 42.823402,-96.585808 42.823776,-96.585709 42.823899,-96.585589 42.824013,-96.585413 42.824138,-96.585197 42.824222,-96.584514 42.824423,-96.58434 42.824489,-96.583787 42.82472,-96.583652 42.824763,-96.583514 42.8248,-96.583225 42.824841,-96.583128 42.824851,-96.582833 42.824862,-96.582539 42.824859,-96.581515 42.824756,-96.581319 42.824755,-96.581026 42.824784,-96.580598 42.824865,-96.580554 42.82488,-96.580549 42.824882,-96.580231 42.825043,-96.580193 42.825066,-96.579928 42.825276,-96.579865 42.825331,-96.579808 42.825389,-96.579566 42.825699,-96.579514 42.825759,-96.57945 42.825856,-96.57912 42.826537,-96.579041 42.826668,-96.578809 42.826852,-96.578287 42.827119,-96.57825 42.827143,-96.578152 42.827222,-96.577852 42.827505,-96.577654 42.827791,-96.577635 42.827825,-96.577563 42.827995,-96.577531 42.828136,-96.57753 42.828315,-96.577556 42.828492,-96.57783 42.829067,-96.577891 42.829164,-96.578148 42.829469,-96.578355 42.829669,-96.578707 42.829967,-96.57921 42.830253,-96.579246 42.830277,-96.579398 42.830418,-96.579574 42.830542,-96.57961 42.830573,-96.579796 42.830733,-96.579958 42.830912,-96.580033 42.831004,-96.580192 42.831266,-96.580266 42.831436,-96.580396 42.832036,-96.580434 42.832321,-96.580448 42.832392,-96.580532 42.832671,-96.580561 42.83274,-96.580581 42.832772,-96.580643 42.832828,-96.580719 42.832874,-96.5808 42.832913,-96.580846 42.832927,-96.581224 42.833005,-96.581728 42.833146,-96.581815 42.833179,-96.58215 42.833488,-96.582217 42.833583,-96.582305 42.83375,-96.582326 42.833861,-96.582381 42.834139,-96.582391 42.834282,-96.582362 42.834604,-96.582324 42.83478,-96.582304 42.83485,-96.582164 42.835193,-96.582155 42.835228,-96.582135 42.835371,-96.58208 42.83543,-96.581968 42.835589,-96.581512 42.836381,-96.581498 42.836415,-96.581492 42.836446,-96.581481 42.836521,-96.581474 42.836736,-96.581553 42.837412,-96.581544 42.837519,-96.581489 42.837693,-96.58147 42.837726,-96.581443 42.837756,-96.581378 42.83781,-96.581075 42.837992,-96.580993 42.838031,-96.580907 42.838065,-96.580678 42.838131,-96.580583 42.838149,-96.580193 42.838182,-96.580046 42.838189,-96.579406 42.838186,-96.579112 42.83813,-96.579073 42.838123,-96.578793 42.838056,-96.578704 42.838026,-96.578618 42.837991,-96.578459 42.837907,-96.57833 42.837799,-96.578149 42.837586,-96.578079 42.837494,-96.578036 42.837311,-96.57804 42.837132,-96.578049 42.837097,-96.578172 42.836826,-96.578198 42.836795,-96.57829 42.836712,-96.578438 42.836618,-96.578524 42.836583,-96.57931 42.83629,-96.579389 42.836247,-96.579458 42.836197,-96.579485 42.836167,-96.579577 42.83604,-96.579692 42.835767,-96.579717 42.835626,-96.579705 42.835447,-96.579689 42.835377,-96.579676 42.835342,-96.579574 42.835141,-96.579545 42.835112,-96.579447 42.835032,-96.579377 42.834983,-96.579292 42.834947,-96.578887 42.834818,-96.578605 42.834755,-96.578164 42.834727,-96.578115 42.834729,-96.577907 42.834752,-96.577872 42.834756,-96.577682 42.834792,-96.577276 42.83492,-96.576755 42.83512,-96.576309 42.835343,-96.575848 42.835611,-96.575599 42.835783,-96.575409 42.835947,-96.575336 42.83604,-96.575193 42.836306,-96.575163 42.836411,-96.575101 42.837016,-96.575044 42.837335,-96.574937 42.837611,-96.574919 42.837644,-96.574808 42.837762,-96.574747 42.837818,-96.574675 42.837866,-96.574513 42.837948,-96.574424 42.837978,-96.574303 42.837963,-96.574258 42.837949,-96.57413 42.837896,-96.573966 42.837817,-96.573894 42.837768,-96.573444 42.837389,-96.573265 42.837267,-96.573189 42.837222,-96.572942 42.837104,-96.57285 42.837078,-96.572471 42.837002,-96.572375 42.836989,-96.572276 42.836988,-96.571932 42.836996,-96.57145 42.837065,-96.571172 42.837137,-96.570993 42.837196,-96.569579 42.837775,-96.569402 42.837838,-96.569079 42.837923,-96.569031 42.837928,-96.568932 42.837926,-96.568884 42.837919,-96.5686 42.837861,-96.568465 42.837819,-96.568382 42.837781,-96.568343 42.837759,-96.568046 42.837521,-96.567966 42.837431,-96.567948 42.837397,-96.567896 42.837186,-96.567893 42.837008,-96.567915 42.836902,-96.567939 42.836833,-96.567997 42.836734,-96.568117 42.836577,-96.568303 42.836411,-96.568614 42.836182,-96.56915 42.835868,-96.569184 42.835843,-96.569407 42.835652,-96.569535 42.835499,-96.569638 42.835316,-96.569723 42.835169,-96.569737 42.835135,-96.569772 42.83485,-96.569769 42.834814,-96.569714 42.834568,-96.569683 42.8345,-96.569547 42.834309,-96.569311 42.834038,-96.56928 42.83401,-96.56899 42.833817,-96.567876 42.833114,-96.567529 42.832844,-96.567255 42.832592,-96.567033 42.832355,-96.566858 42.83214,-96.56657 42.831749,-96.566185 42.831227,-96.565765 42.830743,-96.565259 42.830216,-96.564937 42.829814,-96.564844 42.829649,-96.564762 42.829481,-96.564715 42.829342,-96.564699 42.829236,-96.56468 42.829051,-96.564671 42.828951,-96.564668 42.82888,-96.564638 42.828775,-96.564609 42.828708,-96.564545 42.828611,-96.564358 42.828401,-96.564324 42.828375,-96.564032 42.828244,-96.563942 42.828215,-96.563895 42.828204,-96.563751 42.828183,-96.563604 42.828174,-96.563555 42.828177,-96.563177 42.828256,-96.563042 42.8283,-96.5624 42.828629,-96.561972 42.828924,-96.56194 42.828951,-96.561604 42.829302,-96.561554 42.829363,-96.561537 42.829397,-96.561518 42.829467,-96.561485 42.829644,-96.561487 42.82968,-96.561507 42.829712,-96.561535 42.829742,-96.561747 42.82989,-96.562147 42.830099,-96.562181 42.830125,-96.562428 42.830347,-96.562513 42.830434,-96.562749 42.830706,-96.562854 42.830907,-96.563012 42.831356,-96.563016 42.831392,-96.563019 42.831785,-96.563012 42.831821,-96.562973 42.831924,-96.562927 42.832026,-96.562645 42.832597,-96.562441 42.833187,-96.562387 42.833398,-96.562381 42.833745,-96.562395 42.833995,-96.562564 42.834609,-96.562646 42.834906,-96.562689 42.83519,-96.562714 42.835259,-96.562823 42.835496,-96.562834 42.835531,-96.562855 42.835673,-96.562862 42.835887,-96.562809 42.836422,-96.562671 42.836839,-96.562537 42.83703,-96.562511 42.83706,-96.562086 42.837455,-96.562029 42.837513,-96.561938 42.837585,-96.561529 42.837907,-96.561359 42.838082,-96.561316 42.838146,-96.56124 42.838427,-96.561219 42.83864,-96.561172 42.838779,-96.561125 42.838881,-96.560976 42.839106,-96.560944 42.839134,-96.56087 42.83918,-96.560405 42.839444,-96.560279 42.839501,-96.560235 42.839515,-96.560179 42.839528,-96.559721 42.839638,-96.559333 42.839681,-96.559284 42.83968,-96.558942 42.83965,-96.558896 42.839639,-96.558543 42.839512,-96.558459 42.839475,-96.558312 42.839381,-96.558205 42.839307,-96.557847 42.839012,-96.557818 42.838984,-96.557622 42.838736,-96.557296 42.838176,-96.557134 42.837839,-96.556877 42.837453,-96.556762 42.837294,-96.55668 42.837259,-96.55652 42.837176,-96.556484 42.837152,-96.556376 42.837038,-96.556289 42.836946,-96.556167 42.836834,-96.556116 42.836773,-96.556072 42.836709,-96.556 42.836538,-96.555787 42.836461,-96.554944 42.836267,-96.553986 42.836106,-96.553503 42.836041,-96.553389 42.836028,-96.553068 42.835992,-96.552826 42.835969,-96.552778 42.835961,-96.552239 42.83598,-96.552191 42.835988,-96.551568 42.836202,-96.551528 42.836222,-96.551381 42.836317,-96.551127 42.836535,-96.551037 42.83662,-96.550875 42.836799,-96.550592 42.837149,-96.550562 42.837178,-96.550322 42.837531,-96.550308 42.837555,-96.549652 42.8388,-96.54945 42.839277,-96.549417 42.839345,-96.549305 42.839543,-96.548963 42.84005,-96.548701 42.84044,-96.54864 42.840537,-96.548627 42.840572,-96.548586 42.840748,-96.548586 42.84082,-96.548598 42.840891,-96.548919 42.841057,-96.548964 42.841073,-96.549243 42.841142,-96.549337 42.841162,-96.549724 42.841214,-96.550631 42.841376,-96.550907 42.841452,-96.551128 42.84153,-96.552045 42.841876,-96.552258 42.841965,-96.552634 42.842133,-96.552714 42.842175,-96.553164 42.842506,-96.553224 42.842562,-96.553537 42.842896,-96.553805 42.843182,-96.553904 42.843306,-96.55425 42.843858,-96.554287 42.843925,-96.55459 42.844642,-96.55463 42.844782,-96.554771 42.845235,-96.554796 42.845377,-96.554815 42.845555,-96.554818 42.845877,-96.554838 42.846378,-96.55494 42.847196,-96.55497 42.847301,-96.555125 42.84764,-96.555301 42.847935,-96.55552 42.848215,-96.555839 42.848487,-96.555938 42.848606,-96.556036 42.84877,-96.556075 42.84891,-96.556081 42.848946,-96.556088 42.849196,-96.556083 42.849231,-96.556071 42.849266,-96.556036 42.849333,-96.555891 42.84952,-96.555828 42.849575,-96.555714 42.849642,-96.555629 42.849678,-96.555497 42.849726,-96.555266 42.849787,-96.555119 42.849791,-96.55507 42.849787,-96.555022 42.849778,-96.554884 42.849741,-96.55475 42.849695,-96.554554 42.849588,-96.554222 42.849325,-96.553577 42.848738,-96.553413 42.848605,-96.553153 42.848441,-96.552809 42.848238,-96.552722 42.848206,-96.551597 42.847848,-96.55077 42.847626,-96.55068 42.847599,-96.550586 42.84758,-96.550537 42.847574,-96.550195 42.847584,-96.549951 42.847605,-96.549764 42.847647,-96.54972 42.847663,-96.549556 42.847742,-96.549519 42.847765,-96.549452 42.847817,-96.549425 42.847847,-96.549321 42.848085,-96.549316 42.848121,-96.549338 42.848335,-96.549348 42.84837,-96.549438 42.848536,-96.549482 42.8486,-96.549541 42.848655,-96.549825 42.848854,-96.550132 42.849032,-96.550162 42.84906,-96.550206 42.84911,-96.550426 42.849362,-96.55047 42.849426,-96.550503 42.849493,-96.550538 42.849634,-96.550564 42.849848,-96.550558 42.850098,-96.550465 42.850302,-96.550423 42.850366,-96.550161 42.850626,-96.55011 42.850687,-96.549997 42.850804,-96.549945 42.850864,-96.549692 42.851083,-96.549657 42.851108,-96.549454 42.851208,-96.549407 42.851218,-96.549165 42.851251,-96.549116 42.851253,-96.548777 42.851211,-96.548733 42.851195,-96.548418 42.851023,-96.548351 42.850971,-96.548083 42.850715,-96.548001 42.850626,-96.547575 42.850063,-96.547548 42.850033,-96.547393 42.849895,-96.547289 42.849824,-96.547177 42.849748,-96.547138 42.849727,-96.547091 42.849715,-96.546615 42.849625,-96.546531 42.849624,-96.546076 42.849621,-96.545978 42.849628,-96.545694 42.849685,-96.545512 42.849739,-96.545262 42.849854,-96.545108 42.849943,-96.544947 42.850078,-96.544857 42.850162,-96.544831 42.850193,-96.544577 42.850657,-96.544469 42.850856,-96.544385 42.851062,-96.544367 42.851095,-96.544193 42.851351,-96.544051 42.851565,-96.543931 42.851837,-96.543759 42.852359,-96.543728 42.852427,-96.543428 42.852916,-96.543273 42.853083,-96.543209 42.853153,-96.543003 42.853477,-96.542912 42.853603,-96.542688 42.854038,-96.542219 42.855131,-96.542136 42.855337,-96.541717 42.856329,-96.541455 42.856868,-96.541357 42.857145,-96.541342 42.857215,-96.541323 42.857358,-96.541168 42.857882,-96.541152 42.857989,-96.541142 42.858167,-96.541152 42.858238,-96.541244 42.858516,-96.541253 42.858535,-96.541464 42.858952,-96.541509 42.859016,-96.541825 42.859378,-96.542108 42.859576,-96.54219 42.859616,-96.542234 42.859631,-96.54262 42.859688,-96.542701 42.859681,-96.542718 42.85968,-96.542763 42.859666,-96.54302 42.859561,-96.543112 42.859504,-96.543177 42.85945,-96.543204 42.85942,-96.543282 42.859289,-96.543315 42.858789,-96.543322 42.858754,-96.543346 42.858685,-96.543559 42.858247,-96.543581 42.858215,-96.543609 42.858185,-96.543768 42.858049,-96.544198 42.857754,-96.544547 42.857556,-96.544831 42.857358,-96.544933 42.85728,-96.54506 42.857171,-96.545212 42.857081,-96.545359 42.857068,-96.545798 42.857103,-96.545941 42.857129,-96.546176 42.857179,-96.546662 42.857352,-96.546784 42.857411,-96.546819 42.857436,-96.546937 42.85755,-96.546984 42.857613,-96.547062 42.85782,-96.547117 42.858139,-96.547117 42.85821,-96.547065 42.858746,-96.547014 42.858957,-96.546948 42.859129,-96.546864 42.859258,-96.546574 42.859632,-96.546534 42.859732,-96.546417 42.859967,-96.546254 42.860187,-96.546214 42.860252,-96.546147 42.860424,-96.546067 42.860667,-96.546035 42.860916,-96.546047 42.860987,-96.546074 42.861092,-96.5461 42.861161,-96.546122 42.861193,-96.546201 42.861283,-96.546409 42.861436,-96.546531 42.861496,-96.546575 42.861512,-96.547026 42.861652,-96.547074 42.861661,-96.54717 42.861675,-96.547318 42.861676,-96.547607 42.861635,-96.547745 42.861598,-96.548033 42.861556,-96.548132 42.861551,-96.548229 42.861561,-96.54847 42.861596,-96.548806 42.861651,-96.548944 42.861689,-96.548986 42.861708,-96.549121 42.861812,-96.549332 42.862053,-96.549989 42.862586,-96.550183 42.862793,-96.550206 42.862824,-96.550346 42.863091,-96.550392 42.863193,-96.550402 42.863228,-96.550451 42.863548,-96.550449 42.863576,-96.550445 42.863655,-96.550438 42.86369,-96.550414 42.863759,-96.550358 42.863859,-96.550289 42.863953,-96.550227 42.864008,-96.550116 42.864079,-96.550031 42.864114,-96.549898 42.864159,-96.54985 42.864168,-96.549801 42.864172,-96.549408 42.864168,-96.549311 42.864163,-96.549027 42.864106,-96.548764 42.864009,-96.548433 42.863854,-96.547998 42.863687,-96.547628 42.863592,-96.547533 42.863572,-96.547389 42.86355,-96.547243 42.863534,-96.547194 42.863533,-96.547097 42.86354,-96.546905 42.863575,-96.546861 42.86359,-96.546786 42.863637,-96.546692 42.863719,-96.546616 42.863811,-96.546573 42.863914,-96.546524 42.864125,-96.546396 42.864942,-96.546237 42.865502,-96.546217 42.86563,-96.546005 42.866291,-96.545984 42.866433,-96.545947 42.866861,-96.545956 42.866968,-96.546024 42.867249,-96.546174 42.867552,-96.546288 42.867711,-96.546405 42.867826,-96.54655 42.867921,-96.546672 42.867982,-96.547794 42.868347,-96.548217 42.86853,-96.548334 42.868595,-96.549422 42.869319,-96.549623 42.869565,-96.54964 42.869599,-96.549682 42.869738,-96.549701 42.86988,-96.549701 42.869916,-96.549674 42.870166,-96.549642 42.870307,-96.549626 42.870341,-96.549486 42.870569,-96.549436 42.87063,-96.549376 42.870687,-96.548849 42.871062,-96.548693 42.871201,-96.548636 42.871259,-96.548395 42.87161,-96.548267 42.871763,-96.547957 42.872249,-96.547733 42.872646,-96.547564 42.873057,-96.547509 42.873157,-96.547366 42.873596,-96.547146 42.873955,-96.547022 42.874065,-96.546964 42.874122,-96.54676 42.874366,-96.546729 42.874394,-96.546561 42.874524,-96.546468 42.874547,-96.546324 42.874573,-96.546226 42.874571,-96.546129 42.874559,-96.545702 42.874474,-96.545606 42.87446,-96.545164 42.874452,-96.544918 42.874468,-96.544588 42.874539,-96.543946 42.874719,-96.543857 42.874749,-96.543219 42.875083,-96.541829 42.876096,-96.541454 42.876428,-96.541426 42.876457,-96.541381 42.87652,-96.541345 42.876587,-96.541263 42.876716,-96.541167 42.87688,-96.540914 42.877143,-96.540852 42.877198,-96.540484 42.877485,-96.540445 42.877507,-96.540189 42.877614,-96.539788 42.87775,-96.539603 42.877798,-96.538938 42.877927,-96.538438 42.878078,-96.537855 42.878344,-96.53767 42.878462,-96.537652 42.878565,-96.537635 42.878743,-96.537636 42.878779,-96.537649 42.878813,-96.537837 42.879104,-96.537961 42.879215,-96.538416 42.879577,-96.538557 42.879689,-96.53881 42.879953,-96.539284 42.880363,-96.53942 42.880466,-96.539474 42.880526,-96.539532 42.880625,-96.539595 42.880658,-96.539627 42.880685,-96.539856 42.880917,-96.540352 42.881534,-96.540465 42.881651,-96.540534 42.881702,-96.540613 42.881745,-96.542392 42.882355,-96.542931 42.882605,-96.543174 42.882782,-96.543206 42.882809,-96.543258 42.88287,-96.543464 42.883233,-96.543485 42.883303,-96.543511 42.883552,-96.543498 42.88373,-96.543485 42.883765,-96.543379 42.883965,-96.543312 42.884061,-96.543284 42.88409,-96.54322 42.884144,-96.543138 42.884184,-96.543095 42.8842,-96.54228 42.884452,-96.540627 42.885007,-96.54024 42.885163,-96.540028 42.885255,-96.539102 42.885726,-96.538815 42.885864,-96.538245 42.886205,-96.537977 42.886414,-96.537885 42.886497,-96.537858 42.886527,-96.537695 42.886748,-96.53768 42.886782,-96.537662 42.886852,-96.537657 42.887066,-96.537663 42.887102,-96.53774 42.887271,-96.537793 42.887372,-96.53803 42.8876,-96.538144 42.887668,-96.538714 42.887856,-96.538826 42.887888,-96.53931 42.888026,-96.539396 42.88806,-96.539678 42.888205,-96.539715 42.888228,-96.540008 42.88847,-96.540353 42.888818,-96.540371 42.888851,-96.540439 42.889096,-96.540443 42.889131,-96.540376 42.889449,-96.540237 42.889596,-96.540204 42.889623,-96.540165 42.889645,-96.539838 42.889803,-96.539748 42.889832,-96.539467 42.889897,-96.539223 42.889921,-96.539075 42.889924,-96.538584 42.889916,-96.538536 42.889911,-96.538154 42.889844,-96.537751 42.889712,-96.537252 42.889484,-96.537074 42.889423,-96.536887 42.889381,-96.536741 42.889367,-96.536593 42.88937,-96.536401 42.8894,-96.536308 42.889423,-96.536221 42.889456,-96.536011 42.889549,-96.535778 42.88968,-96.534955 42.890393,-96.534804 42.890485,-96.534682 42.890546,-96.534598 42.890582,-96.534454 42.890607,-96.534357 42.890616,-96.534014 42.890629,-96.533528 42.890581,-96.533137 42.890554,-96.531661 42.890532,-96.530878 42.89056,-96.529057 42.890568,-96.528883 42.89056,-96.528812 42.890557,-96.528326 42.890502,-96.528265 42.890535,-96.528088 42.890599,-96.528041 42.890609,-96.527992 42.890614,-96.52765 42.890598,-96.527306 42.890604,-96.52721 42.890617,-96.527163 42.890628,-96.526714 42.890773,-96.526627 42.890807,-96.526134 42.8911,-96.52609 42.891117,-96.525907 42.891169,-96.525858 42.891175,-96.52576 42.891179,-96.525662 42.891174,-96.52559 42.891241,-96.525479 42.89136,-96.525435 42.891424,-96.525328 42.891661,-96.525287 42.89191,-96.525309 42.892267,-96.525329 42.892337,-96.525381 42.892437,-96.525478 42.892562,-96.525506 42.892591,-96.525664 42.892728,-96.525739 42.892774,-96.526039 42.892897,-96.526174 42.892939,-96.52627 42.892956,-96.526766 42.893012,-96.527532 42.8931,-96.527628 42.893116,-96.528358 42.893328,-96.529011 42.893578,-96.529168 42.893664,-96.529239 42.893714,-96.529434 42.893875,-96.529518 42.893963,-96.529568 42.894024,-96.529692 42.894218,-96.529781 42.894385,-96.529928 42.894837,-96.529946 42.895015,-96.529951 42.895194,-96.529938 42.895337,-96.530027 42.895419,-96.530076 42.895481,-96.530107 42.895549,-96.530113 42.895585,-96.530112 42.895764,-96.530104 42.895835,-96.530023 42.896004,-96.530003 42.896037,-96.529928 42.896128,-96.529834 42.896211,-96.529759 42.896257,-96.529716 42.896274,-96.529488 42.896342,-96.529149 42.89638,-96.528828 42.89647,-96.528786 42.896489,-96.528675 42.896559,-96.528552 42.896671,-96.528499 42.896731,-96.528375 42.896925,-96.528349 42.896995,-96.528346 42.897173,-96.528376 42.897387,-96.528412 42.897472,-96.528509 42.897636,-96.528536 42.897666,-96.528734 42.897825,-96.528873 42.897926,-96.528987 42.897994,-96.529355 42.898174,-96.529484 42.898226,-96.530627 42.898554,-96.530985 42.898674,-96.531304 42.898842,-96.532246 42.899416,-96.53293 42.899699,-96.533334 42.899902,-96.533458 42.89996,-96.533685 42.900029,-96.534054 42.900129,-96.534197 42.900156,-96.534534 42.900208,-96.534767 42.900266,-96.534854 42.900299,-96.535022 42.900372,-96.535625 42.900736,-96.535666 42.900756,-96.535934 42.900843,-96.536124 42.900879,-96.53637 42.90088,-96.536613 42.900854,-96.536752 42.900817,-96.537081 42.900657,-96.537161 42.900619,-96.537278 42.900554,-96.537685 42.900295,-96.537846 42.90016,-96.538164 42.899937,-96.538202 42.899916,-96.538248 42.899902,-96.538625 42.89982,-96.538771 42.899806,-96.539017 42.899803,-96.539113 42.899816,-96.539347 42.899871,-96.539531 42.899939,-96.539573 42.899958,-96.539761 42.900073,-96.539863 42.900151,-96.539923 42.900207,-96.540054 42.900359,-96.540547 42.901139,-96.540835 42.90171,-96.54091 42.901842,-96.541296 42.902381,-96.541478 42.902594,-96.542048 42.903085,-96.542506 42.90341,-96.542872 42.903699,-96.54293 42.903756,-96.543071 42.904061,-96.543081 42.904096,-96.543088 42.904202,-96.543087 42.904417,-96.543081 42.904438,-96.543069 42.904487,-96.543033 42.904553,-96.542877 42.904736,-96.542686 42.904899,-96.542651 42.904924,-96.542416 42.905054,-96.542325 42.905079,-96.542276 42.905085,-96.54208 42.905097,-96.541883 42.905096,-96.541786 42.905084,-96.541505 42.905019,-96.540642 42.904758,-96.539987 42.904602,-96.539748 42.90456,-96.539553 42.904541,-96.539406 42.904537,-96.538965 42.904571,-96.538675 42.90461,-96.537727 42.904802,-96.537547 42.904858,-96.53746 42.904893,-96.536964 42.905124,-96.536815 42.905218,-96.536601 42.905414,-96.536478 42.905609,-96.536467 42.905643,-96.536491 42.905928,-96.53651 42.905998,-96.536545 42.906065,-96.536588 42.906129,-96.536942 42.906557,-96.536976 42.906584,-96.537138 42.906678,-96.538089 42.907232,-96.538157 42.907283,-96.538421 42.907541,-96.538573 42.907805,-96.538586 42.90784,-96.538624 42.908052,-96.538632 42.908159,-96.53863 42.908195,-96.5386 42.908373,-96.53853 42.908581,-96.538458 42.908771,-96.538308 42.909166,-96.538063 42.909756,-96.537727 42.91057,-96.537733 42.910785,-96.537743 42.91082,-96.537809 42.910954,-96.537832 42.910986,-96.53786 42.911015,-96.53797 42.911098,-96.538207 42.911147,-96.538592 42.911209,-96.538835 42.911232,-96.539174 42.911277,-96.539363 42.911317,-96.539584 42.911395,-96.539625 42.911415,-96.53973 42.911491,-96.539829 42.91157,-96.539885 42.911628,-96.539909 42.91166,-96.540009 42.91201,-96.540014 42.912081,-96.540023 42.912117,-96.5401 42.912318,-96.540063 42.912401,-96.53996 42.912677,-96.539383 42.913626,-96.53926 42.913898,-96.539134 42.914317,-96.53909 42.914709,-96.538943 42.915306,-96.538901 42.915409,-96.538745 42.91571,-96.538688 42.915809,-96.538542 42.915994,-96.538335 42.916206,-96.538257 42.916286,-96.538055 42.916532,-96.537918 42.916761,-96.537847 42.916894,-96.537834 42.916929,-96.537772 42.917175,-96.537759 42.917318,-96.53777 42.917425,-96.537835 42.917634,-96.537874 42.9177,-96.538087 42.917982,-96.538122 42.918004,-96.538215 42.918028,-96.538302 42.918062,-96.538343 42.918082,-96.538571 42.918219,-96.538948 42.918388,-96.539939 42.918603,-96.539984 42.918617,-96.540156 42.918686,-96.540565 42.918886,-96.540862 42.919073,-96.540988 42.919183,-96.541164 42.919406,-96.541205 42.919484,-96.541269 42.919606,-96.541525 42.920261,-96.541675 42.920749,-96.541721 42.920997,-96.541739 42.921391,-96.541737 42.921927,-96.541705 42.922498,-96.541619 42.922922,-96.541451 42.923517,-96.541283 42.923927,-96.541034 42.924356,-96.540963 42.924448,-96.540974 42.924483,-96.540977 42.924519,-96.540966 42.924626,-96.540954 42.924661,-96.540903 42.924761,-96.54088 42.924792,-96.540812 42.924843,-96.540665 42.924938,-96.540595 42.924988,-96.540555 42.925009,-96.540511 42.925025,-96.540463 42.925033,-96.54022 42.925058,-96.540171 42.92506,-96.540073 42.925057,-96.539926 42.925066,-96.539758 42.924973,-96.539674 42.924935,-96.539629 42.92492,-96.539349 42.924852,-96.539258 42.924825,-96.538791 42.924626,-96.538547 42.924505,-96.538282 42.924345,-96.537965 42.924121,-96.537598 42.923831,-96.537298 42.923548,-96.53684 42.923277,-96.5365 42.923132,-96.536409 42.923106,-96.536065 42.923091,-96.535967 42.923092,-96.535679 42.923139,-96.535538 42.923172,-96.534765 42.923401,-96.534543 42.923478,-96.534255 42.923616,-96.534106 42.92371,-96.533294 42.924331,-96.533133 42.924466,-96.532981 42.92465,-96.532953 42.924719,-96.532952 42.924754,-96.532964 42.924861,-96.532975 42.924896,-96.533018 42.92496,-96.533187 42.925136,-96.533254 42.925188,-96.533327 42.925234,-96.533423 42.925251,-96.533469 42.925264,-96.533555 42.925299,-96.533588 42.925325,-96.533828 42.925595,-96.534236 42.925999,-96.534438 42.926244,-96.534475 42.926311,-96.534562 42.926553,-96.534584 42.926659,-96.534604 42.926837,-96.534592 42.92698,-96.534575 42.92705,-96.534468 42.927399,-96.534223 42.927905,-96.534105 42.928102,-96.534061 42.928166,-96.533986 42.928258,-96.533761 42.928492,-96.532509 42.929687,-96.532156 42.930016,-96.531862 42.930303,-96.52967 42.932636,-96.528843 42.933391,-96.527595 42.934253,-96.527457 42.934355,-96.527264 42.934517,-96.526437 42.935078,-96.52597 42.935337,-96.525889 42.935382,-96.525606 42.935525,-96.525312 42.935627,-96.525078 42.935684,-96.524458 42.935798,-96.524164 42.935816,-96.523771 42.935819,-96.523137 42.935756,-96.522854 42.935694,-96.522767 42.93566,-96.522177 42.935402,-96.52178 42.93519,-96.521704 42.935145,-96.521373 42.93488,-96.52132 42.93482,-96.521178 42.934592,-96.520722 42.933958,-96.52058 42.933691,-96.520543 42.933587,-96.52052 42.933445,-96.52053 42.932765,-96.520484 42.932517,-96.52047 42.932482,-96.52045 42.93245,-96.520324 42.932296,-96.520295 42.932267,-96.519884 42.932011,-96.519799 42.931976,-96.51929 42.931841,-96.518607 42.931776,-96.51846 42.931766,-96.518312 42.931762,-96.518245 42.931784,-96.518055 42.931822,-96.517604 42.931965,-96.517176 42.932142,-96.516868 42.932321,-96.516835 42.932347,-96.516685 42.932489,-96.516505 42.932743,-96.51647 42.93281,-96.516415 42.933058,-96.516342 42.933735,-96.516337 42.934343,-96.516347 42.934521,-96.51645 42.9352,-96.51658 42.935507,-96.516745 42.935767,-96.516819 42.93586,-96.517474 42.936293,-96.517725 42.936483,-96.517815 42.936551,-96.518193 42.93678,-96.518234 42.9368,-96.518784 42.936957,-96.519045 42.937057,-96.519123 42.937101,-96.519179 42.937159,-96.519858 42.937989,-96.520073 42.938464,-96.520162 42.938888,-96.520164 42.938924,-96.520089 42.939422,-96.519996 42.939736,-96.51987 42.939969,-96.519824 42.940033,-96.519587 42.940305,-96.519345 42.94053,-96.518928 42.940834,-96.518522 42.941093,-96.517844 42.941518,-96.517285 42.94181,-96.517049 42.941939,-96.516755 42.942129,-96.516503 42.942299,-96.515596 42.942955,-96.514857 42.943531,-96.514775 42.94362,-96.514675 42.943743,-96.514627 42.943845,-96.514575 42.943983,-96.514566 42.944018,-96.514567 42.944054,-96.514608 42.944338,-96.514604 42.944374,-96.514586 42.944444,-96.514529 42.944543,-96.514506 42.944575,-96.51431 42.944781,-96.514276 42.944807,-96.514198 42.944851,-96.513924 42.94493,-96.513875 42.944934,-96.513631 42.944913,-96.513535 42.944896,-96.513442 42.944874,-96.512798 42.94461,-96.512708 42.944582,-96.512431 42.944506,-96.512286 42.944485,-96.511606 42.944404,-96.511312 42.944391,-96.510683 42.944479,-96.510258 42.94457,-96.510079 42.94463,-96.509869 42.944723,-96.50949 42.944951,-96.509426 42.945005,-96.509288 42.945153,-96.509246 42.945217,-96.509138 42.945417,-96.509127 42.945452,-96.509117 42.945523,-96.509126 42.945774,-96.509136 42.945845,-96.509224 42.946012,-96.509247 42.946081,-96.50926 42.946188,-96.509242 42.94651,-96.509222 42.946616,-96.509187 42.94672,-96.50918 42.946729,-96.509081 42.946882,-96.508864 42.947121,-96.50845 42.947475,-96.508224 42.947709,-96.508047 42.947924,-96.508023 42.947971,-96.507931 42.948249,-96.507907 42.948391,-96.507907 42.948427,-96.507962 42.948962,-96.50797 42.948997,-96.508041 42.949168,-96.508082 42.949234,-96.508135 42.949294,-96.5082 42.949348,-96.508216 42.94938,-96.508234 42.949487,-96.508254 42.949556,-96.508343 42.949723,-96.508354 42.949758,-96.508431 42.950183,-96.508558 42.950566,-96.50863 42.950737,-96.509148 42.951818,-96.50921 42.951991,-96.509317 42.952413,-96.509325 42.952514,-96.509323 42.952729,-96.50929 42.952942,-96.509192 42.953256,-96.509031 42.953556,-96.508945 42.953685,-96.508919 42.953715,-96.508886 42.953742,-96.508709 42.953866,-96.508626 42.953901,-96.508449 42.953963,-96.508352 42.953976,-96.508303 42.953978,-96.507752 42.953969,-96.507466 42.953965,-96.506777 42.953987,-96.506729 42.953992,-96.506392 42.954046,-96.506061 42.954114,-96.505647 42.95423,-96.505288 42.954347,-96.504853 42.954514,-96.504731 42.954576,-96.504555 42.954701,-96.504203 42.955045,-96.50415 42.955105,-96.504011 42.955334,-96.50394 42.955467,-96.503759 42.95606,-96.503721 42.956237,-96.503684 42.956341,-96.503646 42.956407,-96.5035 42.956551,-96.503196 42.956785,-96.502744 42.957061,-96.502661 42.957099,-96.502357 42.957216,-96.502261 42.957232,-96.502068 42.957257,-96.501924 42.95728,-96.501317 42.957291,-96.50109 42.957296,-96.500975 42.957295,-96.500337 42.957334,-96.500091 42.957334,-96.499606 42.957393,-96.499559 42.957402,-96.499375 42.957454,-96.499293 42.957494,-96.49922 42.957541,-96.499186 42.957568,-96.498982 42.957769,-96.498963 42.957802,-96.498923 42.957924,-96.498894 42.958011,-96.498878 42.958153,-96.498888 42.95826,-96.498909 42.95833,-96.499012 42.958471,-96.499117 42.958615,-96.499175 42.958672,-96.499283 42.958745,-96.500287 42.959378,-96.500445 42.959492,-96.500531 42.959555,-96.500942 42.959811,-96.501324 42.96009,-96.501552 42.960323,-96.501655 42.960445,-96.501719 42.960542,-96.501839 42.960777,-96.501968 42.961269,-96.502176 42.962547,-96.502234 42.963007,-96.502266 42.963259,-96.50231 42.963974,-96.502314 42.965297,-96.502367 42.966084,-96.502512 42.966787,-96.502682 42.967605,-96.502719 42.967709,-96.502966 42.968214,-96.503005 42.968279,-96.504143 42.969707,-96.504419 42.970045,-96.504755 42.970562,-96.50516 42.971095,-96.50534 42.971265,-96.505375 42.97129,-96.505664 42.971427,-96.505846 42.971482,-96.506136 42.971523,-96.506283 42.971527,-96.506628 42.971522,-96.506726 42.971515,-96.506891 42.971491,-96.506918 42.971464,-96.506951 42.971434,-96.507126 42.971309,-96.507166 42.971287,-96.507246 42.971258,-96.507531 42.971202,-96.507776 42.971192,-96.507825 42.971197,-96.50792 42.971216,-96.507964 42.971233,-96.508044 42.971274,-96.508111 42.971319,-96.508436 42.971289,-96.508535 42.971284,-96.509027 42.971287,-96.509224 42.971292,-96.510422 42.971389,-96.510497 42.971395,-96.510643 42.971412,-96.511368 42.971514,-96.511654 42.971569,-96.512503 42.971753,-96.513242 42.971951,-96.513921 42.972163,-96.51405 42.972215,-96.514386 42.972381,-96.514863 42.972618,-96.515119 42.972706,-96.515351 42.972765,-96.515643 42.972794,-96.515689 42.972806,-96.515773 42.972844,-96.515958 42.972962,-96.515992 42.972988,-96.516174 42.973157,-96.516223 42.973219,-96.516241 42.973253,-96.516353 42.973526,-96.516474 42.974309,-96.516618 42.974834,-96.516657 42.974938,-96.516788 42.975245,-96.516925 42.975435,-96.517021 42.975516,-96.517301 42.975717,-96.517383 42.975757,-96.51785 42.975955,-96.518244 42.976102,-96.518627 42.976264,-96.518746 42.976327,-96.518861 42.976394,-96.519176 42.97662,-96.519307 42.976727,-96.519525 42.976921,-96.51958 42.97698,-96.520053 42.977607,-96.520118 42.977703,-96.520414 42.978271,-96.520564 42.978832,-96.520647 42.979257,-96.520755 42.979642,-96.52082 42.979923,-96.52084 42.980278,-96.520838 42.980314,-96.520828 42.980349,-96.520771 42.980448,-96.520741 42.980476,-96.520703 42.980499,-96.520539 42.980578,-96.5205 42.980601,-96.520431 42.980652,-96.520338 42.980651,-96.52029 42.980646,-96.520052 42.980598,-96.519829 42.980536,-96.519269 42.980383,-96.518881 42.980226,-96.518706 42.980161,-96.518326 42.980085,-96.518277 42.980082,-96.518032 42.980094,-96.517935 42.980106,-96.517795 42.98014,-96.517707 42.980172,-96.517666 42.980192,-96.517409 42.980358,-96.517283 42.980468,-96.517199 42.980556,-96.517041 42.980779,-96.516903 42.980927,-96.516831 42.98102,-96.516702 42.981328,-96.516688 42.981399,-96.516685 42.98166,-96.516683 42.981791,-96.5167 42.981898,-96.516823 42.982131,-96.517 42.982303,-96.517247 42.982477,-96.517282 42.982495,-96.517805 42.982769,-96.517922 42.982834,-96.518379 42.98321,-96.518496 42.983325,-96.518776 42.983661,-96.518798 42.983693,-96.518897 42.983895,-96.518914 42.984038,-96.518906 42.984323,-96.518847 42.984497,-96.518767 42.984665,-96.51861 42.984914,-96.518502 42.985086,-96.518472 42.985114,-96.518364 42.985187,-96.518323 42.985206,-96.518206 42.985272,-96.518113 42.985294,-96.518015 42.9853,-96.517769 42.985296,-96.517672 42.985282,-96.517518 42.985105,-96.517221 42.984866,-96.516622 42.984442,-96.516429 42.984331,-96.516299 42.98428,-96.51598 42.984185,-96.515932 42.984178,-96.515441 42.984143,-96.515342 42.984141,-96.51505 42.984174,-96.514909 42.984205,-96.514819 42.984234,-96.514192 42.984515,-96.513569 42.984865,-96.512657 42.98541,-96.51258 42.985445,-96.512574 42.985449,-96.51243 42.985596,-96.512382 42.985658,-96.512249 42.985849,-96.51198 42.986349,-96.511841 42.986765,-96.51182 42.986871,-96.511832 42.987121,-96.51185 42.987191,-96.512258 42.987958,-96.512366 42.988234,-96.512385 42.98834,-96.512392 42.988626,-96.512364 42.988839,-96.512355 42.988874,-96.512253 42.989076,-96.512159 42.989201,-96.512098 42.989257,-96.51147 42.989759,-96.511406 42.989814,-96.511324 42.989903,-96.51119 42.990133,-96.511176 42.990167,-96.511169 42.990203,-96.511163 42.99031,-96.511182 42.990416,-96.511244 42.990551,-96.511319 42.990644,-96.51135 42.990672,-96.511604 42.990841,-96.51168 42.990886,-96.51176 42.990927,-96.511969 42.991021,-96.512233 42.991117,-96.512322 42.991145,-96.512408 42.99118,-96.512521 42.991248,-96.512562 42.991268,-96.51267 42.99134,-96.512701 42.991368,-96.5128 42.991491,-96.51285 42.991592,-96.512857 42.991627,-96.512834 42.991912,-96.512732 42.992189,-96.512545 42.992409,-96.51249 42.992468,-96.511591 42.993363,-96.511325 42.993665,-96.510564 42.994585,-96.51021 42.994928,-96.50986 42.995228,-96.50951 42.995479,-96.509013 42.995826,-96.50823 42.996259,-96.507866 42.996443,-96.507824 42.996461,-96.507511 42.996565,-96.507373 42.996604,-96.506796 42.996696,-96.50592 42.996793,-96.505662 42.996797,-96.505034 42.996808,-96.504246 42.996804,-96.503856 42.996843,-96.503139 42.996973,-96.502491 42.997144,-96.502215 42.997221,-96.50208 42.997265,-96.501908 42.997333,-96.501161 42.997679,-96.501069 42.997705,-96.50036 42.997857,-96.500239 42.997867,-96.500064 42.997907,-96.500007 42.99792,-96.499863 42.997954,-96.499838 42.997957,-96.499781 42.997964,-96.499523 42.997996,-96.499474 42.997995,-96.499387 42.997989,-96.498818 42.998003,-96.498436 42.998081,-96.498427 42.998079,-96.49831 42.998051,-96.498184 42.998029,-96.498152 42.998033,-96.497866 42.998086,-96.497774 42.998112,-96.497359 42.998276,-96.497342 42.998283,-96.497061 42.998428,-96.496823 42.998609,-96.496757 42.998705,-96.496709 42.998807,-96.496639 42.998901,-96.496619 42.998934,-96.496606 42.998968,-96.496604 42.999039,-96.496638 42.999144,-96.496873 42.999537,-96.49693 42.999756,-96.496947 42.999818,-96.496966 42.999996,-96.496961 43.000068,-96.496907 43.000242,-96.496814 43.000408,-96.49679 43.000439,-96.496643 43.000583,-96.496571 43.000632,-96.495737 43.000941,-96.49561 43.000997,-96.495566 43.001012,-96.495243 43.0011,-96.495072 43.001171,-96.494876 43.001279,-96.494777 43.001359,-96.494588 43.001568,-96.494488 43.001731,-96.494443 43.00187,-96.494416 43.002084,-96.494423 43.002156,-96.494445 43.002225,-96.494534 43.002392,-96.494582 43.00253,-96.494665 43.002883,-96.494675 43.00299,-96.494655 43.003598,-96.494644 43.003633,-96.494468 43.003956,-96.494446 43.003998,-96.494422 43.00403,-96.494393 43.004058,-96.49426 43.004164,-96.494109 43.004256,-96.494074 43.004281,-96.493655 43.004679,-96.493444 43.00492,-96.493056 43.005244,-96.493 43.00532,-96.492811 43.00565,-96.492713 43.006,-96.492685 43.006393,-96.492589 43.006853,-96.492487 43.007166,-96.492206 43.007814,-96.492189 43.007885,-96.492174 43.008171,-96.4921 43.008669,-96.492049 43.008868,-96.492029 43.00895,-96.491991 43.009557,-96.491968 43.009699,-96.491961 43.009771,-96.491987 43.009876,-96.492002 43.009983,-96.491981 43.010197,-96.492116 43.010541,-96.492159 43.010605,-96.492239 43.010696,-96.492564 43.010916,-96.493072 43.011197,-96.493185 43.011266,-96.493421 43.011448,-96.493497 43.01154,-96.493711 43.011901,-96.493764 43.012002,-96.493791 43.01207,-96.493821 43.012248,-96.493874 43.012386,-96.493879 43.012421,-96.493902 43.012994,-96.493929 43.013136,-96.494113 43.013729,-96.494166 43.013829,-96.494762 43.01485,-96.495014 43.015115,-96.495281 43.015456,-96.495639 43.015841,-96.495672 43.015869,-96.495744 43.015917,-96.495935 43.01603,-96.496482 43.016272,-96.496526 43.016288,-96.497019 43.016181,-96.497308 43.016136,-96.497894 43.016082,-96.498535 43.016075,-96.498569 43.016077,-96.498583 43.016079,-96.498678 43.0161,-96.499087 43.016224,-96.499292 43.016323,-96.499358 43.016376,-96.49948 43.016488,-96.499532 43.016548,-96.499638 43.016787,-96.499646 43.016822,-96.499649 43.016893,-96.499594 43.017104,-96.499575 43.017138,-96.499551 43.017169,-96.499441 43.017287,-96.499153 43.017532,-96.49884 43.017896,-96.498775 43.017993,-96.498759 43.018027,-96.498709 43.018201,-96.498688 43.018415,-96.49869 43.018451,-96.498709 43.018557,-96.498799 43.018762,-96.498818 43.018795,-96.498861 43.018851,-96.49901 43.019045,-96.49904 43.019073,-96.499256 43.019219,-96.499452 43.019327,-96.499574 43.019388,-96.499619 43.019403,-96.500093 43.019499,-96.500289 43.019515,-96.500782 43.019528,-96.501125 43.019556,-96.501899 43.019664,-96.501995 43.019681,-96.502644 43.01985,-96.50318 43.02003,-96.503937 43.020366,-96.50399 43.0204,-96.50451 43.020781,-96.505049 43.021272,-96.505493 43.021676,-96.505637 43.021821,-96.505899 43.022034,-96.506122 43.02227,-96.506188 43.022323,-96.506713 43.022648,-96.506793 43.022689,-96.507349 43.022922,-96.508032 43.023332,-96.50811 43.023375,-96.508435 43.023536,-96.508522 43.02357,-96.509247 43.023797,-96.509594 43.023933,-96.510209 43.024229,-96.510318 43.024301,-96.510523 43.024456,-96.510553 43.024484,-96.51076 43.024728,-96.510805 43.024792,-96.511528 43.025516,-96.511698 43.025734,-96.512032 43.026212,-96.512435 43.026865,-96.512467 43.026933,-96.512579 43.027207,-96.51269 43.027444,-96.513173 43.028267,-96.513208 43.028334,-96.513534 43.029047,-96.51359 43.029185,-96.513754 43.029522,-96.513952 43.030075,-96.513958 43.030111,-96.513971 43.030324,-96.513968 43.03036,-96.513927 43.030536,-96.513846 43.030679,-96.513822 43.03071,-96.513732 43.030796,-96.513507 43.030935,-96.513467 43.030955,-96.512894 43.031165,-96.512534 43.031281,-96.511741 43.031569,-96.511694 43.031581,-96.511071 43.031685,-96.511026 43.0317,-96.510984 43.031719,-96.510948 43.031743,-96.510824 43.031855,-96.510666 43.032036,-96.510623 43.032101,-96.510581 43.032203,-96.510416 43.032763,-96.51006 43.034207,-96.509942 43.034516,-96.509731 43.034956,-96.509626 43.035194,-96.509624 43.035199,-96.509498 43.035686,-96.509378 43.036033,-96.509267 43.036455,-96.509138 43.036763,-96.509134 43.036798,-96.509169 43.037011,-96.509191 43.037547,-96.509252 43.037794,-96.509291 43.037898,-96.509308 43.037931,-96.509333 43.037962,-96.509525 43.038125,-96.509596 43.038175,-96.509918 43.03834,-96.510181 43.038438,-96.5103 43.038501,-96.510336 43.038526,-96.510495 43.038663,-96.5106 43.038784,-96.510746 43.03905,-96.510772 43.039119,-96.510831 43.039329,-96.510886 43.039466,-96.510998 43.039665,-96.511048 43.039727,-96.51108 43.039754,-96.511487 43.040013,-96.51165 43.040094,-96.511881 43.040228,-96.512146 43.04044,-96.512222 43.040486,-96.512317 43.040465,-96.512454 43.040426,-96.512502 43.040416,-96.512599 43.040407,-96.51309 43.040377,-96.513233 43.04035,-96.513785 43.040197,-96.513921 43.040155,-96.514052 43.040105,-96.514257 43.039992,-96.514643 43.039782,-96.514904 43.039681,-96.515878 43.039197,-96.516188 43.03902,-96.516307 43.038956,-96.516945 43.038684,-96.517209 43.038587,-96.517849 43.038399,-96.518203 43.038274,\\$/;"	v
ipX	raster/rt_core/librtcore.h	/^    double ipX; \/* geo x ordinate of the corner of upper-left pixel *\/$/;"	m	struct:rt_raster_t
ipX	raster/rt_core/librtcore.h	/^    double ipX; \/* insertion point X: 8 bytes *\/$/;"	m	struct:rt_raster_serialized_t
ipY	raster/rt_core/librtcore.h	/^    double ipY; \/* geo y ordinate of the corner of bottom-right pixel *\/$/;"	m	struct:rt_raster_t
ipY	raster/rt_core/librtcore.h	/^    double ipY; \/* insertion point Y: 8 bytes *\/$/;"	m	struct:rt_raster_serialized_t
ipm	postgis/lwgeom_functions_analytic.c	/^	double ipm;$/;"	m	struct:gridspec_t	file:
ipx	postgis/lwgeom_functions_analytic.c	/^	double ipx;$/;"	m	struct:gridspec_t	file:
ipy	postgis/lwgeom_functions_analytic.c	/^	double ipy;$/;"	m	struct:gridspec_t	file:
ipz	postgis/lwgeom_functions_analytic.c	/^	double ipz;$/;"	m	struct:gridspec_t	file:
isDone	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        public boolean isDone() {$/;"	m	class:JTSShape.GeometryCollectionPathIterator
isDone	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        public boolean isDone() {$/;"	m	class:JTSShape.LineStringPathIterator
isDone	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        public boolean isDone() {$/;"	m	class:JTSShape.PointPathIterator
isDone	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        public boolean isDone() {$/;"	m	class:JTSShape.PolygonPathIterator
isEmpty	java/jdbc/src/org/postgis/ComposedGeom.java	/^    public boolean isEmpty() {$/;"	m	class:ComposedGeom
isMachineLittleEndian	raster/rt_core/rt_serialize.c	/^isMachineLittleEndian(void) {$/;"	f
isMeasured	java/jdbc/src/org/postgis/Geometry.java	/^	public boolean isMeasured() {$/;"	m	class:Geometry
isMutable	java/ejb3/src/org/postgis/hibernate/GeometryType.java	/^	public boolean isMutable() {$/;"	m	class:GeometryType
isOnSegment	postgis/lwgeom_functions_analytic.c	/^int isOnSegment(POINT2D *seg1, POINT2D *seg2, POINT2D *point)$/;"	f
isRing	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        final boolean isRing;$/;"	f	class:JTSShape.LineStringPathIterator
is_bigendian	loader/pgsql2shp-core.c	/^is_bigendian(void)$/;"	f	file:
is_clockwise	loader/pgsql2shp-core.c	/^is_clockwise(int num_points, double *x, double *y, double *z)$/;"	f	file:
is_georeferenced	raster/scripts/python/window.py	/^def is_georeferenced(gt):$/;"	f
is_gml_namespace	postgis/lwgeom_in_gml.c	/^static bool is_gml_namespace(xmlNodePtr xnode, bool is_strict)$/;"	f	file:
is_kml_namespace	postgis/lwgeom_in_kml.c	/^static bool is_kml_namespace(xmlNodePtr xnode, bool is_strict)$/;"	f	file:
is_nan	raster/scripts/python/raster2pgsql.py	/^def is_nan(x):$/;"	f
is_pretype	extras/tiger_geocoder/tiger_2011/normalize/pprint_addy.sql	/^CREATE OR REPLACE FUNCTION is_pretype(text) RETURNS boolean AS$/;"	f
is_running	loader/shp2pgsql-gui.c	/^static volatile int is_running = FALSE;$/;"	v	file:
is_xlink	postgis/lwgeom_in_gml.c	/^static bool is_xlink(xmlNodePtr node)$/;"	f	file:
isempty	raster/rt_core/rt_mapalgebra.c	/^	int *isempty;$/;"	m	struct:_rti_iterator_arg_t	file:
isempty	raster/rt_pg/rtpg_mapalgebra.c	/^	uint8_t *isempty; \/* flag indicating if raster is empty *\/$/;"	m	struct:rtpg_nmapalgebra_arg_t	file:
isnodata	raster/rt_core/librtcore.h	/^	int isnodata;$/;"	m	struct:rt_colormap_entry_t
isnodata	raster/rt_core/librtcore.h	/^    int32_t isnodata;   \/* a flag indicating if this band is filled only with$/;"	m	struct:rt_band_t
isnodata	raster/rt_core/rt_mapalgebra.c	/^		int *isnodata;$/;"	m	struct:_rti_iterator_arg_t::__anon45	file:
isring	postgis/lwgeom_geos.c	/^Datum isring(PG_FUNCTION_ARGS)$/;"	f
isring	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(isring);$/;"	v
issimple	postgis/lwgeom_geos.c	/^Datum issimple(PG_FUNCTION_ARGS)$/;"	f
issimple	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(issimple);$/;"	v
isvalid	postgis/lwgeom_geos.c	/^Datum isvalid(PG_FUNCTION_ARGS)$/;"	f
isvalid	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(isvalid);$/;"	v
isvaliddetail	postgis/lwgeom_geos.c	/^Datum isvaliddetail(PG_FUNCTION_ARGS)$/;"	f
isvaliddetail	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(isvaliddetail);$/;"	v
isvalidreason	postgis/lwgeom_geos.c	/^Datum isvalidreason(PG_FUNCTION_ARGS)$/;"	f
isvalidreason	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(isvalidreason);$/;"	v
item	raster/rt_core/rt_warp.c	/^			char **item;$/;"	m	struct:_rti_warp_arg_t::__anon42::__anon43	file:
iterator	java/jdbc/src/org/postgis/ComposedGeom.java	/^    public Iterator iterator() {$/;"	m	class:ComposedGeom
j	doc/html/jquery.js	/^var I=(K>0?this.clone(true):this).get();o.fn[F].apply(o(L[K]),I);J=J.concat(I)}return this.pushStack(J,E,G)}});o.each({removeAttr:function(E){o.attr(this,E,"");if(this.nodeType==1){this.removeAttribute(E)}},addClass:function(E){o.className.add(this,E)},removeClass:function(E){o.className.remove(this,E)},toggleClass:function(F,E){if(typeof E!=="boolean"){E=!o.className.has(this,F)}o.className[E?"add":"remove"](this,F)},remove:function(E){if(!E||o.filter(E,[this]).length){o("*",this).add([this]).each(function(){o.event.remove(this);o.removeData(this)});if(this.parentNode){this.parentNode.removeChild(this)}}},empty:function(){o(this).children().remove();while(this.firstChild){this.removeChild(this.firstChild)}}},function(E,F){o.fn[E]=function(){return this.each(F,arguments)}});function j(E,F){return E[0]&&parseInt(o.curCSS(E[0],F,true),10)||0}var h="jQuery"+e(),v=0,A={};o.extend({cache:{},data:function(F,E,G){F=F==l?A:F;var H=F[h];if(!H){H=F[h]=++v}if(E&&!o.cache[H]){o.cache[H]={}}if(G!==g){o.cache[H][E]=G}return E?o.cache[H][E]:H},removeData:function(F,E){F=F==l?A:F;var H=F[h];if(E){if(o.cache[H]){delete o.cache[H][E];E="";for(E in o.cache[H]){break}if(!E){o.removeData(F)}}}else{try{delete F[h]}catch(G){if(F.removeAttribute){F.removeAttribute(h)}}delete o.cache[H]}},queue:function(F,E,H){if(F){E=(E||"fx")+"queue";var G=o.data(F,E);if(!G||o.isArray(H)){G=o.data(F,E,o.makeArray(H))}else{if(H){G.push(H)}}}return G},dequeue:function(H,G){var E=o.queue(H,G),F=E.shift();if(!G||G==="fx"){F=E[0]}if(F!==g){F.call(H)}}});o.fn.extend({data:function(E,G){var H=E.split(".");H[1]=H[1]?"."+H[1]:"";if(G===g){var F=this.triggerHandler("getData"+H[1]+"!",[H[0]]);if(F===g&&this.length){F=o.data(this[0],E)}return F===g&&H[1]?this.data(H[0]):F}else{return this.trigger("setData"+H[1]+"!",[H[0],G]).each(function(){o.data(this,E,G)})}},removeData:function(E){return this.each(function(){o.removeData(this,E)})},queue:function(E,F){if(typeof E!=="string"){F=E;E="fx"}if(F===g){return o.queue(this[0],E)}return this.each(function(){var G=o.queue(this,E,F);if(E=="fx"&&G.length==1){G[0].call(this)}})},dequeue:function(E){return this.each(function(){o.dequeue(this,E)})}});$/;"	f
jndiCntx	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAOImpl.java	/^    private Context     jndiCntx;$/;"	f	class:PostGisGeometryDAOImpl	file:
keep_fieldname_case	loader/pgsql2shp-core.h	/^	int keep_fieldname_case;$/;"	m	struct:shp_dumper_config
keepnodata	raster/rt_pg/rtpg_pixel.c	/^	bool keepnodata;$/;"	m	struct:rtpg_setvaluesgv_arg_t	file:
key	postgis/gserialized_gist_2d.c	/^	BOX2DF *key;$/;"	m	struct:__anon20	file:
kw	raster/rt_pg/rtpg_mapalgebra.c	/^	} kw;$/;"	m	struct:__anon50	typeref:struct:__anon50::__anon53	file:
l1	topology/test/regress/layertrigger.sql	/^create table t2.l1 (id serial);$/;"	t
l1.id	topology/test/regress/layertrigger.sql	/^create table t2.l1 (id serial);$/;"	F
l21	liblwgeom/cunit/cu_algorithm.c	/^LWLINE *l21 = NULL;$/;"	v
l22	liblwgeom/cunit/cu_algorithm.c	/^LWLINE *l22 = NULL;$/;"	v
label_progress	loader/shp2pgsql-gui.c	/^static GtkWidget *label_progress = NULL;$/;"	v	file:
lakes	extras/ogc_test_suite/1_schema.sql	/^CREATE TABLE lakes ($/;"	t
lakes.fid	extras/ogc_test_suite/1_schema.sql	/^       fid               INTEGER NOT NULL PRIMARY KEY,$/;"	F
lakes.name	extras/ogc_test_suite/1_schema.sql	/^       name              VARCHAR(64)$/;"	F
land_parcels	topology/test/load_features.sql	/^CREATE TABLE features.land_parcels ( -- Land parcels (selected faces)$/;"	t
land_parcels.feature_name	topology/test/load_features.sql	/^  feature_name VARCHAR PRIMARY KEY) with oids;$/;"	F
last_column	liblwgeom/lwin_wkt_parse.c	/^  int last_column;$/;"	m	struct:YYLTYPE	file:
last_column	liblwgeom/lwin_wkt_parse.h	/^  int last_column;$/;"	m	struct:YYLTYPE
last_line	liblwgeom/lwin_wkt_parse.c	/^  int last_line;$/;"	m	struct:YYLTYPE	file:
last_line	liblwgeom/lwin_wkt_parse.h	/^  int last_line;$/;"	m	struct:YYLTYPE
lat	liblwgeom/lwgeodetic.h	/^	double lat;$/;"	m	struct:__anon21
latex_count	doc/latex/Makefile	/^	latex_count=5 ; \\$/;"	m
latitude_degrees_normalize	liblwgeom/lwgeodetic.c	/^double latitude_degrees_normalize(double lat)$/;"	f
latitude_radians_normalize	liblwgeom/lwgeodetic.c	/^double latitude_radians_normalize(double lat)$/;"	f
layerStyle	doc/html/image_src/styles.h	/^struct layerStyle$/;"	s
ldid	loader/shp2pgsql-core.c	/^    int ldid;$/;"	m	struct:__anon62	file:
least_hn	extras/tiger_geocoder/tiger_2011/geocode/other_helper_functions.sql	/^CREATE OR REPLACE FUNCTION least_hn(fromhn varchar, tohn varchar)$/;"	f
leftNode	postgis/lwgeom_rtree.h	/^	struct rtree_node *leftNode;$/;"	m	struct:rtree_node	typeref:struct:rtree_node::rtree_node
leftUpper	postgis/gserialized_gist_2d.c	/^	float		leftUpper;		\/* upper bound of left interval *\/$/;"	m	struct:__anon18	file:
left_node	liblwgeom/lwtree.h	/^	struct rect_node *left_node;$/;"	m	struct:rect_node	typeref:struct:rect_node::rect_node
len	java/jdbc/src/org/postgis/LineString.java	/^    double len = -1.;$/;"	f	class:LineString
len	java/jdbc/src/org/postgis/MultiLineString.java	/^    double len = -1;$/;"	f	class:MultiLineString
len	raster/rt_core/rt_warp.c	/^			int len;$/;"	m	struct:_rti_warp_arg_t::__anon42::__anon43	file:
length	doc/html/image_src/styles.c	/^length( LAYERSTYLE *head )$/;"	f
length	java/jdbc/src/org/postgis/LineString.java	/^    public double length() {$/;"	m	class:LineString
length	java/jdbc/src/org/postgis/MultiLineString.java	/^    public double length() {$/;"	m	class:MultiLineString
length	raster/loader/raster2pgsql.h	/^	uint32_t length;$/;"	m	struct:stringbuffer_t
levenshtein_ignore_case	extras/tiger_geocoder/tiger_2011/utility/levenshtein_ignore_case.sql	/^CREATE OR REPLACE FUNCTION levenshtein_ignore_case(VARCHAR, VARCHAR) RETURNS INTEGER$/;"	f
libgeom_suite	liblwgeom/cunit/cu_libgeom.c	/^CU_SuiteInfo libgeom_suite = {"libgeom",  NULL,  NULL, libgeom_tests};$/;"	v
libgeom_tests	liblwgeom/cunit/cu_libgeom.c	/^CU_TestInfo libgeom_tests[] =$/;"	v
line	raster/loader/raster2pgsql.h	/^	char **line;$/;"	m	struct:stringbuffer_t
line2pts	liblwgeom/cunit/cu_geodetic.c	/^static void line2pts(const char *wkt, POINT3D *A1, POINT3D *A2)$/;"	f	file:
lineColor	doc/html/image_src/styles.h	/^	char *lineColor;$/;"	m	struct:layerStyle
lineWidth	doc/html/image_src/styles.h	/^	int   lineWidth;$/;"	m	struct:layerStyle
linemerge	postgis/lwgeom_geos.c	/^Datum linemerge(PG_FUNCTION_ARGS)$/;"	f
linemerge	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(linemerge);$/;"	v
lines	topology/test/regress/topo2.5d.sql	/^CREATE TABLE lines (id serial);$/;"	t
lines.id	topology/test/regress/topo2.5d.sql	/^CREATE TABLE lines (id serial);$/;"	F
linesignature	utils/postgis_restore.pl.in	/^sub linesignature {$/;"	s
linestring	liblwgeom/lwin_wkt_parse.y	/^linestring : $/;"	l
linestring	regress/typmod.sql	/^CREATE TABLE tm.linestring (id serial, g geometry(linestring), gg geography(linestring) );$/;"	t
linestring.g	regress/typmod.sql	/^CREATE TABLE tm.linestring (id serial, g geometry(linestring), gg geography(linestring) );$/;"	F
linestring.gg	regress/typmod.sql	/^CREATE TABLE tm.linestring (id serial, g geometry(linestring), gg geography(linestring) );$/;"	F
linestring.id	regress/typmod.sql	/^CREATE TABLE tm.linestring (id serial, g geometry(linestring), gg geography(linestring) );$/;"	F
linestring0	regress/typmod.sql	/^CREATE TABLE tm.linestring0 (id serial, g geometry(linestring, 0), gg geography(linestring, 0) );$/;"	t
linestring0.g	regress/typmod.sql	/^CREATE TABLE tm.linestring0 (id serial, g geometry(linestring, 0), gg geography(linestring, 0) );$/;"	F
linestring0.gg	regress/typmod.sql	/^CREATE TABLE tm.linestring0 (id serial, g geometry(linestring, 0), gg geography(linestring, 0) );$/;"	F
linestring0.id	regress/typmod.sql	/^CREATE TABLE tm.linestring0 (id serial, g geometry(linestring, 0), gg geography(linestring, 0) );$/;"	F
linestring4326	regress/typmod.sql	/^CREATE TABLE tm.linestring4326 (id serial, g geometry(linestring, 4326), gg geography(linestring, 4326) );$/;"	t
linestring4326.g	regress/typmod.sql	/^CREATE TABLE tm.linestring4326 (id serial, g geometry(linestring, 4326), gg geography(linestring, 4326) );$/;"	F
linestring4326.gg	regress/typmod.sql	/^CREATE TABLE tm.linestring4326 (id serial, g geometry(linestring, 4326), gg geography(linestring, 4326) );$/;"	F
linestring4326.id	regress/typmod.sql	/^CREATE TABLE tm.linestring4326 (id serial, g geometry(linestring, 4326), gg geography(linestring, 4326) );$/;"	F
linestring_from_pa	liblwgeom/lwsegmentize.c	/^linestring_from_pa(const POINTARRAY *pa, int srid, int start, int end)$/;"	f	file:
linestring_list	liblwgeom/lwin_wkt_parse.y	/^linestring_list :$/;"	l
linestring_untagged	liblwgeom/lwin_wkt_parse.y	/^linestring_untagged :$/;"	l
linestringm	regress/typmod.sql	/^CREATE TABLE tm.linestringm (id serial, g geometry(linestringm), gg geography(linestringm) );$/;"	t
linestringm.g	regress/typmod.sql	/^CREATE TABLE tm.linestringm (id serial, g geometry(linestringm), gg geography(linestringm) );$/;"	F
linestringm.gg	regress/typmod.sql	/^CREATE TABLE tm.linestringm (id serial, g geometry(linestringm), gg geography(linestringm) );$/;"	F
linestringm.id	regress/typmod.sql	/^CREATE TABLE tm.linestringm (id serial, g geometry(linestringm), gg geography(linestringm) );$/;"	F
linestringm0	regress/typmod.sql	/^CREATE TABLE tm.linestringm0 (id serial, g geometry(linestringm, 0), gg geography(linestringm, 0) );$/;"	t
linestringm0.g	regress/typmod.sql	/^CREATE TABLE tm.linestringm0 (id serial, g geometry(linestringm, 0), gg geography(linestringm, 0) );$/;"	F
linestringm0.gg	regress/typmod.sql	/^CREATE TABLE tm.linestringm0 (id serial, g geometry(linestringm, 0), gg geography(linestringm, 0) );$/;"	F
linestringm0.id	regress/typmod.sql	/^CREATE TABLE tm.linestringm0 (id serial, g geometry(linestringm, 0), gg geography(linestringm, 0) );$/;"	F
linestringm4326	regress/typmod.sql	/^CREATE TABLE tm.linestringm4326 (id serial, g geometry(linestringm, 4326), gg geography(linestringm, 4326) );$/;"	t
linestringm4326.g	regress/typmod.sql	/^CREATE TABLE tm.linestringm4326 (id serial, g geometry(linestringm, 4326), gg geography(linestringm, 4326) );$/;"	F
linestringm4326.gg	regress/typmod.sql	/^CREATE TABLE tm.linestringm4326 (id serial, g geometry(linestringm, 4326), gg geography(linestringm, 4326) );$/;"	F
linestringm4326.id	regress/typmod.sql	/^CREATE TABLE tm.linestringm4326 (id serial, g geometry(linestringm, 4326), gg geography(linestringm, 4326) );$/;"	F
linestringz	regress/typmod.sql	/^CREATE TABLE tm.linestringz (id serial, g geometry(linestringz), gg geography(linestringz) );$/;"	t
linestringz.g	regress/typmod.sql	/^CREATE TABLE tm.linestringz (id serial, g geometry(linestringz), gg geography(linestringz) );$/;"	F
linestringz.gg	regress/typmod.sql	/^CREATE TABLE tm.linestringz (id serial, g geometry(linestringz), gg geography(linestringz) );$/;"	F
linestringz.id	regress/typmod.sql	/^CREATE TABLE tm.linestringz (id serial, g geometry(linestringz), gg geography(linestringz) );$/;"	F
linestringz0	regress/typmod.sql	/^CREATE TABLE tm.linestringz0 (id serial, g geometry(linestringz, 0), gg geography(linestringz, 0) );$/;"	t
linestringz0.g	regress/typmod.sql	/^CREATE TABLE tm.linestringz0 (id serial, g geometry(linestringz, 0), gg geography(linestringz, 0) );$/;"	F
linestringz0.gg	regress/typmod.sql	/^CREATE TABLE tm.linestringz0 (id serial, g geometry(linestringz, 0), gg geography(linestringz, 0) );$/;"	F
linestringz0.id	regress/typmod.sql	/^CREATE TABLE tm.linestringz0 (id serial, g geometry(linestringz, 0), gg geography(linestringz, 0) );$/;"	F
linestringz4326	regress/typmod.sql	/^CREATE TABLE tm.linestringz4326 (id serial, g geometry(linestringz, 4326), gg geography(linestringz, 4326) );$/;"	t
linestringz4326.g	regress/typmod.sql	/^CREATE TABLE tm.linestringz4326 (id serial, g geometry(linestringz, 4326), gg geography(linestringz, 4326) );$/;"	F
linestringz4326.gg	regress/typmod.sql	/^CREATE TABLE tm.linestringz4326 (id serial, g geometry(linestringz, 4326), gg geography(linestringz, 4326) );$/;"	F
linestringz4326.id	regress/typmod.sql	/^CREATE TABLE tm.linestringz4326 (id serial, g geometry(linestringz, 4326), gg geography(linestringz, 4326) );$/;"	F
linestringzm	regress/typmod.sql	/^CREATE TABLE tm.linestringzm (id serial, g geometry(linestringzm), gg geography(linestringzm) );$/;"	t
linestringzm.g	regress/typmod.sql	/^CREATE TABLE tm.linestringzm (id serial, g geometry(linestringzm), gg geography(linestringzm) );$/;"	F
linestringzm.gg	regress/typmod.sql	/^CREATE TABLE tm.linestringzm (id serial, g geometry(linestringzm), gg geography(linestringzm) );$/;"	F
linestringzm.id	regress/typmod.sql	/^CREATE TABLE tm.linestringzm (id serial, g geometry(linestringzm), gg geography(linestringzm) );$/;"	F
linestringzm0	regress/typmod.sql	/^CREATE TABLE tm.linestringzm0 (id serial, g geometry(linestringzm, 0), gg geography(linestringzm, 0) );$/;"	t
linestringzm0.g	regress/typmod.sql	/^CREATE TABLE tm.linestringzm0 (id serial, g geometry(linestringzm, 0), gg geography(linestringzm, 0) );$/;"	F
linestringzm0.gg	regress/typmod.sql	/^CREATE TABLE tm.linestringzm0 (id serial, g geometry(linestringzm, 0), gg geography(linestringzm, 0) );$/;"	F
linestringzm0.id	regress/typmod.sql	/^CREATE TABLE tm.linestringzm0 (id serial, g geometry(linestringzm, 0), gg geography(linestringzm, 0) );$/;"	F
linestringzm4326	regress/typmod.sql	/^CREATE TABLE tm.linestringzm4326 (id serial, g geometry(linestringzm, 4326), gg geography(linestringzm, 4326) );$/;"	t
linestringzm4326.g	regress/typmod.sql	/^CREATE TABLE tm.linestringzm4326 (id serial, g geometry(linestringzm, 4326), gg geography(linestringzm, 4326) );$/;"	F
linestringzm4326.gg	regress/typmod.sql	/^CREATE TABLE tm.linestringzm4326 (id serial, g geometry(linestringzm, 4326), gg geography(linestringzm, 4326) );$/;"	F
linestringzm4326.id	regress/typmod.sql	/^CREATE TABLE tm.linestringzm4326 (id serial, g geometry(linestringzm, 4326), gg geography(linestringzm, 4326) );$/;"	F
linked	loader/shp2pgsql-core.c	/^	unsigned int linked; 	\/* number of "next" rings *\/$/;"	m	struct:struct_ring	file:
list	loader/shp2pgsql-core.c	/^	Point *list;		\/* list of points *\/$/;"	m	struct:struct_ring	file:
ll2cart	liblwgeom/lwgeodetic.c	/^void ll2cart(const POINT2D *g, POINT3D *p)$/;"	f
llb	java/jdbc/src/org/postgis/PGboxbase.java	/^    protected Point llb;$/;"	f	class:PGboxbase
load	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAOImpl.java	/^    public void load(java.lang.Integer pk, com.geodetix.geo.ejb.GeometryBean ejb)$/;"	m	class:PostGisGeometryDAOImpl
loadDrivers	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    public static void loadDrivers() throws ClassNotFoundException {$/;"	m	class:JtsTestParser
loadDrivers	java/jdbc/src/examples/TestParser.java	/^    public static void loadDrivers() throws ClassNotFoundException {$/;"	m	class:TestParser
loadTypesAdder	java/jdbc/src/org/postgis/DriverWrapper.java	/^    private static TypesAdder loadTypesAdder(String version) throws SQLException {$/;"	m	class:DriverWrapper	file:
load_sql_file	regress/run_test.pl	/^sub load_sql_file$/;"	s
loaddbf	extras/tiger_geocoder/tiger_2011/legacy_import/tiger2008/import_tiger_shps.sh	/^function loaddbf () {$/;"	f
loader_config	loader/cunit/cu_shp2pgsql.c	/^SHPLOADERCONFIG *loader_config;$/;"	v
loader_mode_combo	loader/shp2pgsql-gui.c	/^GtkWidget *loader_mode_combo = NULL;$/;"	v
loader_mode_combo_list	loader/shp2pgsql-gui.c	/^GtkListStore *loader_mode_combo_list;$/;"	v
loader_rt_error_handler	raster/loader/raster2pgsql.c	/^loader_rt_error_handler(const char *fmt, va_list ap) {$/;"	f	file:
loader_rt_info_handler	raster/loader/raster2pgsql.c	/^loader_rt_info_handler(const char *fmt, va_list ap) {$/;"	f	file:
loader_rt_warning_handler	raster/loader/raster2pgsql.c	/^loader_rt_warning_handler(const char *fmt, va_list ap) {$/;"	f	file:
loader_state	loader/cunit/cu_shp2pgsql.c	/^SHPLOADERSTATE *loader_state;$/;"	v
loadshp	extras/tiger_geocoder/tiger_2011/legacy_import/tiger2008/import_tiger_shps.sh	/^function loadshp () {$/;"	f
location	java/ejb3/src/org/postgis/ejb/PersonEntity.java	/^	private Geometry location;$/;"	f	class:PersonEntity	file:
location_extract	extras/tiger_geocoder/tiger_2011/normalize/location_extract.sql	/^CREATE OR REPLACE FUNCTION location_extract(fullStreet VARCHAR, stateAbbrev VARCHAR) RETURNS VARCHAR$/;"	f
location_extract_countysub_exact	extras/tiger_geocoder/tiger_2011/normalize/location_extract_countysub_exact.sql	/^CREATE OR REPLACE FUNCTION location_extract_countysub_exact($/;"	f
location_extract_countysub_fuzzy	extras/tiger_geocoder/tiger_2011/normalize/location_extract_countysub_fuzzy.sql	/^CREATE OR REPLACE FUNCTION location_extract_countysub_fuzzy($/;"	f
location_extract_place_exact	extras/tiger_geocoder/tiger_2011/normalize/location_extract_place_exact.sql	/^CREATE OR REPLACE FUNCTION location_extract_place_exact($/;"	f
location_extract_place_fuzzy	extras/tiger_geocoder/tiger_2011/normalize/location_extract_place_fuzzy.sql	/^CREATE OR REPLACE FUNCTION location_extract_place_fuzzy($/;"	f
logger	java/jdbc/jtssrc/org/postgis/jts/JtsWrapper.java	/^    protected static final Logger logger = Logger.getLogger("org.postgis.DriverWrapper");$/;"	f	class:JtsWrapper
logger	java/jdbc/src/org/postgis/DriverWrapper.java	/^    protected static final Logger logger = Logger.getLogger("org.postgis.DriverWrapper");$/;"	f	class:DriverWrapper
logging	raster/scripts/python/rtreader.py	/^    logging = property(fset = lambda self, v: setattr(self, '_logging', v))$/;"	v	class:RasterReader
logit	raster/scripts/python/raster2pgsql.py	/^def logit(msg):$/;"	f
logit	raster/scripts/python/rtgdalraster.py	/^def logit(msg):$/;"	f
logit	raster/scripts/python/rtpixdump.py	/^def logit(msg):$/;"	f
logit	raster/scripts/python/rtrowdump.py	/^def logit(msg):$/;"	f
lon	liblwgeom/lwgeodetic.h	/^	double lon;$/;"	m	struct:__anon21
long_name	raster/rt_core/librtcore.h	/^	char *long_name;$/;"	m	struct:rt_gdaldriver_t
longitude_degrees_normalize	liblwgeom/lwgeodetic.c	/^double longitude_degrees_normalize(double lon)$/;"	f
longitude_radians_normalize	liblwgeom/lwgeodetic.c	/^double longitude_radians_normalize(double lon)$/;"	f
lower	postgis/gserialized_gist_2d.c	/^	float		lower,$/;"	m	struct:__anon19	file:
lw_arc_angle	liblwgeom/lwsegmentize.c	/^lw_arc_angle(const POINT2D *a, const POINT2D *b, const POINT2D *c)$/;"	f	file:
lw_arc_calculate_gbox_cartesian	liblwgeom/g_box.c	/^static int lw_arc_calculate_gbox_cartesian(const POINT4D *p1, const POINT4D *p2, const POINT4D *p3, GBOX *gbox)$/;"	f	file:
lw_arc_calculate_gbox_cartesian_2d	liblwgeom/g_box.c	/^int lw_arc_calculate_gbox_cartesian_2d(const POINT2D *A1, const POINT2D *A2, const POINT2D *A3, GBOX *gbox)$/;"	f
lw_arc_center	liblwgeom/lwalgorithm.c	/^lw_arc_center(const POINT2D *p1, const POINT2D *p2, const POINT2D *p3, POINT2D *result)$/;"	f
lw_arc_is_pt	liblwgeom/lwalgorithm.c	/^lw_arc_is_pt(const POINT2D *A1, const POINT2D *A2, const POINT2D *A3)$/;"	f
lw_arc_length	liblwgeom/lwalgorithm.c	/^lw_arc_length(const POINT2D *A1, const POINT2D *A2, const POINT2D *A3)$/;"	f
lw_arc_side	liblwgeom/lwalgorithm.c	/^int lw_arc_side(const POINT2D *A1, const POINT2D *A2, const POINT2D *A3, const POINT2D *Q)$/;"	f
lw_asprintf	liblwgeom/vsprintf.c	/^lw_asprintf$/;"	f
lw_curvering_getfirstpoint2d_cp	liblwgeom/measures.c	/^lw_curvering_getfirstpoint2d_cp(LWGEOM *geom)$/;"	f	file:
lw_dist2d_arc_arc	liblwgeom/measures.c	/^lw_dist2d_arc_arc(const POINT2D *A1, const POINT2D *A2, const POINT2D *A3, $/;"	f
lw_dist2d_check_overlap	liblwgeom/measures.c	/^lw_dist2d_check_overlap(LWGEOM *lwg1,LWGEOM *lwg2)$/;"	f
lw_dist2d_circstring_circstring	liblwgeom/measures.c	/^lw_dist2d_circstring_circstring(LWCIRCSTRING *line1, LWCIRCSTRING *line2, DISTPTS *dl)$/;"	f
lw_dist2d_circstring_curvepoly	liblwgeom/measures.c	/^lw_dist2d_circstring_curvepoly(LWCIRCSTRING *circ, LWCURVEPOLY *poly, DISTPTS *dl)$/;"	f
lw_dist2d_circstring_poly	liblwgeom/measures.c	/^lw_dist2d_circstring_poly(LWCIRCSTRING *circ, LWPOLY *poly, DISTPTS *dl)$/;"	f
lw_dist2d_comp	liblwgeom/measures.c	/^lw_dist2d_comp(LWGEOM *lw1, LWGEOM *lw2, DISTPTS *dl)$/;"	f
lw_dist2d_curvepoly_curvepoly	liblwgeom/measures.c	/^lw_dist2d_curvepoly_curvepoly(LWCURVEPOLY *poly1, LWCURVEPOLY *poly2, DISTPTS *dl)$/;"	f
lw_dist2d_distanceline	liblwgeom/measures.c	/^lw_dist2d_distanceline(LWGEOM *lw1, LWGEOM *lw2, int srid, int mode)$/;"	f
lw_dist2d_distancepoint	liblwgeom/measures.c	/^lw_dist2d_distancepoint(LWGEOM *lw1, LWGEOM *lw2,int srid,int mode)$/;"	f
lw_dist2d_distpts_init	liblwgeom/measures.c	/^lw_dist2d_distpts_init(DISTPTS *dl, int mode)$/;"	f
lw_dist2d_distribute_bruteforce	liblwgeom/measures.c	/^lw_dist2d_distribute_bruteforce(LWGEOM *lwg1, LWGEOM *lwg2, DISTPTS *dl)$/;"	f
lw_dist2d_distribute_fast	liblwgeom/measures.c	/^lw_dist2d_distribute_fast(LWGEOM *lwg1, LWGEOM *lwg2, DISTPTS *dl)$/;"	f
lw_dist2d_fast_ptarray_ptarray	liblwgeom/measures.c	/^lw_dist2d_fast_ptarray_ptarray(POINTARRAY *l1, POINTARRAY *l2,DISTPTS *dl, GBOX *box1, GBOX *box2)$/;"	f
lw_dist2d_is_collection	liblwgeom/measures.c	/^lw_dist2d_is_collection(const LWGEOM *g)$/;"	f	file:
lw_dist2d_line_circstring	liblwgeom/measures.c	/^lw_dist2d_line_circstring(LWLINE *line1, LWCIRCSTRING *line2, DISTPTS *dl)$/;"	f
lw_dist2d_line_curvepoly	liblwgeom/measures.c	/^lw_dist2d_line_curvepoly(LWLINE *line, LWCURVEPOLY *poly, DISTPTS *dl)$/;"	f
lw_dist2d_line_line	liblwgeom/measures.c	/^lw_dist2d_line_line(LWLINE *line1, LWLINE *line2, DISTPTS *dl)$/;"	f
lw_dist2d_line_poly	liblwgeom/measures.c	/^lw_dist2d_line_poly(LWLINE *line, LWPOLY *poly, DISTPTS *dl)$/;"	f
lw_dist2d_point_circstring	liblwgeom/measures.c	/^lw_dist2d_point_circstring(LWPOINT *point, LWCIRCSTRING *circ, DISTPTS *dl)$/;"	f
lw_dist2d_point_curvepoly	liblwgeom/measures.c	/^lw_dist2d_point_curvepoly(LWPOINT *point, LWCURVEPOLY *poly, DISTPTS *dl)$/;"	f
lw_dist2d_point_line	liblwgeom/measures.c	/^lw_dist2d_point_line(LWPOINT *point, LWLINE *line, DISTPTS *dl)$/;"	f
lw_dist2d_point_point	liblwgeom/measures.c	/^lw_dist2d_point_point(LWPOINT *point1, LWPOINT *point2, DISTPTS *dl)$/;"	f
lw_dist2d_point_poly	liblwgeom/measures.c	/^lw_dist2d_point_poly(LWPOINT *point, LWPOLY *poly, DISTPTS *dl)$/;"	f
lw_dist2d_poly_curvepoly	liblwgeom/measures.c	/^lw_dist2d_poly_curvepoly(LWPOLY *poly1, LWCURVEPOLY *curvepoly2, DISTPTS *dl)$/;"	f
lw_dist2d_poly_poly	liblwgeom/measures.c	/^lw_dist2d_poly_poly(LWPOLY *poly1, LWPOLY *poly2, DISTPTS *dl)$/;"	f
lw_dist2d_pre_seg_seg	liblwgeom/measures.c	/^lw_dist2d_pre_seg_seg(POINTARRAY *l1, POINTARRAY *l2,LISTSTRUCT *list1, LISTSTRUCT *list2,double k, DISTPTS *dl)$/;"	f
lw_dist2d_pt_arc	liblwgeom/measures.c	/^lw_dist2d_pt_arc(const POINT2D* P, const POINT2D* A1, const POINT2D* A2, const POINT2D* A3, DISTPTS* dl)$/;"	f
lw_dist2d_pt_pt	liblwgeom/measures.c	/^lw_dist2d_pt_pt(const POINT2D *thep1, const POINT2D *thep2, DISTPTS *dl)$/;"	f
lw_dist2d_pt_ptarray	liblwgeom/measures.c	/^lw_dist2d_pt_ptarray(const POINT2D *p, POINTARRAY *pa,DISTPTS *dl)$/;"	f
lw_dist2d_pt_ptarrayarc	liblwgeom/measures.c	/^lw_dist2d_pt_ptarrayarc(const POINT2D *p, const POINTARRAY *pa, DISTPTS *dl)$/;"	f
lw_dist2d_pt_seg	liblwgeom/measures.c	/^lw_dist2d_pt_seg(const POINT2D *p, const POINT2D *A, const POINT2D *B, DISTPTS *dl)$/;"	f
lw_dist2d_ptarray_ptarray	liblwgeom/measures.c	/^lw_dist2d_ptarray_ptarray(POINTARRAY *l1, POINTARRAY *l2,DISTPTS *dl)$/;"	f
lw_dist2d_ptarray_ptarrayarc	liblwgeom/measures.c	/^lw_dist2d_ptarray_ptarrayarc(const POINTARRAY *pa, const POINTARRAY *pb, DISTPTS *dl)$/;"	f
lw_dist2d_ptarrayarc_ptarrayarc	liblwgeom/measures.c	/^lw_dist2d_ptarrayarc_ptarrayarc(const POINTARRAY *pa, const POINTARRAY *pb, DISTPTS *dl)$/;"	f
lw_dist2d_recursive	liblwgeom/measures.c	/^int lw_dist2d_recursive(const LWGEOM *lwg1, const LWGEOM *lwg2, DISTPTS *dl)$/;"	f
lw_dist2d_seg_arc	liblwgeom/measures.c	/^lw_dist2d_seg_arc(const POINT2D *A1, const POINT2D *A2, const POINT2D *B1, const POINT2D *B2, const POINT2D *B3, DISTPTS *dl)$/;"	f
lw_dist2d_seg_seg	liblwgeom/measures.c	/^lw_dist2d_seg_seg(const POINT2D *A, const POINT2D *B, const POINT2D *C, const POINT2D *D, DISTPTS *dl)$/;"	f
lw_dist2d_selected_seg_seg	liblwgeom/measures.c	/^lw_dist2d_selected_seg_seg(POINT2D *A, POINT2D *B, POINT2D *C, POINT2D *D, DISTPTS *dl)$/;"	f
lw_dist3d_distanceline	liblwgeom/measures3d.c	/^lw_dist3d_distanceline(LWGEOM *lw1, LWGEOM *lw2,int srid,int mode)$/;"	f
lw_dist3d_distancepoint	liblwgeom/measures3d.c	/^lw_dist3d_distancepoint(LWGEOM *lw1, LWGEOM *lw2,int srid,int mode)$/;"	f
lw_dist3d_distribute_bruteforce	liblwgeom/measures3d.c	/^lw_dist3d_distribute_bruteforce(LWGEOM *lwg1, LWGEOM *lwg2, DISTPTS3D *dl)$/;"	f
lw_dist3d_line_line	liblwgeom/measures3d.c	/^lw_dist3d_line_line(LWLINE *line1, LWLINE *line2, DISTPTS3D *dl)$/;"	f
lw_dist3d_line_poly	liblwgeom/measures3d.c	/^int lw_dist3d_line_poly(LWLINE *line, LWPOLY *poly, DISTPTS3D *dl)$/;"	f
lw_dist3d_point_line	liblwgeom/measures3d.c	/^lw_dist3d_point_line(LWPOINT *point, LWLINE *line, DISTPTS3D *dl)$/;"	f
lw_dist3d_point_point	liblwgeom/measures3d.c	/^lw_dist3d_point_point(LWPOINT *point1, LWPOINT *point2, DISTPTS3D *dl)$/;"	f
lw_dist3d_point_poly	liblwgeom/measures3d.c	/^lw_dist3d_point_poly(LWPOINT *point, LWPOLY *poly, DISTPTS3D *dl)$/;"	f
lw_dist3d_poly_poly	liblwgeom/measures3d.c	/^int lw_dist3d_poly_poly(LWPOLY *poly1, LWPOLY *poly2, DISTPTS3D *dl)$/;"	f
lw_dist3d_pt_poly	liblwgeom/measures3d.c	/^lw_dist3d_pt_poly(POINT3DZ *p, LWPOLY *poly, PLANE3D *plane,POINT3DZ *projp, DISTPTS3D *dl)$/;"	f
lw_dist3d_pt_pt	liblwgeom/measures3d.c	/^lw_dist3d_pt_pt(POINT3DZ *thep1, POINT3DZ *thep2,DISTPTS3D *dl)$/;"	f
lw_dist3d_pt_ptarray	liblwgeom/measures3d.c	/^lw_dist3d_pt_ptarray(POINT3DZ *p, POINTARRAY *pa,DISTPTS3D *dl)$/;"	f
lw_dist3d_pt_seg	liblwgeom/measures3d.c	/^lw_dist3d_pt_seg(POINT3DZ *p, POINT3DZ *A, POINT3DZ *B, DISTPTS3D *dl)$/;"	f
lw_dist3d_ptarray_poly	liblwgeom/measures3d.c	/^int lw_dist3d_ptarray_poly(POINTARRAY *pa, LWPOLY *poly,PLANE3D *plane, DISTPTS3D *dl)$/;"	f
lw_dist3d_ptarray_ptarray	liblwgeom/measures3d.c	/^lw_dist3d_ptarray_ptarray(POINTARRAY *l1, POINTARRAY *l2,DISTPTS3D *dl)$/;"	f
lw_dist3d_recursive	liblwgeom/measures3d.c	/^int lw_dist3d_recursive(const LWGEOM *lwg1,const LWGEOM *lwg2, DISTPTS3D *dl)$/;"	f
lw_dist3d_seg_seg	liblwgeom/measures3d.c	/^lw_dist3d_seg_seg(POINT3DZ *s1p1, POINT3DZ *s1p2, POINT3DZ *s2p1, POINT3DZ *s2p2, DISTPTS3D *dl)$/;"	f
lw_get_int32_t	liblwgeom/lwgeom_api.c	/^lw_get_int32_t(const uint8_t *loc)$/;"	f
lw_get_uint32_t	liblwgeom/lwgeom_api.c	/^lw_get_uint32_t(const uint8_t *loc)$/;"	f
lw_pt_in_arc	liblwgeom/lwalgorithm.c	/^lw_pt_in_arc(const POINT2D *P, const POINT2D *A1, const POINT2D *A2, const POINT2D *A3)$/;"	f
lw_pt_in_seg	liblwgeom/lwalgorithm.c	/^lw_pt_in_seg(const POINT2D *P, const POINT2D *A1, const POINT2D *A2)$/;"	f
lw_seg_interact	liblwgeom/lwalgorithm.c	/^lw_seg_interact(const POINT2D *p1, const POINT2D *p2, const POINT2D *q1, const POINT2D *q2)$/;"	f	file:
lw_seg_length	liblwgeom/lwalgorithm.c	/^lw_seg_length(const POINT2D *A1, const POINT2D *A2)$/;"	f
lw_segment_intersects	liblwgeom/lwalgorithm.c	/^int lw_segment_intersects(const POINT2D *p1, const POINT2D *p2, const POINT2D *q1, const POINT2D *q2)$/;"	f
lw_segment_side	liblwgeom/lwalgorithm.c	/^int lw_segment_side(const POINT2D *p1, const POINT2D *p2, const POINT2D *q)$/;"	f
lw_vasprintf	liblwgeom/vsprintf.c	/^lw_vasprintf (result, format, args)$/;"	f
lwalloc	liblwgeom/lwutil.c	/^lwalloc(size_t size)$/;"	f
lwalloc_var	liblwgeom/lwutil.c	/^lwallocator lwalloc_var = default_allocator;$/;"	v
lwcirc_grid	postgis/lwgeom_functions_analytic.c	/^lwcirc_grid(LWCIRCSTRING *line, gridspec *grid)$/;"	f
lwcircle_segmentize	liblwgeom/lwsegmentize.c	/^lwcircle_segmentize(POINT4D *p1, POINT4D *p2, POINT4D *p3, uint32_t perQuad)$/;"	f	file:
lwcircstring_addpoint	liblwgeom/lwcircstring.c	/^lwcircstring_addpoint(LWCIRCSTRING *curve, LWPOINT *point, uint32_t where)$/;"	f
lwcircstring_as_lwgeom	liblwgeom/lwgeom.c	/^LWGEOM *lwcircstring_as_lwgeom(const LWCIRCSTRING *obj)$/;"	f
lwcircstring_calculate_gbox_cartesian	liblwgeom/g_box.c	/^static int lwcircstring_calculate_gbox_cartesian(LWCIRCSTRING *curve, GBOX *gbox)$/;"	f	file:
lwcircstring_clone	liblwgeom/lwcircstring.c	/^lwcircstring_clone(const LWCIRCSTRING *g)$/;"	f
lwcircstring_construct	liblwgeom/lwcircstring.c	/^lwcircstring_construct(int srid, GBOX *bbox, POINTARRAY *points)$/;"	f
lwcircstring_construct_empty	liblwgeom/lwcircstring.c	/^lwcircstring_construct_empty(int srid, char hasz, char hasm)$/;"	f
lwcircstring_free	liblwgeom/lwcircstring.c	/^void lwcircstring_free(LWCIRCSTRING *curve)$/;"	f
lwcircstring_from_gserialized_buffer	liblwgeom/g_serialized.c	/^static LWCIRCSTRING* lwcircstring_from_gserialized_buffer(uint8_t *data_ptr, uint8_t g_flags, size_t *g_size)$/;"	f	file:
lwcircstring_from_lwmpoint	liblwgeom/lwcircstring.c	/^lwcircstring_from_lwmpoint(int srid, LWMPOINT *mpoint)$/;"	f
lwcircstring_from_lwpointarray	liblwgeom/lwcircstring.c	/^lwcircstring_from_lwpointarray(int srid, uint32_t npoints, LWPOINT **points)$/;"	f
lwcircstring_from_wkb_state	liblwgeom/lwin_wkb.c	/^static LWCIRCSTRING* lwcircstring_from_wkb_state(wkb_parse_state *s)$/;"	f	file:
lwcircstring_get_lwpoint	liblwgeom/lwcircstring.c	/^LWPOINT* lwcircstring_get_lwpoint(LWCIRCSTRING *circ, int where) {$/;"	f
lwcircstring_is_closed	liblwgeom/lwcircstring.c	/^lwcircstring_is_closed(const LWCIRCSTRING *curve)$/;"	f
lwcircstring_is_empty	liblwgeom/lwcircstring.c	/^int lwcircstring_is_empty(const LWCIRCSTRING *circ)$/;"	f
lwcircstring_length	liblwgeom/lwcircstring.c	/^double lwcircstring_length(const LWCIRCSTRING *circ)$/;"	f
lwcircstring_length_2d	liblwgeom/lwcircstring.c	/^double lwcircstring_length_2d(const LWCIRCSTRING *circ)$/;"	f
lwcircstring_release	liblwgeom/lwcircstring.c	/^lwcircstring_release(LWCIRCSTRING *lwcirc)$/;"	f
lwcircstring_removepoint	liblwgeom/lwcircstring.c	/^lwcircstring_removepoint(LWCIRCSTRING *curve, uint32_t index)$/;"	f
lwcircstring_reverse	liblwgeom/lwcircstring.c	/^void lwcircstring_reverse(LWCIRCSTRING *curve)$/;"	f
lwcircstring_same	liblwgeom/lwcircstring.c	/^lwcircstring_same(const LWCIRCSTRING *me, const LWCIRCSTRING *you)$/;"	f
lwcircstring_segmentize	liblwgeom/lwsegmentize.c	/^lwcircstring_segmentize(const LWCIRCSTRING *icurve, uint32_t perQuad)$/;"	f
lwcircstring_setPoint4d	liblwgeom/lwcircstring.c	/^lwcircstring_setPoint4d(LWCIRCSTRING *curve, uint32_t index, POINT4D *newpoint)$/;"	f
lwcircstring_to_wkt_sb	liblwgeom/lwout_wkt.c	/^static void lwcircstring_to_wkt_sb(const LWCIRCSTRING *circ, stringbuffer_t *sb, int precision, uint8_t variant)$/;"	f	file:
lwcollection_add_lwgeom	liblwgeom/lwcollection.c	/^LWCOLLECTION* lwcollection_add_lwgeom(LWCOLLECTION *col, const LWGEOM *geom)$/;"	f
lwcollection_allows_subtype	liblwgeom/lwcollection.c	/^int lwcollection_allows_subtype(int collectiontype, int subtype)$/;"	f
lwcollection_as_lwgeom	liblwgeom/lwgeom.c	/^LWGEOM *lwcollection_as_lwgeom(const LWCOLLECTION *obj)$/;"	f
lwcollection_build_buffer	liblwgeom/lwhomogenize.c	/^lwcollection_build_buffer(const LWCOLLECTION *col, HomogenizeBuffer *buffer)$/;"	f	file:
lwcollection_calculate_circ_tree	liblwgeom/lwgeodetic_tree.c	/^lwcollection_calculate_circ_tree(const LWCOLLECTION* lwcol)$/;"	f	file:
lwcollection_calculate_gbox_cartesian	liblwgeom/g_box.c	/^static int lwcollection_calculate_gbox_cartesian(LWCOLLECTION *coll, GBOX *gbox)$/;"	f	file:
lwcollection_calculate_gbox_geodetic	liblwgeom/lwgeodetic.c	/^static int lwcollection_calculate_gbox_geodetic(const LWCOLLECTION *coll, GBOX *gbox)$/;"	f	file:
lwcollection_check_geodetic	liblwgeom/lwgeodetic.c	/^static int lwcollection_check_geodetic(const LWCOLLECTION *col)$/;"	f	file:
lwcollection_clone	liblwgeom/lwcollection.c	/^lwcollection_clone(const LWCOLLECTION *g)$/;"	f
lwcollection_clone_deep	liblwgeom/lwcollection.c	/^lwcollection_clone_deep(const LWCOLLECTION *g)$/;"	f
lwcollection_construct	liblwgeom/lwcollection.c	/^lwcollection_construct(uint8_t type, int srid, GBOX *bbox,$/;"	f
lwcollection_construct_empty	liblwgeom/lwcollection.c	/^lwcollection_construct_empty(uint8_t type, int srid, char hasz, char hasm)$/;"	f
lwcollection_count_vertices	liblwgeom/lwcollection.c	/^int lwcollection_count_vertices(LWCOLLECTION *col)$/;"	f
lwcollection_dimensionality	liblwgeom/lwgeom.c	/^static int lwcollection_dimensionality(LWCOLLECTION *col)$/;"	f	file:
lwcollection_extract	liblwgeom/lwcollection.c	/^LWCOLLECTION* lwcollection_extract(LWCOLLECTION *col, int type)$/;"	f
lwcollection_force_dims	liblwgeom/lwcollection.c	/^lwcollection_force_dims(const LWCOLLECTION *col, int hasz, int hasm)$/;"	f
lwcollection_force_geodetic	liblwgeom/lwgeodetic.c	/^static int lwcollection_force_geodetic(LWCOLLECTION *col)$/;"	f	file:
lwcollection_free	liblwgeom/lwcollection.c	/^void lwcollection_free(LWCOLLECTION *col)$/;"	f
lwcollection_from_gserialized_buffer	liblwgeom/g_serialized.c	/^static LWCOLLECTION* lwcollection_from_gserialized_buffer(uint8_t *data_ptr, uint8_t g_flags, size_t *g_size)$/;"	f	file:
lwcollection_from_wkb_state	liblwgeom/lwin_wkb.c	/^static LWCOLLECTION* lwcollection_from_wkb_state(wkb_parse_state *s)$/;"	f	file:
lwcollection_getsubgeom	liblwgeom/lwcollection.c	/^lwcollection_getsubgeom(LWCOLLECTION *col, int gnum)$/;"	f
lwcollection_grid	postgis/lwgeom_functions_analytic.c	/^lwcollection_grid(LWCOLLECTION *coll, gridspec *grid)$/;"	f
lwcollection_homogenize	liblwgeom/lwhomogenize.c	/^lwcollection_homogenize(const LWCOLLECTION *col)$/;"	f	file:
lwcollection_is_empty	liblwgeom/lwcollection.c	/^int lwcollection_is_empty(const LWCOLLECTION *col)$/;"	f
lwcollection_locate_between_m	postgis/lwgeom_functions_lrs.c	/^lwcollection_locate_between_m(LWCOLLECTION *lwcoll, double m0, double m1)$/;"	f	file:
lwcollection_make_geos_friendly	liblwgeom/lwgeom_geos_clean.c	/^lwcollection_make_geos_friendly(LWCOLLECTION *g)$/;"	f
lwcollection_ngeoms	liblwgeom/lwcollection.c	/^int lwcollection_ngeoms(const LWCOLLECTION *col)$/;"	f
lwcollection_release	liblwgeom/lwcollection.c	/^lwcollection_release(LWCOLLECTION *lwcollection)$/;"	f
lwcollection_remove_repeated_points	liblwgeom/lwcollection.c	/^lwcollection_remove_repeated_points(LWCOLLECTION *coll)$/;"	f
lwcollection_reserve	liblwgeom/lwcollection.c	/^void lwcollection_reserve(LWCOLLECTION *col, int ngeoms)$/;"	f
lwcollection_same	liblwgeom/lwcollection.c	/^lwcollection_same(const LWCOLLECTION *c1, const LWCOLLECTION *c2)$/;"	f
lwcollection_segmentize	liblwgeom/lwsegmentize.c	/^lwcollection_segmentize(LWCOLLECTION *collection, uint32_t perQuad)$/;"	f
lwcollection_segmentize2d	liblwgeom/lwcollection.c	/^lwcollection_segmentize2d(LWCOLLECTION *col, double dist)$/;"	f
lwcollection_simplify	liblwgeom/lwcollection.c	/^LWCOLLECTION* lwcollection_simplify(const LWCOLLECTION *igeom, double dist)$/;"	f
lwcollection_split	liblwgeom/lwgeom_geos_split.c	/^lwcollection_split(const LWCOLLECTION* lwcoll_in, const LWGEOM* blade_in)$/;"	f	file:
lwcollection_startpoint	liblwgeom/lwcollection.c	/^lwcollection_startpoint(const LWCOLLECTION* col, POINT4D* pt)$/;"	f
lwcollection_summary	liblwgeom/lwgeom_debug.c	/^lwcollection_summary(LWCOLLECTION *col, int offset)$/;"	f	file:
lwcollection_to_kml2_sb	liblwgeom/lwout_kml.c	/^lwcollection_to_kml2_sb(const LWCOLLECTION *col, int precision, const char *prefix, stringbuffer_t *sb)$/;"	f	file:
lwcollection_to_twkb_buf	liblwgeom/lwout_twkb.c	/^static uint8_t* lwcollection_to_twkb_buf(const LWCOLLECTION *col, uint8_t *buf, uint8_t variant,int8_t prec, uint32_t id,int refpoint[],int method)$/;"	f	file:
lwcollection_to_twkb_size	liblwgeom/lwout_twkb.c	/^static size_t lwcollection_to_twkb_size(const LWCOLLECTION *col,uint8_t variant, int8_t prec, uint32_t id,int refpoint[],int method)$/;"	f	file:
lwcollection_to_wkb_buf	liblwgeom/lwout_wkb.c	/^static uint8_t* lwcollection_to_wkb_buf(const LWCOLLECTION *col, uint8_t *buf, uint8_t variant)$/;"	f	file:
lwcollection_to_wkb_size	liblwgeom/lwout_wkb.c	/^static size_t lwcollection_to_wkb_size(const LWCOLLECTION *col, uint8_t variant)$/;"	f	file:
lwcollection_to_wkt_sb	liblwgeom/lwout_wkt.c	/^static void lwcollection_to_wkt_sb(const LWCOLLECTION *collection, stringbuffer_t *sb, int precision, uint8_t variant)$/;"	f	file:
lwcompound_add_lwgeom	liblwgeom/lwcompound.c	/^int lwcompound_add_lwgeom(LWCOMPOUND *comp, LWGEOM *geom)$/;"	f
lwcompound_as_lwgeom	liblwgeom/lwgeom.c	/^LWGEOM *lwcompound_as_lwgeom(const LWCOMPOUND *obj)$/;"	f
lwcompound_construct_empty	liblwgeom/lwcompound.c	/^lwcompound_construct_empty(int srid, char hasz, char hasm)$/;"	f
lwcompound_construct_from_lwline	liblwgeom/lwcompound.c	/^lwcompound_construct_from_lwline(const LWLINE *lwline)$/;"	f
lwcompound_contains_point	liblwgeom/lwcompound.c	/^lwcompound_contains_point(const LWCOMPOUND *comp, const POINT2D *pt)$/;"	f
lwcompound_is_closed	liblwgeom/lwcompound.c	/^lwcompound_is_closed(const LWCOMPOUND *compound)$/;"	f
lwcompound_length	liblwgeom/lwcompound.c	/^double lwcompound_length(const LWCOMPOUND *comp)$/;"	f
lwcompound_length_2d	liblwgeom/lwcompound.c	/^double lwcompound_length_2d(const LWCOMPOUND *comp)$/;"	f
lwcompound_segmentize	liblwgeom/lwsegmentize.c	/^lwcompound_segmentize(const LWCOMPOUND *icompound, uint32_t perQuad)$/;"	f
lwcompound_to_wkt_sb	liblwgeom/lwout_wkt.c	/^static void lwcompound_to_wkt_sb(const LWCOMPOUND *comp, stringbuffer_t *sb, int precision, uint8_t variant)$/;"	f	file:
lwcurvepoly_add_ring	liblwgeom/lwcurvepoly.c	/^int lwcurvepoly_add_ring(LWCURVEPOLY *poly, LWGEOM *ring)$/;"	f
lwcurvepoly_area	liblwgeom/lwcurvepoly.c	/^lwcurvepoly_area(const LWCURVEPOLY *curvepoly)$/;"	f
lwcurvepoly_as_lwgeom	liblwgeom/lwgeom.c	/^LWGEOM *lwcurvepoly_as_lwgeom(const LWCURVEPOLY *obj)$/;"	f
lwcurvepoly_construct_empty	liblwgeom/lwcurvepoly.c	/^lwcurvepoly_construct_empty(int srid, char hasz, char hasm)$/;"	f
lwcurvepoly_construct_from_lwpoly	liblwgeom/lwcurvepoly.c	/^lwcurvepoly_construct_from_lwpoly(LWPOLY *lwpoly)$/;"	f
lwcurvepoly_from_wkb_state	liblwgeom/lwin_wkb.c	/^static LWCURVEPOLY* lwcurvepoly_from_wkb_state(wkb_parse_state *s)$/;"	f	file:
lwcurvepoly_perimeter	liblwgeom/lwcurvepoly.c	/^lwcurvepoly_perimeter(const LWCURVEPOLY *poly)$/;"	f
lwcurvepoly_perimeter_2d	liblwgeom/lwcurvepoly.c	/^lwcurvepoly_perimeter_2d(const LWCURVEPOLY *poly)$/;"	f
lwcurvepoly_segmentize	liblwgeom/lwsegmentize.c	/^lwcurvepoly_segmentize(const LWCURVEPOLY *curvepoly, uint32_t perQuad)$/;"	f
lwcurvepoly_to_wkt_sb	liblwgeom/lwout_wkt.c	/^static void lwcurvepoly_to_wkt_sb(const LWCURVEPOLY *cpoly, stringbuffer_t *sb, int precision, uint8_t variant)$/;"	f	file:
lwdouble_to_dms	liblwgeom/lwprint.c	/^static char * lwdouble_to_dms(double val, const char *pos_dir_symbol, const char *neg_dir_symbol, const char * format)$/;"	f	file:
lwdoubles_to_latlon	liblwgeom/lwprint.c	/^static char * lwdoubles_to_latlon(double lat, double lon, const char * format)$/;"	f	file:
lwerror	liblwgeom/lwutil.c	/^lwerror(const char *fmt, ...)$/;"	f
lwerror_var	liblwgeom/lwutil.c	/^lwreporter lwerror_var = default_errorreporter;$/;"	v
lwfree	liblwgeom/lwutil.c	/^lwfree(void *mem)$/;"	f
lwfree_var	liblwgeom/lwutil.c	/^lwfreeor lwfree_var = default_freeor;$/;"	v
lwgeomTypeName	liblwgeom/lwutil.c	/^static char *lwgeomTypeName[] =$/;"	v	file:
lwgeom_add_bbox	liblwgeom/lwgeom.c	/^lwgeom_add_bbox(LWGEOM *lwgeom)$/;"	f
lwgeom_add_bbox_deep	liblwgeom/lwgeom.c	/^lwgeom_add_bbox_deep(LWGEOM *lwgeom, GBOX *gbox)$/;"	f
lwgeom_affine	liblwgeom/lwgeom.c	/^lwgeom_affine(LWGEOM *geom, const AFFINE *affine)$/;"	f
lwgeom_agg_to_twkb	liblwgeom/lwout_twkb.c	/^uint8_t* lwgeom_agg_to_twkb(const twkb_geom_arrays *lwgeom_arrays,uint8_t variant , size_t *size_out,int8_t prec,int method)$/;"	f
lwgeom_agg_to_twkbcollection_buf	liblwgeom/lwout_twkb.c	/^static uint8_t* lwgeom_agg_to_twkbcollection_buf(lwgeom_id* geom_array,int n, uint8_t *buf, uint8_t variant,int8_t prec, int refpoint[],int method)$/;"	f	file:
lwgeom_agg_to_twkbcollection_size	liblwgeom/lwout_twkb.c	/^static size_t  lwgeom_agg_to_twkbcollection_size(lwgeom_id* geom_array,uint8_t variant,int n,int8_t prec,int refpoint[],int method)$/;"	f	file:
lwgeom_agg_to_twkbline_buf	liblwgeom/lwout_twkb.c	/^static uint8_t* lwgeom_agg_to_twkbline_buf(lwgeom_id* geom_array,int n, uint8_t *buf, uint8_t variant,int8_t prec, int refpoint[],int method)$/;"	f	file:
lwgeom_agg_to_twkbline_size	liblwgeom/lwout_twkb.c	/^static size_t  lwgeom_agg_to_twkbline_size(lwgeom_id* geom_array,uint8_t variant,int n,int8_t prec,int refpoint[],int method)$/;"	f	file:
lwgeom_agg_to_twkbpoint_buf	liblwgeom/lwout_twkb.c	/^static uint8_t* lwgeom_agg_to_twkbpoint_buf(lwgeom_id* geom_array,int n, uint8_t *buf, uint8_t variant,int8_t prec, int refpoint[],int method)$/;"	f	file:
lwgeom_agg_to_twkbpoint_size	liblwgeom/lwout_twkb.c	/^static size_t  lwgeom_agg_to_twkbpoint_size(lwgeom_id *geom_array,uint8_t variant,int n,int8_t prec,int refpoint[],int method)$/;"	f	file:
lwgeom_agg_to_twkbpoly_buf	liblwgeom/lwout_twkb.c	/^static uint8_t* lwgeom_agg_to_twkbpoly_buf(lwgeom_id* geom_array,int n, uint8_t *buf, uint8_t variant,int8_t prec, int refpoint[],int method)$/;"	f	file:
lwgeom_agg_to_twkbpoly_size	liblwgeom/lwout_twkb.c	/^static size_t  lwgeom_agg_to_twkbpoly_size(lwgeom_id* geom_array,uint8_t variant,int n,int8_t prec,int refpoint[],int method)$/;"	f	file:
lwgeom_area	liblwgeom/lwgeom.c	/^double lwgeom_area(const LWGEOM *geom)$/;"	f
lwgeom_area_sphere	liblwgeom/lwgeodetic.c	/^double lwgeom_area_sphere(const LWGEOM *lwgeom, const SPHEROID *spheroid)$/;"	f
lwgeom_area_spheroid	liblwgeom/lwspheroid.c	/^double lwgeom_area_spheroid(const LWGEOM *lwgeom, const SPHEROID *spheroid)$/;"	f
lwgeom_as_curve	liblwgeom/lwgeom.c	/^lwgeom_as_curve(const LWGEOM *lwgeom)$/;"	f
lwgeom_as_lwcircstring	liblwgeom/lwgeom.c	/^lwgeom_as_lwcircstring(const LWGEOM *lwgeom)$/;"	f
lwgeom_as_lwcollection	liblwgeom/lwgeom.c	/^lwgeom_as_lwcollection(const LWGEOM *lwgeom)$/;"	f
lwgeom_as_lwcompound	liblwgeom/lwgeom.c	/^lwgeom_as_lwcompound(const LWGEOM *lwgeom)$/;"	f
lwgeom_as_lwcurvepoly	liblwgeom/lwgeom.c	/^lwgeom_as_lwcurvepoly(const LWGEOM *lwgeom)$/;"	f
lwgeom_as_lwline	liblwgeom/lwgeom.c	/^lwgeom_as_lwline(const LWGEOM *lwgeom)$/;"	f
lwgeom_as_lwmline	liblwgeom/lwgeom.c	/^lwgeom_as_lwmline(const LWGEOM *lwgeom)$/;"	f
lwgeom_as_lwmpoint	liblwgeom/lwgeom.c	/^lwgeom_as_lwmpoint(const LWGEOM *lwgeom)$/;"	f
lwgeom_as_lwmpoly	liblwgeom/lwgeom.c	/^lwgeom_as_lwmpoly(const LWGEOM *lwgeom)$/;"	f
lwgeom_as_lwpoint	liblwgeom/lwgeom.c	/^lwgeom_as_lwpoint(const LWGEOM *lwgeom)$/;"	f
lwgeom_as_lwpoly	liblwgeom/lwgeom.c	/^lwgeom_as_lwpoly(const LWGEOM *lwgeom)$/;"	f
lwgeom_as_lwpsurface	liblwgeom/lwgeom.c	/^lwgeom_as_lwpsurface(const LWGEOM *lwgeom)$/;"	f
lwgeom_as_lwtin	liblwgeom/lwgeom.c	/^lwgeom_as_lwtin(const LWGEOM *lwgeom)$/;"	f
lwgeom_as_lwtriangle	liblwgeom/lwgeom.c	/^lwgeom_as_lwtriangle(const LWGEOM *lwgeom)$/;"	f
lwgeom_as_multi	liblwgeom/lwgeom.c	/^lwgeom_as_multi(const LWGEOM *lwgeom)$/;"	f
lwgeom_azumith_spheroid	liblwgeom/lwgeodetic.c	/^double lwgeom_azumith_spheroid(const LWPOINT *r, const LWPOINT *s, const SPHEROID *spheroid)$/;"	f
lwgeom_backend	postgis/lwgeom_backend_api.c	/^struct lwgeom_backend_definition* lwgeom_backend = &lwgeom_backends[0];$/;"	v	typeref:struct:lwgeom_backend_definition
lwgeom_backend_definition	postgis/lwgeom_backend_api.c	/^struct lwgeom_backend_definition$/;"	s	file:
lwgeom_backend_name	postgis/lwgeom_backend_api.c	/^char* lwgeom_backend_name;$/;"	v
lwgeom_backend_switch	postgis/lwgeom_backend_api.c	/^static void lwgeom_backend_switch( const char* newvalue, void* extra )$/;"	f	file:
lwgeom_backends	postgis/lwgeom_backend_api.c	/^struct lwgeom_backend_definition lwgeom_backends[LWGEOM_NUM_BACKENDS] = {$/;"	v	typeref:struct:lwgeom_backend_definition
lwgeom_buildarea	liblwgeom/lwgeom_geos.c	/^lwgeom_buildarea(const LWGEOM *geom)$/;"	f
lwgeom_calculate_circ_tree	liblwgeom/lwgeodetic_tree.c	/^lwgeom_calculate_circ_tree(const LWGEOM* lwgeom)$/;"	f
lwgeom_calculate_gbox	liblwgeom/lwgeom.c	/^int lwgeom_calculate_gbox(const LWGEOM *lwgeom, GBOX *gbox)$/;"	f
lwgeom_calculate_gbox_cartesian	liblwgeom/g_box.c	/^int lwgeom_calculate_gbox_cartesian(const LWGEOM *lwgeom, GBOX *gbox)$/;"	f
lwgeom_calculate_gbox_geodetic	liblwgeom/lwgeodetic.c	/^int lwgeom_calculate_gbox_geodetic(const LWGEOM *geom, GBOX *gbox)$/;"	f
lwgeom_check_geodetic	liblwgeom/lwgeodetic.c	/^int lwgeom_check_geodetic(const LWGEOM *geom)$/;"	f
lwgeom_clean	postgis/lwgeom_geos_clean.c	/^lwgeom_clean(LWGEOM* lwgeom_in)$/;"	f	file:
lwgeom_clip_to_ordinate_range	liblwgeom/lwlinearreferencing.c	/^lwgeom_clip_to_ordinate_range(const LWGEOM *lwin, char ordinate, double from, double to, double offset)$/;"	f
lwgeom_clone	liblwgeom/lwgeom.c	/^lwgeom_clone(const LWGEOM *lwgeom)$/;"	f
lwgeom_clone_deep	liblwgeom/lwgeom.c	/^lwgeom_clone_deep(const LWGEOM *lwgeom)$/;"	f
lwgeom_cmp	postgis/lwgeom_btree.c	/^Datum lwgeom_cmp(PG_FUNCTION_ARGS)$/;"	f
lwgeom_cmp	postgis/lwgeom_btree.c	/^PG_FUNCTION_INFO_V1(lwgeom_cmp);$/;"	v
lwgeom_collect_endpoints	liblwgeom/lwgeom_geos_node.c	/^lwgeom_collect_endpoints(const LWGEOM* lwg, LWMPOINT* col)$/;"	f	file:
lwgeom_construct_empty	liblwgeom/lwgeom.c	/^lwgeom_construct_empty(uint8_t type, int srid, char hasz, char hasm)$/;"	f
lwgeom_contains_point	liblwgeom/lwcompound.c	/^int lwgeom_contains_point(const LWGEOM *geom, const POINT2D *pt)$/;"	f
lwgeom_count_rings	liblwgeom/lwgeom.c	/^int lwgeom_count_rings(const LWGEOM *geom)$/;"	f
lwgeom_count_vertices	liblwgeom/lwgeom.c	/^int lwgeom_count_vertices(const LWGEOM *geom)$/;"	f
lwgeom_covers_lwgeom_sphere	liblwgeom/lwgeodetic.c	/^int lwgeom_covers_lwgeom_sphere(const LWGEOM *lwgeom1, const LWGEOM *lwgeom2)$/;"	f
lwgeom_delaunay_triangulation	liblwgeom/lwgeom_geos.c	/^LWGEOM* lwgeom_delaunay_triangulation(const LWGEOM *lwgeom_in, double tolerance, int output) {$/;"	f
lwgeom_desegmentize	liblwgeom/lwsegmentize.c	/^lwgeom_desegmentize(LWGEOM *geom)$/;"	f
lwgeom_difference	liblwgeom/lwgeom_geos.c	/^lwgeom_difference(const LWGEOM *geom1, const LWGEOM *geom2)$/;"	f
lwgeom_dimension	liblwgeom/lwgeom.c	/^int lwgeom_dimension(const LWGEOM *geom)$/;"	f
lwgeom_dimensionality	liblwgeom/lwgeom.c	/^extern int lwgeom_dimensionality(LWGEOM *geom)$/;"	f
lwgeom_distance_spheroid	liblwgeom/lwgeodetic.c	/^double lwgeom_distance_spheroid(const LWGEOM *lwgeom1, const LWGEOM *lwgeom2, const SPHEROID *spheroid, double tolerance)$/;"	f
lwgeom_drop_bbox	liblwgeom/lwgeom.c	/^lwgeom_drop_bbox(LWGEOM *lwgeom)$/;"	f
lwgeom_drop_srid	liblwgeom/lwgeom.c	/^lwgeom_drop_srid(LWGEOM *lwgeom)$/;"	f
lwgeom_eq	postgis/lwgeom_btree.c	/^Datum lwgeom_eq(PG_FUNCTION_ARGS)$/;"	f
lwgeom_eq	postgis/lwgeom_btree.c	/^PG_FUNCTION_INFO_V1(lwgeom_eq);$/;"	v
lwgeom_extent_to_gml2	liblwgeom/lwout_gml.c	/^lwgeom_extent_to_gml2(const LWGEOM *geom, const char *srs, int precision, const char *prefix)$/;"	f
lwgeom_extent_to_gml3	liblwgeom/lwout_gml.c	/^lwgeom_extent_to_gml3(const LWGEOM *geom, const char *srs, int precision, int opts, const char *prefix)$/;"	f
lwgeom_extract_endpoints	liblwgeom/lwgeom_geos_node.c	/^lwgeom_extract_endpoints(const LWGEOM* lwg)$/;"	f	file:
lwgeom_extract_unique_endpoints	liblwgeom/lwgeom_geos_node.c	/^lwgeom_extract_unique_endpoints(const LWGEOM* lwg)$/;"	f	file:
lwgeom_flagchars	liblwgeom/lwgeom_debug.c	/^lwgeom_flagchars(LWGEOM *lwg)$/;"	f	file:
lwgeom_flip_coordinates	liblwgeom/lwgeom.c	/^LWGEOM* lwgeom_flip_coordinates(LWGEOM *in)$/;"	f
lwgeom_force_2d	liblwgeom/lwgeom.c	/^lwgeom_force_2d(const LWGEOM *geom)$/;"	f
lwgeom_force_3dm	liblwgeom/lwgeom.c	/^lwgeom_force_3dm(const LWGEOM *geom)$/;"	f
lwgeom_force_3dz	liblwgeom/lwgeom.c	/^lwgeom_force_3dz(const LWGEOM *geom)$/;"	f
lwgeom_force_4d	liblwgeom/lwgeom.c	/^lwgeom_force_4d(const LWGEOM *geom)$/;"	f
lwgeom_force_clockwise	liblwgeom/lwgeom.c	/^lwgeom_force_clockwise(LWGEOM *lwgeom)$/;"	f
lwgeom_force_dims	liblwgeom/lwgeom.c	/^lwgeom_force_dims(const LWGEOM *geom, int hasz, int hasm)$/;"	f
lwgeom_force_geodetic	liblwgeom/lwgeodetic.c	/^int lwgeom_force_geodetic(LWGEOM *geom)$/;"	f
lwgeom_force_sfs	liblwgeom/lwgeom.c	/^lwgeom_force_sfs(LWGEOM *geom, int version)$/;"	f
lwgeom_free	liblwgeom/lwgeom.c	/^void lwgeom_free(LWGEOM *lwgeom)$/;"	f
lwgeom_from_geojson	liblwgeom/lwin_geojson.c	/^lwgeom_from_geojson(const char *geojson, char **srs)$/;"	f
lwgeom_from_gml	postgis/lwgeom_in_gml.c	/^static LWGEOM* lwgeom_from_gml(const char* xml)$/;"	f	file:
lwgeom_from_gserialized	liblwgeom/g_serialized.c	/^LWGEOM* lwgeom_from_gserialized(const GSERIALIZED *g)$/;"	f
lwgeom_from_gserialized_buffer	liblwgeom/g_serialized.c	/^LWGEOM* lwgeom_from_gserialized_buffer(uint8_t *data_ptr, uint8_t g_flags, size_t *g_size)$/;"	f
lwgeom_from_hexwkb	liblwgeom/lwin_wkb.c	/^LWGEOM* lwgeom_from_hexwkb(const char *hexwkb, const char check)$/;"	f
lwgeom_from_text	liblwgeom/cunit/cu_measures.c	/^static LWGEOM* lwgeom_from_text(const char *str)$/;"	f	file:
lwgeom_from_text	liblwgeom/cunit/cu_ptarray.c	/^static LWGEOM* lwgeom_from_text(const char *str)$/;"	f	file:
lwgeom_from_wkb	liblwgeom/lwin_wkb.c	/^LWGEOM* lwgeom_from_wkb(const uint8_t *wkb, const size_t wkb_size, const char check)$/;"	f
lwgeom_from_wkb_state	liblwgeom/lwin_wkb.c	/^LWGEOM* lwgeom_from_wkb_state(wkb_parse_state *s)$/;"	f
lwgeom_from_wkt	liblwgeom/lwin_wkt.c	/^LWGEOM *lwgeom_from_wkt(const char *wkt, const char check)$/;"	f
lwgeom_ge	postgis/lwgeom_btree.c	/^Datum lwgeom_ge(PG_FUNCTION_ARGS)$/;"	f
lwgeom_ge	postgis/lwgeom_btree.c	/^PG_FUNCTION_INFO_V1(lwgeom_ge);$/;"	v
lwgeom_geohash	liblwgeom/lwalgorithm.c	/^char *lwgeom_geohash(const LWGEOM *lwgeom, int precision)$/;"	f
lwgeom_geohash_precision	liblwgeom/lwalgorithm.c	/^int lwgeom_geohash_precision(GBOX bbox, GBOX *bounds)$/;"	f
lwgeom_geos_errmsg	liblwgeom/lwgeom_geos.c	/^char lwgeom_geos_errmsg[LWGEOM_GEOS_ERRMSG_MAXSIZE];$/;"	v
lwgeom_geos_error	liblwgeom/lwgeom_geos.c	/^lwgeom_geos_error(const char *fmt, ...)$/;"	f
lwgeom_geos_noop	liblwgeom/lwgeom_geos.c	/^lwgeom_geos_noop(const LWGEOM* geom_in)$/;"	f
lwgeom_geos_version	liblwgeom/lwgeom_geos.c	/^lwgeom_geos_version()$/;"	f
lwgeom_get_bbox	liblwgeom/lwgeom.c	/^lwgeom_get_bbox(const LWGEOM *lwg)$/;"	f
lwgeom_get_srid	liblwgeom/lwgeom.c	/^lwgeom_get_srid(const LWGEOM *geom)$/;"	f
lwgeom_get_type	liblwgeom/lwgeom.c	/^lwgeom_get_type(const LWGEOM *geom)$/;"	f
lwgeom_grid	postgis/lwgeom_functions_analytic.c	/^lwgeom_grid(LWGEOM *lwgeom, gridspec *grid)$/;"	f
lwgeom_gt	postgis/lwgeom_btree.c	/^Datum lwgeom_gt(PG_FUNCTION_ARGS)$/;"	f
lwgeom_gt	postgis/lwgeom_btree.c	/^PG_FUNCTION_INFO_V1(lwgeom_gt);$/;"	v
lwgeom_has_arc	liblwgeom/lwsegmentize.c	/^lwgeom_has_arc(const LWGEOM *geom)$/;"	f
lwgeom_has_m	liblwgeom/lwgeom.c	/^lwgeom_has_m(const LWGEOM *geom)$/;"	f
lwgeom_has_srid	liblwgeom/lwgeom.c	/^int lwgeom_has_srid(const LWGEOM *geom)$/;"	f
lwgeom_has_z	liblwgeom/lwgeom.c	/^lwgeom_has_z(const LWGEOM *geom)$/;"	f
lwgeom_homogenize	liblwgeom/lwhomogenize.c	/^lwgeom_homogenize(const LWGEOM *geom)$/;"	f
lwgeom_init_backend	postgis/lwgeom_backend_api.c	/^void lwgeom_init_backend()$/;"	f
lwgeom_interpolate_point	liblwgeom/lwlinearreferencing.c	/^lwgeom_interpolate_point(const LWGEOM *lwin, const LWPOINT *lwpt)$/;"	f
lwgeom_intersection	liblwgeom/lwgeom_geos.c	/^lwgeom_intersection(const LWGEOM *geom1, const LWGEOM *geom2)$/;"	f
lwgeom_is_closed	liblwgeom/lwgeom.c	/^lwgeom_is_closed(const LWGEOM *geom)$/;"	f
lwgeom_is_collection	liblwgeom/lwgeom.c	/^lwgeom_is_collection(const LWGEOM *geom)$/;"	f
lwgeom_is_empty	liblwgeom/lwgeom.c	/^int lwgeom_is_empty(const LWGEOM *geom)$/;"	f
lwgeom_le	postgis/lwgeom_btree.c	/^Datum lwgeom_le(PG_FUNCTION_ARGS)$/;"	f
lwgeom_le	postgis/lwgeom_btree.c	/^PG_FUNCTION_INFO_V1(lwgeom_le);$/;"	v
lwgeom_length	liblwgeom/lwgeom.c	/^double lwgeom_length(const LWGEOM *geom)$/;"	f
lwgeom_length_2d	liblwgeom/lwgeom.c	/^double lwgeom_length_2d(const LWGEOM *geom)$/;"	f
lwgeom_length_spheroid	liblwgeom/lwgeodetic.c	/^double lwgeom_length_spheroid(const LWGEOM *geom, const SPHEROID *s)$/;"	f
lwgeom_locate_along	liblwgeom/lwlinearreferencing.c	/^lwgeom_locate_along(const LWGEOM *lwin, double m, double offset)$/;"	f
lwgeom_locate_between	liblwgeom/lwlinearreferencing.c	/^lwgeom_locate_between(const LWGEOM *lwin, double from, double to, double offset)$/;"	f
lwgeom_locate_between_m	postgis/lwgeom_functions_lrs.c	/^lwgeom_locate_between_m(LWGEOM *lwin, double m0, double m1)$/;"	f	file:
lwgeom_longitude_shift	liblwgeom/lwgeom.c	/^lwgeom_longitude_shift(LWGEOM *lwgeom)$/;"	f
lwgeom_lt	postgis/lwgeom_btree.c	/^Datum lwgeom_lt(PG_FUNCTION_ARGS)$/;"	f
lwgeom_lt	postgis/lwgeom_btree.c	/^PG_FUNCTION_INFO_V1(lwgeom_lt);$/;"	v
lwgeom_make_geos_friendly	liblwgeom/lwgeom_geos_clean.c	/^lwgeom_make_geos_friendly(LWGEOM *geom)$/;"	f	file:
lwgeom_make_valid	liblwgeom/lwgeom_geos_clean.c	/^lwgeom_make_valid(LWGEOM* lwgeom_in)$/;"	f
lwgeom_maxdistance2d	liblwgeom/measures.c	/^lwgeom_maxdistance2d(LWGEOM *lw1, LWGEOM *lw2)$/;"	f
lwgeom_maxdistance2d_tolerance	liblwgeom/measures.c	/^lwgeom_maxdistance2d_tolerance(LWGEOM *lw1, LWGEOM *lw2, double tolerance)$/;"	f
lwgeom_maxdistance3d	liblwgeom/measures3d.c	/^lwgeom_maxdistance3d(LWGEOM *lw1, LWGEOM *lw2)$/;"	f
lwgeom_maxdistance3d_tolerance	liblwgeom/measures3d.c	/^lwgeom_maxdistance3d_tolerance(LWGEOM *lw1, LWGEOM *lw2, double tolerance)$/;"	f
lwgeom_mindistance2d	liblwgeom/measures.c	/^lwgeom_mindistance2d(LWGEOM *lw1, LWGEOM *lw2)$/;"	f
lwgeom_mindistance2d_tolerance	liblwgeom/measures.c	/^lwgeom_mindistance2d_tolerance(LWGEOM *lw1, LWGEOM *lw2, double tolerance)$/;"	f
lwgeom_mindistance3d	liblwgeom/measures3d.c	/^lwgeom_mindistance3d(LWGEOM *lw1, LWGEOM *lw2)$/;"	f
lwgeom_mindistance3d_tolerance	liblwgeom/measures3d.c	/^lwgeom_mindistance3d_tolerance(LWGEOM *lw1, LWGEOM *lw2, double tolerance)$/;"	f
lwgeom_ndims	liblwgeom/lwgeom.c	/^lwgeom_ndims(const LWGEOM *geom)$/;"	f
lwgeom_needs_bbox	liblwgeom/lwgeom.c	/^int lwgeom_needs_bbox(const LWGEOM *geom)$/;"	f
lwgeom_ngeoms	liblwgeom/lwgeom_geos_node.c	/^lwgeom_ngeoms(const LWGEOM* n)$/;"	f	file:
lwgeom_node	liblwgeom/lwgeom_geos_node.c	/^lwgeom_node(const LWGEOM* lwgeom_in)$/;"	f
lwgeom_normalize	liblwgeom/lwgeom_geos.c	/^lwgeom_normalize(const LWGEOM *geom1)$/;"	f
lwgeom_nudge_geodetic	liblwgeom/lwgeodetic.c	/^lwgeom_nudge_geodetic(LWGEOM *geom)$/;"	f
lwgeom_offsetcurve	liblwgeom/lwgeom_geos.c	/^lwgeom_offsetcurve(const LWLINE *lwline, double size, int quadsegs, int joinStyle, double mitreLimit)$/;"	f
lwgeom_over_gserialized	liblwgeom/cunit/cu_geodetic.c	/^static LWGEOM* lwgeom_over_gserialized(char *wkt, GSERIALIZED **g)$/;"	f	file:
lwgeom_parse_wkt	liblwgeom/lwin_wkt_parse.c	/^int lwgeom_parse_wkt(LWGEOM_PARSER_RESULT *parser_result, char *wktstr, int parser_check_flags)$/;"	f
lwgeom_parser_result_free	liblwgeom/lwin_wkt.c	/^void lwgeom_parser_result_free(LWGEOM_PARSER_RESULT *parser_result)$/;"	f
lwgeom_parser_result_init	liblwgeom/lwin_wkt.c	/^void lwgeom_parser_result_init(LWGEOM_PARSER_RESULT *parser_result)$/;"	f
lwgeom_perimeter	liblwgeom/lwgeom.c	/^double lwgeom_perimeter(const LWGEOM *geom)$/;"	f
lwgeom_perimeter_2d	liblwgeom/lwgeom.c	/^double lwgeom_perimeter_2d(const LWGEOM *geom)$/;"	f
lwgeom_project_spheroid	liblwgeom/lwgeodetic.c	/^LWPOINT* lwgeom_project_spheroid(const LWPOINT *r, const SPHEROID *spheroid, double distance, double azimuth)$/;"	f
lwgeom_release	liblwgeom/lwgeom.c	/^lwgeom_release(LWGEOM *lwgeom)$/;"	f
lwgeom_remove_repeated_points	liblwgeom/lwgeom.c	/^extern LWGEOM* lwgeom_remove_repeated_points(LWGEOM *in)$/;"	f
lwgeom_reverse	liblwgeom/lwgeom.c	/^lwgeom_reverse(LWGEOM *lwgeom)$/;"	f
lwgeom_same	liblwgeom/lwgeom.c	/^lwgeom_same(const LWGEOM *lwgeom1, const LWGEOM *lwgeom2)$/;"	f
lwgeom_segmentize	liblwgeom/lwsegmentize.c	/^lwgeom_segmentize(LWGEOM *geom, uint32_t perQuad)$/;"	f
lwgeom_segmentize2d	liblwgeom/lwgeom.c	/^lwgeom_segmentize2d(LWGEOM *lwgeom, double dist)$/;"	f
lwgeom_segmentize_sphere	liblwgeom/lwgeodetic.c	/^lwgeom_segmentize_sphere(const LWGEOM *lwg_in, double max_seg_length)$/;"	f
lwgeom_set_geodetic	liblwgeom/lwgeom.c	/^lwgeom_set_geodetic(LWGEOM *geom, int value)$/;"	f
lwgeom_set_handlers	liblwgeom/lwutil.c	/^lwgeom_set_handlers(lwallocator allocator, lwreallocator reallocator,$/;"	f
lwgeom_set_srid	liblwgeom/lwgeom.c	/^void lwgeom_set_srid(LWGEOM *geom, int32_t srid)$/;"	f
lwgeom_sfcgal_noop	liblwgeom/lwgeom_sfcgal.c	/^LWGEOM* lwgeom_sfcgal_noop(const LWGEOM* geom_in)$/;"	f
lwgeom_sfcgal_version	liblwgeom/lwgeom_sfcgal.c	/^lwgeom_sfcgal_version()$/;"	f
lwgeom_sharedpaths	liblwgeom/lwgeom_geos.c	/^lwgeom_sharedpaths(const LWGEOM* geom1, const LWGEOM* geom2)$/;"	f
lwgeom_simplify	liblwgeom/lwgeom.c	/^LWGEOM* lwgeom_simplify(const LWGEOM *igeom, double dist)$/;"	f
lwgeom_snap	liblwgeom/lwgeom_geos.c	/^lwgeom_snap(const LWGEOM* geom1, const LWGEOM* geom2, double tolerance)$/;"	f
lwgeom_split	liblwgeom/lwgeom_geos_split.c	/^lwgeom_split(const LWGEOM* lwgeom_in, const LWGEOM* blade_in)$/;"	f
lwgeom_startpoint	liblwgeom/lwgeom.c	/^lwgeom_startpoint(const LWGEOM* lwgeom, POINT4D* pt)$/;"	f
lwgeom_subgeom	liblwgeom/lwgeom_geos_node.c	/^lwgeom_subgeom(const LWGEOM* g, int n)$/;"	f	file:
lwgeom_summary	liblwgeom/lwgeom_debug.c	/^lwgeom_summary(const LWGEOM *lwgeom, int offset)$/;"	f
lwgeom_symdifference	liblwgeom/lwgeom_geos.c	/^lwgeom_symdifference(const LWGEOM* geom1, const LWGEOM* geom2)$/;"	f
lwgeom_to_ewkt	liblwgeom/lwgeom.c	/^lwgeom_to_ewkt(const LWGEOM *lwgeom)$/;"	f
lwgeom_to_geojson	liblwgeom/lwout_geojson.c	/^lwgeom_to_geojson(const LWGEOM *geom, char *srs, int precision, int has_bbox)$/;"	f
lwgeom_to_gml2	liblwgeom/lwout_gml.c	/^lwgeom_to_gml2(const LWGEOM *geom, const char *srs, int precision, const char* prefix)$/;"	f
lwgeom_to_gml3	liblwgeom/lwout_gml.c	/^lwgeom_to_gml3(const LWGEOM *geom, const char *srs, int precision, int opts, const char *prefix, const char *id)$/;"	f
lwgeom_to_hexwkb	liblwgeom/lwout_wkb.c	/^char* lwgeom_to_hexwkb(const LWGEOM *geom, uint8_t variant, size_t *size_out)$/;"	f
lwgeom_to_kml2	liblwgeom/lwout_kml.c	/^lwgeom_to_kml2(const LWGEOM *geom, int precision, const char *prefix)$/;"	f
lwgeom_to_kml2_sb	liblwgeom/lwout_kml.c	/^lwgeom_to_kml2_sb(const LWGEOM *geom, int precision, const char *prefix, stringbuffer_t *sb)$/;"	f	file:
lwgeom_to_svg	liblwgeom/lwout_svg.c	/^lwgeom_to_svg(const LWGEOM *geom, int precision, int relative)$/;"	f
lwgeom_to_text	liblwgeom/cunit/cu_ptarray.c	/^static char* lwgeom_to_text(const LWGEOM *geom)$/;"	f	file:
lwgeom_to_text	raster/test/cunit/cu_gdal.c	/^lwgeom_to_text(const LWGEOM *lwgeom) {$/;"	f	file:
lwgeom_to_text	raster/test/cunit/cu_raster_geometry.c	/^lwgeom_to_text(const LWGEOM *lwgeom) {$/;"	f	file:
lwgeom_to_twkb	liblwgeom/lwout_twkb.c	/^uint8_t* lwgeom_to_twkb(const LWGEOM *geom, uint8_t variant, size_t *size_out,int8_t prec, uint32_t id,int method)$/;"	f
lwgeom_to_twkb_buf	liblwgeom/lwout_twkb.c	/^static uint8_t* lwgeom_to_twkb_buf(const LWGEOM *geom, uint8_t *buf, uint8_t variant,int8_t prec, uint32_t id,int refpoint[],int method)$/;"	f	file:
lwgeom_to_twkb_size	liblwgeom/lwout_twkb.c	/^static size_t lwgeom_to_twkb_size(const LWGEOM *geom,uint8_t variant, int8_t prec, uint32_t id,int refpoint[],int method)$/;"	f	file:
lwgeom_to_wkb	liblwgeom/lwout_wkb.c	/^uint8_t* lwgeom_to_wkb(const LWGEOM *geom, uint8_t variant, size_t *size_out)$/;"	f
lwgeom_to_wkb_buf	liblwgeom/lwout_wkb.c	/^static uint8_t* lwgeom_to_wkb_buf(const LWGEOM *geom, uint8_t *buf, uint8_t variant)$/;"	f	file:
lwgeom_to_wkb_size	liblwgeom/lwout_wkb.c	/^static size_t lwgeom_to_wkb_size(const LWGEOM *geom, uint8_t variant)$/;"	f	file:
lwgeom_to_wkt	liblwgeom/lwout_wkt.c	/^char* lwgeom_to_wkt(const LWGEOM *geom, uint8_t variant, int precision, size_t *size_out)$/;"	f
lwgeom_to_wkt_sb	liblwgeom/lwout_wkt.c	/^static void lwgeom_to_wkt_sb(const LWGEOM *geom, stringbuffer_t *sb, int precision, uint8_t variant)$/;"	f	file:
lwgeom_to_x3d3	liblwgeom/lwout_x3d.c	/^lwgeom_to_x3d3(const LWGEOM *geom, char *srs, int precision, int opts, const char *defid)$/;"	f
lwgeom_transform	liblwgeom/lwgeom_transform.c	/^lwgeom_transform(LWGEOM *geom, projPJ inpj, projPJ outpj)$/;"	f
lwgeom_twkb_type	liblwgeom/lwout_twkb.c	/^static uint8_t lwgeom_twkb_type(const LWGEOM *geom, uint8_t variant)$/;"	f	file:
lwgeom_union	liblwgeom/lwgeom_geos.c	/^lwgeom_union(const LWGEOM *geom1, const LWGEOM *geom2)$/;"	f
lwgeom_wkb_needs_srid	liblwgeom/lwout_wkb.c	/^static int lwgeom_wkb_needs_srid(const LWGEOM *geom, uint8_t variant)$/;"	f	file:
lwgeom_wkb_type	liblwgeom/lwout_wkb.c	/^static uint32_t lwgeom_wkb_type(const LWGEOM *geom, uint8_t variant)$/;"	f	file:
lwline_add_lwpoint	liblwgeom/lwline.c	/^lwline_add_lwpoint(LWLINE *line, LWPOINT *point, int where)$/;"	f
lwline_as_lwgeom	liblwgeom/lwgeom.c	/^LWGEOM *lwline_as_lwgeom(const LWLINE *obj)$/;"	f
lwline_calculate_circ_tree	liblwgeom/lwgeodetic_tree.c	/^lwline_calculate_circ_tree(const LWLINE* lwline)$/;"	f	file:
lwline_calculate_gbox_cartesian	liblwgeom/g_box.c	/^static int lwline_calculate_gbox_cartesian(LWLINE *line, GBOX *gbox)$/;"	f	file:
lwline_calculate_gbox_geodetic	liblwgeom/lwgeodetic.c	/^static int lwline_calculate_gbox_geodetic(const LWLINE *line, GBOX *gbox)$/;"	f	file:
lwline_check_geodetic	liblwgeom/lwgeodetic.c	/^static int lwline_check_geodetic(const LWLINE *line)$/;"	f	file:
lwline_clip_to_ordinate_range	liblwgeom/lwlinearreferencing.c	/^lwline_clip_to_ordinate_range(const LWLINE *line, char ordinate, double from, double to)$/;"	f
lwline_clone	liblwgeom/lwline.c	/^lwline_clone(const LWLINE *g)$/;"	f
lwline_clone_deep	liblwgeom/lwline.c	/^lwline_clone_deep(const LWLINE *g)$/;"	f
lwline_construct	liblwgeom/lwline.c	/^lwline_construct(int srid, GBOX *bbox, POINTARRAY *points)$/;"	f
lwline_construct_empty	liblwgeom/lwline.c	/^lwline_construct_empty(int srid, char hasz, char hasm)$/;"	f
lwline_count_vertices	liblwgeom/lwline.c	/^int lwline_count_vertices(LWLINE *line)$/;"	f
lwline_crossing_direction	liblwgeom/lwalgorithm.c	/^int lwline_crossing_direction(const LWLINE *l1, const LWLINE *l2)$/;"	f
lwline_desegmentize	liblwgeom/lwsegmentize.c	/^lwline_desegmentize(LWLINE *line)$/;"	f
lwline_force_dims	liblwgeom/lwline.c	/^lwline_force_dims(const LWLINE *line, int hasz, int hasm)$/;"	f
lwline_force_geodetic	liblwgeom/lwgeodetic.c	/^static int lwline_force_geodetic(LWLINE *line)$/;"	f	file:
lwline_free	liblwgeom/lwline.c	/^void lwline_free (LWLINE  *line)$/;"	f
lwline_from_gserialized_buffer	liblwgeom/g_serialized.c	/^static LWLINE* lwline_from_gserialized_buffer(uint8_t *data_ptr, uint8_t g_flags, size_t *g_size)$/;"	f	file:
lwline_from_lwgeom_array	liblwgeom/lwline.c	/^lwline_from_lwgeom_array(int srid, uint32_t ngeoms, LWGEOM **geoms)$/;"	f
lwline_from_lwmpoint	liblwgeom/lwline.c	/^lwline_from_lwmpoint(int srid, LWMPOINT *mpoint)$/;"	f
lwline_from_ptarray	liblwgeom/lwline.c	/^lwline_from_ptarray(int srid, uint32_t npoints, LWPOINT **points)$/;"	f
lwline_from_wkb_state	liblwgeom/lwin_wkb.c	/^static LWLINE* lwline_from_wkb_state(wkb_parse_state *s)$/;"	f	file:
lwline_get_lwpoint	liblwgeom/lwline.c	/^lwline_get_lwpoint(LWLINE *line, int where)$/;"	f
lwline_grid	postgis/lwgeom_functions_analytic.c	/^lwline_grid(LWLINE *line, gridspec *grid)$/;"	f
lwline_is_closed	liblwgeom/lwline.c	/^lwline_is_closed(const LWLINE *line)$/;"	f
lwline_is_empty	liblwgeom/lwline.c	/^int lwline_is_empty(const LWLINE *line)$/;"	f
lwline_length	liblwgeom/lwline.c	/^double lwline_length(const LWLINE *line)$/;"	f
lwline_length_2d	liblwgeom/lwline.c	/^double lwline_length_2d(const LWLINE *line)$/;"	f
lwline_locate_along	liblwgeom/lwlinearreferencing.c	/^lwline_locate_along(const LWLINE *lwline, double m, double offset)$/;"	f	file:
lwline_locate_between_m	postgis/lwgeom_functions_lrs.c	/^lwline_locate_between_m(LWLINE *lwline_in, double m0, double m1)$/;"	f	file:
lwline_make_geos_friendly	liblwgeom/lwgeom_geos_clean.c	/^lwline_make_geos_friendly(LWLINE *line)$/;"	f
lwline_measured_from_lwline	liblwgeom/lwline.c	/^lwline_measured_from_lwline(const LWLINE *lwline, double m_start, double m_end)$/;"	f
lwline_release	liblwgeom/lwline.c	/^lwline_release(LWLINE *lwline)$/;"	f
lwline_remove_repeated_points	liblwgeom/lwline.c	/^lwline_remove_repeated_points(LWLINE *lwline)$/;"	f
lwline_removepoint	liblwgeom/lwline.c	/^lwline_removepoint(LWLINE *line, uint32_t index)$/;"	f
lwline_reverse	liblwgeom/lwline.c	/^lwline_reverse(LWLINE *line)$/;"	f
lwline_same	liblwgeom/lwline.c	/^lwline_same(const LWLINE *l1, const LWLINE *l2)$/;"	f
lwline_segmentize2d	liblwgeom/lwline.c	/^lwline_segmentize2d(LWLINE *line, double dist)$/;"	f
lwline_setPoint4d	liblwgeom/lwline.c	/^lwline_setPoint4d(LWLINE *line, uint32_t index, POINT4D *newpoint)$/;"	f
lwline_simplify	liblwgeom/lwline.c	/^LWLINE* lwline_simplify(const LWLINE *iline, double dist)$/;"	f
lwline_split	liblwgeom/lwgeom_geos_split.c	/^lwline_split(const LWLINE* lwline_in, const LWGEOM* blade_in)$/;"	f	file:
lwline_split_by_line	liblwgeom/lwgeom_geos_split.c	/^lwline_split_by_line(const LWLINE* lwline_in, const LWLINE* blade_in)$/;"	f	file:
lwline_split_by_point	liblwgeom/lwgeom_geos_split.c	/^lwline_split_by_point(const LWLINE* lwline_in, const LWPOINT* blade_in)$/;"	f	file:
lwline_split_by_point_to	liblwgeom/lwgeom_geos_split.c	/^lwline_split_by_point_to(const LWLINE* lwline_in, const LWPOINT* blade_in,$/;"	f
lwline_summary	liblwgeom/lwgeom_debug.c	/^lwline_summary(LWLINE *line, int offset)$/;"	f	file:
lwline_to_kml2_sb	liblwgeom/lwout_kml.c	/^lwline_to_kml2_sb(const LWLINE *line, int precision, const char *prefix, stringbuffer_t *sb)$/;"	f	file:
lwline_to_twkb_buf	liblwgeom/lwout_twkb.c	/^static uint8_t* lwline_to_twkb_buf(const LWLINE *line, uint8_t *buf, uint8_t variant,int8_t prec, uint32_t id,int refpoint[],int method)$/;"	f	file:
lwline_to_twkb_size	liblwgeom/lwout_twkb.c	/^static size_t lwline_to_twkb_size(const LWLINE *line,uint8_t variant, int8_t prec, uint32_t id,int refpoint[],int method)$/;"	f	file:
lwline_to_wkb_buf	liblwgeom/lwout_wkb.c	/^static uint8_t* lwline_to_wkb_buf(const LWLINE *line, uint8_t *buf, uint8_t variant)$/;"	f	file:
lwline_to_wkb_size	liblwgeom/lwout_wkb.c	/^static size_t lwline_to_wkb_size(const LWLINE *line, uint8_t variant)$/;"	f	file:
lwline_to_wkt_sb	liblwgeom/lwout_wkt.c	/^static void lwline_to_wkt_sb(const LWLINE *line, stringbuffer_t *sb, int precision, uint8_t variant)$/;"	f	file:
lwmcurve_segmentize	liblwgeom/lwsegmentize.c	/^lwmcurve_segmentize(LWMCURVE *mcurve, uint32_t perQuad)$/;"	f
lwmcurve_to_wkt_sb	liblwgeom/lwout_wkt.c	/^static void lwmcurve_to_wkt_sb(const LWMCURVE *mcurv, stringbuffer_t *sb, int precision, uint8_t variant)$/;"	f	file:
lwmessage_truncate	liblwgeom/lwutil.c	/^char *lwmessage_truncate(char *str, int startpos, int endpos, int maxlength, int truncdirection)$/;"	f
lwmline_add_lwline	liblwgeom/lwmline.c	/^LWMLINE* lwmline_add_lwline(LWMLINE *mobj, const LWLINE *obj)$/;"	f
lwmline_as_lwgeom	liblwgeom/lwgeom.c	/^LWGEOM *lwmline_as_lwgeom(const LWMLINE *obj)$/;"	f
lwmline_clip_to_ordinate_range	liblwgeom/lwlinearreferencing.c	/^lwmline_clip_to_ordinate_range(const LWMLINE *mline, char ordinate, double from, double to)$/;"	f
lwmline_construct_empty	liblwgeom/lwmline.c	/^lwmline_construct_empty(int srid, char hasz, char hasm)$/;"	f
lwmline_desegmentize	liblwgeom/lwsegmentize.c	/^lwmline_desegmentize(LWMLINE *mline)$/;"	f
lwmline_free	liblwgeom/lwmline.c	/^void lwmline_free(LWMLINE *mline)$/;"	f
lwmline_locate_along	liblwgeom/lwlinearreferencing.c	/^lwmline_locate_along(const LWMLINE *lwmline, double m, double offset)$/;"	f	file:
lwmline_measured_from_lwmline	liblwgeom/lwmline.c	/^lwmline_measured_from_lwmline(const LWMLINE *lwmline, double m_start, double m_end)$/;"	f
lwmline_release	liblwgeom/lwmline.c	/^lwmline_release(LWMLINE *lwmline)$/;"	f
lwmline_to_wkt_sb	liblwgeom/lwout_wkt.c	/^static void lwmline_to_wkt_sb(const LWMLINE *mline, stringbuffer_t *sb, int precision, uint8_t variant)$/;"	f	file:
lwmpoint_add_lwpoint	liblwgeom/lwmpoint.c	/^LWMPOINT* lwmpoint_add_lwpoint(LWMPOINT *mobj, const LWPOINT *obj)$/;"	f
lwmpoint_as_lwgeom	liblwgeom/lwgeom.c	/^LWGEOM *lwmpoint_as_lwgeom(const LWMPOINT *obj)$/;"	f
lwmpoint_clip_to_ordinate_range	liblwgeom/lwlinearreferencing.c	/^lwmpoint_clip_to_ordinate_range(const LWMPOINT *mpoint, char ordinate, double from, double to)$/;"	f
lwmpoint_construct	liblwgeom/lwmpoint.c	/^lwmpoint_construct(int srid, const POINTARRAY *pa)$/;"	f
lwmpoint_construct_empty	liblwgeom/lwmpoint.c	/^lwmpoint_construct_empty(int srid, char hasz, char hasm)$/;"	f
lwmpoint_free	liblwgeom/lwmpoint.c	/^void lwmpoint_free(LWMPOINT *mpt)$/;"	f
lwmpoint_locate_along	liblwgeom/lwlinearreferencing.c	/^lwmpoint_locate_along(const LWMPOINT *lwin, double m, double offset)$/;"	f	file:
lwmpoint_release	liblwgeom/lwmpoint.c	/^lwmpoint_release(LWMPOINT *lwmpoint)$/;"	f
lwmpoint_remove_repeated_points	liblwgeom/lwmpoint.c	/^lwmpoint_remove_repeated_points(LWMPOINT *mpoint)$/;"	f
lwmpoint_to_wkt_sb	liblwgeom/lwout_wkt.c	/^static void lwmpoint_to_wkt_sb(const LWMPOINT *mpoint, stringbuffer_t *sb, int precision, uint8_t variant)$/;"	f	file:
lwmpoly_add_lwpoly	liblwgeom/lwmpoly.c	/^LWMPOLY* lwmpoly_add_lwpoly(LWMPOLY *mobj, const LWPOLY *obj)$/;"	f
lwmpoly_as_lwgeom	liblwgeom/lwgeom.c	/^LWGEOM *lwmpoly_as_lwgeom(const LWMPOLY *obj)$/;"	f
lwmpoly_construct_empty	liblwgeom/lwmpoly.c	/^lwmpoly_construct_empty(int srid, char hasz, char hasm)$/;"	f
lwmpoly_free	liblwgeom/lwmpoly.c	/^void lwmpoly_free(LWMPOLY *mpoly)$/;"	f
lwmpoly_release	liblwgeom/lwmpoly.c	/^lwmpoly_release(LWMPOLY *lwmpoly)$/;"	f
lwmpoly_to_wkt_sb	liblwgeom/lwout_wkt.c	/^static void lwmpoly_to_wkt_sb(const LWMPOLY *mpoly, stringbuffer_t *sb, int precision, uint8_t variant)$/;"	f	file:
lwmpolygon_desegmentize	liblwgeom/lwsegmentize.c	/^lwmpolygon_desegmentize(LWMPOLY *mpoly)$/;"	f
lwmsurface_segmentize	liblwgeom/lwsegmentize.c	/^lwmsurface_segmentize(LWMSURFACE *msurface, uint32_t perQuad)$/;"	f
lwmsurface_to_wkt_sb	liblwgeom/lwout_wkt.c	/^static void lwmsurface_to_wkt_sb(const LWMSURFACE *msurf, stringbuffer_t *sb, int precision, uint8_t variant)$/;"	f	file:
lwnotice	liblwgeom/lwutil.c	/^lwnotice(const char *fmt, ...)$/;"	f
lwnotice_var	liblwgeom/lwutil.c	/^lwreporter lwnotice_var = default_noticereporter;$/;"	v
lwpoint_as_lwgeom	liblwgeom/lwgeom.c	/^LWGEOM *lwpoint_as_lwgeom(const LWPOINT *obj)$/;"	f
lwpoint_calculate_circ_tree	liblwgeom/lwgeodetic_tree.c	/^lwpoint_calculate_circ_tree(const LWPOINT* lwpoint)$/;"	f	file:
lwpoint_calculate_gbox_cartesian	liblwgeom/g_box.c	/^static int lwpoint_calculate_gbox_cartesian(LWPOINT *point, GBOX *gbox)$/;"	f	file:
lwpoint_calculate_gbox_geodetic	liblwgeom/lwgeodetic.c	/^static int lwpoint_calculate_gbox_geodetic(const LWPOINT *point, GBOX *gbox)$/;"	f	file:
lwpoint_check_geodetic	liblwgeom/lwgeodetic.c	/^static int lwpoint_check_geodetic(const LWPOINT *point)$/;"	f	file:
lwpoint_clip_to_ordinate_range	liblwgeom/lwlinearreferencing.c	/^lwpoint_clip_to_ordinate_range(const LWPOINT *point, char ordinate, double from, double to)$/;"	f
lwpoint_clone	liblwgeom/lwpoint.c	/^lwpoint_clone(const LWPOINT *g)$/;"	f
lwpoint_construct	liblwgeom/lwpoint.c	/^lwpoint_construct(int srid, GBOX *bbox, POINTARRAY *point)$/;"	f
lwpoint_construct_empty	liblwgeom/lwpoint.c	/^lwpoint_construct_empty(int srid, char hasz, char hasm)$/;"	f
lwpoint_force_dims	liblwgeom/lwpoint.c	/^lwpoint_force_dims(const LWPOINT *point, int hasz, int hasm)$/;"	f
lwpoint_force_geodetic	liblwgeom/lwgeodetic.c	/^static int lwpoint_force_geodetic(LWPOINT *point)$/;"	f	file:
lwpoint_free	liblwgeom/lwpoint.c	/^void lwpoint_free(LWPOINT *pt)$/;"	f
lwpoint_from_gserialized_buffer	liblwgeom/g_serialized.c	/^static LWPOINT* lwpoint_from_gserialized_buffer(uint8_t *data_ptr, uint8_t g_flags, size_t *g_size)$/;"	f	file:
lwpoint_from_wkb_state	liblwgeom/lwin_wkb.c	/^static LWPOINT* lwpoint_from_wkb_state(wkb_parse_state *s)$/;"	f	file:
lwpoint_getPoint2d_p	liblwgeom/lwpoint.c	/^lwpoint_getPoint2d_p(const LWPOINT *point, POINT2D *out)$/;"	f
lwpoint_getPoint3dm_p	liblwgeom/lwpoint.c	/^lwpoint_getPoint3dm_p(const LWPOINT *point, POINT3DM *out)$/;"	f
lwpoint_getPoint3dz_p	liblwgeom/lwpoint.c	/^lwpoint_getPoint3dz_p(const LWPOINT *point, POINT3DZ *out)$/;"	f
lwpoint_getPoint4d_p	liblwgeom/lwpoint.c	/^lwpoint_getPoint4d_p(const LWPOINT *point, POINT4D *out)$/;"	f
lwpoint_get_m	liblwgeom/lwpoint.c	/^lwpoint_get_m(const LWPOINT *point)$/;"	f
lwpoint_get_ordinate	liblwgeom/lwlinearreferencing.c	/^double lwpoint_get_ordinate(const POINT4D *p, char ordinate)$/;"	f
lwpoint_get_x	liblwgeom/lwpoint.c	/^lwpoint_get_x(const LWPOINT *point)$/;"	f
lwpoint_get_y	liblwgeom/lwpoint.c	/^lwpoint_get_y(const LWPOINT *point)$/;"	f
lwpoint_get_z	liblwgeom/lwpoint.c	/^lwpoint_get_z(const LWPOINT *point)$/;"	f
lwpoint_grid	postgis/lwgeom_functions_analytic.c	/^lwpoint_grid(LWPOINT *point, gridspec *grid)$/;"	f
lwpoint_inside_circle	liblwgeom/lwgeom.c	/^lwpoint_inside_circle(const LWPOINT *p, double cx, double cy, double rad)$/;"	f
lwpoint_is_empty	liblwgeom/lwpoint.c	/^int lwpoint_is_empty(const LWPOINT *point)$/;"	f
lwpoint_locate_along	liblwgeom/lwlinearreferencing.c	/^lwpoint_locate_along(const LWPOINT *lwpoint, double m, double offset)$/;"	f	file:
lwpoint_locate_between_m	postgis/lwgeom_functions_lrs.c	/^lwpoint_locate_between_m(LWPOINT *lwpoint, double m0, double m1)$/;"	f	file:
lwpoint_make	liblwgeom/lwpoint.c	/^lwpoint_make(int srid, int hasz, int hasm, const POINT4D *p)$/;"	f
lwpoint_make2d	liblwgeom/lwpoint.c	/^lwpoint_make2d(int srid, double x, double y)$/;"	f
lwpoint_make3dm	liblwgeom/lwpoint.c	/^lwpoint_make3dm(int srid, double x, double y, double m)$/;"	f
lwpoint_make3dz	liblwgeom/lwpoint.c	/^lwpoint_make3dz(int srid, double x, double y, double z)$/;"	f
lwpoint_make4d	liblwgeom/lwpoint.c	/^lwpoint_make4d(int srid, double x, double y, double z, double m)$/;"	f
lwpoint_release	liblwgeom/lwpoint.c	/^lwpoint_release(LWPOINT *lwpoint)$/;"	f
lwpoint_same	liblwgeom/lwpoint.c	/^lwpoint_same(const LWPOINT *p1, const LWPOINT *p2)$/;"	f
lwpoint_set_ordinate	liblwgeom/lwlinearreferencing.c	/^void lwpoint_set_ordinate(POINT4D *p, char ordinate, double value)$/;"	f
lwpoint_summary	liblwgeom/lwgeom_debug.c	/^lwpoint_summary(LWPOINT *point, int offset)$/;"	f	file:
lwpoint_to_kml2_sb	liblwgeom/lwout_kml.c	/^lwpoint_to_kml2_sb(const LWPOINT *point, int precision, const char *prefix, stringbuffer_t *sb)$/;"	f	file:
lwpoint_to_latlon	liblwgeom/lwprint.c	/^char* lwpoint_to_latlon(const LWPOINT * pt, const char *format)$/;"	f
lwpoint_to_twkb_buf	liblwgeom/lwout_twkb.c	/^static uint8_t* lwpoint_to_twkb_buf(const LWPOINT *pt, uint8_t *buf, uint8_t variant,int8_t prec, uint32_t id,int refpoint[],int method)$/;"	f	file:
lwpoint_to_twkb_size	liblwgeom/lwout_twkb.c	/^static size_t lwpoint_to_twkb_size(const LWPOINT *pt,uint8_t variant, int8_t prec, uint32_t id,int refpoint[],int method)$/;"	f	file:
lwpoint_to_wkb_buf	liblwgeom/lwout_wkb.c	/^static uint8_t* lwpoint_to_wkb_buf(const LWPOINT *pt, uint8_t *buf, uint8_t variant)$/;"	f	file:
lwpoint_to_wkb_size	liblwgeom/lwout_wkb.c	/^static size_t lwpoint_to_wkb_size(const LWPOINT *pt, uint8_t variant)$/;"	f	file:
lwpoint_to_wkt_sb	liblwgeom/lwout_wkt.c	/^static void lwpoint_to_wkt_sb(const LWPOINT *pt, stringbuffer_t *sb, int precision, uint8_t variant)$/;"	f	file:
lwpoly_add_ring	liblwgeom/lwpoly.c	/^lwpoly_add_ring(LWPOLY *poly, POINTARRAY *pa) $/;"	f
lwpoly_area	liblwgeom/lwpoly.c	/^lwpoly_area(const LWPOLY *poly)$/;"	f
lwpoly_as_lwgeom	liblwgeom/lwgeom.c	/^LWGEOM *lwpoly_as_lwgeom(const LWPOLY *obj)$/;"	f
lwpoly_calculate_circ_tree	liblwgeom/lwgeodetic_tree.c	/^lwpoly_calculate_circ_tree(const LWPOLY* lwpoly)$/;"	f	file:
lwpoly_calculate_gbox_cartesian	liblwgeom/g_box.c	/^static int lwpoly_calculate_gbox_cartesian(LWPOLY *poly, GBOX *gbox)$/;"	f	file:
lwpoly_check_geodetic	liblwgeom/lwgeodetic.c	/^static int lwpoly_check_geodetic(const LWPOLY *poly)$/;"	f	file:
lwpoly_clone	liblwgeom/lwpoly.c	/^lwpoly_clone(const LWPOLY *g)$/;"	f
lwpoly_clone_deep	liblwgeom/lwpoly.c	/^lwpoly_clone_deep(const LWPOLY *g)$/;"	f
lwpoly_construct	liblwgeom/lwpoly.c	/^lwpoly_construct(int srid, GBOX *bbox, uint32_t nrings, POINTARRAY **points)$/;"	f
lwpoly_construct_empty	liblwgeom/lwpoly.c	/^lwpoly_construct_empty(int srid, char hasz, char hasm)$/;"	f
lwpoly_count_vertices	liblwgeom/lwpoly.c	/^int lwpoly_count_vertices(LWPOLY *poly)$/;"	f
lwpoly_covers_point2d	liblwgeom/lwgeodetic.c	/^int lwpoly_covers_point2d(const LWPOLY *poly, const POINT2D *pt_to_test)$/;"	f
lwpoly_force_clockwise	liblwgeom/lwpoly.c	/^lwpoly_force_clockwise(LWPOLY *poly)$/;"	f
lwpoly_force_dims	liblwgeom/lwpoly.c	/^lwpoly_force_dims(const LWPOLY *poly, int hasz, int hasm)$/;"	f
lwpoly_force_geodetic	liblwgeom/lwgeodetic.c	/^static int lwpoly_force_geodetic(LWPOLY *poly)$/;"	f	file:
lwpoly_free	liblwgeom/lwpoly.c	/^void lwpoly_free(LWPOLY  *poly)$/;"	f
lwpoly_from_gserialized_buffer	liblwgeom/g_serialized.c	/^static LWPOLY* lwpoly_from_gserialized_buffer(uint8_t *data_ptr, uint8_t g_flags, size_t *g_size)$/;"	f	file:
lwpoly_from_lwlines	liblwgeom/lwpoly.c	/^lwpoly_from_lwlines(const LWLINE *shell,$/;"	f
lwpoly_from_wkb_state	liblwgeom/lwin_wkb.c	/^static LWPOLY* lwpoly_from_wkb_state(wkb_parse_state *s)$/;"	f	file:
lwpoly_grid	postgis/lwgeom_functions_analytic.c	/^lwpoly_grid(LWPOLY *poly, gridspec *grid)$/;"	f
lwpoly_is_closed	liblwgeom/lwpoly.c	/^lwpoly_is_closed(const LWPOLY *poly)$/;"	f
lwpoly_is_empty	liblwgeom/lwpoly.c	/^int lwpoly_is_empty(const LWPOLY *poly)$/;"	f
lwpoly_make_geos_friendly	liblwgeom/lwgeom_geos_clean.c	/^lwpoly_make_geos_friendly(LWPOLY *poly)$/;"	f
lwpoly_perimeter	liblwgeom/lwpoly.c	/^lwpoly_perimeter(const LWPOLY *poly)$/;"	f
lwpoly_perimeter_2d	liblwgeom/lwpoly.c	/^lwpoly_perimeter_2d(const LWPOLY *poly)$/;"	f
lwpoly_release	liblwgeom/lwpoly.c	/^lwpoly_release(LWPOLY *lwpoly)$/;"	f
lwpoly_remove_repeated_points	liblwgeom/lwpoly.c	/^lwpoly_remove_repeated_points(LWPOLY *poly)$/;"	f
lwpoly_reverse	liblwgeom/lwpoly.c	/^lwpoly_reverse(LWPOLY *poly)$/;"	f
lwpoly_same	liblwgeom/lwpoly.c	/^lwpoly_same(const LWPOLY *p1, const LWPOLY *p2)$/;"	f
lwpoly_segmentize2d	liblwgeom/lwpoly.c	/^lwpoly_segmentize2d(LWPOLY *poly, double dist)$/;"	f
lwpoly_simplify	liblwgeom/lwpoly.c	/^LWPOLY* lwpoly_simplify(const LWPOLY *ipoly, double dist)$/;"	f
lwpoly_split	liblwgeom/lwgeom_geos_split.c	/^lwpoly_split(const LWPOLY* lwpoly_in, const LWGEOM* blade_in)$/;"	f	file:
lwpoly_split_by_line	liblwgeom/lwgeom_geos_split.c	/^lwpoly_split_by_line(const LWPOLY* lwpoly_in, const LWLINE* blade_in)$/;"	f	file:
lwpoly_startpoint	liblwgeom/lwpoly.c	/^lwpoly_startpoint(const LWPOLY* poly, POINT4D* pt)$/;"	f
lwpoly_summary	liblwgeom/lwgeom_debug.c	/^lwpoly_summary(LWPOLY *poly, int offset)$/;"	f	file:
lwpoly_to_kml2_sb	liblwgeom/lwout_kml.c	/^lwpoly_to_kml2_sb(const LWPOLY *poly, int precision, const char *prefix, stringbuffer_t *sb)$/;"	f	file:
lwpoly_to_twkb_buf	liblwgeom/lwout_twkb.c	/^static uint8_t* lwpoly_to_twkb_buf(const LWPOLY *poly, uint8_t *buf, uint8_t variant,int8_t prec, uint32_t id,int refpoint[],int method)$/;"	f	file:
lwpoly_to_twkb_size	liblwgeom/lwout_twkb.c	/^static size_t lwpoly_to_twkb_size(const LWPOLY *poly,uint8_t variant, int8_t prec, uint32_t id,int refpoint[],int method)$/;"	f	file:
lwpoly_to_wkb_buf	liblwgeom/lwout_wkb.c	/^static uint8_t* lwpoly_to_wkb_buf(const LWPOLY *poly, uint8_t *buf, uint8_t variant)$/;"	f	file:
lwpoly_to_wkb_size	liblwgeom/lwout_wkb.c	/^static size_t lwpoly_to_wkb_size(const LWPOLY *poly, uint8_t variant)$/;"	f	file:
lwpoly_to_wkt_sb	liblwgeom/lwout_wkt.c	/^static void lwpoly_to_wkt_sb(const LWPOLY *poly, stringbuffer_t *sb, int precision, uint8_t variant)$/;"	f	file:
lwpolygon_calculate_gbox_geodetic	liblwgeom/lwgeodetic.c	/^static int lwpolygon_calculate_gbox_geodetic(const LWPOLY *poly, GBOX *gbox)$/;"	f	file:
lwpolygon_desegmentize	liblwgeom/lwsegmentize.c	/^lwpolygon_desegmentize(LWPOLY *poly)$/;"	f
lwprint_double	liblwgeom/lwout_geojson.c	/^lwprint_double(double d, int maxdd, char *buf, size_t bufsize)$/;"	f	file:
lwprint_normalize_latlon	liblwgeom/lwprint.c	/^static void lwprint_normalize_latlon(double *lat, double *lon)$/;"	f	file:
lwproj_from_string	liblwgeom/lwgeom_transform.c	/^lwproj_from_string(const char *str1)$/;"	f
lwpsurface_add_lwpoly	liblwgeom/lwpsurface.c	/^LWPSURFACE* lwpsurface_add_lwpoly(LWPSURFACE *mobj, const LWPOLY *obj)$/;"	f
lwpsurface_as_lwgeom	liblwgeom/lwgeom.c	/^LWGEOM *lwpsurface_as_lwgeom(const LWPSURFACE *obj)$/;"	f
lwpsurface_free	liblwgeom/lwpsurface.c	/^void lwpsurface_free(LWPSURFACE *psurf)$/;"	f
lwpsurface_is_closed	liblwgeom/lwpsurface.c	/^int lwpsurface_is_closed(const LWPSURFACE *psurface)$/;"	f
lwpsurface_to_wkt_sb	liblwgeom/lwout_wkt.c	/^static void lwpsurface_to_wkt_sb(const LWPSURFACE *psurf, stringbuffer_t *sb, int precision, uint8_t variant)$/;"	f	file:
lwrealloc	liblwgeom/lwutil.c	/^lwrealloc(void *mem, size_t size)$/;"	f
lwrealloc_var	liblwgeom/lwutil.c	/^lwreallocator lwrealloc_var = default_reallocator;$/;"	v
lwtin_add_lwtriangle	liblwgeom/lwtin.c	/^LWTIN* lwtin_add_lwtriangle(LWTIN *mobj, const LWTRIANGLE *obj)$/;"	f
lwtin_as_lwgeom	liblwgeom/lwgeom.c	/^LWGEOM *lwtin_as_lwgeom(const LWTIN *obj)$/;"	f
lwtin_free	liblwgeom/lwtin.c	/^void lwtin_free(LWTIN *tin)$/;"	f
lwtin_from_geos	liblwgeom/lwgeom_geos.c	/^LWTIN *lwtin_from_geos(const GEOSGeometry *geom, int want3d) {$/;"	f
lwtin_is_closed	liblwgeom/lwtin.c	/^int lwtin_is_closed(const LWTIN *tin)$/;"	f
lwtin_to_wkt_sb	liblwgeom/lwout_wkt.c	/^static void lwtin_to_wkt_sb(const LWTIN *tin, stringbuffer_t *sb, int precision, uint8_t variant)$/;"	f	file:
lwtriangle_area	liblwgeom/lwtriangle.c	/^lwtriangle_area(const LWTRIANGLE *triangle)$/;"	f
lwtriangle_as_lwgeom	liblwgeom/lwgeom.c	/^LWGEOM *lwtriangle_as_lwgeom(const LWTRIANGLE *obj)$/;"	f
lwtriangle_calculate_gbox_cartesian	liblwgeom/g_box.c	/^static int lwtriangle_calculate_gbox_cartesian(LWTRIANGLE *triangle, GBOX *gbox)$/;"	f	file:
lwtriangle_calculate_gbox_geodetic	liblwgeom/lwgeodetic.c	/^static int lwtriangle_calculate_gbox_geodetic(const LWTRIANGLE *triangle, GBOX *gbox)$/;"	f	file:
lwtriangle_check_geodetic	liblwgeom/lwgeodetic.c	/^static int lwtriangle_check_geodetic(const LWTRIANGLE *triangle)$/;"	f	file:
lwtriangle_clone	liblwgeom/lwtriangle.c	/^lwtriangle_clone(const LWTRIANGLE *g)$/;"	f
lwtriangle_construct	liblwgeom/lwtriangle.c	/^lwtriangle_construct(int srid, GBOX *bbox, POINTARRAY *points)$/;"	f
lwtriangle_construct_empty	liblwgeom/lwtriangle.c	/^lwtriangle_construct_empty(int srid, char hasz, char hasm)$/;"	f
lwtriangle_force_clockwise	liblwgeom/lwtriangle.c	/^lwtriangle_force_clockwise(LWTRIANGLE *triangle)$/;"	f
lwtriangle_free	liblwgeom/lwtriangle.c	/^void lwtriangle_free(LWTRIANGLE  *triangle)$/;"	f
lwtriangle_from_gserialized_buffer	liblwgeom/g_serialized.c	/^static LWTRIANGLE* lwtriangle_from_gserialized_buffer(uint8_t *data_ptr, uint8_t g_flags, size_t *g_size)$/;"	f	file:
lwtriangle_from_lwline	liblwgeom/lwtriangle.c	/^lwtriangle_from_lwline(const LWLINE *shell)$/;"	f
lwtriangle_from_wkb_state	liblwgeom/lwin_wkb.c	/^static LWTRIANGLE* lwtriangle_from_wkb_state(wkb_parse_state *s)$/;"	f	file:
lwtriangle_is_empty	liblwgeom/lwtriangle.c	/^int lwtriangle_is_empty(const LWTRIANGLE *triangle)$/;"	f
lwtriangle_is_repeated_points	liblwgeom/lwtriangle.c	/^lwtriangle_is_repeated_points(LWTRIANGLE *triangle)$/;"	f
lwtriangle_perimeter	liblwgeom/lwtriangle.c	/^lwtriangle_perimeter(const LWTRIANGLE *triangle)$/;"	f
lwtriangle_perimeter_2d	liblwgeom/lwtriangle.c	/^lwtriangle_perimeter_2d(const LWTRIANGLE *triangle)$/;"	f
lwtriangle_release	liblwgeom/lwtriangle.c	/^lwtriangle_release(LWTRIANGLE *lwtriangle)$/;"	f
lwtriangle_reverse	liblwgeom/lwtriangle.c	/^lwtriangle_reverse(LWTRIANGLE *triangle)$/;"	f
lwtriangle_same	liblwgeom/lwtriangle.c	/^lwtriangle_same(const LWTRIANGLE *t1, const LWTRIANGLE *t2)$/;"	f
lwtriangle_to_wkb_buf	liblwgeom/lwout_wkb.c	/^static uint8_t* lwtriangle_to_wkb_buf(const LWTRIANGLE *tri, uint8_t *buf, uint8_t variant)$/;"	f	file:
lwtriangle_to_wkb_size	liblwgeom/lwout_wkb.c	/^static size_t lwtriangle_to_wkb_size(const LWTRIANGLE *tri, uint8_t variant)$/;"	f	file:
lwtriangle_to_wkt_sb	liblwgeom/lwout_wkt.c	/^static void lwtriangle_to_wkt_sb(const LWTRIANGLE *tri, stringbuffer_t *sb, int precision, uint8_t variant)$/;"	f	file:
lwtype	liblwgeom/lwin_wkb.c	/^	uint32_t lwtype; \/* Current type we are handling *\/$/;"	m	struct:__anon24	file:
lwtype_from_wkb_state	liblwgeom/lwin_wkb.c	/^static void lwtype_from_wkb_state(wkb_parse_state *s, uint32_t wkb_type)$/;"	f	file:
lwtype_get_collectiontype	liblwgeom/lwgeom.c	/^lwtype_get_collectiontype(uint8_t type)$/;"	f
lwtype_is_collection	liblwgeom/lwgeom.c	/^lwtype_is_collection(uint8_t type)$/;"	f
lwtype_name	liblwgeom/lwutil.c	/^lwtype_name(uint8_t type)$/;"	f
m	java/jdbc/src/org/postgis/Point.java	/^    public double m = 0.0;$/;"	f	class:Point
m	liblwgeom/g_util.c	/^	int m;$/;"	m	struct:geomtype_struct	file:
m	liblwgeom/lwin_wkt.h	/^	double m;$/;"	m	struct:__anon25
m	loader/shp2pgsql-core.c	/^	double x, y, z, m;$/;"	m	struct:struct_point	file:
main	doc/html/image_src/generator.c	/^int main( int argc, const char* argv[] )$/;"	f
main	extras/wkb_reader/readwkb.c	/^main()$/;"	f
main	java/ejb2/src/com/geodetix/geo/client/Client.java	/^    public static void main(String [] args) {$/;"	m	class:Client
main	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    public static void main(String[] args) throws SQLException, ClassNotFoundException {$/;"	m	class:JtsTestParser
main	java/jdbc/src/examples/Test.java	/^    public static void main(String[] args) throws SQLException {$/;"	m	class:Test
main	java/jdbc/src/examples/TestAutoregister.java	/^    public static void main(String[] args) {$/;"	m	class:TestAutoregister
main	java/jdbc/src/examples/TestBoxes.java	/^    public static void main(String[] args) throws SQLException, ClassNotFoundException {$/;"	m	class:TestBoxes
main	java/jdbc/src/examples/TestJava2d.java	/^    public static void main(String[] args) throws ClassNotFoundException, SQLException {$/;"	m	class:TestJava2d
main	java/jdbc/src/examples/TestParser.java	/^    public static void main(String[] args) throws SQLException, ClassNotFoundException {$/;"	m	class:TestParser
main	java/jdbc/src/examples/TestServer.java	/^	public static void main(String[] args) {$/;"	m	class:TestServer
main	java/jdbc/src/examples/VersionPrinter.java	/^    public static void main(String[] args) {$/;"	m	class:VersionPrinter
main	java/jdbc/src/org/postgis/Version.java	/^    public static void main(String[] args) {$/;"	m	class:Version
main	liblwgeom/cunit/cu_tester.c	/^int main(int argc, char *argv[])$/;"	f
main	loader/cunit/cu_tester.c	/^int main()$/;"	f
main	loader/pgsql2shp-cli.c	/^main(int argc, char **argv)$/;"	f
main	loader/shp2pgsql-cli.c	/^main (int argc, char **argv)$/;"	f
main	loader/shp2pgsql-gui.c	/^main(int argc, char *argv[])$/;"	f
main	raster/loader/raster2pgsql.c	/^main(int argc, char **argv) {$/;"	f
main	raster/scripts/python/raster2pgsql.py	/^def main():$/;"	f
main	raster/test/cunit/cu_tester.c	/^int main(int argc, char *argv[])$/;"	f
main_scan_query	loader/pgsql2shp-core.h	/^	char *main_scan_query;$/;"	m	struct:shp_dumper_state
maintenance	raster/loader/raster2pgsql.h	/^	int maintenance;$/;"	m	struct:raster_loader_config
makeDbTable	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAOImpl.java	/^    public void makeDbTable() {$/;"	m	class:PostGisGeometryDAOImpl
makeDbTable	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAOImpl.java	/^    public void makeDbTable(String gemetryType, int srid, int geometryDimension) {$/;"	m	class:PostGisGeometryDAOImpl
makeDirty	java/ejb2/src/com/geodetix/geo/ejb/GeometryBean.java	/^    protected abstract void makeDirty();$/;"	m	class:GeometryBean
make_raster	raster/test/regress/rt_dumpvalues.sql	/^CREATE OR REPLACE FUNCTION make_raster($/;"	f
make_sql_addrastercolumn	raster/scripts/python/raster2pgsql.py	/^def make_sql_addrastercolumn(options, pixeltypes, nodata, pixelsize, blocksize, extent):$/;"	f
make_sql_create_gist	raster/scripts/python/raster2pgsql.py	/^def make_sql_create_gist(table, column):$/;"	f
make_sql_create_raster_overviews	raster/scripts/python/raster2pgsql.py	/^def make_sql_create_raster_overviews(options):$/;"	f
make_sql_create_table	raster/scripts/python/raster2pgsql.py	/^def make_sql_create_table(options, table = None, is_overview = False):$/;"	f
make_sql_drop_raster_table	raster/scripts/python/raster2pgsql.py	/^def make_sql_drop_raster_table(table):$/;"	f
make_sql_drop_table	raster/scripts/python/raster2pgsql.py	/^def make_sql_drop_table(table):$/;"	f
make_sql_full_table_name	raster/scripts/python/raster2pgsql.py	/^def make_sql_full_table_name(schema_table):$/;"	f
make_sql_insert_raster	raster/scripts/python/raster2pgsql.py	/^def make_sql_insert_raster(table, rast, hexwkb, insert_filename, file):$/;"	f
make_sql_register_overview	raster/scripts/python/raster2pgsql.py	/^def make_sql_register_overview(options, ov_table, ov_factor):$/;"	f
make_sql_schema_table_names	raster/scripts/python/raster2pgsql.py	/^def make_sql_schema_table_names(schema_table):$/;"	f
make_sql_table_name	raster/scripts/python/raster2pgsql.py	/^def make_sql_table_name(schema_table):$/;"	f
make_sql_vacuum	raster/scripts/python/raster2pgsql.py	/^def make_sql_vacuum(table):$/;"	f
make_sql_value_array	raster/scripts/python/raster2pgsql.py	/^def make_sql_value_array(values):$/;"	f
make_test_raster	raster/test/regress/check_raster_columns.sql	/^CREATE OR REPLACE FUNCTION make_test_raster($/;"	f
make_test_raster	raster/test/regress/check_raster_overviews.sql	/^CREATE OR REPLACE FUNCTION make_test_raster($/;"	f
make_test_raster	raster/test/regress/rt_asraster.sql	/^CREATE OR REPLACE FUNCTION make_test_raster()$/;"	f
make_test_raster	raster/test/regress/rt_bandmetadata.sql	/^CREATE OR REPLACE FUNCTION make_test_raster($/;"	f
make_test_raster	raster/test/regress/rt_clip.sql	/^CREATE OR REPLACE FUNCTION make_test_raster($/;"	f
make_test_raster	raster/test/regress/rt_gdalwarp.sql	/^CREATE OR REPLACE FUNCTION make_test_raster()$/;"	f
make_test_raster	raster/test/regress/rt_geos_relationships.sql	/^CREATE OR REPLACE FUNCTION make_test_raster($/;"	f
make_test_raster	raster/test/regress/rt_intersection.sql	/^CREATE OR REPLACE FUNCTION make_test_raster($/;"	f
make_test_raster	raster/test/regress/rt_intersects.sql	/^CREATE OR REPLACE FUNCTION make_test_raster(rid integer, width integer DEFAULT 2, height integer DEFAULT 2, ul_x double precision DEFAULT 0, ul_y double precision DEFAULT 0, skew_x double precision DEFAULT 0, skew_y double precision DEFAULT 0)$/;"	f
make_test_raster	raster/test/regress/rt_mapalgebra_expr.sql	/^CREATE OR REPLACE FUNCTION make_test_raster($/;"	f
make_test_raster	raster/test/regress/rt_mapalgebraexpr_2raster.sql	/^CREATE OR REPLACE FUNCTION make_test_raster($/;"	f
make_test_raster	raster/test/regress/rt_mapalgebrafct_2raster.sql	/^CREATE OR REPLACE FUNCTION make_test_raster($/;"	f
make_test_raster	raster/test/regress/rt_nearestvalue.sql	/^CREATE OR REPLACE FUNCTION make_test_raster()$/;"	f
make_test_raster	raster/test/regress/rt_neighborhood.sql	/^CREATE OR REPLACE FUNCTION make_test_raster()$/;"	f
make_test_raster	raster/test/regress/rt_pixelascentroids.sql	/^CREATE OR REPLACE FUNCTION make_test_raster()$/;"	f
make_test_raster	raster/test/regress/rt_pixelaspoints.sql	/^CREATE OR REPLACE FUNCTION make_test_raster()$/;"	f
make_test_raster	raster/test/regress/rt_pixelaspolygons.sql	/^CREATE OR REPLACE FUNCTION make_test_raster()$/;"	f
make_test_raster	raster/test/regress/rt_pixelofvalue.sql	/^CREATE OR REPLACE FUNCTION make_test_raster()$/;"	f
make_test_raster	raster/test/regress/rt_polygon.sql	/^CREATE OR REPLACE FUNCTION make_test_raster()$/;"	f
make_test_raster	raster/test/regress/rt_rastertoworldcoord.sql	/^CREATE OR REPLACE FUNCTION make_test_raster($/;"	f
make_test_raster	raster/test/regress/rt_setvalues_array.sql	/^CREATE OR REPLACE FUNCTION make_test_raster(rid integer, width integer DEFAULT 2, height integer DEFAULT 2, ul_x double precision DEFAULT 0, ul_y double precision DEFAULT 0, skew_x double precision DEFAULT 0, skew_y double precision DEFAULT 0)$/;"	f
make_test_raster	raster/test/regress/rt_worldtorastercoord.sql	/^CREATE OR REPLACE FUNCTION make_test_raster($/;"	f
make_value_array	raster/test/regress/rt_4ma.sql	/^CREATE OR REPLACE FUNCTION make_value_array($/;"	f
make_value_array	raster/test/regress/rt_elevation_functions.sql	/^CREATE OR REPLACE FUNCTION make_value_array($/;"	f
make_value_array	raster/test/regress/rt_invdistweight4ma.sql	/^CREATE OR REPLACE FUNCTION make_value_array($/;"	f
makeemptyline	java/jdbc/src/examples/VersionPrinter.java	/^    public static boolean makeemptyline = false;$/;"	f	class:VersionPrinter
makegrid	raster/test/regress/rt_gist_relationships.sql	/^CREATE OR REPLACE FUNCTION makegrid (int, int, box2d, int, int)$/;"	f
mangleURL	java/jdbc/jtssrc/org/postgis/jts/JtsGisWrapper.java	/^    public static String mangleURL(String url) throws SQLException {$/;"	m	class:JtsGisWrapper
mangleURL	java/jdbc/jtssrc/org/postgis/jts/JtsWrapper.java	/^    public static String mangleURL(String url) throws SQLException {$/;"	m	class:JtsWrapper
mangleURL	java/jdbc/src/org/postgis/DriverWrapper.java	/^    protected String mangleURL(String url) throws SQLException {$/;"	m	class:DriverWrapper
mangleURL	java/jdbc/src/org/postgis/java2d/Java2DWrapper.java	/^    public static String mangleURL(String url) throws SQLException {$/;"	m	class:Java2DWrapper
map_neatlines	extras/ogc_test_suite/1_schema.sql	/^CREATE TABLE map_neatlines ($/;"	t
map_neatlines.fid	extras/ogc_test_suite/1_schema.sql	/^       fid             INTEGER NOT NULL PRIMARY KEY$/;"	F
mapalgebra_suite	raster/test/cunit/cu_mapalgebra.c	/^CU_SuiteInfo mapalgebra_suite = {"mapalgebra",  NULL,  NULL, mapalgebra_tests};$/;"	v
mapalgebra_tests	raster/test/cunit/cu_mapalgebra.c	/^CU_TestInfo mapalgebra_tests[] = {$/;"	v
mask	raster/rt_pg/rtpg_mapalgebra.c	/^	rt_raster mask;$/;"	m	struct:rtpg_clip_arg_t	file:
mask	raster/rt_pg/rtpg_pixel.c	/^	rt_raster mask;$/;"	m	struct:rtpg_setvaluesgv_geomval_t	file:
max	postgis/gserialized_estimate.c	/^	float4 max[ND_DIMS];$/;"	m	struct:ND_BOX_T	file:
max	postgis/gserialized_estimate.c	/^	int max[ND_DIMS];$/;"	m	struct:ND_IBOX_T	file:
max	postgis/lwgeom_rtree.h	/^	double max;$/;"	m	struct:__anon12
max	raster/rt_core/librtcore.h	/^		double max;$/;"	m	struct:rt_reclassexpr_t::rt_reclassrange
max	raster/rt_core/librtcore.h	/^	double max;$/;"	m	struct:rt_bandstats_t
max	raster/rt_core/librtcore.h	/^	double max;$/;"	m	struct:rt_histogram_t
max	raster/scripts/plpgsql/_MapAlgebraParts.sql	/^CREATE OR REPLACE FUNCTION max(a int, b int)$/;"	f
max_extent	raster/loader/raster2pgsql.h	/^	int max_extent;$/;"	m	struct:raster_loader_config
max_rows	postgis/lwgeom_accum.c	/^	int	max_rows;$/;"	m	struct:__anon10	file:
mcxt_ptr_hash	libpgcommon/lwgeom_transform.c	/^uint32 mcxt_ptr_hash(const void *key, Size keysize)$/;"	f
mcxt_ptr_hasha	postgis/lwgeom_geos_prepared.c	/^mcxt_ptr_hasha(const void *key, Size keysize)$/;"	f
mean	raster/rt_core/librtcore.h	/^	double mean;$/;"	m	struct:rt_bandstats_t
measure	liblwgeom/lwgeodetic.h	/^	double measure;$/;"	m	struct:__anon23
measures_suite	liblwgeom/cunit/cu_measures.c	/^CU_SuiteInfo measures_suite = {"PostGIS Measures Suite",  NULL,  NULL, measures_tests};$/;"	v
measures_tests	liblwgeom/cunit/cu_measures.c	/^CU_TestInfo measures_tests[] =$/;"	v
mediumWKT	java/jdbc/src/org/postgis/ComposedGeom.java	/^    protected void mediumWKT(StringBuffer sb) {$/;"	m	class:ComposedGeom
mediumWKT	java/jdbc/src/org/postgis/Geometry.java	/^	protected void mediumWKT(StringBuffer sb) {$/;"	m	class:Geometry
mem	raster/rt_core/librtcore.h	/^		void *mem; \/* loaded external band data, internally owned *\/$/;"	m	struct:rt_extband_t
mem	raster/rt_core/librtcore.h	/^        void* mem; \/* actual data, externally owned *\/$/;"	m	union:rt_band_t::__anon39
message	loader/pgsql2shp-core.h	/^	char message[SHPDUMPERMSGLEN];$/;"	m	struct:shp_dumper_state
message	loader/shp2pgsql-core.h	/^	char message[SHPLOADERMSGLEN];$/;"	m	struct:shp_loader_state
method	postgis/lwgeom_accum.c	/^	int method;$/;"	m	struct:__anon10	file:
method	raster/rt_core/librtcore.h	/^	} method;$/;"	m	struct:rt_colormap_t	typeref:enum:rt_colormap_t::__anon40
min	postgis/gserialized_estimate.c	/^	float4 min[ND_DIMS];$/;"	m	struct:ND_BOX_T	file:
min	postgis/gserialized_estimate.c	/^	int min[ND_DIMS];$/;"	m	struct:ND_IBOX_T	file:
min	postgis/lwgeom_rtree.h	/^	double min;$/;"	m	struct:__anon12
min	raster/rt_core/librtcore.h	/^		double min;$/;"	m	struct:rt_reclassexpr_t::rt_reclassrange
min	raster/rt_core/librtcore.h	/^	double min;$/;"	m	struct:rt_bandstats_t
min	raster/rt_core/librtcore.h	/^	double min;$/;"	m	struct:rt_histogram_t
minval	raster/rt_core/rt_mapalgebra.c	/^		double *minval;$/;"	m	struct:_rti_iterator_arg_t::__anon45	file:
misc_suite	liblwgeom/cunit/cu_misc.c	/^CU_SuiteInfo misc_suite = {"misc", NULL, NULL, misc_tests };$/;"	v
misc_suite	raster/test/cunit/cu_misc.c	/^CU_SuiteInfo misc_suite = {"misc",  NULL,  NULL, misc_tests};$/;"	v
misc_tests	liblwgeom/cunit/cu_misc.c	/^CU_TestInfo misc_tests[] =$/;"	v
misc_tests	raster/test/cunit/cu_misc.c	/^CU_TestInfo misc_tests[] = {$/;"	v
mode	liblwgeom/measures.h	/^	int mode;	\/*the direction of looking, if thedir = -1 then we look for maxdistance and if it is 1 then we look for mindistance*\/$/;"	m	struct:__anon29
mode	liblwgeom/measures3d.h	/^	int mode;	\/*the direction of looking, if thedir = -1 then we look for 3dmaxdistance and if it is 1 then we look for 3dmindistance*\/$/;"	m	struct:__anon31
msize	postgis/lwgeom_functions_analytic.c	/^	double msize;$/;"	m	struct:gridspec_t	file:
mu2	postgis/lwgeom_spheroid.c	/^mu2(double azimuth,SPHEROID *sphere)$/;"	f
multicurve	liblwgeom/lwin_wkt_parse.y	/^multicurve :$/;"	l
multicurve	regress/sql-mm-multicurve.sql	/^CREATE TABLE public.multicurve (id INTEGER, description VARCHAR,$/;"	t
multicurve	regress/typmod.sql	/^CREATE TABLE tm.multicurve (id serial, g geometry(multicurve) );$/;"	t
multicurve.description	regress/sql-mm-multicurve.sql	/^CREATE TABLE public.multicurve (id INTEGER, description VARCHAR,$/;"	F
multicurve.g	regress/typmod.sql	/^CREATE TABLE tm.multicurve (id serial, g geometry(multicurve) );$/;"	F
multicurve.id	regress/sql-mm-multicurve.sql	/^CREATE TABLE public.multicurve (id INTEGER, description VARCHAR,$/;"	F
multicurve.id	regress/typmod.sql	/^CREATE TABLE tm.multicurve (id serial, g geometry(multicurve) );$/;"	F
multicurve.the_geom_2d	regress/sql-mm-multicurve.sql	/^the_geom_2d GEOMETRY(MULTICURVE),$/;"	F
multicurve.the_geom_3dm	regress/sql-mm-multicurve.sql	/^the_geom_3dm GEOMETRY(MULTICURVEM),$/;"	F
multicurve.the_geom_3dz	regress/sql-mm-multicurve.sql	/^the_geom_3dz GEOMETRY(MULTICURVEZ),$/;"	F
multicurve.the_geom_4d	regress/sql-mm-multicurve.sql	/^the_geom_4d GEOMETRY(MULTICURVEZM));$/;"	F
multicurve0	regress/typmod.sql	/^CREATE TABLE tm.multicurve0 (id serial, g geometry(multicurve, 0) );$/;"	t
multicurve0.g	regress/typmod.sql	/^CREATE TABLE tm.multicurve0 (id serial, g geometry(multicurve, 0) );$/;"	F
multicurve0.id	regress/typmod.sql	/^CREATE TABLE tm.multicurve0 (id serial, g geometry(multicurve, 0) );$/;"	F
multicurve4326	regress/typmod.sql	/^CREATE TABLE tm.multicurve4326 (id serial, g geometry(multicurve, 4326) );$/;"	t
multicurve4326.g	regress/typmod.sql	/^CREATE TABLE tm.multicurve4326 (id serial, g geometry(multicurve, 4326) );$/;"	F
multicurve4326.id	regress/typmod.sql	/^CREATE TABLE tm.multicurve4326 (id serial, g geometry(multicurve, 4326) );$/;"	F
multicurvem	regress/typmod.sql	/^CREATE TABLE tm.multicurvem (id serial, g geometry(multicurvem) );$/;"	t
multicurvem.g	regress/typmod.sql	/^CREATE TABLE tm.multicurvem (id serial, g geometry(multicurvem) );$/;"	F
multicurvem.id	regress/typmod.sql	/^CREATE TABLE tm.multicurvem (id serial, g geometry(multicurvem) );$/;"	F
multicurvem0	regress/typmod.sql	/^CREATE TABLE tm.multicurvem0 (id serial, g geometry(multicurvem, 0) );$/;"	t
multicurvem0.g	regress/typmod.sql	/^CREATE TABLE tm.multicurvem0 (id serial, g geometry(multicurvem, 0) );$/;"	F
multicurvem0.id	regress/typmod.sql	/^CREATE TABLE tm.multicurvem0 (id serial, g geometry(multicurvem, 0) );$/;"	F
multicurvem4326	regress/typmod.sql	/^CREATE TABLE tm.multicurvem4326 (id serial, g geometry(multicurvem, 4326) );$/;"	t
multicurvem4326.g	regress/typmod.sql	/^CREATE TABLE tm.multicurvem4326 (id serial, g geometry(multicurvem, 4326) );$/;"	F
multicurvem4326.id	regress/typmod.sql	/^CREATE TABLE tm.multicurvem4326 (id serial, g geometry(multicurvem, 4326) );$/;"	F
multicurvez	regress/typmod.sql	/^CREATE TABLE tm.multicurvez (id serial, g geometry(multicurvez) );$/;"	t
multicurvez.g	regress/typmod.sql	/^CREATE TABLE tm.multicurvez (id serial, g geometry(multicurvez) );$/;"	F
multicurvez.id	regress/typmod.sql	/^CREATE TABLE tm.multicurvez (id serial, g geometry(multicurvez) );$/;"	F
multicurvez0	regress/typmod.sql	/^CREATE TABLE tm.multicurvez0 (id serial, g geometry(multicurvez, 0) );$/;"	t
multicurvez0.g	regress/typmod.sql	/^CREATE TABLE tm.multicurvez0 (id serial, g geometry(multicurvez, 0) );$/;"	F
multicurvez0.id	regress/typmod.sql	/^CREATE TABLE tm.multicurvez0 (id serial, g geometry(multicurvez, 0) );$/;"	F
multicurvez4326	regress/typmod.sql	/^CREATE TABLE tm.multicurvez4326 (id serial, g geometry(multicurvez, 4326) );$/;"	t
multicurvez4326.g	regress/typmod.sql	/^CREATE TABLE tm.multicurvez4326 (id serial, g geometry(multicurvez, 4326) );$/;"	F
multicurvez4326.id	regress/typmod.sql	/^CREATE TABLE tm.multicurvez4326 (id serial, g geometry(multicurvez, 4326) );$/;"	F
multicurvezm	regress/typmod.sql	/^CREATE TABLE tm.multicurvezm (id serial, g geometry(multicurvezm) );$/;"	t
multicurvezm.g	regress/typmod.sql	/^CREATE TABLE tm.multicurvezm (id serial, g geometry(multicurvezm) );$/;"	F
multicurvezm.id	regress/typmod.sql	/^CREATE TABLE tm.multicurvezm (id serial, g geometry(multicurvezm) );$/;"	F
multicurvezm0	regress/typmod.sql	/^CREATE TABLE tm.multicurvezm0 (id serial, g geometry(multicurvezm, 0) );$/;"	t
multicurvezm0.g	regress/typmod.sql	/^CREATE TABLE tm.multicurvezm0 (id serial, g geometry(multicurvezm, 0) );$/;"	F
multicurvezm0.id	regress/typmod.sql	/^CREATE TABLE tm.multicurvezm0 (id serial, g geometry(multicurvezm, 0) );$/;"	F
multicurvezm4326	regress/typmod.sql	/^CREATE TABLE tm.multicurvezm4326 (id serial, g geometry(multicurvezm, 4326) );$/;"	t
multicurvezm4326.g	regress/typmod.sql	/^CREATE TABLE tm.multicurvezm4326 (id serial, g geometry(multicurvezm, 4326) );$/;"	F
multicurvezm4326.id	regress/typmod.sql	/^CREATE TABLE tm.multicurvezm4326 (id serial, g geometry(multicurvezm, 4326) );$/;"	F
multilinestring	liblwgeom/lwin_wkt_parse.y	/^multilinestring :$/;"	l
multilinestring	regress/typmod.sql	/^CREATE TABLE tm.multilinestring (id serial, g geometry(multilinestring), gg geography(multilinestring) );$/;"	t
multilinestring.g	regress/typmod.sql	/^CREATE TABLE tm.multilinestring (id serial, g geometry(multilinestring), gg geography(multilinestring) );$/;"	F
multilinestring.gg	regress/typmod.sql	/^CREATE TABLE tm.multilinestring (id serial, g geometry(multilinestring), gg geography(multilinestring) );$/;"	F
multilinestring.id	regress/typmod.sql	/^CREATE TABLE tm.multilinestring (id serial, g geometry(multilinestring), gg geography(multilinestring) );$/;"	F
multilinestring0	regress/typmod.sql	/^CREATE TABLE tm.multilinestring0 (id serial, g geometry(multilinestring, 0), gg geography(multilinestring, 0) );$/;"	t
multilinestring0.g	regress/typmod.sql	/^CREATE TABLE tm.multilinestring0 (id serial, g geometry(multilinestring, 0), gg geography(multilinestring, 0) );$/;"	F
multilinestring0.gg	regress/typmod.sql	/^CREATE TABLE tm.multilinestring0 (id serial, g geometry(multilinestring, 0), gg geography(multilinestring, 0) );$/;"	F
multilinestring0.id	regress/typmod.sql	/^CREATE TABLE tm.multilinestring0 (id serial, g geometry(multilinestring, 0), gg geography(multilinestring, 0) );$/;"	F
multilinestring4326	regress/typmod.sql	/^CREATE TABLE tm.multilinestring4326 (id serial, g geometry(multilinestring, 4326), gg geography(multilinestring, 4326) );$/;"	t
multilinestring4326.g	regress/typmod.sql	/^CREATE TABLE tm.multilinestring4326 (id serial, g geometry(multilinestring, 4326), gg geography(multilinestring, 4326) );$/;"	F
multilinestring4326.gg	regress/typmod.sql	/^CREATE TABLE tm.multilinestring4326 (id serial, g geometry(multilinestring, 4326), gg geography(multilinestring, 4326) );$/;"	F
multilinestring4326.id	regress/typmod.sql	/^CREATE TABLE tm.multilinestring4326 (id serial, g geometry(multilinestring, 4326), gg geography(multilinestring, 4326) );$/;"	F
multilinestringm	regress/typmod.sql	/^CREATE TABLE tm.multilinestringm (id serial, g geometry(multilinestringm), gg geography(multilinestringm) );$/;"	t
multilinestringm.g	regress/typmod.sql	/^CREATE TABLE tm.multilinestringm (id serial, g geometry(multilinestringm), gg geography(multilinestringm) );$/;"	F
multilinestringm.gg	regress/typmod.sql	/^CREATE TABLE tm.multilinestringm (id serial, g geometry(multilinestringm), gg geography(multilinestringm) );$/;"	F
multilinestringm.id	regress/typmod.sql	/^CREATE TABLE tm.multilinestringm (id serial, g geometry(multilinestringm), gg geography(multilinestringm) );$/;"	F
multilinestringm0	regress/typmod.sql	/^CREATE TABLE tm.multilinestringm0 (id serial, g geometry(multilinestringm, 0), gg geography(multilinestringm, 0) );$/;"	t
multilinestringm0.g	regress/typmod.sql	/^CREATE TABLE tm.multilinestringm0 (id serial, g geometry(multilinestringm, 0), gg geography(multilinestringm, 0) );$/;"	F
multilinestringm0.gg	regress/typmod.sql	/^CREATE TABLE tm.multilinestringm0 (id serial, g geometry(multilinestringm, 0), gg geography(multilinestringm, 0) );$/;"	F
multilinestringm0.id	regress/typmod.sql	/^CREATE TABLE tm.multilinestringm0 (id serial, g geometry(multilinestringm, 0), gg geography(multilinestringm, 0) );$/;"	F
multilinestringm4326	regress/typmod.sql	/^CREATE TABLE tm.multilinestringm4326 (id serial, g geometry(multilinestringm, 4326), gg geography(multilinestringm, 4326) );$/;"	t
multilinestringm4326.g	regress/typmod.sql	/^CREATE TABLE tm.multilinestringm4326 (id serial, g geometry(multilinestringm, 4326), gg geography(multilinestringm, 4326) );$/;"	F
multilinestringm4326.gg	regress/typmod.sql	/^CREATE TABLE tm.multilinestringm4326 (id serial, g geometry(multilinestringm, 4326), gg geography(multilinestringm, 4326) );$/;"	F
multilinestringm4326.id	regress/typmod.sql	/^CREATE TABLE tm.multilinestringm4326 (id serial, g geometry(multilinestringm, 4326), gg geography(multilinestringm, 4326) );$/;"	F
multilinestringz	regress/typmod.sql	/^CREATE TABLE tm.multilinestringz (id serial, g geometry(multilinestringz), gg geography(multilinestringz) );$/;"	t
multilinestringz.g	regress/typmod.sql	/^CREATE TABLE tm.multilinestringz (id serial, g geometry(multilinestringz), gg geography(multilinestringz) );$/;"	F
multilinestringz.gg	regress/typmod.sql	/^CREATE TABLE tm.multilinestringz (id serial, g geometry(multilinestringz), gg geography(multilinestringz) );$/;"	F
multilinestringz.id	regress/typmod.sql	/^CREATE TABLE tm.multilinestringz (id serial, g geometry(multilinestringz), gg geography(multilinestringz) );$/;"	F
multilinestringz0	regress/typmod.sql	/^CREATE TABLE tm.multilinestringz0 (id serial, g geometry(multilinestringz, 0), gg geography(multilinestringz, 0) );$/;"	t
multilinestringz0.g	regress/typmod.sql	/^CREATE TABLE tm.multilinestringz0 (id serial, g geometry(multilinestringz, 0), gg geography(multilinestringz, 0) );$/;"	F
multilinestringz0.gg	regress/typmod.sql	/^CREATE TABLE tm.multilinestringz0 (id serial, g geometry(multilinestringz, 0), gg geography(multilinestringz, 0) );$/;"	F
multilinestringz0.id	regress/typmod.sql	/^CREATE TABLE tm.multilinestringz0 (id serial, g geometry(multilinestringz, 0), gg geography(multilinestringz, 0) );$/;"	F
multilinestringz4326	regress/typmod.sql	/^CREATE TABLE tm.multilinestringz4326 (id serial, g geometry(multilinestringz, 4326), gg geography(multilinestringz, 4326) );$/;"	t
multilinestringz4326.g	regress/typmod.sql	/^CREATE TABLE tm.multilinestringz4326 (id serial, g geometry(multilinestringz, 4326), gg geography(multilinestringz, 4326) );$/;"	F
multilinestringz4326.gg	regress/typmod.sql	/^CREATE TABLE tm.multilinestringz4326 (id serial, g geometry(multilinestringz, 4326), gg geography(multilinestringz, 4326) );$/;"	F
multilinestringz4326.id	regress/typmod.sql	/^CREATE TABLE tm.multilinestringz4326 (id serial, g geometry(multilinestringz, 4326), gg geography(multilinestringz, 4326) );$/;"	F
multilinestringzm	regress/typmod.sql	/^CREATE TABLE tm.multilinestringzm (id serial, g geometry(multilinestringzm), gg geography(multilinestringzm) );$/;"	t
multilinestringzm.g	regress/typmod.sql	/^CREATE TABLE tm.multilinestringzm (id serial, g geometry(multilinestringzm), gg geography(multilinestringzm) );$/;"	F
multilinestringzm.gg	regress/typmod.sql	/^CREATE TABLE tm.multilinestringzm (id serial, g geometry(multilinestringzm), gg geography(multilinestringzm) );$/;"	F
multilinestringzm.id	regress/typmod.sql	/^CREATE TABLE tm.multilinestringzm (id serial, g geometry(multilinestringzm), gg geography(multilinestringzm) );$/;"	F
multilinestringzm0	regress/typmod.sql	/^CREATE TABLE tm.multilinestringzm0 (id serial, g geometry(multilinestringzm, 0), gg geography(multilinestringzm, 0) );$/;"	t
multilinestringzm0.g	regress/typmod.sql	/^CREATE TABLE tm.multilinestringzm0 (id serial, g geometry(multilinestringzm, 0), gg geography(multilinestringzm, 0) );$/;"	F
multilinestringzm0.gg	regress/typmod.sql	/^CREATE TABLE tm.multilinestringzm0 (id serial, g geometry(multilinestringzm, 0), gg geography(multilinestringzm, 0) );$/;"	F
multilinestringzm0.id	regress/typmod.sql	/^CREATE TABLE tm.multilinestringzm0 (id serial, g geometry(multilinestringzm, 0), gg geography(multilinestringzm, 0) );$/;"	F
multilinestringzm4326	regress/typmod.sql	/^CREATE TABLE tm.multilinestringzm4326 (id serial, g geometry(multilinestringzm, 4326), gg geography(multilinestringzm, 4326) );$/;"	t
multilinestringzm4326.g	regress/typmod.sql	/^CREATE TABLE tm.multilinestringzm4326 (id serial, g geometry(multilinestringzm, 4326), gg geography(multilinestringzm, 4326) );$/;"	F
multilinestringzm4326.gg	regress/typmod.sql	/^CREATE TABLE tm.multilinestringzm4326 (id serial, g geometry(multilinestringzm, 4326), gg geography(multilinestringzm, 4326) );$/;"	F
multilinestringzm4326.id	regress/typmod.sql	/^CREATE TABLE tm.multilinestringzm4326 (id serial, g geometry(multilinestringzm, 4326), gg geography(multilinestringzm, 4326) );$/;"	F
multipoint	liblwgeom/lwin_wkt_parse.y	/^multipoint :$/;"	l
multipoint	regress/typmod.sql	/^CREATE TABLE tm.multipoint (id serial, g geometry(multipoint), gg geography(multipoint) );$/;"	t
multipoint.g	regress/typmod.sql	/^CREATE TABLE tm.multipoint (id serial, g geometry(multipoint), gg geography(multipoint) );$/;"	F
multipoint.gg	regress/typmod.sql	/^CREATE TABLE tm.multipoint (id serial, g geometry(multipoint), gg geography(multipoint) );$/;"	F
multipoint.id	regress/typmod.sql	/^CREATE TABLE tm.multipoint (id serial, g geometry(multipoint), gg geography(multipoint) );$/;"	F
multipoint0	regress/typmod.sql	/^CREATE TABLE tm.multipoint0 (id serial, g geometry(multipoint, 0), gg geography(multipoint, 0) );$/;"	t
multipoint0.g	regress/typmod.sql	/^CREATE TABLE tm.multipoint0 (id serial, g geometry(multipoint, 0), gg geography(multipoint, 0) );$/;"	F
multipoint0.gg	regress/typmod.sql	/^CREATE TABLE tm.multipoint0 (id serial, g geometry(multipoint, 0), gg geography(multipoint, 0) );$/;"	F
multipoint0.id	regress/typmod.sql	/^CREATE TABLE tm.multipoint0 (id serial, g geometry(multipoint, 0), gg geography(multipoint, 0) );$/;"	F
multipoint4326	regress/typmod.sql	/^CREATE TABLE tm.multipoint4326 (id serial, g geometry(multipoint, 4326), gg geography(multipoint, 4326) );$/;"	t
multipoint4326.g	regress/typmod.sql	/^CREATE TABLE tm.multipoint4326 (id serial, g geometry(multipoint, 4326), gg geography(multipoint, 4326) );$/;"	F
multipoint4326.gg	regress/typmod.sql	/^CREATE TABLE tm.multipoint4326 (id serial, g geometry(multipoint, 4326), gg geography(multipoint, 4326) );$/;"	F
multipoint4326.id	regress/typmod.sql	/^CREATE TABLE tm.multipoint4326 (id serial, g geometry(multipoint, 4326), gg geography(multipoint, 4326) );$/;"	F
multipointm	regress/typmod.sql	/^CREATE TABLE tm.multipointm (id serial, g geometry(multipointm), gg geography(multipointm) );$/;"	t
multipointm.g	regress/typmod.sql	/^CREATE TABLE tm.multipointm (id serial, g geometry(multipointm), gg geography(multipointm) );$/;"	F
multipointm.gg	regress/typmod.sql	/^CREATE TABLE tm.multipointm (id serial, g geometry(multipointm), gg geography(multipointm) );$/;"	F
multipointm.id	regress/typmod.sql	/^CREATE TABLE tm.multipointm (id serial, g geometry(multipointm), gg geography(multipointm) );$/;"	F
multipointm0	regress/typmod.sql	/^CREATE TABLE tm.multipointm0 (id serial, g geometry(multipointm, 0), gg geography(multipointm, 0) );$/;"	t
multipointm0.g	regress/typmod.sql	/^CREATE TABLE tm.multipointm0 (id serial, g geometry(multipointm, 0), gg geography(multipointm, 0) );$/;"	F
multipointm0.gg	regress/typmod.sql	/^CREATE TABLE tm.multipointm0 (id serial, g geometry(multipointm, 0), gg geography(multipointm, 0) );$/;"	F
multipointm0.id	regress/typmod.sql	/^CREATE TABLE tm.multipointm0 (id serial, g geometry(multipointm, 0), gg geography(multipointm, 0) );$/;"	F
multipointm4326	regress/typmod.sql	/^CREATE TABLE tm.multipointm4326 (id serial, g geometry(multipointm, 4326), gg geography(multipointm, 4326) );$/;"	t
multipointm4326.g	regress/typmod.sql	/^CREATE TABLE tm.multipointm4326 (id serial, g geometry(multipointm, 4326), gg geography(multipointm, 4326) );$/;"	F
multipointm4326.gg	regress/typmod.sql	/^CREATE TABLE tm.multipointm4326 (id serial, g geometry(multipointm, 4326), gg geography(multipointm, 4326) );$/;"	F
multipointm4326.id	regress/typmod.sql	/^CREATE TABLE tm.multipointm4326 (id serial, g geometry(multipointm, 4326), gg geography(multipointm, 4326) );$/;"	F
multipointz	regress/typmod.sql	/^CREATE TABLE tm.multipointz (id serial, g geometry(multipointz), gg geography(multipointz) );$/;"	t
multipointz.g	regress/typmod.sql	/^CREATE TABLE tm.multipointz (id serial, g geometry(multipointz), gg geography(multipointz) );$/;"	F
multipointz.gg	regress/typmod.sql	/^CREATE TABLE tm.multipointz (id serial, g geometry(multipointz), gg geography(multipointz) );$/;"	F
multipointz.id	regress/typmod.sql	/^CREATE TABLE tm.multipointz (id serial, g geometry(multipointz), gg geography(multipointz) );$/;"	F
multipointz0	regress/typmod.sql	/^CREATE TABLE tm.multipointz0 (id serial, g geometry(multipointz, 0), gg geography(multipointz, 0) );$/;"	t
multipointz0.g	regress/typmod.sql	/^CREATE TABLE tm.multipointz0 (id serial, g geometry(multipointz, 0), gg geography(multipointz, 0) );$/;"	F
multipointz0.gg	regress/typmod.sql	/^CREATE TABLE tm.multipointz0 (id serial, g geometry(multipointz, 0), gg geography(multipointz, 0) );$/;"	F
multipointz0.id	regress/typmod.sql	/^CREATE TABLE tm.multipointz0 (id serial, g geometry(multipointz, 0), gg geography(multipointz, 0) );$/;"	F
multipointz4326	regress/typmod.sql	/^CREATE TABLE tm.multipointz4326 (id serial, g geometry(multipointz, 4326), gg geography(multipointz, 4326) );$/;"	t
multipointz4326.g	regress/typmod.sql	/^CREATE TABLE tm.multipointz4326 (id serial, g geometry(multipointz, 4326), gg geography(multipointz, 4326) );$/;"	F
multipointz4326.gg	regress/typmod.sql	/^CREATE TABLE tm.multipointz4326 (id serial, g geometry(multipointz, 4326), gg geography(multipointz, 4326) );$/;"	F
multipointz4326.id	regress/typmod.sql	/^CREATE TABLE tm.multipointz4326 (id serial, g geometry(multipointz, 4326), gg geography(multipointz, 4326) );$/;"	F
multipointzm	regress/typmod.sql	/^CREATE TABLE tm.multipointzm (id serial, g geometry(multipointzm), gg geography(multipointzm) );$/;"	t
multipointzm.g	regress/typmod.sql	/^CREATE TABLE tm.multipointzm (id serial, g geometry(multipointzm), gg geography(multipointzm) );$/;"	F
multipointzm.gg	regress/typmod.sql	/^CREATE TABLE tm.multipointzm (id serial, g geometry(multipointzm), gg geography(multipointzm) );$/;"	F
multipointzm.id	regress/typmod.sql	/^CREATE TABLE tm.multipointzm (id serial, g geometry(multipointzm), gg geography(multipointzm) );$/;"	F
multipointzm0	regress/typmod.sql	/^CREATE TABLE tm.multipointzm0 (id serial, g geometry(multipointzm, 0), gg geography(multipointzm, 0) );$/;"	t
multipointzm0.g	regress/typmod.sql	/^CREATE TABLE tm.multipointzm0 (id serial, g geometry(multipointzm, 0), gg geography(multipointzm, 0) );$/;"	F
multipointzm0.gg	regress/typmod.sql	/^CREATE TABLE tm.multipointzm0 (id serial, g geometry(multipointzm, 0), gg geography(multipointzm, 0) );$/;"	F
multipointzm0.id	regress/typmod.sql	/^CREATE TABLE tm.multipointzm0 (id serial, g geometry(multipointzm, 0), gg geography(multipointzm, 0) );$/;"	F
multipointzm4326	regress/typmod.sql	/^CREATE TABLE tm.multipointzm4326 (id serial, g geometry(multipointzm, 4326), gg geography(multipointzm, 4326) );$/;"	t
multipointzm4326.g	regress/typmod.sql	/^CREATE TABLE tm.multipointzm4326 (id serial, g geometry(multipointzm, 4326), gg geography(multipointzm, 4326) );$/;"	F
multipointzm4326.gg	regress/typmod.sql	/^CREATE TABLE tm.multipointzm4326 (id serial, g geometry(multipointzm, 4326), gg geography(multipointzm, 4326) );$/;"	F
multipointzm4326.id	regress/typmod.sql	/^CREATE TABLE tm.multipointzm4326 (id serial, g geometry(multipointzm, 4326), gg geography(multipointzm, 4326) );$/;"	F
multipolygon	liblwgeom/lwin_wkt_parse.y	/^multipolygon :$/;"	l
multipolygon	regress/typmod.sql	/^CREATE TABLE tm.multipolygon (id serial, g geometry(multipolygon), gg geography(multipolygon) );$/;"	t
multipolygon.g	regress/typmod.sql	/^CREATE TABLE tm.multipolygon (id serial, g geometry(multipolygon), gg geography(multipolygon) );$/;"	F
multipolygon.gg	regress/typmod.sql	/^CREATE TABLE tm.multipolygon (id serial, g geometry(multipolygon), gg geography(multipolygon) );$/;"	F
multipolygon.id	regress/typmod.sql	/^CREATE TABLE tm.multipolygon (id serial, g geometry(multipolygon), gg geography(multipolygon) );$/;"	F
multipolygon0	regress/typmod.sql	/^CREATE TABLE tm.multipolygon0 (id serial, g geometry(multipolygon, 0), gg geography(multipolygon, 0) );$/;"	t
multipolygon0.g	regress/typmod.sql	/^CREATE TABLE tm.multipolygon0 (id serial, g geometry(multipolygon, 0), gg geography(multipolygon, 0) );$/;"	F
multipolygon0.gg	regress/typmod.sql	/^CREATE TABLE tm.multipolygon0 (id serial, g geometry(multipolygon, 0), gg geography(multipolygon, 0) );$/;"	F
multipolygon0.id	regress/typmod.sql	/^CREATE TABLE tm.multipolygon0 (id serial, g geometry(multipolygon, 0), gg geography(multipolygon, 0) );$/;"	F
multipolygon4326	regress/typmod.sql	/^CREATE TABLE tm.multipolygon4326 (id serial, g geometry(multipolygon, 4326), gg geography(multipolygon, 4326) );$/;"	t
multipolygon4326.g	regress/typmod.sql	/^CREATE TABLE tm.multipolygon4326 (id serial, g geometry(multipolygon, 4326), gg geography(multipolygon, 4326) );$/;"	F
multipolygon4326.gg	regress/typmod.sql	/^CREATE TABLE tm.multipolygon4326 (id serial, g geometry(multipolygon, 4326), gg geography(multipolygon, 4326) );$/;"	F
multipolygon4326.id	regress/typmod.sql	/^CREATE TABLE tm.multipolygon4326 (id serial, g geometry(multipolygon, 4326), gg geography(multipolygon, 4326) );$/;"	F
multipolygonm	regress/typmod.sql	/^CREATE TABLE tm.multipolygonm (id serial, g geometry(multipolygonm), gg geography(multipolygonm) );$/;"	t
multipolygonm.g	regress/typmod.sql	/^CREATE TABLE tm.multipolygonm (id serial, g geometry(multipolygonm), gg geography(multipolygonm) );$/;"	F
multipolygonm.gg	regress/typmod.sql	/^CREATE TABLE tm.multipolygonm (id serial, g geometry(multipolygonm), gg geography(multipolygonm) );$/;"	F
multipolygonm.id	regress/typmod.sql	/^CREATE TABLE tm.multipolygonm (id serial, g geometry(multipolygonm), gg geography(multipolygonm) );$/;"	F
multipolygonm0	regress/typmod.sql	/^CREATE TABLE tm.multipolygonm0 (id serial, g geometry(multipolygonm, 0), gg geography(multipolygonm, 0) );$/;"	t
multipolygonm0.g	regress/typmod.sql	/^CREATE TABLE tm.multipolygonm0 (id serial, g geometry(multipolygonm, 0), gg geography(multipolygonm, 0) );$/;"	F
multipolygonm0.gg	regress/typmod.sql	/^CREATE TABLE tm.multipolygonm0 (id serial, g geometry(multipolygonm, 0), gg geography(multipolygonm, 0) );$/;"	F
multipolygonm0.id	regress/typmod.sql	/^CREATE TABLE tm.multipolygonm0 (id serial, g geometry(multipolygonm, 0), gg geography(multipolygonm, 0) );$/;"	F
multipolygonm4326	regress/typmod.sql	/^CREATE TABLE tm.multipolygonm4326 (id serial, g geometry(multipolygonm, 4326), gg geography(multipolygonm, 4326) );$/;"	t
multipolygonm4326.g	regress/typmod.sql	/^CREATE TABLE tm.multipolygonm4326 (id serial, g geometry(multipolygonm, 4326), gg geography(multipolygonm, 4326) );$/;"	F
multipolygonm4326.gg	regress/typmod.sql	/^CREATE TABLE tm.multipolygonm4326 (id serial, g geometry(multipolygonm, 4326), gg geography(multipolygonm, 4326) );$/;"	F
multipolygonm4326.id	regress/typmod.sql	/^CREATE TABLE tm.multipolygonm4326 (id serial, g geometry(multipolygonm, 4326), gg geography(multipolygonm, 4326) );$/;"	F
multipolygonz	regress/typmod.sql	/^CREATE TABLE tm.multipolygonz (id serial, g geometry(multipolygonz), gg geography(multipolygonz) );$/;"	t
multipolygonz.g	regress/typmod.sql	/^CREATE TABLE tm.multipolygonz (id serial, g geometry(multipolygonz), gg geography(multipolygonz) );$/;"	F
multipolygonz.gg	regress/typmod.sql	/^CREATE TABLE tm.multipolygonz (id serial, g geometry(multipolygonz), gg geography(multipolygonz) );$/;"	F
multipolygonz.id	regress/typmod.sql	/^CREATE TABLE tm.multipolygonz (id serial, g geometry(multipolygonz), gg geography(multipolygonz) );$/;"	F
multipolygonz0	regress/typmod.sql	/^CREATE TABLE tm.multipolygonz0 (id serial, g geometry(multipolygonz, 0), gg geography(multipolygonz, 0) );$/;"	t
multipolygonz0.g	regress/typmod.sql	/^CREATE TABLE tm.multipolygonz0 (id serial, g geometry(multipolygonz, 0), gg geography(multipolygonz, 0) );$/;"	F
multipolygonz0.gg	regress/typmod.sql	/^CREATE TABLE tm.multipolygonz0 (id serial, g geometry(multipolygonz, 0), gg geography(multipolygonz, 0) );$/;"	F
multipolygonz0.id	regress/typmod.sql	/^CREATE TABLE tm.multipolygonz0 (id serial, g geometry(multipolygonz, 0), gg geography(multipolygonz, 0) );$/;"	F
multipolygonz4326	regress/typmod.sql	/^CREATE TABLE tm.multipolygonz4326 (id serial, g geometry(multipolygonz, 4326), gg geography(multipolygonz, 4326) );$/;"	t
multipolygonz4326.g	regress/typmod.sql	/^CREATE TABLE tm.multipolygonz4326 (id serial, g geometry(multipolygonz, 4326), gg geography(multipolygonz, 4326) );$/;"	F
multipolygonz4326.gg	regress/typmod.sql	/^CREATE TABLE tm.multipolygonz4326 (id serial, g geometry(multipolygonz, 4326), gg geography(multipolygonz, 4326) );$/;"	F
multipolygonz4326.id	regress/typmod.sql	/^CREATE TABLE tm.multipolygonz4326 (id serial, g geometry(multipolygonz, 4326), gg geography(multipolygonz, 4326) );$/;"	F
multipolygonzm	regress/typmod.sql	/^CREATE TABLE tm.multipolygonzm (id serial, g geometry(multipolygonzm), gg geography(multipolygonzm) );$/;"	t
multipolygonzm.g	regress/typmod.sql	/^CREATE TABLE tm.multipolygonzm (id serial, g geometry(multipolygonzm), gg geography(multipolygonzm) );$/;"	F
multipolygonzm.gg	regress/typmod.sql	/^CREATE TABLE tm.multipolygonzm (id serial, g geometry(multipolygonzm), gg geography(multipolygonzm) );$/;"	F
multipolygonzm.id	regress/typmod.sql	/^CREATE TABLE tm.multipolygonzm (id serial, g geometry(multipolygonzm), gg geography(multipolygonzm) );$/;"	F
multipolygonzm0	regress/typmod.sql	/^CREATE TABLE tm.multipolygonzm0 (id serial, g geometry(multipolygonzm, 0), gg geography(multipolygonzm, 0) );$/;"	t
multipolygonzm0.g	regress/typmod.sql	/^CREATE TABLE tm.multipolygonzm0 (id serial, g geometry(multipolygonzm, 0), gg geography(multipolygonzm, 0) );$/;"	F
multipolygonzm0.gg	regress/typmod.sql	/^CREATE TABLE tm.multipolygonzm0 (id serial, g geometry(multipolygonzm, 0), gg geography(multipolygonzm, 0) );$/;"	F
multipolygonzm0.id	regress/typmod.sql	/^CREATE TABLE tm.multipolygonzm0 (id serial, g geometry(multipolygonzm, 0), gg geography(multipolygonzm, 0) );$/;"	F
multipolygonzm4326	regress/typmod.sql	/^CREATE TABLE tm.multipolygonzm4326 (id serial, g geometry(multipolygonzm, 4326), gg geography(multipolygonzm, 4326) );$/;"	t
multipolygonzm4326.g	regress/typmod.sql	/^CREATE TABLE tm.multipolygonzm4326 (id serial, g geometry(multipolygonzm, 4326), gg geography(multipolygonzm, 4326) );$/;"	F
multipolygonzm4326.gg	regress/typmod.sql	/^CREATE TABLE tm.multipolygonzm4326 (id serial, g geometry(multipolygonzm, 4326), gg geography(multipolygonzm, 4326) );$/;"	F
multipolygonzm4326.id	regress/typmod.sql	/^CREATE TABLE tm.multipolygonzm4326 (id serial, g geometry(multipolygonzm, 4326), gg geography(multipolygonzm, 4326) );$/;"	F
multisurface	liblwgeom/lwin_wkt_parse.y	/^multisurface :$/;"	l
multisurface	regress/sql-mm-multisurface.sql	/^CREATE TABLE public.multisurface (id INTEGER, description VARCHAR,$/;"	t
multisurface	regress/typmod.sql	/^CREATE TABLE tm.multisurface (id serial, g geometry(multisurface) );$/;"	t
multisurface.description	regress/sql-mm-multisurface.sql	/^CREATE TABLE public.multisurface (id INTEGER, description VARCHAR,$/;"	F
multisurface.g	regress/typmod.sql	/^CREATE TABLE tm.multisurface (id serial, g geometry(multisurface) );$/;"	F
multisurface.id	regress/sql-mm-multisurface.sql	/^CREATE TABLE public.multisurface (id INTEGER, description VARCHAR,$/;"	F
multisurface.id	regress/typmod.sql	/^CREATE TABLE tm.multisurface (id serial, g geometry(multisurface) );$/;"	F
multisurface.the_geom_2d	regress/sql-mm-multisurface.sql	/^the_geom_2d GEOMETRY(MULTISURFACE),$/;"	F
multisurface.the_geom_3dm	regress/sql-mm-multisurface.sql	/^the_geom_3dm GEOMETRY(MULTISURFACEM),$/;"	F
multisurface.the_geom_3dz	regress/sql-mm-multisurface.sql	/^the_geom_3dz GEOMETRY(MULTISURFACEZ),$/;"	F
multisurface.the_geom_4d	regress/sql-mm-multisurface.sql	/^the_geom_4d GEOMETRY(MULTISURFACEZM));$/;"	F
multisurface0	regress/typmod.sql	/^CREATE TABLE tm.multisurface0 (id serial, g geometry(multisurface, 0) );$/;"	t
multisurface0.g	regress/typmod.sql	/^CREATE TABLE tm.multisurface0 (id serial, g geometry(multisurface, 0) );$/;"	F
multisurface0.id	regress/typmod.sql	/^CREATE TABLE tm.multisurface0 (id serial, g geometry(multisurface, 0) );$/;"	F
multisurface4326	regress/typmod.sql	/^CREATE TABLE tm.multisurface4326 (id serial, g geometry(multisurface, 4326) );$/;"	t
multisurface4326.g	regress/typmod.sql	/^CREATE TABLE tm.multisurface4326 (id serial, g geometry(multisurface, 4326) );$/;"	F
multisurface4326.id	regress/typmod.sql	/^CREATE TABLE tm.multisurface4326 (id serial, g geometry(multisurface, 4326) );$/;"	F
multisurfacem	regress/typmod.sql	/^CREATE TABLE tm.multisurfacem (id serial, g geometry(multisurfacem) );$/;"	t
multisurfacem.g	regress/typmod.sql	/^CREATE TABLE tm.multisurfacem (id serial, g geometry(multisurfacem) );$/;"	F
multisurfacem.id	regress/typmod.sql	/^CREATE TABLE tm.multisurfacem (id serial, g geometry(multisurfacem) );$/;"	F
multisurfacem0	regress/typmod.sql	/^CREATE TABLE tm.multisurfacem0 (id serial, g geometry(multisurfacem, 0) );$/;"	t
multisurfacem0.g	regress/typmod.sql	/^CREATE TABLE tm.multisurfacem0 (id serial, g geometry(multisurfacem, 0) );$/;"	F
multisurfacem0.id	regress/typmod.sql	/^CREATE TABLE tm.multisurfacem0 (id serial, g geometry(multisurfacem, 0) );$/;"	F
multisurfacem4326	regress/typmod.sql	/^CREATE TABLE tm.multisurfacem4326 (id serial, g geometry(multisurfacem, 4326) );$/;"	t
multisurfacem4326.g	regress/typmod.sql	/^CREATE TABLE tm.multisurfacem4326 (id serial, g geometry(multisurfacem, 4326) );$/;"	F
multisurfacem4326.id	regress/typmod.sql	/^CREATE TABLE tm.multisurfacem4326 (id serial, g geometry(multisurfacem, 4326) );$/;"	F
multisurfacez	regress/typmod.sql	/^CREATE TABLE tm.multisurfacez (id serial, g geometry(multisurfacez) );$/;"	t
multisurfacez.g	regress/typmod.sql	/^CREATE TABLE tm.multisurfacez (id serial, g geometry(multisurfacez) );$/;"	F
multisurfacez.id	regress/typmod.sql	/^CREATE TABLE tm.multisurfacez (id serial, g geometry(multisurfacez) );$/;"	F
multisurfacez0	regress/typmod.sql	/^CREATE TABLE tm.multisurfacez0 (id serial, g geometry(multisurfacez, 0) );$/;"	t
multisurfacez0.g	regress/typmod.sql	/^CREATE TABLE tm.multisurfacez0 (id serial, g geometry(multisurfacez, 0) );$/;"	F
multisurfacez0.id	regress/typmod.sql	/^CREATE TABLE tm.multisurfacez0 (id serial, g geometry(multisurfacez, 0) );$/;"	F
multisurfacez4326	regress/typmod.sql	/^CREATE TABLE tm.multisurfacez4326 (id serial, g geometry(multisurfacez, 4326) );$/;"	t
multisurfacez4326.g	regress/typmod.sql	/^CREATE TABLE tm.multisurfacez4326 (id serial, g geometry(multisurfacez, 4326) );$/;"	F
multisurfacez4326.id	regress/typmod.sql	/^CREATE TABLE tm.multisurfacez4326 (id serial, g geometry(multisurfacez, 4326) );$/;"	F
multisurfacezm	regress/typmod.sql	/^CREATE TABLE tm.multisurfacezm (id serial, g geometry(multisurfacezm) );$/;"	t
multisurfacezm.g	regress/typmod.sql	/^CREATE TABLE tm.multisurfacezm (id serial, g geometry(multisurfacezm) );$/;"	F
multisurfacezm.id	regress/typmod.sql	/^CREATE TABLE tm.multisurfacezm (id serial, g geometry(multisurfacezm) );$/;"	F
multisurfacezm0	regress/typmod.sql	/^CREATE TABLE tm.multisurfacezm0 (id serial, g geometry(multisurfacezm, 0) );$/;"	t
multisurfacezm0.g	regress/typmod.sql	/^CREATE TABLE tm.multisurfacezm0 (id serial, g geometry(multisurfacezm, 0) );$/;"	F
multisurfacezm0.id	regress/typmod.sql	/^CREATE TABLE tm.multisurfacezm0 (id serial, g geometry(multisurfacezm, 0) );$/;"	F
multisurfacezm4326	regress/typmod.sql	/^CREATE TABLE tm.multisurfacezm4326 (id serial, g geometry(multisurfacezm, 4326) );$/;"	t
multisurfacezm4326.g	regress/typmod.sql	/^CREATE TABLE tm.multisurfacezm4326 (id serial, g geometry(multisurfacezm, 4326) );$/;"	F
multisurfacezm4326.id	regress/typmod.sql	/^CREATE TABLE tm.multisurfacezm4326 (id serial, g geometry(multisurfacezm, 4326) );$/;"	F
n	loader/shp2pgsql-core.c	/^	int n;			\/* number of points in list *\/$/;"	m	struct:struct_ring	file:
nBufSize	loader/shapefil.h	/^    int         nBufSize;$/;"	m	struct:__anon64
nCurrentRecord	loader/shapefil.h	/^    int		nCurrentRecord;$/;"	m	struct:__anon67
nDimension	loader/shapefil.h	/^    int		nDimension;$/;"	m	struct:__anon66
nFields	loader/shapefil.h	/^    int		nFields;$/;"	m	struct:__anon67
nFileSize	loader/shapefil.h	/^    unsigned int 	nFileSize;				\/* SHP file *\/$/;"	m	struct:__anon64
nHeaderLength	loader/shapefil.h	/^    int		nHeaderLength;$/;"	m	struct:__anon67
nMaxDepth	loader/shapefil.h	/^    int		nMaxDepth;$/;"	m	struct:__anon66
nMaxRecords	loader/shapefil.h	/^    int		nMaxRecords;$/;"	m	struct:__anon64
nParts	loader/shapefil.h	/^    int		nParts;$/;"	m	struct:__anon65
nRecordLength	loader/shapefil.h	/^    int		nRecordLength;$/;"	m	struct:__anon67
nRecords	loader/shapefil.h	/^    int         nRecords;$/;"	m	struct:__anon64
nRecords	loader/shapefil.h	/^    int         nRecords;$/;"	m	struct:__anon67
nSHPType	loader/shapefil.h	/^    int		nSHPType;$/;"	m	struct:__anon65
nShapeCount	loader/shapefil.h	/^    int		nShapeCount;$/;"	m	struct:shape_tree_node
nShapeId	loader/shapefil.h	/^    int		nShapeId; \/* -1 is unknown\/unassigned *\/$/;"	m	struct:__anon65
nShapeType	loader/shapefil.h	/^    int		nShapeType;				\/* SHPT_* *\/$/;"	m	struct:__anon64
nSubNodes	loader/shapefil.h	/^    int		nSubNodes;$/;"	m	struct:shape_tree_node
nTotalCount	loader/shapefil.h	/^    int         nTotalCount;$/;"	m	struct:__anon66
nVertices	loader/shapefil.h	/^    int		nVertices;$/;"	m	struct:__anon65
nWorkFieldLength	loader/shapefil.h	/^    int         nWorkFieldLength;$/;"	m	struct:__anon67
n_rows	postgis/lwgeom_accum.c	/^	int	n_rows;		$/;"	m	struct:__anon10	file:
name	java/ejb3/src/org/postgis/ejb/PersonEntity.java	/^	private String name;$/;"	f	class:PersonEntity	file:
name	postgis/lwgeom_backend_api.c	/^    const char* name;$/;"	m	struct:lwgeom_backend_definition	file:
named_places	extras/ogc_test_suite/1_schema.sql	/^CREATE TABLE named_places ($/;"	t
named_places.fid	extras/ogc_test_suite/1_schema.sql	/^       fid             INTEGER NOT NULL PRIMARY KEY,$/;"	F
named_places.name	extras/ogc_test_suite/1_schema.sql	/^       name            VARCHAR(64)$/;"	F
nband	raster/loader/raster2pgsql.h	/^	int *nband; \/* 1-based *\/$/;"	m	struct:raster_loader_config
nband	raster/loader/raster2pgsql.h	/^	int *nband; \/* 1-based *\/$/;"	m	struct:rasterinfo_t
nband	raster/rt_core/librtcore.h	/^	uint16_t nband; \/* 0-based *\/$/;"	m	struct:rt_iterator_t
nband	raster/rt_pg/rtpg_mapalgebra.c	/^	int *nband; \/* source raster's band index, 0-based *\/$/;"	m	struct:rtpg_nmapalgebra_arg_t	file:
nband	raster/rt_pg/rtpg_mapalgebra.c	/^	int nband; \/* 1-based *\/$/;"	m	struct:rtpg_colormap_arg_t	file:
nband	raster/rt_pg/rtpg_mapalgebra.c	/^	int nband; \/* band index *\/$/;"	m	struct:rtpg_clip_band_t	file:
nband	raster/rt_pg/rtpg_mapalgebra.c	/^	int nband; \/* source raster's band index, 0-based *\/$/;"	m	struct:rtpg_union_band_arg_t	file:
nband	raster/scripts/python/pixval.py	/^nband = int(sys.argv[2])$/;"	v
nband_count	raster/loader/raster2pgsql.h	/^	int nband_count;$/;"	m	struct:raster_loader_config
nband_count	raster/loader/raster2pgsql.h	/^	int nband_count;$/;"	m	struct:rasterinfo_t
nbands	raster/rt_pg/rtpg_pixel.c	/^	int *nbands; \/* 0-based *\/$/;"	m	struct:rtpg_dumpvalues_arg_t	file:
nbnodata	raster/rt_core/librtcore.h	/^	uint8_t nbnodata; \/* no band = treat as NODATA  *\/$/;"	m	struct:rt_iterator_t
ncells	raster/scripts/python/genraster.py	/^ncells = (g_size[0] \/ g_cell_size[0]) * (g_size[1] \/ g_cell_size[1])$/;"	v
ncolor	raster/rt_core/librtcore.h	/^	int ncolor;$/;"	m	struct:rt_colormap_t
nd_box_array_distribution	postgis/gserialized_estimate.c	/^nd_box_array_distribution(const ND_BOX **nd_boxes, int num_boxes, const ND_BOX *extent, int ndims, double *distribution)$/;"	f	file:
nd_box_contains	postgis/gserialized_estimate.c	/^nd_box_contains(const ND_BOX *a, const ND_BOX *b, int ndims)$/;"	f	file:
nd_box_expand	postgis/gserialized_estimate.c	/^nd_box_expand(ND_BOX *nd_box, double expansion_factor)$/;"	f	file:
nd_box_from_gbox	postgis/gserialized_estimate.c	/^nd_box_from_gbox(const GBOX *gbox, ND_BOX *nd_box)$/;"	f	file:
nd_box_init	postgis/gserialized_estimate.c	/^nd_box_init(ND_BOX *a)$/;"	f	file:
nd_box_init_bounds	postgis/gserialized_estimate.c	/^nd_box_init_bounds(ND_BOX *a)$/;"	f	file:
nd_box_intersects	postgis/gserialized_estimate.c	/^nd_box_intersects(const ND_BOX *a, const ND_BOX *b, int ndims)$/;"	f	file:
nd_box_merge	postgis/gserialized_estimate.c	/^nd_box_merge(const ND_BOX *source, ND_BOX *target)$/;"	f	file:
nd_box_overlap	postgis/gserialized_estimate.c	/^nd_box_overlap(const ND_STATS *nd_stats, const ND_BOX *nd_box, ND_IBOX *nd_ibox)$/;"	f	file:
nd_box_ratio	postgis/gserialized_estimate.c	/^nd_box_ratio(const ND_BOX *b1, const ND_BOX *b2, int ndims)$/;"	f	file:
nd_box_to_json	postgis/gserialized_estimate.c	/^nd_box_to_json(const ND_BOX *nd_box, int ndims)$/;"	f	file:
nd_increment	postgis/gserialized_estimate.c	/^nd_increment(ND_IBOX *ibox, int ndims, int *counter)$/;"	f	file:
nd_stats_to_json	postgis/gserialized_estimate.c	/^nd_stats_to_json(const ND_STATS *nd_stats)$/;"	f	file:
nd_stats_value_index	postgis/gserialized_estimate.c	/^nd_stats_value_index(const ND_STATS *stats, int *indexes)$/;"	f	file:
ndims	postgis/gserialized_estimate.c	/^	float4 ndims;$/;"	m	struct:ND_STATS_T	file:
nelement	raster/rt_pg/rtpg_mapalgebra.c	/^	int nelement;$/;"	m	struct:rtpg_colormap_arg_t	file:
nentry	raster/rt_core/librtcore.h	/^	uint16_t nentry;$/;"	m	struct:rt_colormap_t
nentry	raster/rt_pg/rtpg_mapalgebra.c	/^	int nentry;$/;"	m	struct:rtpg_colormap_arg_t	file:
newFace	liblwgeom/lwgeom_geos.c	/^newFace(const GEOSGeometry* g)$/;"	f	file:
newInstance	java/jdbc/src/org/postgis/PGbox2d.java	/^    protected PGboxbase newInstance() {$/;"	m	class:PGbox2d
newInstance	java/jdbc/src/org/postgis/PGbox3d.java	/^    protected PGboxbase newInstance() {$/;"	m	class:PGbox3d
newInstance	java/jdbc/src/org/postgis/PGboxbase.java	/^    protected abstract PGboxbase newInstance();$/;"	m	class:PGboxbase
nexpr	raster/rt_core/rt_mapalgebra.c	/^	int nexpr;$/;"	m	struct:_rti_colormap_arg_t	file:
next	doc/html/image_src/styles.h	/^	LAYERSTYLE *next;$/;"	m	struct:layerStyle
next	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        public void next() {$/;"	m	class:JTSShape.GeometryCollectionPathIterator
next	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        public void next() {$/;"	m	class:JTSShape.GeometryPathIterator
next	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        public void next() {$/;"	m	class:JTSShape.PolygonPathIterator
next	loader/shp2pgsql-core.c	/^	struct struct_ring *next;$/;"	m	struct:struct_ring	typeref:struct:struct_ring::struct_ring	file:
next	raster/rt_core/librtcore.h	/^	struct quantile_llist_element *next;$/;"	m	struct:quantile_llist_element	typeref:struct:quantile_llist_element::quantile_llist_element
next_double_down	liblwgeom/lwgeom_api.c	/^next_double_down(float d)$/;"	f
next_double_up	liblwgeom/lwgeom_api.c	/^next_double_up(float d)$/;"	f
next_float_down	liblwgeom/lwgeom_api.c	/^float next_float_down(double d)$/;"	f
next_float_up	liblwgeom/lwgeom_api.c	/^next_float_up(double d)$/;"	f
nextafterf_custom	liblwgeom/lwgeom_api.c	/^nextafterf_custom(float x, float y)$/;"	f	file:
ngv	raster/rt_pg/rtpg_pixel.c	/^	int ngv;$/;"	m	struct:rtpg_setvaluesgv_arg_t	file:
no_stats	regress/regress_selectivity.sql	/^create table no_stats ( g geometry, id integer );$/;"	t
no_stats.g	regress/regress_selectivity.sql	/^create table no_stats ( g geometry, id integer );$/;"	F
no_stats.id	regress/regress_selectivity.sql	/^create table no_stats ( g geometry, id integer );$/;"	F
no_stats_join	regress/regress_selectivity.sql	/^create table no_stats_join ( g geometry, id integer );$/;"	t
no_stats_join.g	regress/regress_selectivity.sql	/^create table no_stats_join ( g geometry, id integer );$/;"	F
no_stats_join.id	regress/regress_selectivity.sql	/^create table no_stats_join ( g geometry, id integer );$/;"	F
noband	raster/rt_core/rt_raster.c	/^	uint8_t noband;$/;"	m	struct:_rti_rasterize_arg_t	file:
nodata	raster/rt_core/librtcore.h	/^	int ***nodata;$/;"	m	struct:rt_iterator_arg_t
nodata	raster/rt_core/librtcore.h	/^	uint8_t nodata;$/;"	m	struct:rt_pixel_t
nodata	raster/rt_core/rt_mapalgebra.c	/^		int **nodata;$/;"	m	struct:_rti_iterator_arg_t::__anon48	file:
nodata	raster/rt_core/rt_raster.c	/^	double *nodata;$/;"	m	struct:_rti_rasterize_arg_t	file:
nodata	raster/rt_pg/rtpg_pixel.c	/^		int nodata;$/;"	m	struct:rtpg_setvaluesgv_geomval_t::__anon55	file:
nodata	raster/rt_pg/rtpg_pixel.c	/^	bool **nodata;$/;"	m	struct:rtpg_dumpvalues_arg_t	file:
nodataentry	raster/rt_core/rt_mapalgebra.c	/^	rt_colormap_entry nodataentry;$/;"	m	struct:_rti_colormap_arg_t	file:
nodataentry	raster/rt_pg/rtpg_mapalgebra.c	/^	int nodataentry;$/;"	m	struct:rtpg_colormap_arg_t	file:
nodatanodata	raster/rt_pg/rtpg_mapalgebra.c	/^	} nodatanodata;$/;"	m	struct:__anon50	typeref:struct:__anon50::__anon52	file:
nodataval	raster/loader/raster2pgsql.h	/^	double *nodataval;$/;"	m	struct:rasterinfo_t
nodataval	raster/loader/raster2pgsql.h	/^	double nodataval;$/;"	m	struct:raster_loader_config
nodataval	raster/rt_core/librtcore.h	/^    double nodataval; \/* int will be converted ... *\/$/;"	m	struct:rt_band_t
nodataval	raster/rt_core/rt_mapalgebra.c	/^		double *nodataval;$/;"	m	struct:_rti_iterator_arg_t::__anon45	file:
nodataval	raster/rt_core/rt_mapalgebra.c	/^	double nodataval;$/;"	m	struct:_rti_colormap_arg_t	file:
nodataval	raster/rt_pg/rtpg_mapalgebra.c	/^	double nodataval; \/* NODATA value *\/$/;"	m	struct:rtpg_nmapalgebra_arg_t	file:
nodataval	raster/rt_pg/rtpg_mapalgebra.c	/^	double nodataval; \/* user-specified NODATA *\/$/;"	m	struct:rtpg_clip_band_t	file:
node_suite	liblwgeom/cunit/cu_node.c	/^CU_SuiteInfo node_suite = {"node",  NULL,  NULL, node_tests};$/;"	v
node_tests	liblwgeom/cunit/cu_node.c	/^CU_TestInfo node_tests[] =$/;"	v
nodes	liblwgeom/lwgeodetic_tree.h	/^	struct circ_node** nodes;$/;"	m	struct:circ_node	typeref:struct:circ_node::circ_node
nohash	java/jdbc/src/org/postgis/ComposedGeom.java	/^    boolean nohash = true;$/;"	f	class:ComposedGeom
non_negative	postgis/gserialized_gist_2d.c	/^non_negative(float val)$/;"	f	file:
normalize	liblwgeom/lwgeodetic.c	/^void normalize(POINT3D *p)$/;"	f
normalize2d	liblwgeom/lwgeodetic.c	/^static void normalize2d(POINT2D *p)$/;"	f	file:
normalize_address	extras/tiger_geocoder/tiger_2011/normalize/normalize_address.sql	/^CREATE OR REPLACE FUNCTION normalize_address(in_rawinput character varying)$/;"	f
not_null_features	postgis/gserialized_estimate.c	/^	float4 not_null_features;$/;"	m	struct:ND_STATS_T	file:
note	extras/tiger_geocoder/tiger_2011/legacy_import/tiger2008/import_tiger_shps.sh	/^function note () {$/;"	f
noverview	raster/scripts/python/pixval.py	/^    noverview = None$/;"	v
noverview	raster/scripts/python/pixval.py	/^    noverview = int(sys.argv[5])$/;"	v
npos	raster/rt_core/rt_mapalgebra.c	/^	int npos;$/;"	m	struct:_rti_colormap_arg_t	file:
nptarrays	postgis/lwgeom_functions_lrs.c	/^	uint32 nptarrays;$/;"	m	struct:__anon15	file:
nullDBFValue	loader/pgsql2shp-core.c	/^nullDBFValue(char fieldType)$/;"	f	file:
nullSafeGet	java/ejb3/src/org/postgis/hibernate/GeometryType.java	/^	public Object nullSafeGet(ResultSet resultSet, $/;"	m	class:GeometryType
nullSafeSet	java/ejb3/src/org/postgis/hibernate/GeometryType.java	/^	public void nullSafeSet(PreparedStatement statement, $/;"	m	class:GeometryType
null_policy	loader/shp2pgsql-core.h	/^	int null_policy;$/;"	m	struct:shp_loader_config
nullable_levenshtein	extras/tiger_geocoder/tiger_2011/utility/nullable_levenshtein.sql	/^CREATE OR REPLACE FUNCTION nullable_levenshtein(VARCHAR, VARCHAR) RETURNS INTEGER$/;"	f
numBands	raster/rt_core/librtcore.h	/^    uint16_t numBands; \/* Number of bands: 2 bytes *\/$/;"	m	struct:rt_raster_serialized_t
numBands	raster/rt_core/librtcore.h	/^    uint16_t numBands;$/;"	m	struct:rt_raster_t
numGeoms	java/jdbc/src/org/postgis/ComposedGeom.java	/^    public int numGeoms() {$/;"	m	class:ComposedGeom
numLines	java/jdbc/src/org/postgis/MultiLineString.java	/^    public int numLines() {$/;"	m	class:MultiLineString
numPoints	java/jdbc/src/org/postgis/ComposedGeom.java	/^    public int numPoints() {$/;"	m	class:ComposedGeom
numPoints	java/jdbc/src/org/postgis/Geometry.java	/^	public abstract int numPoints();$/;"	m	class:Geometry
numPoints	java/jdbc/src/org/postgis/Point.java	/^    public int numPoints() {$/;"	m	class:Point
numPoints	java/jdbc/src/org/postgis/PointComposedGeom.java	/^    public int numPoints() {$/;"	m	class:PointComposedGeom
numPolygons	java/jdbc/src/org/postgis/MultiPolygon.java	/^    public int numPolygons() {$/;"	m	class:MultiPolygon
numRings	java/jdbc/src/org/postgis/Polygon.java	/^    public int numRings() {$/;"	m	class:Polygon
num_bands	raster/scripts/python/rtreader.py	/^    num_bands = property(fget = lambda self: self._get_num_bands())$/;"	v	class:RasterReader
num_code_pages	loader/shp2pgsql-core.c	/^static int num_code_pages = 60;$/;"	v	file:
num_entities	loader/shp2pgsql-core.h	/^	int num_entities;$/;"	m	struct:shp_loader_state
num_fields	loader/shp2pgsql-core.h	/^	int num_fields;$/;"	m	struct:shp_loader_state
num_nodes	liblwgeom/lwgeodetic_tree.h	/^	int num_nodes;$/;"	m	struct:circ_node
num_records	loader/pgsql2shp-core.h	/^	int num_records;$/;"	m	struct:shp_dumper_state
num_records	loader/shp2pgsql-core.h	/^	int num_records;$/;"	m	struct:shp_loader_state
numband	raster/rt_pg/rtpg_mapalgebra.c	/^	int numband; \/* number of bandargs *\/$/;"	m	struct:rtpg_union_arg_t	file:
numbands	raster/rt_core/rt_raster.c	/^	uint32_t numbands; $/;"	m	struct:_rti_rasterize_arg_t	file:
numbands	raster/rt_pg/rtpg_mapalgebra.c	/^	int numbands; \/* number of bandargs *\/$/;"	m	struct:rtpg_clip_arg_t	file:
numbands	raster/rt_pg/rtpg_pixel.c	/^	int numbands;$/;"	m	struct:rtpg_dumpvalues_arg_t	file:
numraster	raster/rt_pg/rtpg_mapalgebra.c	/^	int numraster;$/;"	m	struct:rtpg_nmapalgebra_arg_t	file:
numraster	raster/rt_pg/rtpg_mapalgebra.c	/^	int numraster;$/;"	m	struct:rtpg_union_band_arg_t	file:
nvend	raster/scripts/python/ovdump.py	/^    nvend = band.GetOverviewCount()$/;"	v
nvend	raster/scripts/python/ovdump.py	/^    nvend = opts.overview$/;"	v
nvstart	raster/scripts/python/ovdump.py	/^    nvstart = 0$/;"	v
nvstart	raster/scripts/python/ovdump.py	/^    nvstart = opts.overview - 1$/;"	v
o.browser.version	doc/html/jquery.js	/^(function(){var l=this,g,y=l.jQuery,p=l.$,o=l.jQuery=l.$=function(E,F){return new o.fn.init(E,F)},D=\/^[^<]*(<(.|\\s)+>)[^>]*$|^#([\\w-]+)$\/,f=\/^.[^:#\\[\\.,]*$\/;o.fn=o.prototype={init:function(E,H){E=E||document;if(E.nodeType){this[0]=E;this.length=1;this.context=E;return this}if(typeof E==="string"){var G=D.exec(E);if(G&&(G[1]||!H)){if(G[1]){E=o.clean([G[1]],H)}else{var I=document.getElementById(G[3]);if(I&&I.id!=G[3]){return o().find(E)}var F=o(I||[]);F.context=document;F.selector=E;return F}}else{return o(H).find(E)}}else{if(o.isFunction(E)){return o(document).ready(E)}}if(E.selector&&E.context){this.selector=E.selector;this.context=E.context}return this.setArray(o.isArray(E)?E:o.makeArray(E))},selector:"",jquery:"1.3.2",size:function(){return this.length},get:function(E){return E===g?Array.prototype.slice.call(this):this[E]},pushStack:function(F,H,E){var G=o(F);G.prevObject=this;G.context=this.context;if(H==="find"){G.selector=this.selector+(this.selector?" ":"")+E}else{if(H){G.selector=this.selector+"."+H+"("+E+")"}}return G},setArray:function(E){this.length=0;Array.prototype.push.apply(this,E);return this},each:function(F,E){return o.each(this,F,E)},index:function(E){return o.inArray(E&&E.jquery?E[0]:E,this)},attr:function(F,H,G){var E=F;if(typeof F==="string"){if(H===g){return this[0]&&o[G||"attr"](this[0],F)}else{E={};E[F]=H}}return this.each(function(I){for(F in E){o.attr(G?this.style:this,F,o.prop(this,E[F],G,I,F))}})},css:function(E,F){if((E=="width"||E=="height")&&parseFloat(F)<0){F=g}return this.attr(E,F,"curCSS")},text:function(F){if(typeof F!=="object"&&F!=null){return this.empty().append((this[0]&&this[0].ownerDocument||document).createTextNode(F))}var E="";o.each(F||this,function(){o.each(this.childNodes,function(){if(this.nodeType!=8){E+=this.nodeType!=1?this.nodeValue:o.fn.text([this])}})});return E},wrapAll:function(E){if(this[0]){var F=o(E,this[0].ownerDocument).clone();if(this[0].parentNode){F.insertBefore(this[0])}F.map(function(){var G=this;while(G.firstChild){G=G.firstChild}return G}).append(this)}return this},wrapInner:function(E){return this.each(function(){o(this).contents().wrapAll(E)})},wrap:function(E){return this.each(function(){o(this).wrapAll(E)})},append:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.appendChild(E)}})},prepend:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.insertBefore(E,this.firstChild)}})},before:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this)})},after:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this.nextSibling)})},end:function(){return this.prevObject||o([])},push:[].push,sort:[].sort,splice:[].splice,find:function(E){if(this.length===1){var F=this.pushStack([],"find",E);F.length=0;o.find(E,this[0],F);return F}else{return this.pushStack(o.unique(o.map(this,function(G){return o.find(E,G)})),"find",E)}},clone:function(G){var E=this.map(function(){if(!o.support.noCloneEvent&&!o.isXMLDoc(this)){var I=this.outerHTML;if(!I){var J=this.ownerDocument.createElement("div");J.appendChild(this.cloneNode(true));I=J.innerHTML}return o.clean([I.replace(\/ jQuery\\d+="(?:\\d+|null)"\/g,"").replace(\/^\\s*\/,"")])[0]}else{return this.cloneNode(true)}});if(G===true){var H=this.find("*").andSelf(),F=0;E.find("*").andSelf().each(function(){if(this.nodeName!==H[F].nodeName){return}var I=o.data(H[F],"events");for(var K in I){for(var J in I[K]){o.event.add(this,K,I[K][J],I[K][J].data)}}F++})}return E},filter:function(E){return this.pushStack(o.isFunction(E)&&o.grep(this,function(G,F){return E.call(G,F)})||o.multiFilter(E,o.grep(this,function(F){return F.nodeType===1})),"filter",E)},closest:function(E){var G=o.expr.match.POS.test(E)?o(E):null,F=0;return this.map(function(){var H=this;while(H&&H.ownerDocument){if(G?G.index(H)>-1:o(H).is(E)){o.data(H,"closest",F);return H}H=H.parentNode;F++}})},not:function(E){if(typeof E==="string"){if(f.test(E)){return this.pushStack(o.multiFilter(E,this,true),"not",E)}else{E=o.multiFilter(E,this)}}var F=E.length&&E[E.length-1]!==g&&!E.nodeType;return this.filter(function(){return F?o.inArray(this,E)<0:this!=E})},add:function(E){return this.pushStack(o.unique(o.merge(this.get(),typeof E==="string"?o(E):o.makeArray(E))))},is:function(E){return !!E&&o.multiFilter(E,this).length>0},hasClass:function(E){return !!E&&this.is("."+E)},val:function(K){if(K===g){var E=this[0];if(E){if(o.nodeName(E,"option")){return(E.attributes.value||{}).specified?E.value:E.text}if(o.nodeName(E,"select")){var I=E.selectedIndex,L=[],M=E.options,H=E.type=="select-one";if(I<0){return null}for(var F=H?I:0,J=H?I+1:M.length;F<J;F++){var G=M[F];if(G.selected){K=o(G).val();if(H){return K}L.push(K)}}return L}return(E.value||"").replace(\/\\r\/g,"")}return g}if(typeof K==="number"){K+=""}return this.each(function(){if(this.nodeType!=1){return}if(o.isArray(K)&&\/radio|checkbox\/.test(this.type)){this.checked=(o.inArray(this.value,K)>=0||o.inArray(this.name,K)>=0)}else{if(o.nodeName(this,"select")){var N=o.makeArray(K);o("option",this).each(function(){this.selected=(o.inArray(this.value,N)>=0||o.inArray(this.text,N)>=0)});if(!N.length){this.selectedIndex=-1}}else{this.value=K}}})},html:function(E){return E===g?(this[0]?this[0].innerHTML.replace(\/ jQuery\\d+="(?:\\d+|null)"\/g,""):null):this.empty().append(E)},replaceWith:function(E){return this.after(E).remove()},eq:function(E){return this.slice(E,+E+1)},slice:function(){return this.pushStack(Array.prototype.slice.apply(this,arguments),"slice",Array.prototype.slice.call(arguments).join(","))},map:function(E){return this.pushStack(o.map(this,function(G,F){return E.call(G,F,G)}))},andSelf:function(){return this.add(this.prevObject)},domManip:function(J,M,L){if(this[0]){var I=(this[0].ownerDocument||this[0]).createDocumentFragment(),F=o.clean(J,(this[0].ownerDocument||this[0]),I),H=I.firstChild;if(H){for(var G=0,E=this.length;G<E;G++){L.call(K(this[G],H),this.length>1||G>0?I.cloneNode(true):I)}}if(F){o.each(F,z)}}return this;function K(N,O){return M&&o.nodeName(N,"table")&&o.nodeName(O,"tr")?(N.getElementsByTagName("tbody")[0]||N.appendChild(N.ownerDocument.createElement("tbody"))):N}}};o.fn.init.prototype=o.fn;function z(E,F){if(F.src){o.ajax({url:F.src,async:false,dataType:"script"})}else{o.globalEval(F.text||F.textContent||F.innerHTML||"")}if(F.parentNode){F.parentNode.removeChild(F)}}function e(){return +new Date}o.extend=o.fn.extend=function(){var J=arguments[0]||{},H=1,I=arguments.length,E=false,G;if(typeof J==="boolean"){E=J;J=arguments[1]||{};H=2}if(typeof J!=="object"&&!o.isFunction(J)){J={}}if(I==H){J=this;--H}for(;H<I;H++){if((G=arguments[H])!=null){for(var F in G){var K=J[F],L=G[F];if(J===L){continue}if(E&&L&&typeof L==="object"&&!L.nodeType){J[F]=o.extend(E,K||(L.length!=null?[]:{}),L)}else{if(L!==g){J[F]=L}}}}}return J};var b=\/z-?index|font-?weight|opacity|zoom|line-?height\/i,q=document.defaultView||{},s=Object.prototype.toString;o.extend({noConflict:function(E){l.$=p;if(E){l.jQuery=y}return o},isFunction:function(E){return s.call(E)==="[object Function]"},isArray:function(E){return s.call(E)==="[object Array]"},isXMLDoc:function(E){return E.nodeType===9&&E.documentElement.nodeName!=="HTML"||!!E.ownerDocument&&o.isXMLDoc(E.ownerDocument)},globalEval:function(G){if(G&&\/\\S\/.test(G)){var F=document.getElementsByTagName("head")[0]||document.documentElement,E=document.createElement("script");E.type="text\/javascript";if(o.support.scriptEval){E.appendChild(document.createTextNode(G))}else{E.text=G}F.insertBefore(E,F.firstChild);F.removeChild(E)}},nodeName:function(F,E){return F.nodeName&&F.nodeName.toUpperCase()==E.toUpperCase()},each:function(G,K,F){var E,H=0,I=G.length;if(F){if(I===g){for(E in G){if(K.apply(G[E],F)===false){break}}}else{for(;H<I;){if(K.apply(G[H++],F)===false){break}}}}else{if(I===g){for(E in G){if(K.call(G[E],E,G[E])===false){break}}}else{for(var J=G[0];H<I&&K.call(J,H,J)!==false;J=G[++H]){}}}return G},prop:function(H,I,G,F,E){if(o.isFunction(I)){I=I.call(H,F)}return typeof I==="number"&&G=="curCSS"&&!b.test(E)?I+"px":I},className:{add:function(E,F){o.each((F||"").split(\/\\s+\/),function(G,H){if(E.nodeType==1&&!o.className.has(E.className,H)){E.className+=(E.className?" ":"")+H}})},remove:function(E,F){if(E.nodeType==1){E.className=F!==g?o.grep(E.className.split(\/\\s+\/),function(G){return !o.className.has(F,G)}).join(" "):""}},has:function(F,E){return F&&o.inArray(E,(F.className||F).toString().split(\/\\s+\/))>-1}},swap:function(H,G,I){var E={};for(var F in G){E[F]=H.style[F];H.style[F]=G[F]}I.call(H);for(var F in G){H.style[F]=E[F]}},css:function(H,F,J,E){if(F=="width"||F=="height"){var L,G={position:"absolute",visibility:"hidden",display:"block"},K=F=="width"?["Left","Right"]:["Top","Bottom"];function I(){L=F=="width"?H.offsetWidth:H.offsetHeight;if(E==="border"){return}o.each(K,function(){if(!E){L-=parseFloat(o.curCSS(H,"padding"+this,true))||0}if(E==="margin"){L+=parseFloat(o.curCSS(H,"margin"+this,true))||0}else{L-=parseFloat(o.curCSS(H,"border"+this+"Width",true))||0}})}if(H.offsetWidth!==0){I()}else{o.swap(H,G,I)}return Math.max(0,Math.round(L))}return o.curCSS(H,F,J)},curCSS:function(I,F,G){var L,E=I.style;if(F=="opacity"&&!o.support.opacity){L=o.attr(E,"opacity");return L==""?"1":L}if(F.match(\/float\/i)){F=w}if(!G&&E&&E[F]){L=E[F]}else{if(q.getComputedStyle){if(F.match(\/float\/i)){F="float"}F=F.replace(\/([A-Z])\/g,"-$1").toLowerCase();var M=q.getComputedStyle(I,null);if(M){L=M.getPropertyValue(F)}if(F=="opacity"&&L==""){L="1"}}else{if(I.currentStyle){var J=F.replace(\/\\-(\\w)\/g,function(N,O){return O.toUpperCase()});L=I.currentStyle[F]||I.currentStyle[J];if(!\/^\\d+(px)?$\/i.test(L)&&\/^\\d\/.test(L)){var H=E.left,K=I.runtimeStyle.left;I.runtimeStyle.left=I.currentStyle.left;E.left=L||0;L=E.pixelLeft+"px";E.left=H;I.runtimeStyle.left=K}}}}return L},clean:function(F,K,I){K=K||document;if(typeof K.createElement==="undefined"){K=K.ownerDocument||K[0]&&K[0].ownerDocument||document}if(!I&&F.length===1&&typeof F[0]==="string"){var H=\/^<(\\w+)\\s*\\\/?>$\/.exec(F[0]);if(H){return[K.createElement(H[1])]}}var G=[],E=[],L=K.createElement("div");o.each(F,function(P,S){if(typeof S==="number"){S+=""}if(!S){return}if(typeof S==="string"){S=S.replace(\/(<(\\w+)[^>]*?)\\\/>\/g,function(U,V,T){return T.match(\/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$\/i)?U:V+"><\/"+T+">"});var O=S.replace(\/^\\s+\/,"").substring(0,10).toLowerCase();var Q=!O.indexOf("<opt")&&[1,"<select multiple='multiple'>","<\/select>"]||!O.indexOf("<leg")&&[1,"<fieldset>","<\/fieldset>"]||O.match(\/^<(thead|tbody|tfoot|colg|cap)\/)&&[1,"<table>","<\/table>"]||!O.indexOf("<tr")&&[2,"<table><tbody>","<\/tbody><\/table>"]||(!O.indexOf("<td")||!O.indexOf("<th"))&&[3,"<table><tbody><tr>","<\/tr><\/tbody><\/table>"]||!O.indexOf("<col")&&[2,"<table><tbody><\/tbody><colgroup>","<\/colgroup><\/table>"]||!o.support.htmlSerialize&&[1,"div<div>","<\/div>"]||[0,"",""];L.innerHTML=Q[1]+S+Q[2];while(Q[0]--){L=L.lastChild}if(!o.support.tbody){var R=\/<tbody\/i.test(S),N=!O.indexOf("<table")&&!R?L.firstChild&&L.firstChild.childNodes:Q[1]=="<table>"&&!R?L.childNodes:[];for(var M=N.length-1;M>=0;--M){if(o.nodeName(N[M],"tbody")&&!N[M].childNodes.length){N[M].parentNode.removeChild(N[M])}}}if(!o.support.leadingWhitespace&&\/^\\s\/.test(S)){L.insertBefore(K.createTextNode(S.match(\/^\\s*\/)[0]),L.firstChild)}S=o.makeArray(L.childNodes)}if(S.nodeType){G.push(S)}else{G=o.merge(G,S)}});if(I){for(var J=0;G[J];J++){if(o.nodeName(G[J],"script")&&(!G[J].type||G[J].type.toLowerCase()==="text\/javascript")){E.push(G[J].parentNode?G[J].parentNode.removeChild(G[J]):G[J])}else{if(G[J].nodeType===1){G.splice.apply(G,[J+1,0].concat(o.makeArray(G[J].getElementsByTagName("script"))))}I.appendChild(G[J])}}return E}return G},attr:function(J,G,K){if(!J||J.nodeType==3||J.nodeType==8){return g}var H=!o.isXMLDoc(J),L=K!==g;G=H&&o.props[G]||G;if(J.tagName){var F=\/href|src|style\/.test(G);if(G=="selected"&&J.parentNode){J.parentNode.selectedIndex}if(G in J&&H&&!F){if(L){if(G=="type"&&o.nodeName(J,"input")&&J.parentNode){throw"type property can't be changed"}J[G]=K}if(o.nodeName(J,"form")&&J.getAttributeNode(G)){return J.getAttributeNode(G).nodeValue}if(G=="tabIndex"){var I=J.getAttributeNode("tabIndex");return I&&I.specified?I.value:J.nodeName.match(\/(button|input|object|select|textarea)\/i)?0:J.nodeName.match(\/^(a|area)$\/i)&&J.href?0:g}return J[G]}if(!o.support.style&&H&&G=="style"){return o.attr(J.style,"cssText",K)}if(L){J.setAttribute(G,""+K)}var E=!o.support.hrefNormalized&&H&&F?J.getAttribute(G,2):J.getAttribute(G);return E===null?g:E}if(!o.support.opacity&&G=="opacity"){if(L){J.zoom=1;J.filter=(J.filter||"").replace(\/alpha\\([^)]*\\)\/,"")+(parseInt(K)+""=="NaN"?"":"alpha(opacity="+K*100+")")}return J.filter&&J.filter.indexOf("opacity=")>=0?(parseFloat(J.filter.match(\/opacity=([^)]*)\/)[1])\/100)+"":""}G=G.replace(\/-([a-z])\/ig,function(M,N){return N.toUpperCase()});if(L){J[G]=K}return J[G]},trim:function(E){return(E||"").replace(\/^\\s+|\\s+$\/g,"")},makeArray:function(G){var E=[];if(G!=null){var F=G.length;if(F==null||typeof G==="string"||o.isFunction(G)||G.setInterval){E[0]=G}else{while(F){E[--F]=G[F]}}}return E},inArray:function(G,H){for(var E=0,F=H.length;E<F;E++){if(H[E]===G){return E}}return -1},merge:function(H,E){var F=0,G,I=H.length;if(!o.support.getAll){while((G=E[F++])!=null){if(G.nodeType!=8){H[I++]=G}}}else{while((G=E[F++])!=null){H[I++]=G}}return H},unique:function(K){var F=[],E={};try{for(var G=0,H=K.length;G<H;G++){var J=o.data(K[G]);if(!E[J]){E[J]=true;F.push(K[G])}}}catch(I){F=K}return F},grep:function(F,J,E){var G=[];for(var H=0,I=F.length;H<I;H++){if(!E!=!J(F[H],H)){G.push(F[H])}}return G},map:function(E,J){var F=[];for(var G=0,H=E.length;G<H;G++){var I=J(E[G],G);if(I!=null){F[F.length]=I}}return F.concat.apply([],F)}});var C=navigator.userAgent.toLowerCase();o.browser={version:(C.match(\/.+(?:rv|it|ra|ie)[\\\/: ]([\\d.]+)\/)||[0,"0"])[1],safari:\/webkit\/.test(C),opera:\/opera\/.test(C),msie:\/msie\/.test(C)&&!\/opera\/.test(C),mozilla:\/mozilla\/.test(C)&&!\/(compatible|webkit)\/.test(C)};o.each({parent:function(E){return E.parentNode},parents:function(E){return o.dir(E,"parentNode")},next:function(E){return o.nth(E,2,"nextSibling")},prev:function(E){return o.nth(E,2,"previousSibling")},nextAll:function(E){return o.dir(E,"nextSibling")},prevAll:function(E){return o.dir(E,"previousSibling")},siblings:function(E){return o.sibling(E.parentNode.firstChild,E)},children:function(E){return o.sibling(E.firstChild)},contents:function(E){return o.nodeName(E,"iframe")?E.contentDocument||E.contentWindow.document:o.makeArray(E.childNodes)}},function(E,F){o.fn[E]=function(G){var H=o.map(this,F);if(G&&typeof G=="string"){H=o.multiFilter(G,H)}return this.pushStack(o.unique(H),E,G)}});o.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(E,F){o.fn[E]=function(G){var J=[],L=o(G);for(var K=0,H=L.length;K<H;K++){$/;"	p
o.fn.init	doc/html/jquery.js	/^(function(){var l=this,g,y=l.jQuery,p=l.$,o=l.jQuery=l.$=function(E,F){return new o.fn.init(E,F)},D=\/^[^<]*(<(.|\\s)+>)[^>]*$|^#([\\w-]+)$\/,f=\/^.[^:#\\[\\.,]*$\/;o.fn=o.prototype={init:function(E,H){E=E||document;if(E.nodeType){this[0]=E;this.length=1;this.context=E;return this}if(typeof E==="string"){var G=D.exec(E);if(G&&(G[1]||!H)){if(G[1]){E=o.clean([G[1]],H)}else{var I=document.getElementById(G[3]);if(I&&I.id!=G[3]){return o().find(E)}var F=o(I||[]);F.context=document;F.selector=E;return F}}else{return o(H).find(E)}}else{if(o.isFunction(E)){return o(document).ready(E)}}if(E.selector&&E.context){this.selector=E.selector;this.context=E.context}return this.setArray(o.isArray(E)?E:o.makeArray(E))},selector:"",jquery:"1.3.2",size:function(){return this.length},get:function(E){return E===g?Array.prototype.slice.call(this):this[E]},pushStack:function(F,H,E){var G=o(F);G.prevObject=this;G.context=this.context;if(H==="find"){G.selector=this.selector+(this.selector?" ":"")+E}else{if(H){G.selector=this.selector+"."+H+"("+E+")"}}return G},setArray:function(E){this.length=0;Array.prototype.push.apply(this,E);return this},each:function(F,E){return o.each(this,F,E)},index:function(E){return o.inArray(E&&E.jquery?E[0]:E,this)},attr:function(F,H,G){var E=F;if(typeof F==="string"){if(H===g){return this[0]&&o[G||"attr"](this[0],F)}else{E={};E[F]=H}}return this.each(function(I){for(F in E){o.attr(G?this.style:this,F,o.prop(this,E[F],G,I,F))}})},css:function(E,F){if((E=="width"||E=="height")&&parseFloat(F)<0){F=g}return this.attr(E,F,"curCSS")},text:function(F){if(typeof F!=="object"&&F!=null){return this.empty().append((this[0]&&this[0].ownerDocument||document).createTextNode(F))}var E="";o.each(F||this,function(){o.each(this.childNodes,function(){if(this.nodeType!=8){E+=this.nodeType!=1?this.nodeValue:o.fn.text([this])}})});return E},wrapAll:function(E){if(this[0]){var F=o(E,this[0].ownerDocument).clone();if(this[0].parentNode){F.insertBefore(this[0])}F.map(function(){var G=this;while(G.firstChild){G=G.firstChild}return G}).append(this)}return this},wrapInner:function(E){return this.each(function(){o(this).contents().wrapAll(E)})},wrap:function(E){return this.each(function(){o(this).wrapAll(E)})},append:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.appendChild(E)}})},prepend:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.insertBefore(E,this.firstChild)}})},before:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this)})},after:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this.nextSibling)})},end:function(){return this.prevObject||o([])},push:[].push,sort:[].sort,splice:[].splice,find:function(E){if(this.length===1){var F=this.pushStack([],"find",E);F.length=0;o.find(E,this[0],F);return F}else{return this.pushStack(o.unique(o.map(this,function(G){return o.find(E,G)})),"find",E)}},clone:function(G){var E=this.map(function(){if(!o.support.noCloneEvent&&!o.isXMLDoc(this)){var I=this.outerHTML;if(!I){var J=this.ownerDocument.createElement("div");J.appendChild(this.cloneNode(true));I=J.innerHTML}return o.clean([I.replace(\/ jQuery\\d+="(?:\\d+|null)"\/g,"").replace(\/^\\s*\/,"")])[0]}else{return this.cloneNode(true)}});if(G===true){var H=this.find("*").andSelf(),F=0;E.find("*").andSelf().each(function(){if(this.nodeName!==H[F].nodeName){return}var I=o.data(H[F],"events");for(var K in I){for(var J in I[K]){o.event.add(this,K,I[K][J],I[K][J].data)}}F++})}return E},filter:function(E){return this.pushStack(o.isFunction(E)&&o.grep(this,function(G,F){return E.call(G,F)})||o.multiFilter(E,o.grep(this,function(F){return F.nodeType===1})),"filter",E)},closest:function(E){var G=o.expr.match.POS.test(E)?o(E):null,F=0;return this.map(function(){var H=this;while(H&&H.ownerDocument){if(G?G.index(H)>-1:o(H).is(E)){o.data(H,"closest",F);return H}H=H.parentNode;F++}})},not:function(E){if(typeof E==="string"){if(f.test(E)){return this.pushStack(o.multiFilter(E,this,true),"not",E)}else{E=o.multiFilter(E,this)}}var F=E.length&&E[E.length-1]!==g&&!E.nodeType;return this.filter(function(){return F?o.inArray(this,E)<0:this!=E})},add:function(E){return this.pushStack(o.unique(o.merge(this.get(),typeof E==="string"?o(E):o.makeArray(E))))},is:function(E){return !!E&&o.multiFilter(E,this).length>0},hasClass:function(E){return !!E&&this.is("."+E)},val:function(K){if(K===g){var E=this[0];if(E){if(o.nodeName(E,"option")){return(E.attributes.value||{}).specified?E.value:E.text}if(o.nodeName(E,"select")){var I=E.selectedIndex,L=[],M=E.options,H=E.type=="select-one";if(I<0){return null}for(var F=H?I:0,J=H?I+1:M.length;F<J;F++){var G=M[F];if(G.selected){K=o(G).val();if(H){return K}L.push(K)}}return L}return(E.value||"").replace(\/\\r\/g,"")}return g}if(typeof K==="number"){K+=""}return this.each(function(){if(this.nodeType!=1){return}if(o.isArray(K)&&\/radio|checkbox\/.test(this.type)){this.checked=(o.inArray(this.value,K)>=0||o.inArray(this.name,K)>=0)}else{if(o.nodeName(this,"select")){var N=o.makeArray(K);o("option",this).each(function(){this.selected=(o.inArray(this.value,N)>=0||o.inArray(this.text,N)>=0)});if(!N.length){this.selectedIndex=-1}}else{this.value=K}}})},html:function(E){return E===g?(this[0]?this[0].innerHTML.replace(\/ jQuery\\d+="(?:\\d+|null)"\/g,""):null):this.empty().append(E)},replaceWith:function(E){return this.after(E).remove()},eq:function(E){return this.slice(E,+E+1)},slice:function(){return this.pushStack(Array.prototype.slice.apply(this,arguments),"slice",Array.prototype.slice.call(arguments).join(","))},map:function(E){return this.pushStack(o.map(this,function(G,F){return E.call(G,F,G)}))},andSelf:function(){return this.add(this.prevObject)},domManip:function(J,M,L){if(this[0]){var I=(this[0].ownerDocument||this[0]).createDocumentFragment(),F=o.clean(J,(this[0].ownerDocument||this[0]),I),H=I.firstChild;if(H){for(var G=0,E=this.length;G<E;G++){L.call(K(this[G],H),this.length>1||G>0?I.cloneNode(true):I)}}if(F){o.each(F,z)}}return this;function K(N,O){return M&&o.nodeName(N,"table")&&o.nodeName(O,"tr")?(N.getElementsByTagName("tbody")[0]||N.appendChild(N.ownerDocument.createElement("tbody"))):N}}};o.fn.init.prototype=o.fn;function z(E,F){if(F.src){o.ajax({url:F.src,async:false,dataType:"script"})}else{o.globalEval(F.text||F.textContent||F.innerHTML||"")}if(F.parentNode){F.parentNode.removeChild(F)}}function e(){return +new Date}o.extend=o.fn.extend=function(){var J=arguments[0]||{},H=1,I=arguments.length,E=false,G;if(typeof J==="boolean"){E=J;J=arguments[1]||{};H=2}if(typeof J!=="object"&&!o.isFunction(J)){J={}}if(I==H){J=this;--H}for(;H<I;H++){if((G=arguments[H])!=null){for(var F in G){var K=J[F],L=G[F];if(J===L){continue}if(E&&L&&typeof L==="object"&&!L.nodeType){J[F]=o.extend(E,K||(L.length!=null?[]:{}),L)}else{if(L!==g){J[F]=L}}}}}return J};var b=\/z-?index|font-?weight|opacity|zoom|line-?height\/i,q=document.defaultView||{},s=Object.prototype.toString;o.extend({noConflict:function(E){l.$=p;if(E){l.jQuery=y}return o},isFunction:function(E){return s.call(E)==="[object Function]"},isArray:function(E){return s.call(E)==="[object Array]"},isXMLDoc:function(E){return E.nodeType===9&&E.documentElement.nodeName!=="HTML"||!!E.ownerDocument&&o.isXMLDoc(E.ownerDocument)},globalEval:function(G){if(G&&\/\\S\/.test(G)){var F=document.getElementsByTagName("head")[0]||document.documentElement,E=document.createElement("script");E.type="text\/javascript";if(o.support.scriptEval){E.appendChild(document.createTextNode(G))}else{E.text=G}F.insertBefore(E,F.firstChild);F.removeChild(E)}},nodeName:function(F,E){return F.nodeName&&F.nodeName.toUpperCase()==E.toUpperCase()},each:function(G,K,F){var E,H=0,I=G.length;if(F){if(I===g){for(E in G){if(K.apply(G[E],F)===false){break}}}else{for(;H<I;){if(K.apply(G[H++],F)===false){break}}}}else{if(I===g){for(E in G){if(K.call(G[E],E,G[E])===false){break}}}else{for(var J=G[0];H<I&&K.call(J,H,J)!==false;J=G[++H]){}}}return G},prop:function(H,I,G,F,E){if(o.isFunction(I)){I=I.call(H,F)}return typeof I==="number"&&G=="curCSS"&&!b.test(E)?I+"px":I},className:{add:function(E,F){o.each((F||"").split(\/\\s+\/),function(G,H){if(E.nodeType==1&&!o.className.has(E.className,H)){E.className+=(E.className?" ":"")+H}})},remove:function(E,F){if(E.nodeType==1){E.className=F!==g?o.grep(E.className.split(\/\\s+\/),function(G){return !o.className.has(F,G)}).join(" "):""}},has:function(F,E){return F&&o.inArray(E,(F.className||F).toString().split(\/\\s+\/))>-1}},swap:function(H,G,I){var E={};for(var F in G){E[F]=H.style[F];H.style[F]=G[F]}I.call(H);for(var F in G){H.style[F]=E[F]}},css:function(H,F,J,E){if(F=="width"||F=="height"){var L,G={position:"absolute",visibility:"hidden",display:"block"},K=F=="width"?["Left","Right"]:["Top","Bottom"];function I(){L=F=="width"?H.offsetWidth:H.offsetHeight;if(E==="border"){return}o.each(K,function(){if(!E){L-=parseFloat(o.curCSS(H,"padding"+this,true))||0}if(E==="margin"){L+=parseFloat(o.curCSS(H,"margin"+this,true))||0}else{L-=parseFloat(o.curCSS(H,"border"+this+"Width",true))||0}})}if(H.offsetWidth!==0){I()}else{o.swap(H,G,I)}return Math.max(0,Math.round(L))}return o.curCSS(H,F,J)},curCSS:function(I,F,G){var L,E=I.style;if(F=="opacity"&&!o.support.opacity){L=o.attr(E,"opacity");return L==""?"1":L}if(F.match(\/float\/i)){F=w}if(!G&&E&&E[F]){L=E[F]}else{if(q.getComputedStyle){if(F.match(\/float\/i)){F="float"}F=F.replace(\/([A-Z])\/g,"-$1").toLowerCase();var M=q.getComputedStyle(I,null);if(M){L=M.getPropertyValue(F)}if(F=="opacity"&&L==""){L="1"}}else{if(I.currentStyle){var J=F.replace(\/\\-(\\w)\/g,function(N,O){return O.toUpperCase()});L=I.currentStyle[F]||I.currentStyle[J];if(!\/^\\d+(px)?$\/i.test(L)&&\/^\\d\/.test(L)){var H=E.left,K=I.runtimeStyle.left;I.runtimeStyle.left=I.currentStyle.left;E.left=L||0;L=E.pixelLeft+"px";E.left=H;I.runtimeStyle.left=K}}}}return L},clean:function(F,K,I){K=K||document;if(typeof K.createElement==="undefined"){K=K.ownerDocument||K[0]&&K[0].ownerDocument||document}if(!I&&F.length===1&&typeof F[0]==="string"){var H=\/^<(\\w+)\\s*\\\/?>$\/.exec(F[0]);if(H){return[K.createElement(H[1])]}}var G=[],E=[],L=K.createElement("div");o.each(F,function(P,S){if(typeof S==="number"){S+=""}if(!S){return}if(typeof S==="string"){S=S.replace(\/(<(\\w+)[^>]*?)\\\/>\/g,function(U,V,T){return T.match(\/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$\/i)?U:V+"><\/"+T+">"});var O=S.replace(\/^\\s+\/,"").substring(0,10).toLowerCase();var Q=!O.indexOf("<opt")&&[1,"<select multiple='multiple'>","<\/select>"]||!O.indexOf("<leg")&&[1,"<fieldset>","<\/fieldset>"]||O.match(\/^<(thead|tbody|tfoot|colg|cap)\/)&&[1,"<table>","<\/table>"]||!O.indexOf("<tr")&&[2,"<table><tbody>","<\/tbody><\/table>"]||(!O.indexOf("<td")||!O.indexOf("<th"))&&[3,"<table><tbody><tr>","<\/tr><\/tbody><\/table>"]||!O.indexOf("<col")&&[2,"<table><tbody><\/tbody><colgroup>","<\/colgroup><\/table>"]||!o.support.htmlSerialize&&[1,"div<div>","<\/div>"]||[0,"",""];L.innerHTML=Q[1]+S+Q[2];while(Q[0]--){L=L.lastChild}if(!o.support.tbody){var R=\/<tbody\/i.test(S),N=!O.indexOf("<table")&&!R?L.firstChild&&L.firstChild.childNodes:Q[1]=="<table>"&&!R?L.childNodes:[];for(var M=N.length-1;M>=0;--M){if(o.nodeName(N[M],"tbody")&&!N[M].childNodes.length){N[M].parentNode.removeChild(N[M])}}}if(!o.support.leadingWhitespace&&\/^\\s\/.test(S)){L.insertBefore(K.createTextNode(S.match(\/^\\s*\/)[0]),L.firstChild)}S=o.makeArray(L.childNodes)}if(S.nodeType){G.push(S)}else{G=o.merge(G,S)}});if(I){for(var J=0;G[J];J++){if(o.nodeName(G[J],"script")&&(!G[J].type||G[J].type.toLowerCase()==="text\/javascript")){E.push(G[J].parentNode?G[J].parentNode.removeChild(G[J]):G[J])}else{if(G[J].nodeType===1){G.splice.apply(G,[J+1,0].concat(o.makeArray(G[J].getElementsByTagName("script"))))}I.appendChild(G[J])}}return E}return G},attr:function(J,G,K){if(!J||J.nodeType==3||J.nodeType==8){return g}var H=!o.isXMLDoc(J),L=K!==g;G=H&&o.props[G]||G;if(J.tagName){var F=\/href|src|style\/.test(G);if(G=="selected"&&J.parentNode){J.parentNode.selectedIndex}if(G in J&&H&&!F){if(L){if(G=="type"&&o.nodeName(J,"input")&&J.parentNode){throw"type property can't be changed"}J[G]=K}if(o.nodeName(J,"form")&&J.getAttributeNode(G)){return J.getAttributeNode(G).nodeValue}if(G=="tabIndex"){var I=J.getAttributeNode("tabIndex");return I&&I.specified?I.value:J.nodeName.match(\/(button|input|object|select|textarea)\/i)?0:J.nodeName.match(\/^(a|area)$\/i)&&J.href?0:g}return J[G]}if(!o.support.style&&H&&G=="style"){return o.attr(J.style,"cssText",K)}if(L){J.setAttribute(G,""+K)}var E=!o.support.hrefNormalized&&H&&F?J.getAttribute(G,2):J.getAttribute(G);return E===null?g:E}if(!o.support.opacity&&G=="opacity"){if(L){J.zoom=1;J.filter=(J.filter||"").replace(\/alpha\\([^)]*\\)\/,"")+(parseInt(K)+""=="NaN"?"":"alpha(opacity="+K*100+")")}return J.filter&&J.filter.indexOf("opacity=")>=0?(parseFloat(J.filter.match(\/opacity=([^)]*)\/)[1])\/100)+"":""}G=G.replace(\/-([a-z])\/ig,function(M,N){return N.toUpperCase()});if(L){J[G]=K}return J[G]},trim:function(E){return(E||"").replace(\/^\\s+|\\s+$\/g,"")},makeArray:function(G){var E=[];if(G!=null){var F=G.length;if(F==null||typeof G==="string"||o.isFunction(G)||G.setInterval){E[0]=G}else{while(F){E[--F]=G[F]}}}return E},inArray:function(G,H){for(var E=0,F=H.length;E<F;E++){if(H[E]===G){return E}}return -1},merge:function(H,E){var F=0,G,I=H.length;if(!o.support.getAll){while((G=E[F++])!=null){if(G.nodeType!=8){H[I++]=G}}}else{while((G=E[F++])!=null){H[I++]=G}}return H},unique:function(K){var F=[],E={};try{for(var G=0,H=K.length;G<H;G++){var J=o.data(K[G]);if(!E[J]){E[J]=true;F.push(K[G])}}}catch(I){F=K}return F},grep:function(F,J,E){var G=[];for(var H=0,I=F.length;H<I;H++){if(!E!=!J(F[H],H)){G.push(F[H])}}return G},map:function(E,J){var F=[];for(var G=0,H=E.length;G<H;G++){var I=J(E[G],G);if(I!=null){F[F.length]=I}}return F.concat.apply([],F)}});var C=navigator.userAgent.toLowerCase();o.browser={version:(C.match(\/.+(?:rv|it|ra|ie)[\\\/: ]([\\d.]+)\/)||[0,"0"])[1],safari:\/webkit\/.test(C),opera:\/opera\/.test(C),msie:\/msie\/.test(C)&&!\/opera\/.test(C),mozilla:\/mozilla\/.test(C)&&!\/(compatible|webkit)\/.test(C)};o.each({parent:function(E){return E.parentNode},parents:function(E){return o.dir(E,"parentNode")},next:function(E){return o.nth(E,2,"nextSibling")},prev:function(E){return o.nth(E,2,"previousSibling")},nextAll:function(E){return o.dir(E,"nextSibling")},prevAll:function(E){return o.dir(E,"previousSibling")},siblings:function(E){return o.sibling(E.parentNode.firstChild,E)},children:function(E){return o.sibling(E.firstChild)},contents:function(E){return o.nodeName(E,"iframe")?E.contentDocument||E.contentWindow.document:o.makeArray(E.childNodes)}},function(E,F){o.fn[E]=function(G){var H=o.map(this,F);if(G&&typeof G=="string"){H=o.multiFilter(G,H)}return this.pushStack(o.unique(H),E,G)}});o.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(E,F){o.fn[E]=function(G){var J=[],L=o(G);for(var K=0,H=L.length;K<H;K++){$/;"	c
offline	raster/rt_core/librtcore.h	/^        struct rt_extband_t offline;$/;"	m	union:rt_band_t::__anon39	typeref:struct:rt_band_t::__anon39::rt_extband_t
offline	raster/rt_core/librtcore.h	/^    int32_t offline;$/;"	m	struct:rt_band_t
offset	raster/rt_core/rt_mapalgebra.c	/^	double **offset;$/;"	m	struct:_rti_iterator_arg_t	file:
onMessage	java/ejb3/src/org/postgis/ejb/mdb/IngestMDB.java	/^	public void onMessage(Message msg) {$/;"	m	class:IngestMDB
opt	loader/shp2pgsql-core.h	/^	char opt;$/;"	m	struct:shp_loader_config
opt	raster/loader/raster2pgsql.h	/^	char opt;$/;"	m	struct:raster_loader_config
optimistic_overlap	postgis/lwgeom_functions_basic.c	/^Datum optimistic_overlap(PG_FUNCTION_ARGS)$/;"	f
optimistic_overlap	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(optimistic_overlap);$/;"	v
optimizeImage	doc/html/image_src/generator.c	/^optimizeImage(char* filename)$/;"	f	file:
option	raster/rt_core/rt_warp.c	/^		} option;$/;"	m	struct:_rti_warp_arg_t::__anon42	typeref:struct:_rti_warp_arg_t::__anon42::__anon43	file:
org.postgis	java/jdbc/src/org/postgis/ComposedGeom.java	/^package org.postgis;$/;"	p
org.postgis	java/jdbc/src/org/postgis/DriverWrapper.java	/^package org.postgis;$/;"	p
org.postgis	java/jdbc/src/org/postgis/DriverWrapperAutoprobe.java	/^package org.postgis;$/;"	p
org.postgis	java/jdbc/src/org/postgis/DriverWrapperLW.java	/^package org.postgis;$/;"	p
org.postgis	java/jdbc/src/org/postgis/Geometry.java	/^package org.postgis;$/;"	p
org.postgis	java/jdbc/src/org/postgis/GeometryCollection.java	/^package org.postgis;$/;"	p
org.postgis	java/jdbc/src/org/postgis/LineString.java	/^package org.postgis;$/;"	p
org.postgis	java/jdbc/src/org/postgis/LinearRing.java	/^package org.postgis;$/;"	p
org.postgis	java/jdbc/src/org/postgis/MultiLineString.java	/^package org.postgis;$/;"	p
org.postgis	java/jdbc/src/org/postgis/MultiPoint.java	/^package org.postgis;$/;"	p
org.postgis	java/jdbc/src/org/postgis/MultiPolygon.java	/^package org.postgis;$/;"	p
org.postgis	java/jdbc/src/org/postgis/PGbox2d.java	/^package org.postgis;$/;"	p
org.postgis	java/jdbc/src/org/postgis/PGbox3d.java	/^package org.postgis;$/;"	p
org.postgis	java/jdbc/src/org/postgis/PGboxbase.java	/^package org.postgis;$/;"	p
org.postgis	java/jdbc/src/org/postgis/PGgeometry.java	/^package org.postgis;$/;"	p
org.postgis	java/jdbc/src/org/postgis/PGgeometryLW.java	/^package org.postgis;$/;"	p
org.postgis	java/jdbc/src/org/postgis/Point.java	/^package org.postgis;$/;"	p
org.postgis	java/jdbc/src/org/postgis/PointComposedGeom.java	/^package org.postgis;$/;"	p
org.postgis	java/jdbc/src/org/postgis/Polygon.java	/^package org.postgis;$/;"	p
org.postgis	java/jdbc/src/org/postgis/Version.java	/^package org.postgis;$/;"	p
org.postgis.binary	java/jdbc/src/org/postgis/binary/BinaryParser.java	/^package org.postgis.binary;$/;"	p
org.postgis.binary	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^package org.postgis.binary;$/;"	p
org.postgis.binary	java/jdbc/src/org/postgis/binary/ByteGetter.java	/^package org.postgis.binary;$/;"	p
org.postgis.binary	java/jdbc/src/org/postgis/binary/ByteSetter.java	/^package org.postgis.binary;$/;"	p
org.postgis.binary	java/jdbc/src/org/postgis/binary/ValueGetter.java	/^package org.postgis.binary;$/;"	p
org.postgis.binary	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^package org.postgis.binary;$/;"	p
org.postgis.ejb	java/ejb3/src/org/postgis/ejb/PersonEntity.java	/^package org.postgis.ejb;$/;"	p
org.postgis.ejb	java/ejb3/src/org/postgis/ejb/UserBean.java	/^package org.postgis.ejb;$/;"	p
org.postgis.ejb	java/ejb3/src/org/postgis/ejb/UserBeanRemote.java	/^package org.postgis.ejb;$/;"	p
org.postgis.ejb.mdb	java/ejb3/src/org/postgis/ejb/mdb/IngestMDB.java	/^package org.postgis.ejb.mdb;$/;"	p
org.postgis.hibernate	java/ejb3/src/org/postgis/hibernate/ContainsExpression.java	/^package org.postgis.hibernate;$/;"	p
org.postgis.hibernate	java/ejb3/src/org/postgis/hibernate/GeometryType.java	/^package org.postgis.hibernate;$/;"	p
org.postgis.hibernate	java/ejb3/src/org/postgis/hibernate/IntersectsExpression.java	/^package org.postgis.hibernate;$/;"	p
org.postgis.hibernate	java/ejb3/src/org/postgis/hibernate/PostGISDialect.java	/^package org.postgis.hibernate;$/;"	p
org.postgis.hibernate	java/ejb3/src/org/postgis/hibernate/WithinExpression.java	/^package org.postgis.hibernate;$/;"	p
org.postgis.java2d	java/jdbc/src/org/postgis/java2d/Java2DWrapper.java	/^package org.postgis.java2d;$/;"	p
org.postgis.java2d	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^package org.postgis.java2d;$/;"	p
org.postgis.java2d	java/jdbc/src/org/postgis/java2d/ShapeBinaryParser.java	/^package org.postgis.java2d;$/;"	p
org.postgis.jts	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^package org.postgis.jts;$/;"	p
org.postgis.jts	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryParser.java	/^package org.postgis.jts;$/;"	p
org.postgis.jts	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^package org.postgis.jts;$/;"	p
org.postgis.jts	java/jdbc/jtssrc/org/postgis/jts/JtsGeometry.java	/^package org.postgis.jts;$/;"	p
org.postgis.jts	java/jdbc/jtssrc/org/postgis/jts/JtsGisWrapper.java	/^package org.postgis.jts;$/;"	p
org.postgis.jts	java/jdbc/jtssrc/org/postgis/jts/JtsWrapper.java	/^package org.postgis.jts;$/;"	p
org.postgresql	java/jdbc/stubs/org/postgresql/Connection.java	/^package org.postgresql;$/;"	p
org.postgresql	java/jdbc/stubs/org/postgresql/PGConnection.java	/^package org.postgresql;$/;"	p
orig_edge_summary	topology/test/regress/st_remedgemodface.sql	/^CREATE TEMP TABLE orig_edge_summary (edge_id integer, next_left_edge integer, next_right_edge integer, left_face integer, right_face integer);$/;"	t
orig_edge_summary	topology/test/regress/st_remedgenewface.sql	/^CREATE TEMP TABLE orig_edge_summary (edge_id integer, next_left_edge integer, next_right_edge integer, left_face integer, right_face integer);$/;"	t
orig_edge_summary.edge_id	topology/test/regress/st_remedgemodface.sql	/^CREATE TEMP TABLE orig_edge_summary (edge_id integer, next_left_edge integer, next_right_edge integer, left_face integer, right_face integer);$/;"	F
orig_edge_summary.edge_id	topology/test/regress/st_remedgenewface.sql	/^CREATE TEMP TABLE orig_edge_summary (edge_id integer, next_left_edge integer, next_right_edge integer, left_face integer, right_face integer);$/;"	F
orig_edge_summary.left_face	topology/test/regress/st_remedgemodface.sql	/^CREATE TEMP TABLE orig_edge_summary (edge_id integer, next_left_edge integer, next_right_edge integer, left_face integer, right_face integer);$/;"	F
orig_edge_summary.left_face	topology/test/regress/st_remedgenewface.sql	/^CREATE TEMP TABLE orig_edge_summary (edge_id integer, next_left_edge integer, next_right_edge integer, left_face integer, right_face integer);$/;"	F
orig_edge_summary.next_left_edge	topology/test/regress/st_remedgemodface.sql	/^CREATE TEMP TABLE orig_edge_summary (edge_id integer, next_left_edge integer, next_right_edge integer, left_face integer, right_face integer);$/;"	F
orig_edge_summary.next_left_edge	topology/test/regress/st_remedgenewface.sql	/^CREATE TEMP TABLE orig_edge_summary (edge_id integer, next_left_edge integer, next_right_edge integer, left_face integer, right_face integer);$/;"	F
orig_edge_summary.next_right_edge	topology/test/regress/st_remedgemodface.sql	/^CREATE TEMP TABLE orig_edge_summary (edge_id integer, next_left_edge integer, next_right_edge integer, left_face integer, right_face integer);$/;"	F
orig_edge_summary.next_right_edge	topology/test/regress/st_remedgenewface.sql	/^CREATE TEMP TABLE orig_edge_summary (edge_id integer, next_left_edge integer, next_right_edge integer, left_face integer, right_face integer);$/;"	F
orig_edge_summary.right_face	topology/test/regress/st_remedgemodface.sql	/^CREATE TEMP TABLE orig_edge_summary (edge_id integer, next_left_edge integer, next_right_edge integer, left_face integer, right_face integer);$/;"	F
orig_edge_summary.right_face	topology/test/regress/st_remedgenewface.sql	/^CREATE TEMP TABLE orig_edge_summary (edge_id integer, next_left_edge integer, next_right_edge integer, left_face integer, right_face integer);$/;"	F
orig_face_summary	topology/test/regress/st_remedgemodface.sql	/^CREATE TEMP TABLE orig_face_summary(face_id integer, mbr geometry);$/;"	t
orig_face_summary	topology/test/regress/st_remedgenewface.sql	/^CREATE TEMP TABLE orig_face_summary(face_id integer, mbr geometry);$/;"	t
orig_face_summary.face_id	topology/test/regress/st_remedgemodface.sql	/^CREATE TEMP TABLE orig_face_summary(face_id integer, mbr geometry);$/;"	F
orig_face_summary.face_id	topology/test/regress/st_remedgenewface.sql	/^CREATE TEMP TABLE orig_face_summary(face_id integer, mbr geometry);$/;"	F
orig_face_summary.mbr	topology/test/regress/st_remedgemodface.sql	/^CREATE TEMP TABLE orig_face_summary(face_id integer, mbr geometry);$/;"	F
orig_face_summary.mbr	topology/test/regress/st_remedgenewface.sql	/^CREATE TEMP TABLE orig_face_summary(face_id integer, mbr geometry);$/;"	F
orig_node_summary	topology/test/regress/st_remedgemodface.sql	/^CREATE TEMP TABLE orig_node_summary(node_id integer, containing_face integer);$/;"	t
orig_node_summary	topology/test/regress/st_remedgenewface.sql	/^CREATE TEMP TABLE orig_node_summary(node_id integer, containing_face integer);$/;"	t
orig_node_summary.containing_face	topology/test/regress/st_remedgemodface.sql	/^CREATE TEMP TABLE orig_node_summary(node_id integer, containing_face integer);$/;"	F
orig_node_summary.containing_face	topology/test/regress/st_remedgenewface.sql	/^CREATE TEMP TABLE orig_node_summary(node_id integer, containing_face integer);$/;"	F
orig_node_summary.node_id	topology/test/regress/st_remedgemodface.sql	/^CREATE TEMP TABLE orig_node_summary(node_id integer, containing_face integer);$/;"	F
orig_node_summary.node_id	topology/test/regress/st_remedgenewface.sql	/^CREATE TEMP TABLE orig_node_summary(node_id integer, containing_face integer);$/;"	F
out_data_type	raster/scripts/python/rtrowdump.py	/^    out_data_type = pt2gdt(rt.pixel_types[0])$/;"	v
out_driver	raster/scripts/python/rtrowdump.py	/^    out_driver = gdal.GetDriverByName(out_format)$/;"	v
out_ds	raster/scripts/python/rtrowdump.py	/^    out_ds = out_driver.Create(opts.output, rt.width, rt.height, rt.num_bands, out_data_type)$/;"	v
out_format	raster/scripts/python/rtrowdump.py	/^    out_format = "GTiff"$/;"	v
out_geojson_suite	liblwgeom/cunit/cu_out_geojson.c	/^CU_SuiteInfo out_geojson_suite = {"GeoJson Out Suite",  NULL,  NULL, out_geojson_tests};$/;"	v
out_geojson_test_bbox	liblwgeom/cunit/cu_out_geojson.c	/^static void out_geojson_test_bbox(void)$/;"	f	file:
out_geojson_test_dims	liblwgeom/cunit/cu_out_geojson.c	/^static void out_geojson_test_dims(void)$/;"	f	file:
out_geojson_test_geoms	liblwgeom/cunit/cu_out_geojson.c	/^static void out_geojson_test_geoms(void)$/;"	f	file:
out_geojson_test_precision	liblwgeom/cunit/cu_out_geojson.c	/^static void out_geojson_test_precision(void)$/;"	f	file:
out_geojson_test_srid	liblwgeom/cunit/cu_out_geojson.c	/^static void out_geojson_test_srid(void)$/;"	f	file:
out_geojson_tests	liblwgeom/cunit/cu_out_geojson.c	/^CU_TestInfo out_geojson_tests[] =$/;"	v
out_gml2_extent	liblwgeom/cunit/cu_out_gml.c	/^static void out_gml2_extent(void)$/;"	f	file:
out_gml3_extent	liblwgeom/cunit/cu_out_gml.c	/^static void out_gml3_extent(void)$/;"	f	file:
out_gml_suite	liblwgeom/cunit/cu_out_gml.c	/^CU_SuiteInfo out_gml_suite = {"out_gml",  NULL,  NULL, out_gml_tests};$/;"	v
out_gml_test_dims	liblwgeom/cunit/cu_out_gml.c	/^static void out_gml_test_dims(void)$/;"	f	file:
out_gml_test_geodetic	liblwgeom/cunit/cu_out_gml.c	/^static void out_gml_test_geodetic(void)$/;"	f	file:
out_gml_test_geoms	liblwgeom/cunit/cu_out_gml.c	/^static void out_gml_test_geoms(void)$/;"	f	file:
out_gml_test_geoms_nodims	liblwgeom/cunit/cu_out_gml.c	/^static void out_gml_test_geoms_nodims(void)$/;"	f	file:
out_gml_test_geoms_prefix	liblwgeom/cunit/cu_out_gml.c	/^static void out_gml_test_geoms_prefix(void)$/;"	f	file:
out_gml_test_precision	liblwgeom/cunit/cu_out_gml.c	/^static void out_gml_test_precision(void)$/;"	f	file:
out_gml_test_srid	liblwgeom/cunit/cu_out_gml.c	/^static void out_gml_test_srid(void)$/;"	f	file:
out_gml_tests	liblwgeom/cunit/cu_out_gml.c	/^CU_TestInfo out_gml_tests[] =$/;"	v
out_kml_suite	liblwgeom/cunit/cu_out_kml.c	/^CU_SuiteInfo out_kml_suite = {"KML Out Suite",  NULL,  NULL, out_kml_tests};$/;"	v
out_kml_test_dims	liblwgeom/cunit/cu_out_kml.c	/^static void out_kml_test_dims(void)$/;"	f	file:
out_kml_test_geoms	liblwgeom/cunit/cu_out_kml.c	/^static void out_kml_test_geoms(void)$/;"	f	file:
out_kml_test_precision	liblwgeom/cunit/cu_out_kml.c	/^static void out_kml_test_precision(void)$/;"	f	file:
out_kml_test_prefix	liblwgeom/cunit/cu_out_kml.c	/^static void out_kml_test_prefix(void)$/;"	f	file:
out_kml_tests	liblwgeom/cunit/cu_out_kml.c	/^CU_TestInfo out_kml_tests[] =$/;"	v
out_svg_suite	liblwgeom/cunit/cu_out_svg.c	/^CU_SuiteInfo out_svg_suite = {"SVG Out Suite",  NULL,  NULL, out_svg_tests};$/;"	v
out_svg_test_dims	liblwgeom/cunit/cu_out_svg.c	/^static void out_svg_test_dims(void)$/;"	f	file:
out_svg_test_geoms	liblwgeom/cunit/cu_out_svg.c	/^static void out_svg_test_geoms(void)$/;"	f	file:
out_svg_test_precision	liblwgeom/cunit/cu_out_svg.c	/^static void out_svg_test_precision(void)$/;"	f	file:
out_svg_test_relative	liblwgeom/cunit/cu_out_svg.c	/^static void out_svg_test_relative(void)$/;"	f	file:
out_svg_test_srid	liblwgeom/cunit/cu_out_svg.c	/^static void out_svg_test_srid(void)$/;"	f	file:
out_svg_tests	liblwgeom/cunit/cu_out_svg.c	/^CU_TestInfo out_svg_tests[] =$/;"	v
out_x3d3_test_geoms	liblwgeom/cunit/cu_out_x3d.c	/^static void out_x3d3_test_geoms(void)$/;"	f	file:
out_x3d3_test_precision	liblwgeom/cunit/cu_out_x3d.c	/^static void out_x3d3_test_precision(void)$/;"	f	file:
out_x3d_suite	liblwgeom/cunit/cu_out_x3d.c	/^CU_SuiteInfo out_x3d_suite = {"X3D Out Suite",  NULL,  NULL, out_x3d_tests};$/;"	v
out_x3d_tests	liblwgeom/cunit/cu_out_x3d.c	/^CU_TestInfo out_x3d_tests[] =$/;"	v
outdb	raster/loader/raster2pgsql.h	/^	int outdb;$/;"	m	struct:raster_loader_config
outerWKT	java/jdbc/src/org/postgis/Geometry.java	/^	public final void outerWKT(StringBuffer sb) {$/;"	m	class:Geometry
outerWKT	java/jdbc/src/org/postgis/Geometry.java	/^	public void outerWKT(StringBuffer sb, boolean putM) {$/;"	m	class:Geometry
outerWKT	java/jdbc/src/org/postgis/PGboxbase.java	/^    private void outerWKT(StringBuffer sb) {$/;"	m	class:PGboxbase	file:
outerindex	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        int outerindex=-1;$/;"	f	class:JTSShape.PolygonPathIterator
outshptype	loader/pgsql2shp-core.h	/^	int outshptype;$/;"	m	struct:shp_dumper_state
outtype	loader/pgsql2shp-core.h	/^	char outtype;$/;"	m	struct:shp_dumper_state
ov_band	raster/scripts/python/ovdump.py	/^        ov_band = band.GetOverview(nv)$/;"	v
ov_band	raster/scripts/python/ovdump.py	/^    ov_band = None$/;"	v
ov_band	raster/scripts/python/ovdump.py	/^    ov_band = band.GetOverview(nv)$/;"	v
overlap	postgis/gserialized_gist_2d.c	/^	float4		overlap;$/;"	m	struct:__anon18	file:
overlaps	postgis/lwgeom_geos.c	/^Datum overlaps(PG_FUNCTION_ARGS)$/;"	f
overlaps	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(overlaps);$/;"	v
overview	raster/loader/raster2pgsql.h	/^	int *overview;$/;"	m	struct:raster_loader_config
overview_count	raster/loader/raster2pgsql.h	/^	int overview_count;$/;"	m	struct:raster_loader_config
overview_table	raster/loader/raster2pgsql.h	/^	char **overview_table;$/;"	m	struct:raster_loader_config
ovf	raster/scripts/python/ovdump.py	/^    ovf = int(0.5 + band.XSize \/ float(ov_band.XSize))$/;"	v
ownsdata	raster/rt_core/librtcore.h	/^    int8_t ownsdata; \/* 0, externally owned. 1, internally owned. only applies to data.mem *\/$/;"	m	struct:rt_band_t
ownsdata	raster/rt_pg/rtpg_mapalgebra.c	/^	uint8_t *ownsdata; \/* is the raster self owned or just a pointer to another raster *\/$/;"	m	struct:rtpg_nmapalgebra_arg_t	file:
p	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        final Point p;$/;"	f	class:JTSShape.PointPathIterator
p1	java/ejb2/src/com/geodetix/geo/client/Client.java	/^    private Point p1;$/;"	f	class:Client	file:
p1	liblwgeom/lwgeodetic_tree.h	/^	POINT2D* p1;$/;"	m	struct:circ_node
p1	liblwgeom/lwtree.h	/^	POINT2D *p1;$/;"	m	struct:rect_node
p1	liblwgeom/measures.h	/^	POINT2D p1;$/;"	m	struct:__anon29
p1	liblwgeom/measures3d.h	/^	POINT3DZ p1;$/;"	m	struct:__anon31
p2	java/ejb2/src/com/geodetix/geo/client/Client.java	/^    private Point p2;$/;"	f	class:Client	file:
p2	liblwgeom/lwgeodetic_tree.h	/^	POINT2D* p2;$/;"	m	struct:circ_node
p2	liblwgeom/lwtree.h	/^	POINT2D *p2;$/;"	m	struct:rect_node
p2	liblwgeom/measures.h	/^	POINT2D p2;$/;"	m	struct:__anon29
p2	liblwgeom/measures3d.h	/^	POINT3DZ p2;$/;"	m	struct:__anon31
p2d_same	liblwgeom/lwalgorithm.c	/^p2d_same(const POINT2D *p1, const POINT2D *p2)$/;"	f
p3d_same	liblwgeom/lwalgorithm.c	/^p3d_same(const POINT3D *p1, const POINT3D *p2)$/;"	f
p4d_same	liblwgeom/lwalgorithm.c	/^p4d_same(const POINT4D *p1, const POINT4D *p2)$/;"	f
pa21	liblwgeom/cunit/cu_algorithm.c	/^POINTARRAY *pa21 = NULL;$/;"	v
pa22	liblwgeom/cunit/cu_algorithm.c	/^POINTARRAY *pa22 = NULL;$/;"	v
pabyRec	loader/shapefil.h	/^    unsigned char *pabyRec;$/;"	m	struct:__anon64
pachFieldType	loader/shapefil.h	/^    char	*pachFieldType;$/;"	m	struct:__anon67
pad_tile	raster/loader/raster2pgsql.h	/^	int pad_tile;$/;"	m	struct:raster_loader_config
padfM	loader/shapefil.h	/^    double	*padfM;$/;"	m	struct:__anon65
padfX	loader/shapefil.h	/^    double	*padfX;$/;"	m	struct:__anon65
padfY	loader/shapefil.h	/^    double	*padfY;$/;"	m	struct:__anon65
padfZ	loader/shapefil.h	/^    double	*padfZ;$/;"	m	struct:__anon65
pagc_gaz	extras/tiger_geocoder/tiger_2011/pagc_normalize/pagc_tables.sql	/^		CREATE TABLE pagc_gaz (id serial NOT NULL primary key ,seq integer ,word text, stdword text, token integer,is_custom boolean NOT NULL default true);$/;"	t
pagc_gaz.id	extras/tiger_geocoder/tiger_2011/pagc_normalize/pagc_tables.sql	/^		CREATE TABLE pagc_gaz (id serial NOT NULL primary key ,seq integer ,word text, stdword text, token integer,is_custom boolean NOT NULL default true);$/;"	F
pagc_gaz.is_custom	extras/tiger_geocoder/tiger_2011/pagc_normalize/pagc_tables.sql	/^		CREATE TABLE pagc_gaz (id serial NOT NULL primary key ,seq integer ,word text, stdword text, token integer,is_custom boolean NOT NULL default true);$/;"	F
pagc_gaz.seq	extras/tiger_geocoder/tiger_2011/pagc_normalize/pagc_tables.sql	/^		CREATE TABLE pagc_gaz (id serial NOT NULL primary key ,seq integer ,word text, stdword text, token integer,is_custom boolean NOT NULL default true);$/;"	F
pagc_gaz.stdword	extras/tiger_geocoder/tiger_2011/pagc_normalize/pagc_tables.sql	/^		CREATE TABLE pagc_gaz (id serial NOT NULL primary key ,seq integer ,word text, stdword text, token integer,is_custom boolean NOT NULL default true);$/;"	F
pagc_gaz.token	extras/tiger_geocoder/tiger_2011/pagc_normalize/pagc_tables.sql	/^		CREATE TABLE pagc_gaz (id serial NOT NULL primary key ,seq integer ,word text, stdword text, token integer,is_custom boolean NOT NULL default true);$/;"	F
pagc_gaz.word	extras/tiger_geocoder/tiger_2011/pagc_normalize/pagc_tables.sql	/^		CREATE TABLE pagc_gaz (id serial NOT NULL primary key ,seq integer ,word text, stdword text, token integer,is_custom boolean NOT NULL default true);$/;"	F
pagc_lex	extras/tiger_geocoder/tiger_2011/pagc_normalize/pagc_tables.sql	/^		CREATE TABLE pagc_lex (id serial NOT NULL primary key,seq integer,word text,stdword text,token integer,is_custom boolean NOT NULL default true);$/;"	t
pagc_lex.id	extras/tiger_geocoder/tiger_2011/pagc_normalize/pagc_tables.sql	/^		CREATE TABLE pagc_lex (id serial NOT NULL primary key,seq integer,word text,stdword text,token integer,is_custom boolean NOT NULL default true);$/;"	F
pagc_lex.is_custom	extras/tiger_geocoder/tiger_2011/pagc_normalize/pagc_tables.sql	/^		CREATE TABLE pagc_lex (id serial NOT NULL primary key,seq integer,word text,stdword text,token integer,is_custom boolean NOT NULL default true);$/;"	F
pagc_lex.seq	extras/tiger_geocoder/tiger_2011/pagc_normalize/pagc_tables.sql	/^		CREATE TABLE pagc_lex (id serial NOT NULL primary key,seq integer,word text,stdword text,token integer,is_custom boolean NOT NULL default true);$/;"	F
pagc_lex.stdword	extras/tiger_geocoder/tiger_2011/pagc_normalize/pagc_tables.sql	/^		CREATE TABLE pagc_lex (id serial NOT NULL primary key,seq integer,word text,stdword text,token integer,is_custom boolean NOT NULL default true);$/;"	F
pagc_lex.token	extras/tiger_geocoder/tiger_2011/pagc_normalize/pagc_tables.sql	/^		CREATE TABLE pagc_lex (id serial NOT NULL primary key,seq integer,word text,stdword text,token integer,is_custom boolean NOT NULL default true);$/;"	F
pagc_lex.word	extras/tiger_geocoder/tiger_2011/pagc_normalize/pagc_tables.sql	/^		CREATE TABLE pagc_lex (id serial NOT NULL primary key,seq integer,word text,stdword text,token integer,is_custom boolean NOT NULL default true);$/;"	F
pagc_normalize_address	extras/tiger_geocoder/tiger_2011/pagc_normalize/pagc_normalize_address.sql	/^CREATE OR REPLACE FUNCTION pagc_normalize_address(in_rawinput character varying)$/;"	f
pagc_rules	extras/tiger_geocoder/tiger_2011/pagc_normalize/pagc_tables.sql	/^		CREATE TABLE pagc_rules (id serial NOT NULL primary key,rule text, is_custom boolean DEFAULT true);$/;"	t
pagc_rules.id	extras/tiger_geocoder/tiger_2011/pagc_normalize/pagc_tables.sql	/^		CREATE TABLE pagc_rules (id serial NOT NULL primary key,rule text, is_custom boolean DEFAULT true);$/;"	F
pagc_rules.is_custom	extras/tiger_geocoder/tiger_2011/pagc_normalize/pagc_tables.sql	/^		CREATE TABLE pagc_rules (id serial NOT NULL primary key,rule text, is_custom boolean DEFAULT true);$/;"	F
pagc_rules.rule	extras/tiger_geocoder/tiger_2011/pagc_normalize/pagc_tables.sql	/^		CREATE TABLE pagc_rules (id serial NOT NULL primary key,rule text, is_custom boolean DEFAULT true);$/;"	F
paint	java/jdbc/src/examples/TestJava2d.java	/^        public void paint(Graphics og) {$/;"	m	class:TestJava2d.GisCanvas
panFieldDecimals	loader/shapefil.h	/^    int		*panFieldDecimals;$/;"	m	struct:__anon67
panFieldOffset	loader/shapefil.h	/^    int		*panFieldOffset;$/;"	m	struct:__anon67
panFieldSize	loader/shapefil.h	/^    int		*panFieldSize;$/;"	m	struct:__anon67
panPartStart	loader/shapefil.h	/^    int		*panPartStart;$/;"	m	struct:__anon65
panPartType	loader/shapefil.h	/^    int		*panPartType;$/;"	m	struct:__anon65
panRecOffset	loader/shapefil.h	/^    unsigned int		*panRecOffset;$/;"	m	struct:__anon64
panRecSize	loader/shapefil.h	/^    unsigned int		*panRecSize;$/;"	m	struct:__anon64
panShapeIds	loader/shapefil.h	/^    int		*panShapeIds;$/;"	m	struct:shape_tree_node
papsShapeObj	loader/shapefil.h	/^    SHPObject   **papsShapeObj;$/;"	m	struct:shape_tree_node
parent	liblwgeom/lwgeom_geos.c	/^  struct Face_t* parent; \/* if this face is an hole of another one, or NULL *\/$/;"	m	struct:Face_t	typeref:struct:Face_t::Face_t	file:
parse	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryParser.java	/^    public Geometry parse(String value) {$/;"	m	class:JtsBinaryParser
parse	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryParser.java	/^    public Geometry parse(byte[] value) {$/;"	m	class:JtsBinaryParser
parse	java/jdbc/src/org/postgis/binary/BinaryParser.java	/^    public synchronized Geometry parse(String value) {$/;"	m	class:BinaryParser
parse	java/jdbc/src/org/postgis/binary/BinaryParser.java	/^    public synchronized Geometry parse(byte[] value) {$/;"	m	class:BinaryParser
parse	java/jdbc/src/org/postgis/java2d/ShapeBinaryParser.java	/^    public synchronized int parse(String value, GeneralPath path) {$/;"	m	class:ShapeBinaryParser
parse	java/jdbc/src/org/postgis/java2d/ShapeBinaryParser.java	/^    public synchronized int parse(byte[] value, GeneralPath path) {$/;"	m	class:ShapeBinaryParser
parseCS	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryParser.java	/^    private CoordinateSequence parseCS(ValueGetter data, boolean haveZ, boolean haveM) {$/;"	m	class:JtsBinaryParser	file:
parseCS	java/jdbc/src/org/postgis/java2d/ShapeBinaryParser.java	/^    private void parseCS(ValueGetter data, boolean haveZ, boolean haveM, GeneralPath path) {$/;"	m	class:ShapeBinaryParser	file:
parseCollection	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryParser.java	/^    private GeometryCollection parseCollection(ValueGetter data, int srid) {$/;"	m	class:JtsBinaryParser	file:
parseCollection	java/jdbc/src/org/postgis/binary/BinaryParser.java	/^    private GeometryCollection parseCollection(ValueGetter data) {$/;"	m	class:BinaryParser	file:
parseCollection	java/jdbc/src/org/postgis/java2d/ShapeBinaryParser.java	/^    private void parseCollection(ValueGetter data, GeneralPath path) {$/;"	m	class:ShapeBinaryParser	file:
parseGeometry	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryParser.java	/^    protected Geometry parseGeometry(ValueGetter data) {$/;"	m	class:JtsBinaryParser
parseGeometry	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryParser.java	/^    protected Geometry parseGeometry(ValueGetter data, int srid, boolean inheritSrid) {$/;"	m	class:JtsBinaryParser
parseGeometry	java/jdbc/src/org/postgis/binary/BinaryParser.java	/^    protected Geometry parseGeometry(ValueGetter data) {$/;"	m	class:BinaryParser
parseGeometry	java/jdbc/src/org/postgis/java2d/ShapeBinaryParser.java	/^    protected int parseGeometry(ValueGetter data, GeneralPath path) {$/;"	m	class:ShapeBinaryParser
parseGeometryArray	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryParser.java	/^    private void parseGeometryArray(ValueGetter data, Geometry[] container, int srid) {$/;"	m	class:JtsBinaryParser	file:
parseGeometryArray	java/jdbc/src/org/postgis/binary/BinaryParser.java	/^    private void parseGeometryArray(ValueGetter data, Geometry[] container) {$/;"	m	class:BinaryParser	file:
parseGeometryArray	java/jdbc/src/org/postgis/java2d/ShapeBinaryParser.java	/^    private void parseGeometryArray(ValueGetter data, int count, GeneralPath path) {$/;"	m	class:ShapeBinaryParser	file:
parseLineString	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryParser.java	/^    private LineString parseLineString(ValueGetter data, boolean haveZ, boolean haveM) {$/;"	m	class:JtsBinaryParser	file:
parseLineString	java/jdbc/src/org/postgis/binary/BinaryParser.java	/^    private LineString parseLineString(ValueGetter data, boolean haveZ, boolean haveM) {$/;"	m	class:BinaryParser	file:
parseLineString	java/jdbc/src/org/postgis/java2d/ShapeBinaryParser.java	/^    private void parseLineString(ValueGetter data, boolean haveZ, boolean haveM, GeneralPath path) {$/;"	m	class:ShapeBinaryParser	file:
parseLinearRing	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryParser.java	/^    private LinearRing parseLinearRing(ValueGetter data, boolean haveZ, boolean haveM) {$/;"	m	class:JtsBinaryParser	file:
parseLinearRing	java/jdbc/src/org/postgis/binary/BinaryParser.java	/^    private LinearRing parseLinearRing(ValueGetter data, boolean haveZ, boolean haveM) {$/;"	m	class:BinaryParser	file:
parseLinearRing	java/jdbc/src/org/postgis/java2d/ShapeBinaryParser.java	/^    private void parseLinearRing(ValueGetter data, boolean haveZ, boolean haveM, GeneralPath path) {$/;"	m	class:ShapeBinaryParser	file:
parseMultiLineString	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryParser.java	/^    private MultiLineString parseMultiLineString(ValueGetter data, int srid) {$/;"	m	class:JtsBinaryParser	file:
parseMultiLineString	java/jdbc/src/org/postgis/binary/BinaryParser.java	/^    private MultiLineString parseMultiLineString(ValueGetter data) {$/;"	m	class:BinaryParser	file:
parseMultiLineString	java/jdbc/src/org/postgis/java2d/ShapeBinaryParser.java	/^    private void parseMultiLineString(ValueGetter data, GeneralPath path) {$/;"	m	class:ShapeBinaryParser	file:
parseMultiPoint	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryParser.java	/^    private MultiPoint parseMultiPoint(ValueGetter data, int srid) {$/;"	m	class:JtsBinaryParser	file:
parseMultiPoint	java/jdbc/src/org/postgis/binary/BinaryParser.java	/^    private MultiPoint parseMultiPoint(ValueGetter data) {$/;"	m	class:BinaryParser	file:
parseMultiPoint	java/jdbc/src/org/postgis/java2d/ShapeBinaryParser.java	/^    private void parseMultiPoint(ValueGetter data, GeneralPath path) {$/;"	m	class:ShapeBinaryParser	file:
parseMultiPolygon	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryParser.java	/^    private MultiPolygon parseMultiPolygon(ValueGetter data, int srid) {$/;"	m	class:JtsBinaryParser	file:
parseMultiPolygon	java/jdbc/src/org/postgis/binary/BinaryParser.java	/^    private MultiPolygon parseMultiPolygon(ValueGetter data) {$/;"	m	class:BinaryParser	file:
parseMultiPolygon	java/jdbc/src/org/postgis/java2d/ShapeBinaryParser.java	/^    private void parseMultiPolygon(ValueGetter data, GeneralPath path) {$/;"	m	class:ShapeBinaryParser	file:
parsePoint	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryParser.java	/^    private Point parsePoint(ValueGetter data, boolean haveZ, boolean haveM) {$/;"	m	class:JtsBinaryParser	file:
parsePoint	java/jdbc/src/org/postgis/binary/BinaryParser.java	/^    private Point parsePoint(ValueGetter data, boolean haveZ, boolean haveM) {$/;"	m	class:BinaryParser	file:
parsePoint	java/jdbc/src/org/postgis/java2d/ShapeBinaryParser.java	/^    private void parsePoint(ValueGetter data, boolean haveZ, boolean haveM, GeneralPath path) {$/;"	m	class:ShapeBinaryParser	file:
parsePointArray	java/jdbc/src/org/postgis/binary/BinaryParser.java	/^    private Point[] parsePointArray(ValueGetter data, boolean haveZ, boolean haveM) {$/;"	m	class:BinaryParser	file:
parsePolygon	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryParser.java	/^    private Polygon parsePolygon(ValueGetter data, boolean haveZ, boolean haveM, int srid) {$/;"	m	class:JtsBinaryParser	file:
parsePolygon	java/jdbc/src/org/postgis/binary/BinaryParser.java	/^    private Polygon parsePolygon(ValueGetter data, boolean haveZ, boolean haveM) {$/;"	m	class:BinaryParser	file:
parsePolygon	java/jdbc/src/org/postgis/java2d/ShapeBinaryParser.java	/^    private void parsePolygon(ValueGetter data, boolean haveZ, boolean haveM, GeneralPath path) {$/;"	m	class:ShapeBinaryParser	file:
parseSRID	java/jdbc/src/org/postgis/Geometry.java	/^	public static int parseSRID(int srid) {$/;"	m	class:Geometry
parse_WKT_lwgeom	postgis/lwgeom_inout.c	/^Datum parse_WKT_lwgeom(PG_FUNCTION_ARGS)$/;"	f
parse_WKT_lwgeom	postgis/lwgeom_inout.c	/^PG_FUNCTION_INFO_V1(parse_WKT_lwgeom);$/;"	v
parse_block_size	raster/scripts/python/raster2pgsql.py	/^def parse_block_size(options):$/;"	f
parse_command_line	raster/scripts/python/raster2pgsql.py	/^def parse_command_line():$/;"	f
parse_geohash	postgis/lwgeom_in_geohash.c	/^parse_geohash(char *geohash, int precision)$/;"	f	file:
parse_geojson	liblwgeom/lwin_geojson.c	/^parse_geojson(json_object *geojson, int *hasz,  int root_srid)$/;"	f	file:
parse_geojson_coord	liblwgeom/lwin_geojson.c	/^parse_geojson_coord(json_object *poObj, int *hasz, POINTARRAY *pa)$/;"	f	file:
parse_geojson_geometrycollection	liblwgeom/lwin_geojson.c	/^parse_geojson_geometrycollection(json_object *geojson, int *hasz,  int root_srid)$/;"	f	file:
parse_geojson_linestring	liblwgeom/lwin_geojson.c	/^parse_geojson_linestring(json_object *geojson, int *hasz,  int root_srid)$/;"	f	file:
parse_geojson_multilinestring	liblwgeom/lwin_geojson.c	/^parse_geojson_multilinestring(json_object *geojson, int *hasz,  int root_srid)$/;"	f	file:
parse_geojson_multipoint	liblwgeom/lwin_geojson.c	/^parse_geojson_multipoint(json_object *geojson, int *hasz,  int root_srid)$/;"	f	file:
parse_geojson_multipolygon	liblwgeom/lwin_geojson.c	/^parse_geojson_multipolygon(json_object *geojson, int *hasz,  int root_srid)$/;"	f	file:
parse_geojson_point	liblwgeom/lwin_geojson.c	/^parse_geojson_point(json_object *geojson, int *hasz,  int root_srid)$/;"	f	file:
parse_geojson_polygon	liblwgeom/lwin_geojson.c	/^parse_geojson_polygon(json_object *geojson, int *hasz,  int root_srid)$/;"	f	file:
parse_gml	postgis/lwgeom_in_gml.c	/^static LWGEOM* parse_gml(xmlNodePtr xnode, bool *hasz, int *root_srid)$/;"	f	file:
parse_gml_coll	postgis/lwgeom_in_gml.c	/^static LWGEOM* parse_gml_coll(xmlNodePtr xnode, bool *hasz, int *root_srid)$/;"	f	file:
parse_gml_coord	postgis/lwgeom_in_gml.c	/^static POINTARRAY* parse_gml_coord(xmlNodePtr xnode, bool *hasz)$/;"	f	file:
parse_gml_coordinates	postgis/lwgeom_in_gml.c	/^static POINTARRAY* parse_gml_coordinates(xmlNodePtr xnode, bool *hasz)$/;"	f	file:
parse_gml_curve	postgis/lwgeom_in_gml.c	/^static LWGEOM* parse_gml_curve(xmlNodePtr xnode, bool *hasz, int *root_srid)$/;"	f	file:
parse_gml_data	postgis/lwgeom_in_gml.c	/^static POINTARRAY* parse_gml_data(xmlNodePtr xnode, bool *hasz, int *root_srid)$/;"	f	file:
parse_gml_double	postgis/lwgeom_in_gml.c	/^static double parse_gml_double(char *d, bool space_before, bool space_after)$/;"	f	file:
parse_gml_line	postgis/lwgeom_in_gml.c	/^static LWGEOM* parse_gml_line(xmlNodePtr xnode, bool *hasz, int *root_srid)$/;"	f	file:
parse_gml_linearring	postgis/lwgeom_in_gml.c	/^static LWGEOM* parse_gml_linearring(xmlNodePtr xnode, bool *hasz, int *root_srid)$/;"	f	file:
parse_gml_mcurve	postgis/lwgeom_in_gml.c	/^static LWGEOM* parse_gml_mcurve(xmlNodePtr xnode, bool *hasz, int *root_srid)$/;"	f	file:
parse_gml_mline	postgis/lwgeom_in_gml.c	/^static LWGEOM* parse_gml_mline(xmlNodePtr xnode, bool *hasz, int *root_srid)$/;"	f	file:
parse_gml_mpoint	postgis/lwgeom_in_gml.c	/^static LWGEOM* parse_gml_mpoint(xmlNodePtr xnode, bool *hasz, int *root_srid)$/;"	f	file:
parse_gml_mpoly	postgis/lwgeom_in_gml.c	/^static LWGEOM* parse_gml_mpoly(xmlNodePtr xnode, bool *hasz, int *root_srid)$/;"	f	file:
parse_gml_msurface	postgis/lwgeom_in_gml.c	/^static LWGEOM* parse_gml_msurface(xmlNodePtr xnode, bool *hasz, int *root_srid)$/;"	f	file:
parse_gml_patch	postgis/lwgeom_in_gml.c	/^static LWGEOM* parse_gml_patch(xmlNodePtr xnode, bool *hasz, int *root_srid)$/;"	f	file:
parse_gml_point	postgis/lwgeom_in_gml.c	/^static LWGEOM* parse_gml_point(xmlNodePtr xnode, bool *hasz, int *root_srid)$/;"	f	file:
parse_gml_polygon	postgis/lwgeom_in_gml.c	/^static LWGEOM* parse_gml_polygon(xmlNodePtr xnode, bool *hasz, int *root_srid)$/;"	f	file:
parse_gml_pos	postgis/lwgeom_in_gml.c	/^static POINTARRAY* parse_gml_pos(xmlNodePtr xnode, bool *hasz)$/;"	f	file:
parse_gml_poslist	postgis/lwgeom_in_gml.c	/^static POINTARRAY* parse_gml_poslist(xmlNodePtr xnode, bool *hasz)$/;"	f	file:
parse_gml_psurface	postgis/lwgeom_in_gml.c	/^static LWGEOM* parse_gml_psurface(xmlNodePtr xnode, bool *hasz, int *root_srid)$/;"	f	file:
parse_gml_srs	postgis/lwgeom_in_gml.c	/^static void parse_gml_srs(xmlNodePtr xnode, gmlSrs *srs)$/;"	f	file:
parse_gml_surface	postgis/lwgeom_in_gml.c	/^static LWGEOM* parse_gml_surface(xmlNodePtr xnode, bool *hasz, int *root_srid)$/;"	f	file:
parse_gml_tin	postgis/lwgeom_in_gml.c	/^static LWGEOM* parse_gml_tin(xmlNodePtr xnode, bool *hasz, int *root_srid)$/;"	f	file:
parse_gml_triangle	postgis/lwgeom_in_gml.c	/^static LWGEOM* parse_gml_triangle(xmlNodePtr xnode, bool *hasz, int *root_srid)$/;"	f	file:
parse_hex	liblwgeom/lwgeom_api.c	/^parse_hex(char *str)$/;"	f
parse_kml	postgis/lwgeom_in_kml.c	/^static LWGEOM* parse_kml(xmlNodePtr xnode, bool *hasz)$/;"	f	file:
parse_kml_coordinates	postgis/lwgeom_in_kml.c	/^static POINTARRAY* parse_kml_coordinates(xmlNodePtr xnode, bool *hasz)$/;"	f	file:
parse_kml_line	postgis/lwgeom_in_kml.c	/^static LWGEOM* parse_kml_line(xmlNodePtr xnode, bool *hasz)$/;"	f	file:
parse_kml_multi	postgis/lwgeom_in_kml.c	/^static LWGEOM* parse_kml_multi(xmlNodePtr xnode, bool *hasz)$/;"	f	file:
parse_kml_point	postgis/lwgeom_in_kml.c	/^static LWGEOM* parse_kml_point(xmlNodePtr xnode, bool *hasz)$/;"	f	file:
parse_kml_polygon	postgis/lwgeom_in_kml.c	/^static LWGEOM* parse_kml_polygon(xmlNodePtr xnode, bool *hasz)$/;"	f	file:
parse_result	liblwgeom/cunit/cu_algorithm.c	/^LWGEOM_PARSER_RESULT parse_result;$/;"	v
parser	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^    final static ShapeBinaryParser parser = new ShapeBinaryParser();$/;"	f	class:PGShapeGeometry
parser_error_messages	liblwgeom/lwin_wkt.c	/^const char *parser_error_messages[] =$/;"	v
partition	raster/rt_core/rt_statistics.c	/^static double *partition(double *left, double *right, double pivot) {$/;"	f	file:
pass	regress/run_test	/^pass ()$/;"	f
pass	regress/run_test.pl	/^sub pass$/;"	s
password	loader/shpcommon.h	/^	char *password;$/;"	m	struct:shp_connection_state
patch	liblwgeom/lwin_wkt_parse.y	/^patch : $/;"	l
patch_list	liblwgeom/lwin_wkt_parse.y	/^patch_list :$/;"	l
patchring	liblwgeom/lwin_wkt_parse.y	/^patchring :$/;"	l
patchring_list	liblwgeom/lwin_wkt_parse.y	/^patchring_list :$/;"	l
path	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^    private final GeneralPath path;$/;"	f	class:PGShapeGeometry	file:
path	postgis/lwgeom_dumppoints.c	/^	Datum	path[34]; \/* two more than max depth, for ring and point *\/$/;"	m	struct:dumpstate	file:
path	raster/rt_core/librtcore.h	/^    char* path; \/* internally owned *\/$/;"	m	struct:rt_extband_t
path_to_geometry	postgis/geometry_inout.c	/^Datum path_to_geometry(PG_FUNCTION_ARGS)$/;"	f
path_to_geometry	postgis/geometry_inout.c	/^PG_FUNCTION_INFO_V1(path_to_geometry);$/;"	v
pathlen	postgis/lwgeom_dumppoints.c	/^	int	pathlen; \/* polygon rings and such need extra path info *\/$/;"	m	struct:dumpstate	file:
percent	raster/rt_core/librtcore.h	/^	double percent;$/;"	m	struct:rt_histogram_t
percent	raster/rt_core/librtcore.h	/^	double percent;$/;"	m	struct:rt_valuecount_t
pg	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        final Polygon pg;$/;"	f	class:JTSShape.PolygonPathIterator
pg	loader/shp2pgsql-core.c	/^    char *pg;$/;"	m	struct:__anon62	file:
pg_alloc	libpgcommon/lwgeom_pg.c	/^pg_alloc(size_t size)$/;"	f	file:
pg_connection	loader/shp2pgsql-gui.c	/^static PGconn *pg_connection = NULL;$/;"	v	file:
pg_error	libpgcommon/lwgeom_pg.c	/^pg_error(const char *fmt, va_list ap)$/;"	f	file:
pg_free	libpgcommon/lwgeom_pg.c	/^pg_free(void *ptr)$/;"	f	file:
pg_get_nd_stats	postgis/gserialized_estimate.c	/^pg_get_nd_stats(const Oid table_oid, AttrNumber att_num, int mode)$/;"	f	file:
pg_get_nd_stats_by_name	postgis/gserialized_estimate.c	/^pg_get_nd_stats_by_name(const Oid table_oid, const text *att_text, int mode)$/;"	f	file:
pg_install_lwgeom_handlers	libpgcommon/lwgeom_pg.c	/^pg_install_lwgeom_handlers(void)$/;"	f
pg_notice	libpgcommon/lwgeom_pg.c	/^pg_notice(const char *fmt, va_list ap)$/;"	f	file:
pg_parser_errhint	libpgcommon/lwgeom_pg.c	/^pg_parser_errhint(LWGEOM_PARSER_RESULT *lwg_parser_result)$/;"	f
pg_realloc	libpgcommon/lwgeom_pg.c	/^pg_realloc(void *mem, size_t size)$/;"	f	file:
pg_unparser_errhint	libpgcommon/lwgeom_pg.c	/^pg_unparser_errhint(LWGEOM_UNPARSER_RESULT *lwg_unparser_result)$/;"	f
pgcextent	raster/rt_pg/rtpg_mapalgebra.c	/^	rt_pgraster *pgcextent; \/* custom extent of type rt_pgraster *\/$/;"	m	struct:rtpg_nmapalgebra_arg_t	file:
pgdims	loader/shp2pgsql-core.h	/^	int pgdims;$/;"	m	struct:shp_loader_state
pgfieldlens	loader/pgsql2shp-core.h	/^	int *pgfieldlens;$/;"	m	struct:shp_dumper_state
pgfieldnames	loader/pgsql2shp-core.h	/^	char **pgfieldnames;$/;"	m	struct:shp_dumper_state
pgfieldtypes	loader/shp2pgsql-core.h	/^	char **pgfieldtypes;$/;"	m	struct:shp_loader_state
pgfieldtypmods	loader/pgsql2shp-core.h	/^	int *pgfieldtypmods;$/;"	m	struct:shp_dumper_state
pgis_abs	postgis/lwgeom_accum.c	/^pgis_abs;$/;"	t	typeref:struct:__anon8	file:
pgis_abs_in	postgis/lwgeom_accum.c	/^PG_FUNCTION_INFO_V1(pgis_abs_in);$/;"	v
pgis_abs_in	postgis/lwgeom_accum.c	/^pgis_abs_in(PG_FUNCTION_ARGS)$/;"	f
pgis_abs_out	postgis/lwgeom_accum.c	/^PG_FUNCTION_INFO_V1(pgis_abs_out);$/;"	v
pgis_abs_out	postgis/lwgeom_accum.c	/^pgis_abs_out(PG_FUNCTION_ARGS)$/;"	f
pgis_accum_finalfn	postgis/lwgeom_accum.c	/^pgis_accum_finalfn(pgis_abs *p, MemoryContext mctx, FunctionCallInfo fcinfo)$/;"	f
pgis_geometry_accum_finalfn	postgis/lwgeom_accum.c	/^PG_FUNCTION_INFO_V1(pgis_geometry_accum_finalfn);$/;"	v
pgis_geometry_accum_finalfn	postgis/lwgeom_accum.c	/^pgis_geometry_accum_finalfn(PG_FUNCTION_ARGS)$/;"	f
pgis_geometry_accum_transfn	postgis/lwgeom_accum.c	/^PG_FUNCTION_INFO_V1(pgis_geometry_accum_transfn);$/;"	v
pgis_geometry_accum_transfn	postgis/lwgeom_accum.c	/^pgis_geometry_accum_transfn(PG_FUNCTION_ARGS)$/;"	f
pgis_geometry_collect_finalfn	postgis/lwgeom_accum.c	/^PG_FUNCTION_INFO_V1(pgis_geometry_collect_finalfn);$/;"	v
pgis_geometry_collect_finalfn	postgis/lwgeom_accum.c	/^pgis_geometry_collect_finalfn(PG_FUNCTION_ARGS)$/;"	f
pgis_geometry_makeline_finalfn	postgis/lwgeom_accum.c	/^PG_FUNCTION_INFO_V1(pgis_geometry_makeline_finalfn);$/;"	v
pgis_geometry_makeline_finalfn	postgis/lwgeom_accum.c	/^pgis_geometry_makeline_finalfn(PG_FUNCTION_ARGS)$/;"	f
pgis_geometry_polygonize_finalfn	postgis/lwgeom_accum.c	/^PG_FUNCTION_INFO_V1(pgis_geometry_polygonize_finalfn);$/;"	v
pgis_geometry_polygonize_finalfn	postgis/lwgeom_accum.c	/^pgis_geometry_polygonize_finalfn(PG_FUNCTION_ARGS)$/;"	f
pgis_geometry_union_finalfn	postgis/lwgeom_accum.c	/^PG_FUNCTION_INFO_V1(pgis_geometry_union_finalfn);$/;"	v
pgis_geometry_union_finalfn	postgis/lwgeom_accum.c	/^pgis_geometry_union_finalfn(PG_FUNCTION_ARGS)$/;"	f
pgis_getopt	loader/getopt.c	/^pgis_getopt(int argc, char **argv, char *opts)$/;"	f
pgis_major_version	loader/pgsql2shp-core.h	/^	int pgis_major_version;$/;"	m	struct:shp_dumper_state
pgis_optarg	loader/getopt.c	/^char    *pgis_optarg;$/;"	v
pgis_opterr	loader/getopt.c	/^int     pgis_opterr = 1;$/;"	v
pgis_optind	loader/getopt.c	/^int     pgis_optind = 1;$/;"	v
pgis_optopt	loader/getopt.c	/^int     pgis_optopt;$/;"	v
pgis_twkb_accum_finalfn	postgis/lwgeom_accum.c	/^PG_FUNCTION_INFO_V1(pgis_twkb_accum_finalfn);$/;"	v
pgis_twkb_accum_finalfn	postgis/lwgeom_accum.c	/^pgis_twkb_accum_finalfn(PG_FUNCTION_ARGS)$/;"	f
pgis_twkb_accum_transfn	postgis/lwgeom_accum.c	/^PG_FUNCTION_INFO_V1(pgis_twkb_accum_transfn);$/;"	v
pgis_twkb_accum_transfn	postgis/lwgeom_accum.c	/^pgis_twkb_accum_transfn(PG_FUNCTION_ARGS)$/;"	f
pgis_union_geometry_array	postgis/lwgeom_geos.c	/^Datum pgis_union_geometry_array(PG_FUNCTION_ARGS)$/;"	f
pgis_union_geometry_array	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(pgis_union_geometry_array);$/;"	v
pgraster	raster/rt_pg/rtpg_mapalgebra.c	/^	rt_pgraster **pgraster;$/;"	m	struct:rtpg_nmapalgebra_arg_t	file:
pgtype	loader/shp2pgsql-core.h	/^	char *pgtype;$/;"	m	struct:shp_loader_state
pgui_action_about_open	loader/shp2pgsql-gui.c	/^pgui_action_about_open()$/;"	f	file:
pgui_action_cancel	loader/shp2pgsql-gui.c	/^pgui_action_cancel(GtkWidget *widget, gpointer data)$/;"	f	file:
pgui_action_chooser_toggle_show_geocolumn	loader/shp2pgsql-gui.c	/^pgui_action_chooser_toggle_show_geocolumn(GtkToggleButton *togglebutton, gpointer user_data)$/;"	f	file:
pgui_action_connection_details	loader/shp2pgsql-gui.c	/^pgui_action_connection_details(GtkWidget *widget, gpointer data)$/;"	f	file:
pgui_action_connection_okay	loader/shp2pgsql-gui.c	/^pgui_action_connection_okay(GtkWidget *widget, gpointer data)$/;"	f	file:
pgui_action_dumper_options_close	loader/shp2pgsql-gui.c	/^pgui_action_dumper_options_close(GtkWidget *widget, gint response, gpointer data)$/;"	f	file:
pgui_action_dumper_options_open	loader/shp2pgsql-gui.c	/^pgui_action_dumper_options_open(GtkWidget *widget, gpointer data)$/;"	f	file:
pgui_action_export	loader/shp2pgsql-gui.c	/^pgui_action_export(GtkWidget *widget, gpointer data)$/;"	f	file:
pgui_action_handle_dumper_edit	loader/shp2pgsql-gui.c	/^pgui_action_handle_dumper_edit(GtkCellRendererText *renderer,$/;"	f	file:
pgui_action_handle_file_drop	loader/shp2pgsql-gui.c	/^pgui_action_handle_file_drop(GtkWidget *widget,$/;"	f	file:
pgui_action_handle_file_remove	loader/shp2pgsql-gui.c	/^pgui_action_handle_file_remove(GtkCellRendererToggle *renderer,$/;"	f	file:
pgui_action_handle_loader_edit	loader/shp2pgsql-gui.c	/^pgui_action_handle_loader_edit(GtkCellRendererText *renderer,$/;"	f	file:
pgui_action_handle_table_geocol_combo	loader/shp2pgsql-gui.c	/^pgui_action_handle_table_geocol_combo(GtkCellRendererCombo *combo,$/;"	f	file:
pgui_action_handle_table_remove	loader/shp2pgsql-gui.c	/^pgui_action_handle_table_remove(GtkCellRendererToggle *renderer,$/;"	f	file:
pgui_action_handle_tree_combo	loader/shp2pgsql-gui.c	/^pgui_action_handle_tree_combo(GtkCellRendererCombo *combo,$/;"	f	file:
pgui_action_import	loader/shp2pgsql-gui.c	/^pgui_action_import(GtkWidget *widget, gpointer data)$/;"	f	file:
pgui_action_loader_options_close	loader/shp2pgsql-gui.c	/^pgui_action_loader_options_close(GtkWidget *widget, gint response, gpointer data)$/;"	f	file:
pgui_action_loader_options_open	loader/shp2pgsql-gui.c	/^pgui_action_loader_options_open(GtkWidget *widget, gpointer data)$/;"	f	file:
pgui_action_open_file_dialog	loader/shp2pgsql-gui.c	/^pgui_action_open_file_dialog(GtkWidget *widget, gpointer data)$/;"	f	file:
pgui_action_open_table_dialog	loader/shp2pgsql-gui.c	/^pgui_action_open_table_dialog(GtkWidget *widget, gpointer data)$/;"	f	file:
pgui_action_progress_cancel	loader/shp2pgsql-gui.c	/^pgui_action_progress_cancel(GtkDialog *dialog, gint response_id, gpointer user_data) $/;"	f	file:
pgui_action_progress_delete	loader/shp2pgsql-gui.c	/^pgui_action_progress_delete(GtkWidget *widget, GdkEvent *event, gpointer data)$/;"	f	file:
pgui_copy_end	loader/shp2pgsql-gui.c	/^pgui_copy_end(const int rollback)$/;"	f	file:
pgui_copy_start	loader/shp2pgsql-gui.c	/^pgui_copy_start(const char *sql)$/;"	f	file:
pgui_copy_write	loader/shp2pgsql-gui.c	/^pgui_copy_write(const char *line)$/;"	f	file:
pgui_create_about_dialog	loader/shp2pgsql-gui.c	/^pgui_create_about_dialog(void)$/;"	f	file:
pgui_create_connection_window	loader/shp2pgsql-gui.c	/^pgui_create_connection_window()$/;"	f	file:
pgui_create_dumper_options_dialog	loader/shp2pgsql-gui.c	/^pgui_create_dumper_options_dialog()$/;"	f	file:
pgui_create_export_table_table	loader/shp2pgsql-gui.c	/^pgui_create_export_table_table(GtkWidget *export_list_frame)$/;"	f	file:
pgui_create_filechooser_dialog	loader/shp2pgsql-gui.c	/^pgui_create_filechooser_dialog(void)$/;"	f	file:
pgui_create_folderchooser_dialog	loader/shp2pgsql-gui.c	/^pgui_create_folderchooser_dialog(void)$/;"	f	file:
pgui_create_import_file_table	loader/shp2pgsql-gui.c	/^pgui_create_import_file_table(GtkWidget *import_list_frame)$/;"	f	file:
pgui_create_loader_options_dialog	loader/shp2pgsql-gui.c	/^pgui_create_loader_options_dialog()$/;"	f	file:
pgui_create_main_window	loader/shp2pgsql-gui.c	/^pgui_create_main_window(const SHPCONNECTIONCONFIG *conn)$/;"	f	file:
pgui_create_options_dialog_add_label	loader/shp2pgsql-gui.c	/^pgui_create_options_dialog_add_label(GtkWidget *table, const char *str, gfloat alignment, int row)$/;"	f	file:
pgui_create_progress_dialog	loader/shp2pgsql-gui.c	/^pgui_create_progress_dialog()$/;"	f	file:
pgui_create_tablechooser_dialog	loader/shp2pgsql-gui.c	/^pgui_create_tablechooser_dialog()$/;"	f	file:
pgui_errmsg	loader/shp2pgsql-gui.c	/^static char *pgui_errmsg = NULL;$/;"	v	file:
pgui_event_popup_delete	loader/shp2pgsql-gui.c	/^pgui_event_popup_delete(GtkWidget *widget, GdkEvent *event, gpointer data)$/;"	f	file:
pgui_exec	loader/shp2pgsql-gui.c	/^pgui_exec(const char *sql)$/;"	f	file:
pgui_log_va	loader/shp2pgsql-gui.c	/^pgui_log_va(const char *fmt, va_list ap)$/;"	f
pgui_logf	loader/shp2pgsql-gui.c	/^pgui_logf(const char *fmt, ...)$/;"	f	file:
pgui_quit	loader/shp2pgsql-gui.c	/^pgui_quit (GtkWidget *widget, gpointer data)$/;"	f	file:
pgui_raise_error_dialogue	loader/shp2pgsql-gui.c	/^pgui_raise_error_dialogue(void)$/;"	f	file:
pgui_sanitize_connection_string	loader/shp2pgsql-gui.c	/^pgui_sanitize_connection_string(char *connection_string)$/;"	f	file:
pgui_set_dumper_configs_from_options_ui	loader/shp2pgsql-gui.c	/^pgui_set_dumper_configs_from_options_ui()$/;"	f	file:
pgui_set_loader_configs_from_options_ui	loader/shp2pgsql-gui.c	/^pgui_set_loader_configs_from_options_ui()$/;"	f	file:
pgui_seterr	loader/shp2pgsql-gui.c	/^pgui_seterr(const char *fmt, ...)$/;"	f	file:
pgui_seterr_va	loader/shp2pgsql-gui.c	/^pgui_seterr_va(const char *fmt, va_list ap)$/;"	f
pgui_validate_connection	loader/shp2pgsql-gui.c	/^pgui_validate_connection()$/;"	f	file:
pivot	raster/rt_core/rt_statistics.c	/^static double pivot(double *left, double *right) {$/;"	f	file:
pixel	raster/scripts/python/pixval.py	/^pixel = src_band.ReadRaster(x - 1, y - 1, 1, 1, 1, 1)$/;"	v
pixel	raster/scripts/python/rtrowdump.py	/^                pixel = rt.get_value(b, width_index + 1, height_index + 1)$/;"	v
pixel_types	raster/scripts/python/rtreader.py	/^    pixel_types = property(fget = lambda self: self._get_pixel_types())$/;"	v	class:RasterReader
pixtype	raster/rt_core/librtcore.h	/^    rt_pixtype pixtype;$/;"	m	struct:rt_band_t
pixtype	raster/rt_core/rt_raster.c	/^	rt_pixtype *pixtype;$/;"	m	struct:_rti_rasterize_arg_t	file:
pixtype	raster/rt_pg/rtpg_mapalgebra.c	/^	rt_pixtype pixtype; \/* output raster band's pixel type *\/$/;"	m	struct:rtpg_nmapalgebra_arg_t	file:
pixtype_suite	raster/test/cunit/cu_pixtype.c	/^CU_SuiteInfo pixtype_suite = {"pixtype",  NULL,  NULL, pixtype_tests};$/;"	v
pixtype_tests	raster/test/cunit/cu_pixtype.c	/^CU_TestInfo pixtype_tests[] = {$/;"	v
pixval	raster/rt_pg/rtpg_pixel.c	/^	} pixval;$/;"	m	struct:rtpg_setvaluesgv_geomval_t	typeref:struct:rtpg_setvaluesgv_geomval_t::__anon55	file:
pixval	raster/scripts/python/pixval.py	/^pixval = struct.unpack(fmt, pixel)$/;"	v
place	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE place$/;"	t
place.aland	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  aland bigint,$/;"	F
place.awater	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  awater bigint,$/;"	F
place.classfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  classfp character varying(2),$/;"	F
place.cpi	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  cpi character varying(1),$/;"	F
place.funcstat	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  funcstat character varying(1),$/;"	F
place.gid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  gid serial NOT NULL,$/;"	F
place.intptlat	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  intptlat character varying(11),$/;"	F
place.intptlon	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  intptlon character varying(12),$/;"	F
place.lsad	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  lsad character varying(2),$/;"	F
place.mtfcc	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  mtfcc character varying(5),$/;"	F
place.name	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  "name" character varying(100),$/;"	F
place.namelsad	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  namelsad character varying(100),$/;"	F
place.pcicbsa	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  pcicbsa character varying(1),$/;"	F
place.pcinecta	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  pcinecta character varying(1),$/;"	F
place.placefp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  placefp character varying(5),$/;"	F
place.placens	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  placens character varying(8),$/;"	F
place.plcidfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  plcidfp character varying(7) PRIMARY KEY,$/;"	F
place.statefp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  statefp character varying(2),$/;"	F
place.the_geom	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  the_geom geometry,$/;"	F
place.tiger_place_the_geom_gist	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX tiger_place_the_geom_gist ON place USING gist(the_geom);$/;"	i
place.tiger_place_the_geom_gist	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^CREATE INDEX tiger_place_the_geom_gist ON place USING gist(the_geom);$/;"	i
place_lookup	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE place_lookup ($/;"	t
place_lookup.name	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    name    VARCHAR(90),$/;"	F
place_lookup.pl_code	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    pl_code INTEGER,$/;"	F
place_lookup.place_lookup_name_idx	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX place_lookup_name_idx ON place_lookup (soundex(name));$/;"	i
place_lookup.place_lookup_state_idx	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX place_lookup_state_idx ON place_lookup (state);$/;"	i
place_lookup.st_code	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    st_code INTEGER,$/;"	F
place_lookup.state	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    state   VARCHAR(2),$/;"	F
pnr	liblwgeom/measures.h	/^	int		pnr;	\/*pointnumber. the ordernumber of the point*\/$/;"	m	struct:__anon30
poi	topology/test/regress/createtopogeom.sql	/^CREATE TABLE "MiX".poi (id int);$/;"	t
poi.id	topology/test/regress/createtopogeom.sql	/^CREATE TABLE "MiX".poi (id int);$/;"	F
point	liblwgeom/lwin_wkt_parse.y	/^point : $/;"	l
point	regress/typmod.sql	/^CREATE TABLE tm.point (id serial, g geometry(point), gg geography(point) );$/;"	t
point.g	regress/typmod.sql	/^CREATE TABLE tm.point (id serial, g geometry(point), gg geography(point) );$/;"	F
point.gg	regress/typmod.sql	/^CREATE TABLE tm.point (id serial, g geometry(point), gg geography(point) );$/;"	F
point.id	regress/typmod.sql	/^CREATE TABLE tm.point (id serial, g geometry(point), gg geography(point) );$/;"	F
point0	regress/typmod.sql	/^CREATE TABLE tm.point0 (id serial, g geometry(point, 0), gg geography(point, 0) );$/;"	t
point0.g	regress/typmod.sql	/^CREATE TABLE tm.point0 (id serial, g geometry(point, 0), gg geography(point, 0) );$/;"	F
point0.gg	regress/typmod.sql	/^CREATE TABLE tm.point0 (id serial, g geometry(point, 0), gg geography(point, 0) );$/;"	F
point0.id	regress/typmod.sql	/^CREATE TABLE tm.point0 (id serial, g geometry(point, 0), gg geography(point, 0) );$/;"	F
point3d_equals	liblwgeom/lwgeodetic.c	/^point3d_equals(const POINT3D *p1, const POINT3D *p2)$/;"	f	file:
point4326	regress/typmod.sql	/^CREATE TABLE tm.point4326 (id serial, g geometry(point, 4326), gg geography(point, 4326) );$/;"	t
point4326.g	regress/typmod.sql	/^CREATE TABLE tm.point4326 (id serial, g geometry(point, 4326), gg geography(point, 4326) );$/;"	F
point4326.gg	regress/typmod.sql	/^CREATE TABLE tm.point4326 (id serial, g geometry(point, 4326), gg geography(point, 4326) );$/;"	F
point4326.id	regress/typmod.sql	/^CREATE TABLE tm.point4326 (id serial, g geometry(point, 4326), gg geography(point, 4326) );$/;"	F
point4d_transform	liblwgeom/lwgeom_transform.c	/^point4d_transform(POINT4D *pt, projPJ srcpj, projPJ dstpj)$/;"	f
pointArray_GMLsize	liblwgeom/lwout_gml.c	/^pointArray_GMLsize(POINTARRAY *pa, int precision)$/;"	f	file:
pointArray_X3Dsize	liblwgeom/lwout_x3d.c	/^pointArray_X3Dsize(POINTARRAY *pa, int precision)$/;"	f	file:
pointArray_geojson_size	liblwgeom/lwout_geojson.c	/^pointArray_geojson_size(POINTARRAY *pa, int precision)$/;"	f	file:
pointArray_svg_abs	liblwgeom/lwout_svg.c	/^pointArray_svg_abs(POINTARRAY *pa, char *output, int close_ring, int precision)$/;"	f	file:
pointArray_svg_rel	liblwgeom/lwout_svg.c	/^pointArray_svg_rel(POINTARRAY *pa, char *output, int close_ring, int precision)$/;"	f	file:
pointArray_svg_size	liblwgeom/lwout_svg.c	/^pointArray_svg_size(POINTARRAY *pa, int precision)$/;"	f	file:
pointArray_toGML2	liblwgeom/lwout_gml.c	/^pointArray_toGML2(POINTARRAY *pa, char *output, int precision)$/;"	f	file:
pointArray_toGML3	liblwgeom/lwout_gml.c	/^pointArray_toGML3(POINTARRAY *pa, char *output, int precision, int opts)$/;"	f	file:
pointArray_toX3D3	liblwgeom/lwout_x3d.c	/^pointArray_toX3D3(POINTARRAY *pa, char *output, int precision, int opts, int is_closed)$/;"	f	file:
pointArray_to_geojson	liblwgeom/lwout_geojson.c	/^pointArray_to_geojson(POINTARRAY *pa, char *output, int precision)$/;"	f	file:
pointColor	doc/html/image_src/styles.h	/^	char *pointColor;$/;"	m	struct:layerStyle
pointSize	doc/html/image_src/styles.h	/^	int	  pointSize;$/;"	m	struct:layerStyle
point_deg2rad	liblwgeom/cunit/cu_geodetic.c	/^static void point_deg2rad(GEOGRAPHIC_POINT *p)$/;"	f	file:
point_from_geohash	postgis/lwgeom_in_geohash.c	/^Datum point_from_geohash(PG_FUNCTION_ARGS)$/;"	f
point_from_geohash	postgis/lwgeom_in_geohash.c	/^PG_FUNCTION_INFO_V1(point_from_geohash);$/;"	v
point_in_cone	liblwgeom/lwgeodetic.c	/^point_in_cone(const POINT3D *A1, const POINT3D *A2, const POINT3D *P)$/;"	f	file:
point_in_multipolygon	postgis/lwgeom_functions_analytic.c	/^int point_in_multipolygon(LWMPOLY *mpolygon, LWPOINT *point)$/;"	f
point_in_multipolygon_rtree	postgis/lwgeom_functions_analytic.c	/^int point_in_multipolygon_rtree(RTREE_NODE **root, int polyCount, int *ringCounts, LWPOINT *point)$/;"	f
point_in_polygon	postgis/lwgeom_functions_analytic.c	/^int point_in_polygon(LWPOLY *polygon, LWPOINT *point)$/;"	f
point_in_polygon_rtree	postgis/lwgeom_functions_analytic.c	/^int point_in_polygon_rtree(RTREE_NODE **root, int ringCount, LWPOINT *point)$/;"	f
point_in_ring	postgis/lwgeom_functions_analytic.c	/^int point_in_ring(POINTARRAY *pts, POINT2D *point)$/;"	f
point_in_ring_rtree	postgis/lwgeom_functions_analytic.c	/^int point_in_ring_rtree(RTREE_NODE *root, POINT2D *point)$/;"	f
point_interpolate	liblwgeom/lwlinearreferencing.c	/^int point_interpolate(const POINT4D *p1, const POINT4D *p2, POINT4D *p, int hasz, int hasm, char ordinate, double interpolation_value)$/;"	f
point_list	liblwgeom/lwin_wkt_parse.y	/^point_list :$/;"	l
point_rad2deg	liblwgeom/cunit/cu_geodetic.c	/^static void point_rad2deg(GEOGRAPHIC_POINT *p)$/;"	f	file:
point_set	liblwgeom/cunit/cu_geodetic.c	/^static void point_set(double lon, double lat, GEOGRAPHIC_POINT *p)$/;"	f	file:
point_shift	liblwgeom/lwgeodetic.c	/^void point_shift(GEOGRAPHIC_POINT *p, double shift)$/;"	f
point_to_geometry	postgis/geometry_inout.c	/^Datum point_to_geometry(PG_FUNCTION_ARGS)$/;"	f
point_to_geometry	postgis/geometry_inout.c	/^PG_FUNCTION_INFO_V1(point_to_geometry);$/;"	v
point_untagged	liblwgeom/lwin_wkt_parse.y	/^point_untagged :$/;"	l
pointarrayToString	doc/html/image_src/generator.c	/^pointarrayToString(char *output, POINTARRAY *pa)$/;"	f	file:
pointm	regress/typmod.sql	/^CREATE TABLE tm.pointm (id serial, g geometry(pointm), gg geography(pointm) );$/;"	t
pointm.g	regress/typmod.sql	/^CREATE TABLE tm.pointm (id serial, g geometry(pointm), gg geography(pointm) );$/;"	F
pointm.gg	regress/typmod.sql	/^CREATE TABLE tm.pointm (id serial, g geometry(pointm), gg geography(pointm) );$/;"	F
pointm.id	regress/typmod.sql	/^CREATE TABLE tm.pointm (id serial, g geometry(pointm), gg geography(pointm) );$/;"	F
pointm0	regress/typmod.sql	/^CREATE TABLE tm.pointm0 (id serial, g geometry(pointm, 0), gg geography(pointm, 0) );$/;"	t
pointm0.g	regress/typmod.sql	/^CREATE TABLE tm.pointm0 (id serial, g geometry(pointm, 0), gg geography(pointm, 0) );$/;"	F
pointm0.gg	regress/typmod.sql	/^CREATE TABLE tm.pointm0 (id serial, g geometry(pointm, 0), gg geography(pointm, 0) );$/;"	F
pointm0.id	regress/typmod.sql	/^CREATE TABLE tm.pointm0 (id serial, g geometry(pointm, 0), gg geography(pointm, 0) );$/;"	F
pointm4326	regress/typmod.sql	/^CREATE TABLE tm.pointm4326 (id serial, g geometry(pointm, 4326), gg geography(pointm, 4326) );$/;"	t
pointm4326.g	regress/typmod.sql	/^CREATE TABLE tm.pointm4326 (id serial, g geometry(pointm, 4326), gg geography(pointm, 4326) );$/;"	F
pointm4326.gg	regress/typmod.sql	/^CREATE TABLE tm.pointm4326 (id serial, g geometry(pointm, 4326), gg geography(pointm, 4326) );$/;"	F
pointm4326.id	regress/typmod.sql	/^CREATE TABLE tm.pointm4326 (id serial, g geometry(pointm, 4326), gg geography(pointm, 4326) );$/;"	F
pointonsurface	postgis/lwgeom_geos.c	/^Datum pointonsurface(PG_FUNCTION_ARGS)$/;"	f
pointonsurface	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(pointonsurface);$/;"	v
pointz	regress/typmod.sql	/^CREATE TABLE tm.pointz (id serial, g geometry(pointz), gg geography(pointz) );$/;"	t
pointz.g	regress/typmod.sql	/^CREATE TABLE tm.pointz (id serial, g geometry(pointz), gg geography(pointz) );$/;"	F
pointz.gg	regress/typmod.sql	/^CREATE TABLE tm.pointz (id serial, g geometry(pointz), gg geography(pointz) );$/;"	F
pointz.id	regress/typmod.sql	/^CREATE TABLE tm.pointz (id serial, g geometry(pointz), gg geography(pointz) );$/;"	F
pointz0	regress/typmod.sql	/^CREATE TABLE tm.pointz0 (id serial, g geometry(pointz, 0), gg geography(pointz, 0) );$/;"	t
pointz0.g	regress/typmod.sql	/^CREATE TABLE tm.pointz0 (id serial, g geometry(pointz, 0), gg geography(pointz, 0) );$/;"	F
pointz0.gg	regress/typmod.sql	/^CREATE TABLE tm.pointz0 (id serial, g geometry(pointz, 0), gg geography(pointz, 0) );$/;"	F
pointz0.id	regress/typmod.sql	/^CREATE TABLE tm.pointz0 (id serial, g geometry(pointz, 0), gg geography(pointz, 0) );$/;"	F
pointz4326	regress/typmod.sql	/^CREATE TABLE tm.pointz4326 (id serial, g geometry(pointz, 4326), gg geography(pointz, 4326) );$/;"	t
pointz4326.g	regress/typmod.sql	/^CREATE TABLE tm.pointz4326 (id serial, g geometry(pointz, 4326), gg geography(pointz, 4326) );$/;"	F
pointz4326.gg	regress/typmod.sql	/^CREATE TABLE tm.pointz4326 (id serial, g geometry(pointz, 4326), gg geography(pointz, 4326) );$/;"	F
pointz4326.id	regress/typmod.sql	/^CREATE TABLE tm.pointz4326 (id serial, g geometry(pointz, 4326), gg geography(pointz, 4326) );$/;"	F
pointzm	regress/typmod.sql	/^CREATE TABLE tm.pointzm (id serial, g geometry(pointzm), gg geography(pointzm) );$/;"	t
pointzm.g	regress/typmod.sql	/^CREATE TABLE tm.pointzm (id serial, g geometry(pointzm), gg geography(pointzm) );$/;"	F
pointzm.gg	regress/typmod.sql	/^CREATE TABLE tm.pointzm (id serial, g geometry(pointzm), gg geography(pointzm) );$/;"	F
pointzm.id	regress/typmod.sql	/^CREATE TABLE tm.pointzm (id serial, g geometry(pointzm), gg geography(pointzm) );$/;"	F
pointzm0	regress/typmod.sql	/^CREATE TABLE tm.pointzm0 (id serial, g geometry(pointzm, 0), gg geography(pointzm, 0) );$/;"	t
pointzm0.g	regress/typmod.sql	/^CREATE TABLE tm.pointzm0 (id serial, g geometry(pointzm, 0), gg geography(pointzm, 0) );$/;"	F
pointzm0.gg	regress/typmod.sql	/^CREATE TABLE tm.pointzm0 (id serial, g geometry(pointzm, 0), gg geography(pointzm, 0) );$/;"	F
pointzm0.id	regress/typmod.sql	/^CREATE TABLE tm.pointzm0 (id serial, g geometry(pointzm, 0), gg geography(pointzm, 0) );$/;"	F
pointzm4326	regress/typmod.sql	/^CREATE TABLE tm.pointzm4326 (id serial, g geometry(pointzm, 4326), gg geography(pointzm, 4326) );$/;"	t
pointzm4326.g	regress/typmod.sql	/^CREATE TABLE tm.pointzm4326 (id serial, g geometry(pointzm, 4326), gg geography(pointzm, 4326) );$/;"	F
pointzm4326.gg	regress/typmod.sql	/^CREATE TABLE tm.pointzm4326 (id serial, g geometry(pointzm, 4326), gg geography(pointzm, 4326) );$/;"	F
pointzm4326.id	regress/typmod.sql	/^CREATE TABLE tm.pointzm4326 (id serial, g geometry(pointzm, 4326), gg geography(pointzm, 4326) );$/;"	F
poly	postgis/lwgeom_dump.c	/^	LWPOLY *poly;$/;"	m	struct:POLYDUMPSTATE	file:
polyCount	postgis/lwgeom_rtree.h	/^	int polyCount;$/;"	m	struct:__anon13
polygon	liblwgeom/lwin_wkt_parse.y	/^polygon : $/;"	l
polygon	regress/typmod.sql	/^CREATE TABLE tm.polygon (id serial, g geometry(polygon), gg geography(polygon) );$/;"	t
polygon.g	regress/typmod.sql	/^CREATE TABLE tm.polygon (id serial, g geometry(polygon), gg geography(polygon) );$/;"	F
polygon.gg	regress/typmod.sql	/^CREATE TABLE tm.polygon (id serial, g geometry(polygon), gg geography(polygon) );$/;"	F
polygon.id	regress/typmod.sql	/^CREATE TABLE tm.polygon (id serial, g geometry(polygon), gg geography(polygon) );$/;"	F
polygon0	regress/typmod.sql	/^CREATE TABLE tm.polygon0 (id serial, g geometry(polygon, 0), gg geography(polygon, 0) );$/;"	t
polygon0.g	regress/typmod.sql	/^CREATE TABLE tm.polygon0 (id serial, g geometry(polygon, 0), gg geography(polygon, 0) );$/;"	F
polygon0.gg	regress/typmod.sql	/^CREATE TABLE tm.polygon0 (id serial, g geometry(polygon, 0), gg geography(polygon, 0) );$/;"	F
polygon0.id	regress/typmod.sql	/^CREATE TABLE tm.polygon0 (id serial, g geometry(polygon, 0), gg geography(polygon, 0) );$/;"	F
polygon4326	regress/typmod.sql	/^CREATE TABLE tm.polygon4326 (id serial, g geometry(polygon, 4326), gg geography(polygon, 4326) );$/;"	t
polygon4326.g	regress/typmod.sql	/^CREATE TABLE tm.polygon4326 (id serial, g geometry(polygon, 4326), gg geography(polygon, 4326) );$/;"	F
polygon4326.gg	regress/typmod.sql	/^CREATE TABLE tm.polygon4326 (id serial, g geometry(polygon, 4326), gg geography(polygon, 4326) );$/;"	F
polygon4326.id	regress/typmod.sql	/^CREATE TABLE tm.polygon4326 (id serial, g geometry(polygon, 4326), gg geography(polygon, 4326) );$/;"	F
polygonFillColor	doc/html/image_src/styles.h	/^	char *polygonFillColor;$/;"	m	struct:layerStyle
polygonStrokeColor	doc/html/image_src/styles.h	/^	char *polygonStrokeColor;$/;"	m	struct:layerStyle
polygonStrokeWidth	doc/html/image_src/styles.h	/^	int   polygonStrokeWidth;$/;"	m	struct:layerStyle
polygon_list	liblwgeom/lwin_wkt_parse.y	/^polygon_list :$/;"	l
polygon_to_geometry	postgis/geometry_inout.c	/^Datum polygon_to_geometry(PG_FUNCTION_ARGS)$/;"	f
polygon_to_geometry	postgis/geometry_inout.c	/^PG_FUNCTION_INFO_V1(polygon_to_geometry);$/;"	v
polygon_untagged	liblwgeom/lwin_wkt_parse.y	/^polygon_untagged : $/;"	l
polygonize_garray	postgis/lwgeom_geos.c	/^Datum polygonize_garray(PG_FUNCTION_ARGS)$/;"	f
polygonize_garray	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(polygonize_garray);$/;"	v
polygonm	regress/typmod.sql	/^CREATE TABLE tm.polygonm (id serial, g geometry(polygonm), gg geography(polygonm) );$/;"	t
polygonm.g	regress/typmod.sql	/^CREATE TABLE tm.polygonm (id serial, g geometry(polygonm), gg geography(polygonm) );$/;"	F
polygonm.gg	regress/typmod.sql	/^CREATE TABLE tm.polygonm (id serial, g geometry(polygonm), gg geography(polygonm) );$/;"	F
polygonm.id	regress/typmod.sql	/^CREATE TABLE tm.polygonm (id serial, g geometry(polygonm), gg geography(polygonm) );$/;"	F
polygonm0	regress/typmod.sql	/^CREATE TABLE tm.polygonm0 (id serial, g geometry(polygonm, 0), gg geography(polygonm, 0) );$/;"	t
polygonm0.g	regress/typmod.sql	/^CREATE TABLE tm.polygonm0 (id serial, g geometry(polygonm, 0), gg geography(polygonm, 0) );$/;"	F
polygonm0.gg	regress/typmod.sql	/^CREATE TABLE tm.polygonm0 (id serial, g geometry(polygonm, 0), gg geography(polygonm, 0) );$/;"	F
polygonm0.id	regress/typmod.sql	/^CREATE TABLE tm.polygonm0 (id serial, g geometry(polygonm, 0), gg geography(polygonm, 0) );$/;"	F
polygonm4326	regress/typmod.sql	/^CREATE TABLE tm.polygonm4326 (id serial, g geometry(polygonm, 4326), gg geography(polygonm, 4326) );$/;"	t
polygonm4326.g	regress/typmod.sql	/^CREATE TABLE tm.polygonm4326 (id serial, g geometry(polygonm, 4326), gg geography(polygonm, 4326) );$/;"	F
polygonm4326.gg	regress/typmod.sql	/^CREATE TABLE tm.polygonm4326 (id serial, g geometry(polygonm, 4326), gg geography(polygonm, 4326) );$/;"	F
polygonm4326.id	regress/typmod.sql	/^CREATE TABLE tm.polygonm4326 (id serial, g geometry(polygonm, 4326), gg geography(polygonm, 4326) );$/;"	F
polygonz	regress/typmod.sql	/^CREATE TABLE tm.polygonz (id serial, g geometry(polygonz), gg geography(polygonz) );$/;"	t
polygonz.g	regress/typmod.sql	/^CREATE TABLE tm.polygonz (id serial, g geometry(polygonz), gg geography(polygonz) );$/;"	F
polygonz.gg	regress/typmod.sql	/^CREATE TABLE tm.polygonz (id serial, g geometry(polygonz), gg geography(polygonz) );$/;"	F
polygonz.id	regress/typmod.sql	/^CREATE TABLE tm.polygonz (id serial, g geometry(polygonz), gg geography(polygonz) );$/;"	F
polygonz0	regress/typmod.sql	/^CREATE TABLE tm.polygonz0 (id serial, g geometry(polygonz, 0), gg geography(polygonz, 0) );$/;"	t
polygonz0.g	regress/typmod.sql	/^CREATE TABLE tm.polygonz0 (id serial, g geometry(polygonz, 0), gg geography(polygonz, 0) );$/;"	F
polygonz0.gg	regress/typmod.sql	/^CREATE TABLE tm.polygonz0 (id serial, g geometry(polygonz, 0), gg geography(polygonz, 0) );$/;"	F
polygonz0.id	regress/typmod.sql	/^CREATE TABLE tm.polygonz0 (id serial, g geometry(polygonz, 0), gg geography(polygonz, 0) );$/;"	F
polygonz4326	regress/typmod.sql	/^CREATE TABLE tm.polygonz4326 (id serial, g geometry(polygonz, 4326), gg geography(polygonz, 4326) );$/;"	t
polygonz4326.g	regress/typmod.sql	/^CREATE TABLE tm.polygonz4326 (id serial, g geometry(polygonz, 4326), gg geography(polygonz, 4326) );$/;"	F
polygonz4326.gg	regress/typmod.sql	/^CREATE TABLE tm.polygonz4326 (id serial, g geometry(polygonz, 4326), gg geography(polygonz, 4326) );$/;"	F
polygonz4326.id	regress/typmod.sql	/^CREATE TABLE tm.polygonz4326 (id serial, g geometry(polygonz, 4326), gg geography(polygonz, 4326) );$/;"	F
polygonzm	regress/typmod.sql	/^CREATE TABLE tm.polygonzm (id serial, g geometry(polygonzm), gg geography(polygonzm) );$/;"	t
polygonzm.g	regress/typmod.sql	/^CREATE TABLE tm.polygonzm (id serial, g geometry(polygonzm), gg geography(polygonzm) );$/;"	F
polygonzm.gg	regress/typmod.sql	/^CREATE TABLE tm.polygonzm (id serial, g geometry(polygonzm), gg geography(polygonzm) );$/;"	F
polygonzm.id	regress/typmod.sql	/^CREATE TABLE tm.polygonzm (id serial, g geometry(polygonzm), gg geography(polygonzm) );$/;"	F
polygonzm0	regress/typmod.sql	/^CREATE TABLE tm.polygonzm0 (id serial, g geometry(polygonzm, 0), gg geography(polygonzm, 0) );$/;"	t
polygonzm0.g	regress/typmod.sql	/^CREATE TABLE tm.polygonzm0 (id serial, g geometry(polygonzm, 0), gg geography(polygonzm, 0) );$/;"	F
polygonzm0.gg	regress/typmod.sql	/^CREATE TABLE tm.polygonzm0 (id serial, g geometry(polygonzm, 0), gg geography(polygonzm, 0) );$/;"	F
polygonzm0.id	regress/typmod.sql	/^CREATE TABLE tm.polygonzm0 (id serial, g geometry(polygonzm, 0), gg geography(polygonzm, 0) );$/;"	F
polygonzm4326	regress/typmod.sql	/^CREATE TABLE tm.polygonzm4326 (id serial, g geometry(polygonzm, 4326), gg geography(polygonzm, 4326) );$/;"	t
polygonzm4326.g	regress/typmod.sql	/^CREATE TABLE tm.polygonzm4326 (id serial, g geometry(polygonzm, 4326), gg geography(polygonzm, 4326) );$/;"	F
polygonzm4326.gg	regress/typmod.sql	/^CREATE TABLE tm.polygonzm4326 (id serial, g geometry(polygonzm, 4326), gg geography(polygonzm, 4326) );$/;"	F
polygonzm4326.id	regress/typmod.sql	/^CREATE TABLE tm.polygonzm4326 (id serial, g geometry(polygonzm, 4326), gg geography(polygonzm, 4326) );$/;"	F
polyhedralsurface	liblwgeom/lwin_wkt_parse.y	/^polyhedralsurface :$/;"	l
polyhedralsurface	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurface (id serial, g geometry(polyhedralsurface) );$/;"	t
polyhedralsurface.g	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurface (id serial, g geometry(polyhedralsurface) );$/;"	F
polyhedralsurface.id	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurface (id serial, g geometry(polyhedralsurface) );$/;"	F
polyhedralsurface0	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurface0 (id serial, g geometry(polyhedralsurface, 0) );$/;"	t
polyhedralsurface0.g	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurface0 (id serial, g geometry(polyhedralsurface, 0) );$/;"	F
polyhedralsurface0.id	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurface0 (id serial, g geometry(polyhedralsurface, 0) );$/;"	F
polyhedralsurface4326	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurface4326 (id serial, g geometry(polyhedralsurface, 4326) );$/;"	t
polyhedralsurface4326.g	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurface4326 (id serial, g geometry(polyhedralsurface, 4326) );$/;"	F
polyhedralsurface4326.id	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurface4326 (id serial, g geometry(polyhedralsurface, 4326) );$/;"	F
polyhedralsurface_parse	liblwgeom/cunit/cu_surface.c	/^void polyhedralsurface_parse(void)$/;"	f
polyhedralsurfacem	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacem (id serial, g geometry(polyhedralsurfacem) );$/;"	t
polyhedralsurfacem.g	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacem (id serial, g geometry(polyhedralsurfacem) );$/;"	F
polyhedralsurfacem.id	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacem (id serial, g geometry(polyhedralsurfacem) );$/;"	F
polyhedralsurfacem0	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacem0 (id serial, g geometry(polyhedralsurfacem, 0) );$/;"	t
polyhedralsurfacem0.g	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacem0 (id serial, g geometry(polyhedralsurfacem, 0) );$/;"	F
polyhedralsurfacem0.id	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacem0 (id serial, g geometry(polyhedralsurfacem, 0) );$/;"	F
polyhedralsurfacem4326	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacem4326 (id serial, g geometry(polyhedralsurfacem, 4326) );$/;"	t
polyhedralsurfacem4326.g	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacem4326 (id serial, g geometry(polyhedralsurfacem, 4326) );$/;"	F
polyhedralsurfacem4326.id	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacem4326 (id serial, g geometry(polyhedralsurfacem, 4326) );$/;"	F
polyhedralsurfacez	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacez (id serial, g geometry(polyhedralsurfacez) );$/;"	t
polyhedralsurfacez.g	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacez (id serial, g geometry(polyhedralsurfacez) );$/;"	F
polyhedralsurfacez.id	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacez (id serial, g geometry(polyhedralsurfacez) );$/;"	F
polyhedralsurfacez0	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacez0 (id serial, g geometry(polyhedralsurfacez, 0) );$/;"	t
polyhedralsurfacez0.g	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacez0 (id serial, g geometry(polyhedralsurfacez, 0) );$/;"	F
polyhedralsurfacez0.id	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacez0 (id serial, g geometry(polyhedralsurfacez, 0) );$/;"	F
polyhedralsurfacez4326	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacez4326 (id serial, g geometry(polyhedralsurfacez, 4326) );$/;"	t
polyhedralsurfacez4326.g	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacez4326 (id serial, g geometry(polyhedralsurfacez, 4326) );$/;"	F
polyhedralsurfacez4326.id	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacez4326 (id serial, g geometry(polyhedralsurfacez, 4326) );$/;"	F
polyhedralsurfacezm	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacezm (id serial, g geometry(polyhedralsurfacezm) );$/;"	t
polyhedralsurfacezm.g	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacezm (id serial, g geometry(polyhedralsurfacezm) );$/;"	F
polyhedralsurfacezm.id	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacezm (id serial, g geometry(polyhedralsurfacezm) );$/;"	F
polyhedralsurfacezm0	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacezm0 (id serial, g geometry(polyhedralsurfacezm, 0) );$/;"	t
polyhedralsurfacezm0.g	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacezm0 (id serial, g geometry(polyhedralsurfacezm, 0) );$/;"	F
polyhedralsurfacezm0.id	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacezm0 (id serial, g geometry(polyhedralsurfacezm, 0) );$/;"	F
polyhedralsurfacezm4326	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacezm4326 (id serial, g geometry(polyhedralsurfacezm, 4326) );$/;"	t
polyhedralsurfacezm4326.g	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacezm4326 (id serial, g geometry(polyhedralsurfacezm, 4326) );$/;"	F
polyhedralsurfacezm4326.id	regress/typmod.sql	/^CREATE TABLE tm.polyhedralsurfacezm4326 (id serial, g geometry(polyhedralsurfacezm, 4326) );$/;"	F
ponds	extras/ogc_test_suite/1_schema.sql	/^CREATE TABLE ponds ($/;"	t
ponds.fid	extras/ogc_test_suite/1_schema.sql	/^       fid             INTEGER NOT NULL PRIMARY KEY,$/;"	F
ponds.name	extras/ogc_test_suite/1_schema.sql	/^       name            VARCHAR(64),$/;"	F
pop	liblwgeom/measures3d.h	/^	POINT3DZ		pop;  \/*Point On Plane*\/$/;"	m	struct:__anon33
port	loader/shpcommon.h	/^	char *port;$/;"	m	struct:shp_connection_state
pos	liblwgeom/lwin_wkb.c	/^	const uint8_t *pos; \/* Current parse position *\/$/;"	m	struct:__anon24	file:
pos	postgis/gserialized_gist_2d.c	/^	int pos;$/;"	m	struct:__anon20	file:
pos	raster/rt_core/rt_mapalgebra.c	/^	uint16_t *pos;$/;"	m	struct:_rti_colormap_arg_t	file:
position	java/jdbc/src/org/postgis/binary/ValueGetter.java	/^    int position;$/;"	f	class:ValueGetter
position	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^    int position=0;$/;"	f	class:ValueSetter
postgis_autocache_bbox	postgis/lwgeom_functions_basic.c	/^Datum postgis_autocache_bbox(PG_FUNCTION_ARGS)$/;"	f
postgis_autocache_bbox	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(postgis_autocache_bbox);$/;"	v
postgis_extension_AddToSearchPath	extensions/postgis_extension_helper.sql	/^CREATE OR REPLACE FUNCTION postgis_extension_AddToSearchPath(a_schema_name varchar)$/;"	f
postgis_extension_drop_if_exists	extensions/postgis_extension_helper.sql	/^CREATE OR REPLACE FUNCTION postgis_extension_drop_if_exists(param_extension text, param_statement text)$/;"	f
postgis_extension_remove_objects	extensions/postgis_extension_helper.sql	/^CREATE OR REPLACE FUNCTION postgis_extension_remove_objects(param_extension text, param_type text)$/;"	f
postgis_geos_version	postgis/lwgeom_geos.c	/^Datum postgis_geos_version(PG_FUNCTION_ARGS)$/;"	f
postgis_geos_version	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(postgis_geos_version);$/;"	v
postgis_install_history	extras/history_table/history_table.sql	/^create or replace function postgis_install_history() returns void as$/;"	f
postgis_lib_build_date	postgis/lwgeom_functions_basic.c	/^Datum postgis_lib_build_date(PG_FUNCTION_ARGS)$/;"	f
postgis_lib_build_date	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(postgis_lib_build_date);$/;"	v
postgis_lib_version	postgis/lwgeom_functions_basic.c	/^Datum postgis_lib_version(PG_FUNCTION_ARGS)$/;"	f
postgis_lib_version	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(postgis_lib_version);$/;"	v
postgis_libjson_version	postgis/lwgeom_in_geojson.c	/^Datum postgis_libjson_version(PG_FUNCTION_ARGS)$/;"	f
postgis_libjson_version	postgis/lwgeom_in_geojson.c	/^PG_FUNCTION_INFO_V1(postgis_libjson_version);$/;"	v
postgis_libxml_version	postgis/lwgeom_functions_basic.c	/^Datum postgis_libxml_version(PG_FUNCTION_ARGS)$/;"	f
postgis_libxml_version	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(postgis_libxml_version);$/;"	v
postgis_proj_version	postgis/lwgeom_transform.c	/^Datum postgis_proj_version(PG_FUNCTION_ARGS)$/;"	f
postgis_proj_version	postgis/lwgeom_transform.c	/^PG_FUNCTION_INFO_V1(postgis_proj_version);$/;"	v
postgis_scripts_released	postgis/lwgeom_functions_basic.c	/^Datum postgis_scripts_released(PG_FUNCTION_ARGS)$/;"	f
postgis_scripts_released	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(postgis_scripts_released);$/;"	v
postgis_sfcgal_version	postgis/lwgeom_sfcgal.c	/^Datum postgis_sfcgal_version(PG_FUNCTION_ARGS)$/;"	f
postgis_sfcgal_version	postgis/lwgeom_sfcgal.c	/^PG_FUNCTION_INFO_V1(postgis_sfcgal_version);$/;"	v
postgis_svn_version	postgis/lwgeom_functions_basic.c	/^Datum postgis_svn_version(PG_FUNCTION_ARGS)$/;"	f
postgis_svn_version	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(postgis_svn_version);$/;"	v
postgis_typmod_dims	postgis/gserialized_typmod.c	/^Datum postgis_typmod_dims(PG_FUNCTION_ARGS)$/;"	f
postgis_typmod_dims	postgis/gserialized_typmod.c	/^PG_FUNCTION_INFO_V1(postgis_typmod_dims);$/;"	v
postgis_typmod_out	postgis/gserialized_typmod.c	/^Datum postgis_typmod_out(PG_FUNCTION_ARGS)$/;"	f
postgis_typmod_out	postgis/gserialized_typmod.c	/^PG_FUNCTION_INFO_V1(postgis_typmod_out);$/;"	v
postgis_typmod_srid	postgis/gserialized_typmod.c	/^Datum postgis_typmod_srid(PG_FUNCTION_ARGS)$/;"	f
postgis_typmod_srid	postgis/gserialized_typmod.c	/^PG_FUNCTION_INFO_V1(postgis_typmod_srid);$/;"	v
postgis_typmod_type	postgis/gserialized_typmod.c	/^Datum postgis_typmod_type(PG_FUNCTION_ARGS)$/;"	f
postgis_typmod_type	postgis/gserialized_typmod.c	/^PG_FUNCTION_INFO_V1(postgis_typmod_type);$/;"	v
postgis_uses_stats	postgis/lwgeom_functions_basic.c	/^Datum postgis_uses_stats(PG_FUNCTION_ARGS)$/;"	f
postgis_uses_stats	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(postgis_uses_stats);$/;"	v
postgis_valid_typmod	postgis/gserialized_typmod.c	/^void postgis_valid_typmod(const GSERIALIZED *gser, int32_t typmod)$/;"	f
postgis_version	postgis/lwgeom_functions_basic.c	/^Datum postgis_version(PG_FUNCTION_ARGS)$/;"	f
postgis_version	postgis/lwgeom_functions_basic.c	/^PG_FUNCTION_INFO_V1(postgis_version);$/;"	v
prec	java/jdbc/jtssrc/org/postgis/jts/JtsGeometry.java	/^    final static PrecisionModel prec = new PrecisionModel();$/;"	f	class:JtsGeometry
precision	postgis/lwgeom_accum.c	/^	int	precision;		\/\/number of decimals in coordinates$/;"	m	struct:__anon10	file:
precisions	loader/shp2pgsql-core.h	/^	int *precisions;$/;"	m	struct:shp_loader_state
prepare_spatial	regress/run_test	/^prepare_spatial ()$/;"	f
prepare_spatial	regress/run_test.pl	/^sub prepare_spatial$/;"	s
prepare_spatial_extensions	regress/run_test	/^prepare_spatial_extensions ()$/;"	f
prepare_spatial_extensions	regress/run_test.pl	/^sub prepare_spatial_extensions$/;"	s
prepared_geom	postgis/lwgeom_geos_prepared.c	/^	const GEOSPreparedGeometry* prepared_geom;$/;"	m	struct:__anon16	file:
prepared_geom	postgis/lwgeom_geos_prepared.h	/^	const GEOSPreparedGeometry* prepared_geom;$/;"	m	struct:__anon7
prev	raster/rt_core/librtcore.h	/^	struct quantile_llist_element *prev;$/;"	m	struct:quantile_llist_element	typeref:struct:quantile_llist_element::quantile_llist_element
printBOX3D	liblwgeom/lwgeom_api.c	/^void printBOX3D(BOX3D *box)$/;"	f
printHeading	java/jdbc/src/examples/VersionPrinter.java	/^    private static void printHeading(String heading) {$/;"	m	class:VersionPrinter	file:
printLWCIRCSTRING	liblwgeom/lwcircstring.c	/^void printLWCIRCSTRING(LWCIRCSTRING *curve)$/;"	f
printLWLINE	liblwgeom/lwline.c	/^void printLWLINE(LWLINE *line)$/;"	f
printLWPOINT	liblwgeom/lwpoint.c	/^void printLWPOINT(LWPOINT *point)$/;"	f
printLWPOLY	liblwgeom/lwpoly.c	/^void printLWPOLY(LWPOLY *poly)$/;"	f
printLWPSURFACE	liblwgeom/lwpsurface.c	/^void printLWPSURFACE(LWPSURFACE *psurf)$/;"	f
printLWTIN	liblwgeom/lwtin.c	/^void printLWTIN(LWTIN *tin)$/;"	f
printLWTRIANGLE	liblwgeom/lwtriangle.c	/^void printLWTRIANGLE(LWTRIANGLE *triangle)$/;"	f
printPA	liblwgeom/lwgeom_api.c	/^void printPA(POINTARRAY *pa)$/;"	f
printVersionString	java/jdbc/src/examples/VersionPrinter.java	/^    public static void printVersionString(String function, Statement stat) {$/;"	m	class:VersionPrinter
printVersionString	java/jdbc/src/examples/VersionPrinter.java	/^    public static void printVersionString(String function, String value) {$/;"	m	class:VersionPrinter
printVersionString	java/jdbc/src/examples/VersionPrinter.java	/^    public static void printVersionString(String function, int value) {$/;"	m	class:VersionPrinter
print_elements_count	topology/test/regress/st_createtopogeo.sql	/^CREATE function print_elements_count(lbl text)$/;"	f
print_extent	utils/profile_intersects.pl	/^sub print_extent$/;"	s
print_extent	utils/test_estimation.pl	/^sub print_extent$/;"	s
print_extent	utils/test_geography_estimation.pl	/^sub print_extent$/;"	s
print_extent	utils/test_geography_joinestimation.pl	/^sub print_extent$/;"	s
print_extent	utils/test_joinestimation.pl	/^sub print_extent$/;"	s
print_isolated_nodes	topology/test/regress/st_createtopogeo.sql	/^CREATE function print_isolated_nodes(lbl text)$/;"	f
print_suite	liblwgeom/cunit/cu_print.c	/^CU_SuiteInfo print_suite = {"print_suite", NULL, NULL, print_tests };$/;"	v
print_tests	liblwgeom/cunit/cu_print.c	/^CU_TestInfo print_tests[] =$/;"	v
process_rasters	raster/loader/raster2pgsql.c	/^process_rasters(RTLOADERCFG *config, STRINGBUFFER *buffer) {$/;"	f	file:
process_single_uri	loader/shp2pgsql-gui.c	/^process_single_uri(char *uri)$/;"	f	file:
progress	loader/shp2pgsql-gui.c	/^static GtkWidget *progress = NULL;$/;"	v	file:
projFileCreate	loader/pgsql2shp-core.c	/^projFileCreate(SHPDUMPERSTATE *state)$/;"	f	file:
project_point_on_plane	liblwgeom/measures3d.c	/^project_point_on_plane(POINT3DZ *p,  PLANE3D *pl, POINT3DZ *p0)$/;"	f
projection	libpgcommon/lwgeom_cache.h	/^	projPJ projection;$/;"	m	struct:struct_PROJ4SRSCacheItem
projection	libpgcommon/lwgeom_transform.c	/^	projPJ projection;$/;"	m	struct:struct_PJHashEntry	file:
projection_mcxt	libpgcommon/lwgeom_cache.h	/^	MemoryContext projection_mcxt;$/;"	m	struct:struct_PROJ4SRSCacheItem
propertyName	java/ejb3/src/org/postgis/hibernate/ContainsExpression.java	/^	private String propertyName;$/;"	f	class:ContainsExpression	file:
propertyName	java/ejb3/src/org/postgis/hibernate/IntersectsExpression.java	/^	private String propertyName;$/;"	f	class:IntersectsExpression	file:
propertyName	java/ejb3/src/org/postgis/hibernate/WithinExpression.java	/^	private String propertyName;$/;"	f	class:WithinExpression	file:
prs	raster/scripts/python/ovdump.py	/^prs = OptionParser(version="%prog $Revision: 4037 $",$/;"	v
prs	raster/scripts/python/rtrowdump.py	/^    prs = OptionParser(version="%prog $Revision: 4037 $",$/;"	v
psRoot	loader/shapefil.h	/^    SHPTreeNode	*psRoot;$/;"	m	struct:__anon66
psurface_arcs	liblwgeom/lwpsurface.c	/^typedef struct struct_psurface_arcs *psurface_arcs;$/;"	t	typeref:struct:struct_psurface_arcs	file:
pszCodePage	loader/shapefil.h	/^    char        *pszCodePage;$/;"	m	struct:__anon67
pszCurrentRecord	loader/shapefil.h	/^    char	*pszCurrentRecord;$/;"	m	struct:__anon67
pszHeader	loader/shapefil.h	/^    char	*pszHeader;$/;"	m	struct:__anon67
pszWorkField	loader/shapefil.h	/^    char        *pszWorkField;$/;"	m	struct:__anon67
pt	postgis/lwgeom_dumppoints.c	/^	int pt; \/* point of top geom or current ring *\/$/;"	m	struct:dumpstate	file:
pt2fmt	raster/scripts/python/pixval.py	/^def pt2fmt(pt):$/;"	f
pt2fmt	raster/scripts/python/raster2pgsql.py	/^def pt2fmt(pt):$/;"	f
pt2gdt	raster/scripts/python/rtrowdump.py	/^def pt2gdt(pt):$/;"	f
pt2numpy	raster/scripts/python/raster2pgsql.py	/^def pt2numpy(pt):$/;"	f
pt2numpy	raster/scripts/python/rtrowdump.py	/^def pt2numpy(pt):$/;"	f
pt_continues_arc	liblwgeom/lwsegmentize.c	/^static int pt_continues_arc(const POINT4D *a1, const POINT4D *a2, const POINT4D *a3, const POINT4D *b)$/;"	f	file:
pt_distance	postgis/gserialized_gist_2d.c	/^static inline double pt_distance(double ax, double ay, double bx, double by)$/;"	f	file:
pt_in_ring_2d	liblwgeom/lwalgorithm.c	/^pt_in_ring_2d(const POINT2D *p, const POINTARRAY *ring)$/;"	f
pt_in_ring_3d	liblwgeom/measures3d.c	/^pt_in_ring_3d(const POINT3DZ *p, const POINTARRAY *ring,PLANE3D *plane)$/;"	f
pta_desegmentize	liblwgeom/lwsegmentize.c	/^pta_desegmentize(POINTARRAY *points, int type, int srid)$/;"	f
ptarray	liblwgeom/lwin_wkt_parse.y	/^ptarray : $/;"	l
ptarray_addPoint	liblwgeom/ptarray.c	/^ptarray_addPoint(const POINTARRAY *pa, uint8_t *p, size_t pdims, uint32_t where)$/;"	f
ptarray_affine	liblwgeom/ptarray.c	/^ptarray_affine(POINTARRAY *pa, const AFFINE *a)$/;"	f
ptarray_append_point	liblwgeom/ptarray.c	/^ptarray_append_point(POINTARRAY *pa, const POINT4D *pt, int repeated_points)$/;"	f
ptarray_append_ptarray	liblwgeom/ptarray.c	/^ptarray_append_ptarray(POINTARRAY *pa1, POINTARRAY *pa2, double gap_tolerance)$/;"	f
ptarray_area_sphere	liblwgeom/lwgeodetic.c	/^ptarray_area_sphere(const POINTARRAY *pa)$/;"	f
ptarray_area_spheroid	liblwgeom/lwspheroid.c	/^static double ptarray_area_spheroid(const POINTARRAY *pa, const SPHEROID *spheroid)$/;"	f	file:
ptarray_calculate_gbox_cartesian	liblwgeom/g_box.c	/^int ptarray_calculate_gbox_cartesian(const POINTARRAY *pa, GBOX *gbox )$/;"	f
ptarray_calculate_gbox_geodetic	liblwgeom/lwgeodetic.c	/^int ptarray_calculate_gbox_geodetic(const POINTARRAY *pa, GBOX *gbox)$/;"	f
ptarray_check_geodetic	liblwgeom/lwgeodetic.c	/^static int ptarray_check_geodetic(const POINTARRAY *pa)$/;"	f	file:
ptarray_clone	liblwgeom/ptarray.c	/^ptarray_clone(const POINTARRAY *in)$/;"	f
ptarray_clone_deep	liblwgeom/ptarray.c	/^ptarray_clone_deep(const POINTARRAY *in)$/;"	f
ptarray_close2d	liblwgeom/lwgeom_geos_clean.c	/^ptarray_close2d(POINTARRAY* ring)$/;"	f
ptarray_construct	liblwgeom/ptarray.c	/^ptarray_construct(char hasz, char hasm, uint32_t npoints)$/;"	f
ptarray_construct_copy_data	liblwgeom/ptarray.c	/^ptarray_construct_copy_data(char hasz, char hasm, uint32_t npoints, const uint8_t *ptlist)$/;"	f
ptarray_construct_empty	liblwgeom/ptarray.c	/^ptarray_construct_empty(char hasz, char hasm, uint32_t maxpoints)$/;"	f
ptarray_construct_reference_data	liblwgeom/ptarray.c	/^POINTARRAY* ptarray_construct_reference_data(char hasz, char hasm, uint32_t npoints, uint8_t *ptlist)$/;"	f
ptarray_contains_point	liblwgeom/ptarray.c	/^ptarray_contains_point(const POINTARRAY *pa, const POINT2D *pt)$/;"	f
ptarray_contains_point_partial	liblwgeom/ptarray.c	/^ptarray_contains_point_partial(const POINTARRAY *pa, const POINT2D *pt, int check_closed, int *winding_number)$/;"	f
ptarray_contains_point_sphere	liblwgeom/lwgeodetic.c	/^int ptarray_contains_point_sphere(const POINTARRAY *pa, const POINT2D *pt_outside, const POINT2D *pt_to_test)$/;"	f
ptarray_distance_spheroid	liblwgeom/lwgeodetic.c	/^static double ptarray_distance_spheroid(const POINTARRAY *pa1, const POINTARRAY *pa2, const SPHEROID *s, double tolerance, int check_intersection)$/;"	f	file:
ptarray_dp_findsplit	liblwgeom/ptarray.c	/^ptarray_dp_findsplit(POINTARRAY *pts, int p1, int p2, int *split, double *dist)$/;"	f	file:
ptarray_flip_coordinates	liblwgeom/ptarray.c	/^ptarray_flip_coordinates(POINTARRAY *pa)$/;"	f
ptarray_force_dims	liblwgeom/ptarray.c	/^ptarray_force_dims(const POINTARRAY *pa, int hasz, int hasm)$/;"	f
ptarray_force_geodetic	liblwgeom/lwgeodetic.c	/^static int ptarray_force_geodetic(POINTARRAY *pa)$/;"	f	file:
ptarray_free	liblwgeom/ptarray.c	/^void ptarray_free(POINTARRAY *pa)$/;"	f
ptarray_from_GEOSCoordSeq	liblwgeom/lwgeom_geos.c	/^ptarray_from_GEOSCoordSeq(const GEOSCoordSequence *cs, char want3d)$/;"	f
ptarray_from_SFCGAL	liblwgeom/lwgeom_sfcgal.c	/^ptarray_from_SFCGAL(const sfcgal_geometry_t* geom, int want3d)$/;"	f	file:
ptarray_from_wkb_state	liblwgeom/lwin_wkb.c	/^static POINTARRAY* ptarray_from_wkb_state(wkb_parse_state *s)$/;"	f	file:
ptarray_grid	postgis/lwgeom_functions_analytic.c	/^ptarray_grid(POINTARRAY *pa, gridspec *grid)$/;"	f
ptarray_has_m	liblwgeom/ptarray.c	/^ptarray_has_m(const POINTARRAY *pa)$/;"	f
ptarray_has_z	liblwgeom/ptarray.c	/^ptarray_has_z(const POINTARRAY *pa)$/;"	f
ptarray_insert_point	liblwgeom/ptarray.c	/^ptarray_insert_point(POINTARRAY *pa, const POINT4D *p, int where)$/;"	f
ptarray_is_closed	liblwgeom/ptarray.c	/^ptarray_is_closed(const POINTARRAY *in)$/;"	f
ptarray_is_closed_2d	liblwgeom/ptarray.c	/^ptarray_is_closed_2d(const POINTARRAY *in)$/;"	f
ptarray_is_closed_3d	liblwgeom/ptarray.c	/^ptarray_is_closed_3d(const POINTARRAY *in)$/;"	f
ptarray_is_closed_z	liblwgeom/ptarray.c	/^ptarray_is_closed_z(const POINTARRAY *in)$/;"	f
ptarray_isccw	liblwgeom/ptarray.c	/^ptarray_isccw(const POINTARRAY *pa)$/;"	f
ptarray_length	liblwgeom/ptarray.c	/^ptarray_length(const POINTARRAY *pts)$/;"	f
ptarray_length_2d	liblwgeom/ptarray.c	/^ptarray_length_2d(const POINTARRAY *pts)$/;"	f
ptarray_length_spheroid	liblwgeom/lwgeodetic.c	/^double ptarray_length_spheroid(const POINTARRAY *pa, const SPHEROID *s)$/;"	f
ptarray_locate_along	liblwgeom/lwlinearreferencing.c	/^ptarray_locate_along(const POINTARRAY *pa, double m, double offset)$/;"	f	file:
ptarray_locate_between_m	postgis/lwgeom_functions_lrs.c	/^ptarray_locate_between_m(POINTARRAY *ipa, double m0, double m1)$/;"	f	file:
ptarray_locate_point	liblwgeom/ptarray.c	/^ptarray_locate_point(const POINTARRAY *pa, const POINT4D *p4d, double *mindistout, POINT4D *proj4d)$/;"	f
ptarray_longitude_shift	liblwgeom/ptarray.c	/^ptarray_longitude_shift(POINTARRAY *pa)$/;"	f
ptarray_merge	liblwgeom/ptarray.c	/^ptarray_merge(POINTARRAY *pa1, POINTARRAY *pa2)$/;"	f
ptarray_nudge_geodetic	liblwgeom/lwgeodetic.c	/^ptarray_nudge_geodetic(POINTARRAY *pa)$/;"	f	file:
ptarray_point_size	liblwgeom/ptarray.c	/^ptarray_point_size(const POINTARRAY *pa)$/;"	f
ptarray_removePoint	liblwgeom/ptarray.c	/^ptarray_removePoint(POINTARRAY *pa, uint32_t which)$/;"	f
ptarray_remove_point	liblwgeom/ptarray.c	/^ptarray_remove_point(POINTARRAY *pa, int where)$/;"	f
ptarray_remove_repeated_points	liblwgeom/ptarray.c	/^ptarray_remove_repeated_points(POINTARRAY *in)$/;"	f
ptarray_reverse	liblwgeom/ptarray.c	/^ptarray_reverse(POINTARRAY *pa)$/;"	f
ptarray_same	liblwgeom/ptarray.c	/^ptarray_same(const POINTARRAY *pa1, const POINTARRAY *pa2)$/;"	f
ptarray_segmentize2d	liblwgeom/ptarray.c	/^ptarray_segmentize2d(const POINTARRAY *ipa, double dist)$/;"	f
ptarray_segmentize_sphere	liblwgeom/lwgeodetic.c	/^ptarray_segmentize_sphere(const POINTARRAY *pa_in, double max_seg_length)$/;"	f	file:
ptarray_set_point4d	liblwgeom/lwgeom_api.c	/^ptarray_set_point4d(POINTARRAY *pa, int n, const POINT4D *p4d)$/;"	f
ptarray_signed_area	liblwgeom/ptarray.c	/^ptarray_signed_area(const POINTARRAY *pa)$/;"	f
ptarray_simplify	liblwgeom/ptarray.c	/^ptarray_simplify(POINTARRAY *inpts, double epsilon, unsigned int minpts)$/;"	f
ptarray_startpoint	liblwgeom/ptarray.c	/^ptarray_startpoint(const POINTARRAY* pa, POINT4D* pt)$/;"	f
ptarray_substring	liblwgeom/ptarray.c	/^ptarray_substring(POINTARRAY *ipa, double from, double to, double tolerance)$/;"	f
ptarray_suite	liblwgeom/cunit/cu_ptarray.c	/^CU_SuiteInfo ptarray_suite = {"ptarray", NULL, NULL, ptarray_tests };$/;"	v
ptarray_tests	liblwgeom/cunit/cu_ptarray.c	/^CU_TestInfo ptarray_tests[] =$/;"	v
ptarray_to_GEOSCoordSeq	liblwgeom/lwgeom_geos.c	/^ptarray_to_GEOSCoordSeq(const POINTARRAY *pa)$/;"	f
ptarray_to_SFCGAL	liblwgeom/lwgeom_sfcgal.c	/^ptarray_to_SFCGAL(const POINTARRAY* pa, int type)$/;"	f	file:
ptarray_to_kml2_sb	liblwgeom/lwout_kml.c	/^ptarray_to_kml2_sb(const POINTARRAY *pa, int precision, stringbuffer_t *sb)$/;"	f	file:
ptarray_to_twkb_buf	liblwgeom/lwout_twkb.c	/^static uint8_t* ptarray_to_twkb_buf(const POINTARRAY *pa, uint8_t *buf, uint8_t variant,int8_t prec,int accum_rel[],int method)$/;"	f	file:
ptarray_to_twkb_buf_m0	liblwgeom/lwout_twkb.c	/^static uint8_t* ptarray_to_twkb_buf_m0(const POINTARRAY *pa, uint8_t *buf, uint8_t variant,int8_t prec,int accum_rel[])$/;"	f	file:
ptarray_to_twkb_buf_m1	liblwgeom/lwout_twkb.c	/^static uint8_t* ptarray_to_twkb_buf_m1(const POINTARRAY *pa, uint8_t *buf, uint8_t variant,int8_t prec,int accum_rel[])$/;"	f	file:
ptarray_to_twkb_size	liblwgeom/lwout_twkb.c	/^static size_t ptarray_to_twkb_size(const POINTARRAY *pa, uint8_t variant,int prec,int accum_rel[],int method)$/;"	f	file:
ptarray_to_twkb_size_m0	liblwgeom/lwout_twkb.c	/^static size_t ptarray_to_twkb_size_m0(const POINTARRAY *pa, uint8_t variant,int prec,int accum_rel[])$/;"	f	file:
ptarray_to_twkb_size_m1	liblwgeom/lwout_twkb.c	/^static size_t ptarray_to_twkb_size_m1(const POINTARRAY *pa, uint8_t variant,int prec,int accum_rel[])$/;"	f	file:
ptarray_to_wkb_buf	liblwgeom/lwout_wkb.c	/^static uint8_t* ptarray_to_wkb_buf(const POINTARRAY *pa, uint8_t *buf, uint8_t variant)$/;"	f	file:
ptarray_to_wkb_size	liblwgeom/lwout_wkb.c	/^static size_t ptarray_to_wkb_size(const POINTARRAY *pa, uint8_t variant)$/;"	f	file:
ptarray_to_wkt_sb	liblwgeom/lwout_wkt.c	/^static void ptarray_to_wkt_sb(const POINTARRAY *ptarray, stringbuffer_t *sb, int precision, uint8_t variant)$/;"	f	file:
ptarray_transform	liblwgeom/lwgeom_transform.c	/^ptarray_transform(POINTARRAY *pa, projPJ inpj, projPJ outpj)$/;"	f
ptarrayarc_contains_point	liblwgeom/ptarray.c	/^ptarrayarc_contains_point(const POINTARRAY *pa, const POINT2D *pt)$/;"	f
ptarrayarc_contains_point_partial	liblwgeom/ptarray.c	/^ptarrayarc_contains_point_partial(const POINTARRAY *pa, const POINT2D *pt, int check_closed, int *winding_number)$/;"	f
ptarrays	postgis/lwgeom_functions_lrs.c	/^	POINTARRAY **ptarrays;$/;"	m	struct:__anon15	file:
ptarrayvalue	liblwgeom/lwin_wkt_parse.c	/^	POINTARRAY *ptarrayvalue;$/;"	m	union:YYSTYPE	file:
ptarrayvalue	liblwgeom/lwin_wkt_parse.h	/^	POINTARRAY *ptarrayvalue;$/;"	m	union:YYSTYPE
pv	liblwgeom/measures3d.h	/^	VECTOR3D	pv;  \/*Perpendicular normal vector*\/$/;"	m	struct:__anon33
quantile	raster/rt_core/librtcore.h	/^	double quantile;$/;"	m	struct:quantile_llist
quantile	raster/rt_core/librtcore.h	/^	double quantile;$/;"	m	struct:rt_quantile_t
quantile_llist	raster/rt_core/librtcore.h	/^struct quantile_llist {$/;"	s
quantile_llist_delete	raster/rt_core/rt_statistics.c	/^static int quantile_llist_delete(struct quantile_llist_element *element) {$/;"	f	file:
quantile_llist_destroy	raster/rt_core/rt_statistics.c	/^int quantile_llist_destroy(struct quantile_llist **list, uint32_t list_count) {$/;"	f
quantile_llist_element	raster/rt_core/librtcore.h	/^struct quantile_llist_element {$/;"	s
quantile_llist_index	raster/rt_core/librtcore.h	/^struct quantile_llist_index {$/;"	s
quantile_llist_index_delete	raster/rt_core/rt_statistics.c	/^static void quantile_llist_index_delete(struct quantile_llist *qll, struct quantile_llist_element *qle) {$/;"	f	file:
quantile_llist_index_reset	raster/rt_core/rt_statistics.c	/^static void quantile_llist_index_reset(struct quantile_llist *qll) {$/;"	f	file:
quantile_llist_index_search	raster/rt_core/rt_statistics.c	/^static struct quantile_llist_element *quantile_llist_index_search($/;"	f	file:
quantile_llist_index_update	raster/rt_core/rt_statistics.c	/^static void quantile_llist_index_update(struct quantile_llist *qll, struct quantile_llist_element *qle, uint32_t idx) {$/;"	f	file:
quantile_llist_insert	raster/rt_core/rt_statistics.c	/^static struct quantile_llist_element *quantile_llist_insert($/;"	f	file:
quantile_llist_search	raster/rt_core/rt_statistics.c	/^static struct quantile_llist_element *quantile_llist_search($/;"	f	file:
queue	java/ejb3/src/org/postgis/ejb/UserBean.java	/^	private Queue queue;$/;"	f	class:UserBean	file:
quicksort	raster/rt_core/rt_statistics.c	/^static void quicksort(double *left, double *right) {$/;"	f	file:
quote_sql_name	raster/scripts/python/raster2pgsql.py	/^def quote_sql_name(name):$/;"	f
quote_sql_value	raster/scripts/python/raster2pgsql.py	/^def quote_sql_value(value):$/;"	f
quoteident	raster/loader/raster2pgsql.h	/^	int quoteident;$/;"	m	struct:raster_loader_config
quoteidentifiers	loader/shp2pgsql-core.h	/^	int quoteidentifiers;$/;"	m	struct:shp_loader_config
r	liblwgeom/cunit/cu_in_wkt.c	/^char *r;$/;"	v
rad2deg	liblwgeom/lwgeodetic.h	61;"	d
radius	liblwgeom/lwgeodetic_tree.h	/^	double radius;$/;"	m	struct:circ_node
range	postgis/gserialized_gist_2d.c	/^	float		range;			\/* width of general MBR projection to the$/;"	m	struct:__anon18	file:
range_quintile	postgis/gserialized_estimate.c	/^range_quintile(int *vals, int nvals)$/;"	f	file:
raster	raster/rt_core/librtcore.h	/^		rt_raster raster; \/* reference to parent raster *\/$/;"	m	struct:rt_band_t
raster	raster/rt_core/librtcore.h	/^	rt_raster raster;$/;"	m	struct:rt_iterator_t
raster	raster/rt_core/rt_mapalgebra.c	/^	rt_raster *raster;$/;"	m	struct:_rti_iterator_arg_t	file:
raster	raster/rt_core/rt_mapalgebra.c	/^	rt_raster raster;$/;"	m	struct:_rti_colormap_arg_t	file:
raster	raster/rt_pg/rtpg_mapalgebra.c	/^	rt_raster *raster;$/;"	m	struct:rtpg_nmapalgebra_arg_t	file:
raster	raster/rt_pg/rtpg_mapalgebra.c	/^	rt_raster *raster;$/;"	m	struct:rtpg_union_band_arg_t	file:
raster	raster/rt_pg/rtpg_mapalgebra.c	/^	rt_raster raster;$/;"	m	struct:rtpg_clip_arg_t	file:
raster	raster/rt_pg/rtpg_mapalgebra.c	/^	rt_raster raster;$/;"	m	struct:rtpg_colormap_arg_t	file:
raster	raster/scripts/python/rtrowdump.py	/^        raster = numpy.zeros((rt.height, rt.width), pt2numpy(out_data_type))$/;"	v
raster_asraster_dst	raster/test/regress/rt_asraster.sql	/^CREATE TABLE raster_asraster_dst ($/;"	t
raster_asraster_dst.rast	raster/test/regress/rt_asraster.sql	/^	rast raster$/;"	F
raster_asraster_dst.rid	raster/test/regress/rt_asraster.sql	/^	rid varchar,$/;"	F
raster_asraster_geom	raster/test/regress/rt_asraster.sql	/^CREATE TABLE raster_asraster_geom ($/;"	t
raster_asraster_geom.geom	raster/test/regress/rt_asraster.sql	/^	geom geometry$/;"	F
raster_asraster_rast	raster/test/regress/rt_asraster.sql	/^CREATE TABLE raster_asraster_rast ($/;"	t
raster_asraster_rast.rast	raster/test/regress/rt_asraster.sql	/^	rast raster$/;"	F
raster_basics_suite	raster/test/cunit/cu_raster_basics.c	/^CU_SuiteInfo raster_basics_suite = {"raster_basics",  NULL,  NULL, raster_basics_tests};$/;"	v
raster_basics_tests	raster/test/cunit/cu_raster_basics.c	/^CU_TestInfo raster_basics_tests[] = {$/;"	v
raster_clip	raster/test/regress/rt_clip.sql	/^CREATE TABLE raster_clip ($/;"	t
raster_clip.rast	raster/test/regress/rt_clip.sql	/^	rast raster$/;"	F
raster_clip.rid	raster/test/regress/rt_clip.sql	/^	rid integer,$/;"	F
raster_clip_out	raster/test/regress/rt_clip.sql	/^CREATE TABLE raster_clip_out ($/;"	t
raster_clip_out.gid	raster/test/regress/rt_clip.sql	/^	gid integer,$/;"	F
raster_clip_out.rast	raster/test/regress/rt_clip.sql	/^	rast raster$/;"	F
raster_clip_out.rid	raster/test/regress/rt_clip.sql	/^	rid integer,$/;"	F
raster_clip_out.tid	raster/test/regress/rt_clip.sql	/^	tid integer,$/;"	F
raster_colormap_in	raster/test/regress/rt_colormap.sql	/^CREATE TABLE raster_colormap_in ($/;"	t
raster_colormap_in.rast	raster/test/regress/rt_colormap.sql	/^	rast raster$/;"	F
raster_colormap_in.rid	raster/test/regress/rt_colormap.sql	/^	rid integer,$/;"	F
raster_colormap_out	raster/test/regress/rt_colormap.sql	/^CREATE TABLE raster_colormap_out ($/;"	t
raster_colormap_out.rast	raster/test/regress/rt_colormap.sql	/^	rast raster$/;"	F
raster_colormap_out.rid	raster/test/regress/rt_colormap.sql	/^	rid integer,$/;"	F
raster_colormap_out.testid	raster/test/regress/rt_colormap.sql	/^	testid integer,$/;"	F
raster_column	raster/loader/raster2pgsql.h	/^	char *raster_column;$/;"	m	struct:raster_loader_config
raster_destroy	raster/loader/raster2pgsql.c	/^raster_destroy(rt_raster raster) {$/;"	f	file:
raster_dumpvalues	raster/test/regress/rt_dumpvalues.sql	/^CREATE TABLE raster_dumpvalues ($/;"	t
raster_dumpvalues.rast	raster/test/regress/rt_dumpvalues.sql	/^	rast raster$/;"	F
raster_dumpvalues.rid	raster/test/regress/rt_dumpvalues.sql	/^	rid integer,$/;"	F
raster_elevation	raster/test/regress/rt_elevation_functions.sql	/^CREATE TABLE raster_elevation (rid integer, rast raster);$/;"	t
raster_elevation.rast	raster/test/regress/rt_elevation_functions.sql	/^CREATE TABLE raster_elevation (rid integer, rast raster);$/;"	F
raster_elevation.rid	raster/test/regress/rt_elevation_functions.sql	/^CREATE TABLE raster_elevation (rid integer, rast raster);$/;"	F
raster_elevation_out	raster/test/regress/rt_elevation_functions.sql	/^CREATE TABLE raster_elevation_out (rid integer, functype text, rast raster);$/;"	t
raster_elevation_out.functype	raster/test/regress/rt_elevation_functions.sql	/^CREATE TABLE raster_elevation_out (rid integer, functype text, rast raster);$/;"	F
raster_elevation_out.rast	raster/test/regress/rt_elevation_functions.sql	/^CREATE TABLE raster_elevation_out (rid integer, functype text, rast raster);$/;"	F
raster_elevation_out.rid	raster/test/regress/rt_elevation_functions.sql	/^CREATE TABLE raster_elevation_out (rid integer, functype text, rast raster);$/;"	F
raster_gdalwarp_dst	raster/test/regress/rt_gdalwarp.sql	/^CREATE TABLE raster_gdalwarp_dst ($/;"	t
raster_gdalwarp_dst.rast	raster/test/regress/rt_gdalwarp.sql	/^	rast raster$/;"	F
raster_gdalwarp_dst.rid	raster/test/regress/rt_gdalwarp.sql	/^	rid varchar,$/;"	F
raster_gdalwarp_src	raster/test/regress/rt_gdalwarp.sql	/^CREATE TABLE raster_gdalwarp_src ($/;"	t
raster_gdalwarp_src.rast	raster/test/regress/rt_gdalwarp.sql	/^	rast raster$/;"	F
raster_geometry_suite	raster/test/cunit/cu_raster_geometry.c	/^CU_SuiteInfo raster_geometry_suite = {"raster_geometry",  NULL,  NULL, raster_geometry_tests};$/;"	v
raster_geometry_tests	raster/test/cunit/cu_raster_geometry.c	/^CU_TestInfo raster_geometry_tests[] = {$/;"	v
raster_geos_rast	raster/test/regress/rt_geos_relationships.sql	/^CREATE TABLE raster_geos_rast ($/;"	t
raster_geos_rast.rast	raster/test/regress/rt_geos_relationships.sql	/^	rast raster$/;"	F
raster_geos_rast.rid	raster/test/regress/rt_geos_relationships.sql	/^	rid integer,$/;"	F
raster_intersection	raster/test/regress/rt_intersection.sql	/^CREATE TABLE raster_intersection ($/;"	t
raster_intersection.rast	raster/test/regress/rt_intersection.sql	/^	rast raster$/;"	F
raster_intersection.rid	raster/test/regress/rt_intersection.sql	/^	rid integer,$/;"	F
raster_intersection_out	raster/test/regress/rt_intersection.sql	/^CREATE TABLE raster_intersection_out ($/;"	t
raster_intersection_out.rast	raster/test/regress/rt_intersection.sql	/^	rast raster$/;"	F
raster_intersection_out.rid1	raster/test/regress/rt_intersection.sql	/^	rid1 integer,$/;"	F
raster_intersection_out.rid2	raster/test/regress/rt_intersection.sql	/^	rid2 integer,$/;"	F
raster_intersects_geom	raster/test/regress/rt_intersects.sql	/^CREATE TABLE raster_intersects_geom ($/;"	t
raster_intersects_geom.geom	raster/test/regress/rt_intersects.sql	/^	geom geometry$/;"	F
raster_intersects_geom.gid	raster/test/regress/rt_intersects.sql	/^	gid integer,$/;"	F
raster_intersects_rast	raster/test/regress/rt_intersects.sql	/^CREATE TABLE raster_intersects_rast ($/;"	t
raster_intersects_rast.rast	raster/test/regress/rt_intersects.sql	/^	rast raster$/;"	F
raster_intersects_rast.rid	raster/test/regress/rt_intersects.sql	/^	rid integer,$/;"	F
raster_loader_config	raster/loader/raster2pgsql.h	/^typedef struct raster_loader_config {$/;"	s
raster_mapalgebra	raster/test/regress/rt_mapalgebra_expr.sql	/^CREATE TABLE raster_mapalgebra ($/;"	t
raster_mapalgebra	raster/test/regress/rt_mapalgebraexpr_2raster.sql	/^CREATE TABLE raster_mapalgebra ($/;"	t
raster_mapalgebra	raster/test/regress/rt_mapalgebrafct_2raster.sql	/^CREATE TABLE raster_mapalgebra ($/;"	t
raster_mapalgebra.rast	raster/test/regress/rt_mapalgebra_expr.sql	/^	rast raster$/;"	F
raster_mapalgebra.rast	raster/test/regress/rt_mapalgebraexpr_2raster.sql	/^	rast raster$/;"	F
raster_mapalgebra.rast	raster/test/regress/rt_mapalgebrafct_2raster.sql	/^	rast raster$/;"	F
raster_mapalgebra.rid	raster/test/regress/rt_mapalgebra_expr.sql	/^	rid integer,$/;"	F
raster_mapalgebra.rid	raster/test/regress/rt_mapalgebraexpr_2raster.sql	/^	rid integer,$/;"	F
raster_mapalgebra.rid	raster/test/regress/rt_mapalgebrafct_2raster.sql	/^	rid integer,$/;"	F
raster_mapalgebra_first	raster/test/regress/rt_mapalgebrafct_2raster.sql	/^CREATE OR REPLACE FUNCTION raster_mapalgebra_first($/;"	f
raster_mapalgebra_intersection	raster/test/regress/rt_mapalgebrafct_2raster.sql	/^CREATE OR REPLACE FUNCTION raster_mapalgebra_intersection($/;"	f
raster_mapalgebra_out	raster/test/regress/rt_mapalgebra_expr.sql	/^CREATE TABLE raster_mapalgebra_out ($/;"	t
raster_mapalgebra_out	raster/test/regress/rt_mapalgebraexpr_2raster.sql	/^CREATE TABLE raster_mapalgebra_out ($/;"	t
raster_mapalgebra_out	raster/test/regress/rt_mapalgebrafct_2raster.sql	/^CREATE TABLE raster_mapalgebra_out ($/;"	t
raster_mapalgebra_out.extent	raster/test/regress/rt_mapalgebra_expr.sql	/^	extent varchar,$/;"	F
raster_mapalgebra_out.extent	raster/test/regress/rt_mapalgebraexpr_2raster.sql	/^	extent varchar,$/;"	F
raster_mapalgebra_out.extent	raster/test/regress/rt_mapalgebrafct_2raster.sql	/^	extent varchar,$/;"	F
raster_mapalgebra_out.rast	raster/test/regress/rt_mapalgebra_expr.sql	/^	rast raster$/;"	F
raster_mapalgebra_out.rast	raster/test/regress/rt_mapalgebraexpr_2raster.sql	/^	rast raster$/;"	F
raster_mapalgebra_out.rast	raster/test/regress/rt_mapalgebrafct_2raster.sql	/^	rast raster$/;"	F
raster_mapalgebra_out.rid1	raster/test/regress/rt_mapalgebra_expr.sql	/^	rid1 integer,$/;"	F
raster_mapalgebra_out.rid1	raster/test/regress/rt_mapalgebraexpr_2raster.sql	/^	rid1 integer,$/;"	F
raster_mapalgebra_out.rid1	raster/test/regress/rt_mapalgebrafct_2raster.sql	/^	rid1 integer,$/;"	F
raster_mapalgebra_out.rid2	raster/test/regress/rt_mapalgebra_expr.sql	/^	rid2 integer,$/;"	F
raster_mapalgebra_out.rid2	raster/test/regress/rt_mapalgebraexpr_2raster.sql	/^	rid2 integer,$/;"	F
raster_mapalgebra_out.rid2	raster/test/regress/rt_mapalgebrafct_2raster.sql	/^	rid2 integer,$/;"	F
raster_mapalgebra_second	raster/test/regress/rt_mapalgebrafct_2raster.sql	/^CREATE OR REPLACE FUNCTION raster_mapalgebra_second($/;"	f
raster_misc_suite	raster/test/cunit/cu_raster_misc.c	/^CU_SuiteInfo raster_misc_suite = {"raster_misc",  NULL,  NULL, raster_misc_tests};$/;"	v
raster_misc_tests	raster/test/cunit/cu_raster_misc.c	/^CU_TestInfo raster_misc_tests[] = {$/;"	v
raster_nearestvalue	raster/test/regress/rt_nearestvalue.sql	/^CREATE TABLE raster_nearestvalue ($/;"	t
raster_nearestvalue.rast	raster/test/regress/rt_nearestvalue.sql	/^	rast raster$/;"	F
raster_neighborhood	raster/test/regress/rt_neighborhood.sql	/^CREATE TABLE raster_neighborhood ($/;"	t
raster_neighborhood.rast	raster/test/regress/rt_neighborhood.sql	/^	rast raster$/;"	F
raster_nmapalgebra_in	raster/test/regress/rt_mapalgebra.sql	/^CREATE TABLE raster_nmapalgebra_in ($/;"	t
raster_nmapalgebra_in.rast	raster/test/regress/rt_mapalgebra.sql	/^	rast raster$/;"	F
raster_nmapalgebra_in.rid	raster/test/regress/rt_mapalgebra.sql	/^	rid integer,$/;"	F
raster_nmapalgebra_test	raster/test/regress/rt_mapalgebra.sql	/^CREATE OR REPLACE FUNCTION raster_nmapalgebra_test($/;"	f
raster_nullage	raster/test/regress/rt_mapalgebra_expr.sql	/^ CREATE OR REPLACE FUNCTION raster_nullage(pixel FLOAT, VARIADIC args TEXT[])$/;"	f
raster_nullage	raster/test/regress/rt_mapalgebraexpr.sql	/^ CREATE OR REPLACE FUNCTION raster_nullage(pixel FLOAT, VARIADIC args TEXT[])$/;"	f
raster_nullage	raster/test/regress/rt_mapalgebrafct.sql	/^ CREATE OR REPLACE FUNCTION raster_nullage(pixel FLOAT, VARIADIC args TEXT[])$/;"	f
raster_pixelascentroids	raster/test/regress/rt_pixelascentroids.sql	/^CREATE TABLE raster_pixelascentroids ($/;"	t
raster_pixelascentroids.rast	raster/test/regress/rt_pixelascentroids.sql	/^	rast raster$/;"	F
raster_pixelaspoints	raster/test/regress/rt_pixelaspoints.sql	/^CREATE TABLE raster_pixelaspoints ($/;"	t
raster_pixelaspoints.rast	raster/test/regress/rt_pixelaspoints.sql	/^	rast raster$/;"	F
raster_pixelaspolygons	raster/test/regress/rt_pixelaspolygons.sql	/^CREATE TABLE raster_pixelaspolygons ($/;"	t
raster_pixelaspolygons.rast	raster/test/regress/rt_pixelaspolygons.sql	/^	rast raster$/;"	F
raster_pixelofvalue	raster/test/regress/rt_pixelofvalue.sql	/^CREATE TABLE raster_pixelofvalue ($/;"	t
raster_pixelofvalue.rast	raster/test/regress/rt_pixelofvalue.sql	/^	rast raster$/;"	F
raster_plus_arg1	raster/test/regress/rt_mapalgebrafct.sql	/^CREATE OR REPLACE FUNCTION raster_plus_arg1(pixel FLOAT, VARIADIC args TEXT[])$/;"	f
raster_plus_twenty	raster/test/regress/rt_mapalgebra_expr.sql	/^CREATE OR REPLACE FUNCTION raster_plus_twenty(pixel FLOAT, VARIADIC args TEXT[])$/;"	f
raster_plus_twenty	raster/test/regress/rt_mapalgebraexpr.sql	/^CREATE OR REPLACE FUNCTION raster_plus_twenty(pixel FLOAT, VARIADIC args TEXT[])$/;"	f
raster_plus_twenty	raster/test/regress/rt_mapalgebrafct.sql	/^CREATE OR REPLACE FUNCTION raster_plus_twenty(pixel FLOAT, VARIADIC args TEXT[])$/;"	f
raster_polygon	raster/test/regress/rt_polygon.sql	/^CREATE TABLE raster_polygon ($/;"	t
raster_polygon.rast	raster/test/regress/rt_polygon.sql	/^	rast raster$/;"	F
raster_polynomial	raster/test/regress/rt_mapalgebra_expr.sql	/^CREATE OR REPLACE FUNCTION raster_polynomial(pixel FLOAT, VARIADIC args TEXT[])$/;"	f
raster_polynomial	raster/test/regress/rt_mapalgebraexpr.sql	/^CREATE OR REPLACE FUNCTION raster_polynomial(pixel FLOAT, VARIADIC args TEXT[])$/;"	f
raster_polynomial	raster/test/regress/rt_mapalgebrafct.sql	/^CREATE OR REPLACE FUNCTION raster_polynomial(pixel FLOAT, VARIADIC args TEXT[])$/;"	f
raster_raster2world	raster/test/regress/rt_rastertoworldcoord.sql	/^CREATE TABLE raster_raster2world ($/;"	t
raster_raster2world.rast	raster/test/regress/rt_rastertoworldcoord.sql	/^	rast raster$/;"	F
raster_raster2world.rid	raster/test/regress/rt_rastertoworldcoord.sql	/^	rid integer,$/;"	F
raster_setvalues_out	raster/test/regress/rt_setvalues_array.sql	/^CREATE TABLE raster_setvalues_out ($/;"	t
raster_setvalues_out.rast	raster/test/regress/rt_setvalues_array.sql	/^	rast raster$/;"	F
raster_setvalues_out.rid	raster/test/regress/rt_setvalues_array.sql	/^	rid integer,$/;"	F
raster_setvalues_rast	raster/test/regress/rt_setvalues_array.sql	/^CREATE TABLE raster_setvalues_rast ($/;"	t
raster_setvalues_rast.rast	raster/test/regress/rt_setvalues_array.sql	/^	rast raster$/;"	F
raster_setvalues_rast.rid	raster/test/regress/rt_setvalues_array.sql	/^	rid integer,$/;"	F
raster_summarystatsstate	raster/scripts/plpgsql/st_summarystatsagg.sql	/^CREATE OR REPLACE FUNCTION raster_summarystatsstate(ss summarystats, rast raster)$/;"	f
raster_summarystatsstate	raster/scripts/plpgsql/st_summarystatsagg.sql	/^CREATE OR REPLACE FUNCTION raster_summarystatsstate(ss summarystats, rast raster, nband int DEFAULT 1, exclude_nodata_value boolean DEFAULT TRUE, sample_percent double precision DEFAULT 1)$/;"	f
raster_union_in	raster/test/regress/rt_union.sql	/^CREATE TABLE raster_union_in ($/;"	t
raster_union_in.rast	raster/test/regress/rt_union.sql	/^	rast raster$/;"	F
raster_union_in.rid	raster/test/regress/rt_union.sql	/^	rid integer,$/;"	F
raster_union_out	raster/test/regress/rt_union.sql	/^CREATE TABLE raster_union_out ($/;"	t
raster_union_out.rast	raster/test/regress/rt_union.sql	/^	rast raster$/;"	F
raster_union_out.uniontype	raster/test/regress/rt_union.sql	/^	uniontype text,$/;"	F
raster_value_arrays	raster/test/regress/rt_4ma.sql	/^CREATE TABLE raster_value_arrays ($/;"	t
raster_value_arrays	raster/test/regress/rt_elevation_functions.sql	/^CREATE TABLE raster_value_arrays ($/;"	t
raster_value_arrays	raster/test/regress/rt_invdistweight4ma.sql	/^CREATE TABLE raster_value_arrays ($/;"	t
raster_value_arrays.id	raster/test/regress/rt_4ma.sql	/^	id integer,$/;"	F
raster_value_arrays.id	raster/test/regress/rt_elevation_functions.sql	/^	id integer,$/;"	F
raster_value_arrays.id	raster/test/regress/rt_invdistweight4ma.sql	/^	id integer,$/;"	F
raster_value_arrays.val	raster/test/regress/rt_4ma.sql	/^	val double precision[][]$/;"	F
raster_value_arrays.val	raster/test/regress/rt_elevation_functions.sql	/^	val double precision[][]$/;"	F
raster_value_arrays.val	raster/test/regress/rt_invdistweight4ma.sql	/^	val double precision[][]$/;"	F
raster_wkb_suite	raster/test/cunit/cu_raster_wkb.c	/^CU_SuiteInfo raster_wkb_suite = {"raster_wkb",  NULL,  NULL, raster_wkb_tests};$/;"	v
raster_wkb_tests	raster/test/cunit/cu_raster_wkb.c	/^CU_TestInfo raster_wkb_tests[] = {$/;"	v
raster_world2raster	raster/test/regress/rt_worldtorastercoord.sql	/^CREATE TABLE raster_world2raster ($/;"	t
raster_world2raster.rast	raster/test/regress/rt_worldtorastercoord.sql	/^	rast raster$/;"	F
raster_world2raster.rid	raster/test/regress/rt_worldtorastercoord.sql	/^	rid integer,$/;"	F
raster_x_plus_arg	raster/test/regress/rt_mapalgebra_expr.sql	/^ CREATE OR REPLACE FUNCTION raster_x_plus_arg(pixel FLOAT, pos INT[], VARIADIC args TEXT[])$/;"	f
raster_x_plus_arg	raster/test/regress/rt_mapalgebraexpr.sql	/^ CREATE OR REPLACE FUNCTION raster_x_plus_arg(pixel FLOAT, pos INT[], VARIADIC args TEXT[])$/;"	f
raster_x_plus_arg	raster/test/regress/rt_mapalgebrafct.sql	/^ CREATE OR REPLACE FUNCTION raster_x_plus_arg(pixel FLOAT, pos INT[], VARIADIC args TEXT[])$/;"	f
raster_y_plus_arg	raster/test/regress/rt_mapalgebra_expr.sql	/^ CREATE OR REPLACE FUNCTION raster_y_plus_arg(pixel FLOAT, pos INT[], VARIADIC args TEXT[])$/;"	f
raster_y_plus_arg	raster/test/regress/rt_mapalgebraexpr.sql	/^ CREATE OR REPLACE FUNCTION raster_y_plus_arg(pixel FLOAT, pos INT[], VARIADIC args TEXT[])$/;"	f
raster_y_plus_arg	raster/test/regress/rt_mapalgebrafct.sql	/^ CREATE OR REPLACE FUNCTION raster_y_plus_arg(pixel FLOAT, pos INT[], VARIADIC args TEXT[])$/;"	f
rasterinfo_t	raster/loader/raster2pgsql.h	/^typedef struct rasterinfo_t {$/;"	s
rasters	raster/rt_core/librtcore.h	/^	uint16_t rasters;$/;"	m	struct:rt_iterator_arg_t
rasters	raster/test/cunit/cu_mapalgebra.c	/^	uint16_t rasters;$/;"	m	struct:_callback_userargs_t	file:
rate_attributes	extras/tiger_geocoder/tiger_2011/geocode/rate_attributes.sql	/^CREATE OR REPLACE FUNCTION rate_attributes(dirpA VARCHAR, dirpB VARCHAR, streetNameA VARCHAR, streetNameB VARCHAR,$/;"	f
ratio	postgis/gserialized_gist_2d.c	/^	float4		ratio;$/;"	m	struct:__anon18	file:
reInit	java/jdbc/jtssrc/org/postgis/jts/JTSShape.java	/^        protected void reInit(CoordinateSequence _cs) {$/;"	m	class:JTSShape.LineStringPathIterator
read	java/jdbc/src/examples/TestJava2d.java	/^    private static Shape[] read(String dburl, String dbuser, String dbpass, String query)$/;"	m	class:TestJava2d	file:
read_column_map	loader/pgsql2shp-core.c	/^read_column_map(SHPDUMPERSTATE *state)$/;"	f	file:
read_float32	raster/rt_core/rt_serialize.c	/^read_float32(const uint8_t** from, uint8_t littleEndian) {$/;"	f
read_float64	raster/rt_core/rt_serialize.c	/^read_float64(const uint8_t** from, uint8_t littleEndian) {$/;"	f
read_int16	raster/rt_core/rt_serialize.c	/^read_int16(const uint8_t** from, uint8_t littleEndian) {$/;"	f
read_int32	raster/rt_core/rt_serialize.c	/^read_int32(const uint8_t** from, uint8_t littleEndian) {$/;"	f
read_int8	raster/rt_core/rt_serialize.c	/^read_int8(const uint8_t** from) {$/;"	f
read_rev	utils/svn_repo_revision.pl	/^sub read_rev {$/;"	s
read_rev_git	utils/svn_repo_revision.pl	/^sub read_rev_git {$/;"	s
read_rev_svn	utils/svn_repo_revision.pl	/^sub read_rev_svn {$/;"	s
read_uint16	raster/rt_core/rt_serialize.c	/^read_uint16(const uint8_t** from, uint8_t littleEndian) {$/;"	f
read_uint32	raster/rt_core/rt_serialize.c	/^read_uint32(const uint8_t** from, uint8_t littleEndian) {$/;"	f
read_uint8	raster/rt_core/rt_serialize.c	/^read_uint8(const uint8_t** from) {$/;"	f
reader	java/jdbc/jtssrc/org/postgis/jts/JtsGeometry.java	/^    static final WKTReader reader = new WKTReader(geofac);$/;"	f	class:JtsGeometry
readshape	loader/shp2pgsql-core.h	/^	int readshape;$/;"	m	struct:shp_loader_config
realloc	raster/rt_core/rt_context.c	/^    rt_reallocator realloc;$/;"	m	struct:rt_context_t	file:
rebuildCS	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    public static Geometry rebuildCS(Geometry geom) {        $/;"	m	class:JtsTestParser
rebuildCSGC	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    private static Geometry rebuildCSGC(GeometryCollection coll) {$/;"	m	class:JtsTestParser	file:
rebuildCSLS	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    private static LineString rebuildCSLS(LineString line) {$/;"	m	class:JtsTestParser	file:
rebuildCSMLS	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    private static MultiLineString rebuildCSMLS(MultiLineString multiline) {$/;"	m	class:JtsTestParser	file:
rebuildCSMP	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    private static MultiPoint rebuildCSMP(MultiPoint mp) {$/;"	m	class:JtsTestParser	file:
rebuildCSMP	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    private static MultiPolygon rebuildCSMP(MultiPolygon multipoly) {$/;"	m	class:JtsTestParser	file:
rebuildCSP	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    private static Polygon rebuildCSP(Polygon polygon) {$/;"	m	class:JtsTestParser	file:
rebuildCSPoint	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    private static Point rebuildCSPoint(Point point) {$/;"	m	class:JtsTestParser	file:
rebuildLR	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    private static LinearRing rebuildLR(LineString ring) {$/;"	m	class:JtsTestParser	file:
rect_node	liblwgeom/lwtree.h	/^typedef struct rect_node$/;"	s
rect_node_internal_new	liblwgeom/lwtree.c	/^RECT_NODE* rect_node_internal_new(RECT_NODE *left_node, RECT_NODE *right_node)$/;"	f
rect_node_is_leaf	liblwgeom/lwtree.c	/^static int rect_node_is_leaf(const RECT_NODE *node)$/;"	f	file:
rect_node_leaf_new	liblwgeom/lwtree.c	/^RECT_NODE* rect_node_leaf_new(const POINTARRAY *pa, int i)$/;"	f
rect_tree_contains_point	liblwgeom/lwtree.c	/^int rect_tree_contains_point(const RECT_NODE *node, const POINT2D *pt, int *on_boundary)$/;"	f
rect_tree_free	liblwgeom/lwtree.c	/^void rect_tree_free(RECT_NODE *node)$/;"	f
rect_tree_intersects_tree	liblwgeom/lwtree.c	/^int rect_tree_intersects_tree(const RECT_NODE *n1, const RECT_NODE *n2)$/;"	f
rect_tree_new	liblwgeom/lwtree.c	/^RECT_NODE* rect_tree_new(const POINTARRAY *pa)$/;"	f
register_pgsql2shp_suite	loader/cunit/cu_pgsql2shp.c	/^CU_pSuite register_pgsql2shp_suite(void)$/;"	f
register_shp2pgsql_suite	loader/cunit/cu_shp2pgsql.c	/^CU_pSuite register_shp2pgsql_suite(void)$/;"	f
regular_blocking	raster/loader/raster2pgsql.h	/^	int regular_blocking;$/;"	m	struct:raster_loader_config
relate_full	postgis/lwgeom_geos.c	/^Datum relate_full(PG_FUNCTION_ARGS)$/;"	f
relate_full	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(relate_full);$/;"	v
relate_pattern	postgis/lwgeom_geos.c	/^Datum relate_pattern(PG_FUNCTION_ARGS)$/;"	f
relate_pattern	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(relate_pattern);$/;"	v
remove	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAOImpl.java	/^    public void remove(java.lang.Integer pk)$/;"	m	class:PostGisGeometryDAOImpl
rep	java/jdbc/src/org/postgis/binary/ByteGetter.java	/^        private String rep;$/;"	f	class:ByteGetter.StringByteGetter	file:
rep	java/jdbc/src/org/postgis/binary/ByteSetter.java	/^        private char[] rep;$/;"	f	class:ByteSetter.StringByteSetter	file:
replace	java/ejb3/src/org/postgis/hibernate/GeometryType.java	/^	public Object replace(Object original, Object target, $/;"	m	class:GeometryType
reproject	extras/tiger_geocoder/tiger_2011/legacy_import/tiger2008/import_tiger_shps.sh	/^function reproject () {$/;"	f
res	raster/scripts/python/window.py	/^res = ( gt[1], gt[5] ) # X\/Y pixel resolution$/;"	v
result	java/jdbc/src/org/postgis/binary/ByteSetter.java	/^        public String result() {$/;"	m	class:ByteSetter.StringByteSetter
result	java/jdbc/src/org/postgis/binary/ByteSetter.java	/^        public byte[] result() {$/;"	m	class:ByteSetter.BinaryByteSetter
resultAsArray	java/jdbc/src/org/postgis/binary/ByteSetter.java	/^        public char[] resultAsArray() {$/;"	m	class:ByteSetter.StringByteSetter
returnedClass	java/ejb3/src/org/postgis/hibernate/GeometryType.java	/^	public Class returnedClass() {$/;"	m	class:GeometryType
reverse	java/jdbc/src/org/postgis/LineString.java	/^    public LineString reverse() {$/;"	m	class:LineString
reverse_axis	postgis/lwgeom_in_gml.c	/^	bool reverse_axis;$/;"	m	struct:struct_gmlSrs	file:
reverse_geocode	extras/tiger_geocoder/tiger_2011/geocode/reverse_geocode.sql	/^CREATE OR REPLACE FUNCTION reverse_geocode(IN pt geometry, IN include_strnum_range boolean DEFAULT false, OUT intpt geometry[], OUT addy norm_addy[], OUT street character varying[])$/;"	f
reverse_points	loader/pgsql2shp-core.c	/^reverse_points(int num_points, double *x, double *y, double *z, double *m)$/;"	f	file:
rightLower	postgis/gserialized_gist_2d.c	/^	float		rightLower;		\/* lower bound of right interval *\/$/;"	m	struct:__anon18	file:
rightNode	postgis/lwgeom_rtree.h	/^	struct rtree_node *rightNode;$/;"	m	struct:rtree_node	typeref:struct:rtree_node::rtree_node
right_node	liblwgeom/lwtree.h	/^	struct rect_node *right_node;$/;"	m	struct:rect_node	typeref:struct:rect_node::rect_node
ring	liblwgeom/lwin_wkt_parse.y	/^ring :$/;"	l
ring	postgis/lwgeom_dumppoints.c	/^	int ring; \/* ring of top polygon *\/$/;"	m	struct:dumpstate	file:
ringCounts	postgis/lwgeom_rtree.h	/^	int* ringCounts;$/;"	m	struct:__anon13
ringIndices	postgis/lwgeom_rtree.h	/^	RTREE_NODE **ringIndices;$/;"	m	struct:__anon13
ring_list	liblwgeom/lwin_wkt_parse.y	/^ring_list :$/;"	l
ring_make_geos_friendly	liblwgeom/lwgeom_geos_clean.c	/^ring_make_geos_friendly(POINTARRAY* ring)$/;"	f
ringnum	postgis/lwgeom_dump.c	/^	int ringnum;$/;"	m	struct:POLYDUMPSTATE	file:
road_pg	regress/sfcgal/tickets.sql	/^CREATE TABLE road_pg (ID INTEGER, NAME VARCHAR(32));$/;"	t
road_pg	regress/tickets.sql	/^CREATE TABLE road_pg (ID INTEGER, NAME VARCHAR(32));$/;"	t
road_pg.ID	regress/sfcgal/tickets.sql	/^CREATE TABLE road_pg (ID INTEGER, NAME VARCHAR(32));$/;"	F
road_pg.ID	regress/tickets.sql	/^CREATE TABLE road_pg (ID INTEGER, NAME VARCHAR(32));$/;"	F
road_pg.NAME	regress/sfcgal/tickets.sql	/^CREATE TABLE road_pg (ID INTEGER, NAME VARCHAR(32));$/;"	F
road_pg.NAME	regress/tickets.sql	/^CREATE TABLE road_pg (ID INTEGER, NAME VARCHAR(32));$/;"	F
road_segments	extras/ogc_test_suite/1_schema.sql	/^CREATE TABLE road_segments ($/;"	t
road_segments.aliases	extras/ogc_test_suite/1_schema.sql	/^       aliases           VARCHAR(64),$/;"	F
road_segments.fid	extras/ogc_test_suite/1_schema.sql	/^       fid               INTEGER NOT NULL PRIMARY KEY,$/;"	F
road_segments.name	extras/ogc_test_suite/1_schema.sql	/^       name              VARCHAR(64),$/;"	F
road_segments.num_lanes	extras/ogc_test_suite/1_schema.sql	/^       num_lanes         INTEGER$/;"	F
robust_cross_product	liblwgeom/lwgeodetic.c	/^void robust_cross_product(const GEOGRAPHIC_POINT *p, const GEOGRAPHIC_POINT *q, POINT3D *a)$/;"	f
root	postgis/lwgeom_dump.c	/^	LWGEOM *root;$/;"	m	struct:GEOMDUMPSTATE	file:
root	postgis/lwgeom_dumppoints.c	/^	LWGEOM	*root;$/;"	m	struct:dumpstate	file:
rot	raster/scripts/python/window.py	/^rot = ( gt[2], gt[4] ) # X-\/Y-axis rotation$/;"	v
rowcount	loader/pgsql2shp-core.h	/^	int rowcount;$/;"	m	struct:shp_dumper_state
rows	raster/rt_core/librtcore.h	/^	uint32_t rows;$/;"	m	struct:rt_iterator_arg_t
rows	raster/rt_core/rt_mapalgebra.c	/^		uint32_t rows;$/;"	m	struct:_rti_iterator_arg_t::__anon47	file:
rows	raster/rt_pg/rtpg_pixel.c	/^	int rows;$/;"	m	struct:rtpg_dumpvalues_arg_t	file:
rows	raster/test/cunit/cu_mapalgebra.c	/^	uint32_t rows;$/;"	m	struct:_callback_userargs_t	file:
rt	raster/scripts/python/rtrowdump.py	/^    rt = rtreader.RasterReader(opts.db, opts.table, opts.column, opts.where)$/;"	v
rt_allocator	raster/rt_core/librtcore.h	/^typedef void* (*rt_allocator)(size_t size);$/;"	t
rt_band	raster/rt_core/librtcore.h	/^typedef struct rt_band_t* rt_band;$/;"	t	typeref:struct:rt_band_t
rt_band_check_is_nodata	raster/rt_core/rt_band.c	/^rt_band_check_is_nodata(rt_band band) {$/;"	f
rt_band_clamped_value_is_nodata	raster/rt_core/rt_band.c	/^rt_band_clamped_value_is_nodata(rt_band band, double val) {$/;"	f
rt_band_corrected_clamped_value	raster/rt_core/rt_band.c	/^rt_band_corrected_clamped_value($/;"	f
rt_band_destroy	raster/rt_core/rt_band.c	/^rt_band_destroy(rt_band band) { $/;"	f
rt_band_duplicate	raster/rt_core/rt_band.c	/^rt_band_duplicate(rt_band band) {$/;"	f
rt_band_from_wkb	raster/rt_core/rt_wkb.c	/^rt_band_from_wkb($/;"	f	file:
rt_band_get_data	raster/rt_core/rt_band.c	/^rt_band_get_data(rt_band band) {$/;"	f
rt_band_get_ext_band_num	raster/rt_core/rt_band.c	/^rt_band_get_ext_band_num(rt_band band, uint8_t *bandnum) {$/;"	f
rt_band_get_ext_path	raster/rt_core/rt_band.c	/^rt_band_get_ext_path(rt_band band) {$/;"	f
rt_band_get_hasnodata_flag	raster/rt_core/rt_band.c	/^rt_band_get_hasnodata_flag(rt_band band) {$/;"	f
rt_band_get_height	raster/rt_core/rt_band.c	/^rt_band_get_height(rt_band band) {$/;"	f
rt_band_get_histogram	raster/rt_core/rt_statistics.c	/^rt_band_get_histogram($/;"	f
rt_band_get_isnodata_flag	raster/rt_core/rt_band.c	/^rt_band_get_isnodata_flag(rt_band band) {$/;"	f
rt_band_get_min_value	raster/rt_core/rt_band.c	/^rt_band_get_min_value(rt_band band) {$/;"	f
rt_band_get_nearest_pixel	raster/rt_core/rt_band.c	/^int rt_band_get_nearest_pixel($/;"	f
rt_band_get_nodata	raster/rt_core/rt_band.c	/^rt_band_get_nodata(rt_band band, double *nodata) { $/;"	f
rt_band_get_ownsdata_flag	raster/rt_core/rt_band.c	/^rt_band_get_ownsdata_flag(rt_band band) {$/;"	f
rt_band_get_pixel	raster/rt_core/rt_band.c	/^rt_band_get_pixel($/;"	f
rt_band_get_pixel_line	raster/rt_core/rt_band.c	/^rt_errorstate rt_band_get_pixel_line($/;"	f
rt_band_get_pixel_of_value	raster/rt_core/rt_band.c	/^rt_band_get_pixel_of_value($/;"	f
rt_band_get_pixtype	raster/rt_core/rt_band.c	/^rt_band_get_pixtype(rt_band band) {$/;"	f
rt_band_get_quantiles	raster/rt_core/rt_statistics.c	/^rt_band_get_quantiles($/;"	f
rt_band_get_quantiles_stream	raster/rt_core/rt_statistics.c	/^rt_band_get_quantiles_stream($/;"	f
rt_band_get_summary_stats	raster/rt_core/rt_statistics.c	/^rt_band_get_summary_stats($/;"	f
rt_band_get_value_count	raster/rt_core/rt_statistics.c	/^rt_band_get_value_count($/;"	f
rt_band_get_width	raster/rt_core/rt_band.c	/^rt_band_get_width(rt_band band) {$/;"	f
rt_band_is_offline	raster/rt_core/rt_band.c	/^rt_band_is_offline(rt_band band) {$/;"	f
rt_band_load_offline_data	raster/rt_core/rt_band.c	/^rt_band_load_offline_data(rt_band band) {$/;"	f
rt_band_new_inline	raster/rt_core/rt_band.c	/^rt_band_new_inline($/;"	f
rt_band_new_offline	raster/rt_core/rt_band.c	/^rt_band_new_offline($/;"	f
rt_band_properties_test	raster/test/regress/rt_band_properties.sql	/^CREATE TABLE rt_band_properties_test ($/;"	t
rt_band_properties_test	raster/test/regress/rt_pixelvalue.sql	/^CREATE TABLE rt_band_properties_test ($/;"	t
rt_band_properties_test	raster/test/regress/rt_set_band_properties.sql	/^CREATE TABLE rt_band_properties_test ($/;"	t
rt_band_properties_test.b1hasnodatavalue	raster/test/regress/rt_band_properties.sql	/^    b1hasnodatavalue boolean,$/;"	F
rt_band_properties_test.b1hasnodatavalue	raster/test/regress/rt_pixelvalue.sql	/^    b1hasnodatavalue boolean,$/;"	F
rt_band_properties_test.b1hasnodatavalue	raster/test/regress/rt_set_band_properties.sql	/^    b1hasnodatavalue boolean,$/;"	F
rt_band_properties_test.b1nodatavalue	raster/test/regress/rt_band_properties.sql	/^    b1nodatavalue float4,$/;"	F
rt_band_properties_test.b1nodatavalue	raster/test/regress/rt_pixelvalue.sql	/^    b1nodatavalue float4,$/;"	F
rt_band_properties_test.b1nodatavalue	raster/test/regress/rt_set_band_properties.sql	/^    b1nodatavalue float4,$/;"	F
rt_band_properties_test.b1pixeltype	raster/test/regress/rt_band_properties.sql	/^    b1pixeltype text,$/;"	F
rt_band_properties_test.b1pixeltype	raster/test/regress/rt_pixelvalue.sql	/^    b1pixeltype text,$/;"	F
rt_band_properties_test.b1pixeltype	raster/test/regress/rt_set_band_properties.sql	/^    b1pixeltype text,$/;"	F
rt_band_properties_test.b1val	raster/test/regress/rt_band_properties.sql	/^    b1val float4,$/;"	F
rt_band_properties_test.b1val	raster/test/regress/rt_pixelvalue.sql	/^    b1val float4,$/;"	F
rt_band_properties_test.b1val	raster/test/regress/rt_set_band_properties.sql	/^    b1val float4,$/;"	F
rt_band_properties_test.b2hasnodatavalue	raster/test/regress/rt_band_properties.sql	/^    b2hasnodatavalue boolean,$/;"	F
rt_band_properties_test.b2hasnodatavalue	raster/test/regress/rt_pixelvalue.sql	/^    b2hasnodatavalue boolean,$/;"	F
rt_band_properties_test.b2hasnodatavalue	raster/test/regress/rt_set_band_properties.sql	/^    b2hasnodatavalue boolean,$/;"	F
rt_band_properties_test.b2nodatavalue	raster/test/regress/rt_band_properties.sql	/^    b2nodatavalue float4,$/;"	F
rt_band_properties_test.b2nodatavalue	raster/test/regress/rt_pixelvalue.sql	/^    b2nodatavalue float4,$/;"	F
rt_band_properties_test.b2nodatavalue	raster/test/regress/rt_set_band_properties.sql	/^    b2nodatavalue float4,$/;"	F
rt_band_properties_test.b2pixeltype	raster/test/regress/rt_band_properties.sql	/^    b2pixeltype text,$/;"	F
rt_band_properties_test.b2pixeltype	raster/test/regress/rt_pixelvalue.sql	/^    b2pixeltype text,$/;"	F
rt_band_properties_test.b2pixeltype	raster/test/regress/rt_set_band_properties.sql	/^    b2pixeltype text,$/;"	F
rt_band_properties_test.b2val	raster/test/regress/rt_band_properties.sql	/^    b2val float4,$/;"	F
rt_band_properties_test.b2val	raster/test/regress/rt_pixelvalue.sql	/^    b2val float4,$/;"	F
rt_band_properties_test.b2val	raster/test/regress/rt_set_band_properties.sql	/^    b2val float4,$/;"	F
rt_band_properties_test.description	raster/test/regress/rt_band_properties.sql	/^    description text,$/;"	F
rt_band_properties_test.description	raster/test/regress/rt_pixelvalue.sql	/^    description text,$/;"	F
rt_band_properties_test.description	raster/test/regress/rt_set_band_properties.sql	/^    description text,$/;"	F
rt_band_properties_test.geomtxt	raster/test/regress/rt_band_properties.sql	/^    geomtxt text,$/;"	F
rt_band_properties_test.geomtxt	raster/test/regress/rt_pixelvalue.sql	/^    geomtxt text,$/;"	F
rt_band_properties_test.geomtxt	raster/test/regress/rt_set_band_properties.sql	/^    geomtxt text,$/;"	F
rt_band_properties_test.id	raster/test/regress/rt_band_properties.sql	/^    id numeric,$/;"	F
rt_band_properties_test.id	raster/test/regress/rt_pixelvalue.sql	/^    id numeric,$/;"	F
rt_band_properties_test.id	raster/test/regress/rt_set_band_properties.sql	/^    id numeric,$/;"	F
rt_band_properties_test.nbband	raster/test/regress/rt_band_properties.sql	/^    nbband integer,$/;"	F
rt_band_properties_test.nbband	raster/test/regress/rt_pixelvalue.sql	/^    nbband integer,$/;"	F
rt_band_properties_test.nbband	raster/test/regress/rt_set_band_properties.sql	/^    nbband integer,$/;"	F
rt_band_properties_test.rast	raster/test/regress/rt_band_properties.sql	/^    rast raster$/;"	F
rt_band_properties_test.rast	raster/test/regress/rt_pixelvalue.sql	/^    rast raster$/;"	F
rt_band_properties_test.rast	raster/test/regress/rt_set_band_properties.sql	/^    rast raster$/;"	F
rt_band_reclass	raster/rt_core/rt_mapalgebra.c	/^rt_band_reclass($/;"	f
rt_band_set_hasnodata_flag	raster/rt_core/rt_band.c	/^rt_band_set_hasnodata_flag(rt_band band, int flag) {$/;"	f
rt_band_set_isnodata_flag	raster/rt_core/rt_band.c	/^rt_band_set_isnodata_flag(rt_band band, int flag) {$/;"	f
rt_band_set_nodata	raster/rt_core/rt_band.c	/^rt_band_set_nodata(rt_band band, double val, int *converted) {$/;"	f
rt_band_set_ownsdata_flag	raster/rt_core/rt_band.c	/^rt_band_set_ownsdata_flag(rt_band band, int flag) {$/;"	f
rt_band_set_pixel	raster/rt_core/rt_band.c	/^rt_band_set_pixel($/;"	f
rt_band_set_pixel_line	raster/rt_core/rt_band.c	/^rt_band_set_pixel_line($/;"	f
rt_band_t	raster/rt_core/librtcore.h	/^struct rt_band_t {$/;"	s
rt_bandstats	raster/rt_core/librtcore.h	/^typedef struct rt_bandstats_t* rt_bandstats;$/;"	t	typeref:struct:rt_bandstats_t
rt_bandstats_t	raster/rt_core/librtcore.h	/^struct rt_bandstats_t {$/;"	s
rt_box3d_test	raster/test/regress/box3d.sql	/^CREATE TABLE rt_box3d_test ($/;"	t
rt_box3d_test.env	raster/test/regress/box3d.sql	/^    env box3d$/;"	F
rt_box3d_test.id	raster/test/regress/box3d.sql	/^    id numeric,$/;"	F
rt_box3d_test.name	raster/test/regress/box3d.sql	/^    name text,$/;"	F
rt_box3d_test.rast	raster/test/regress/box3d.sql	/^    rast raster,$/;"	F
rt_bytea_test	raster/test/regress/rt_bytea.sql	/^CREATE TABLE rt_bytea_test ($/;"	t
rt_bytea_test.id	raster/test/regress/rt_bytea.sql	/^        id numeric,$/;"	F
rt_bytea_test.name	raster/test/regress/rt_bytea.sql	/^        name text,$/;"	F
rt_bytea_test.rast	raster/test/regress/rt_bytea.sql	/^        rast raster$/;"	F
rt_colormap	raster/rt_core/librtcore.h	/^typedef struct rt_colormap_t* rt_colormap;$/;"	t	typeref:struct:rt_colormap_t
rt_colormap_entry	raster/rt_core/librtcore.h	/^typedef struct rt_colormap_entry_t* rt_colormap_entry;$/;"	t	typeref:struct:rt_colormap_entry_t
rt_colormap_entry_t	raster/rt_core/librtcore.h	/^struct rt_colormap_entry_t {$/;"	s
rt_colormap_t	raster/rt_core/librtcore.h	/^struct rt_colormap_t {$/;"	s
rt_context_t	raster/rt_core/rt_context.c	/^struct rt_context_t {$/;"	s	file:
rt_deallocator	raster/rt_core/librtcore.h	/^typedef void  (*rt_deallocator)(void *mem);$/;"	t
rt_envelope	raster/rt_core/librtcore.h	/^} rt_envelope;$/;"	t	typeref:struct:__anon34
rt_errorstate	raster/rt_core/librtcore.h	/^} rt_errorstate;$/;"	t	typeref:enum:__anon35
rt_extband_t	raster/rt_core/librtcore.h	/^struct rt_extband_t {$/;"	s
rt_extenttype	raster/rt_core/librtcore.h	/^} rt_extenttype;$/;"	t	typeref:enum:__anon37
rt_file	raster/loader/raster2pgsql.h	/^	char **rt_file;$/;"	m	struct:raster_loader_config
rt_file_count	raster/loader/raster2pgsql.h	/^	int rt_file_count;$/;"	m	struct:raster_loader_config
rt_filename	raster/loader/raster2pgsql.h	/^	char **rt_filename;$/;"	m	struct:raster_loader_config
rt_gdaldriver	raster/rt_core/librtcore.h	/^typedef struct rt_gdaldriver_t* rt_gdaldriver;$/;"	t	typeref:struct:rt_gdaldriver_t
rt_gdaldriver_t	raster/rt_core/librtcore.h	/^struct rt_gdaldriver_t {$/;"	s
rt_geomval	raster/rt_core/librtcore.h	/^typedef struct rt_geomval_t* rt_geomval;$/;"	t	typeref:struct:rt_geomval_t
rt_geomval_t	raster/rt_core/librtcore.h	/^struct rt_geomval_t {$/;"	s
rt_geos_spatial_test	raster/rt_core/librtcore.h	/^} rt_geos_spatial_test;$/;"	t	typeref:enum:__anon38
rt_histogram	raster/rt_core/librtcore.h	/^typedef struct rt_histogram_t* rt_histogram;$/;"	t	typeref:struct:rt_histogram_t
rt_histogram_t	raster/rt_core/librtcore.h	/^struct rt_histogram_t {$/;"	s
rt_init_allocators	raster/loader/raster2pgsql.c	/^void rt_init_allocators(void) {$/;"	f
rt_init_allocators	raster/rt_pg/rtpostgis.c	/^rt_init_allocators(void)$/;"	f
rt_init_allocators	raster/test/cunit/cu_tester.c	/^void rt_init_allocators(void) {$/;"	f
rt_install_default_allocators	raster/rt_core/rt_context.c	/^rt_install_default_allocators(void)$/;"	f
rt_io_test	raster/test/regress/rt_io.sql	/^CREATE TABLE rt_io_test ($/;"	t
rt_io_test.hexwkb_ndr	raster/test/regress/rt_io.sql	/^        hexwkb_ndr text,$/;"	F
rt_io_test.hexwkb_xdr	raster/test/regress/rt_io.sql	/^        hexwkb_xdr text,$/;"	F
rt_io_test.id	raster/test/regress/rt_io.sql	/^        id numeric,$/;"	F
rt_io_test.name	raster/test/regress/rt_io.sql	/^        name text,$/;"	F
rt_io_test.rast	raster/test/regress/rt_io.sql	/^        rast raster$/;"	F
rt_iterator	raster/rt_core/librtcore.h	/^typedef struct rt_iterator_t* rt_iterator;$/;"	t	typeref:struct:rt_iterator_t
rt_iterator_arg	raster/rt_core/librtcore.h	/^typedef struct rt_iterator_arg_t* rt_iterator_arg;$/;"	t	typeref:struct:rt_iterator_arg_t
rt_iterator_arg_t	raster/rt_core/librtcore.h	/^struct rt_iterator_arg_t {$/;"	s
rt_iterator_t	raster/rt_core/librtcore.h	/^struct rt_iterator_t {$/;"	s
rt_message_handler	raster/rt_core/librtcore.h	/^typedef void  (*rt_message_handler)(const char* string, va_list ap);$/;"	t
rt_pg_alloc	raster/rt_pg/rtpostgis.c	/^rt_pg_alloc(size_t size)$/;"	f	file:
rt_pg_error	raster/rt_pg/rtpostgis.c	/^rt_pg_error(const char *fmt, va_list ap)$/;"	f	file:
rt_pg_free	raster/rt_pg/rtpostgis.c	/^rt_pg_free(void *ptr)$/;"	f	file:
rt_pg_notice	raster/rt_pg/rtpostgis.c	/^rt_pg_notice(const char *fmt, va_list ap)$/;"	f	file:
rt_pg_realloc	raster/rt_pg/rtpostgis.c	/^rt_pg_realloc(void *mem, size_t size)$/;"	f	file:
rt_pgraster	raster/rt_pg/rtpostgis.h	/^typedef struct rt_raster_serialized_t rt_pgraster;$/;"	t	typeref:struct:rt_raster_serialized_t
rt_pixel	raster/rt_core/librtcore.h	/^typedef struct rt_pixel_t* rt_pixel;$/;"	t	typeref:struct:rt_pixel_t
rt_pixel_set_to_array	raster/rt_core/rt_pixel.c	/^rt_errorstate rt_pixel_set_to_array($/;"	f
rt_pixel_t	raster/rt_core/librtcore.h	/^struct rt_pixel_t {$/;"	s
rt_pixtype	raster/rt_core/librtcore.h	/^} rt_pixtype;$/;"	t	typeref:enum:__anon36
rt_pixtype_alignment	raster/rt_core/rt_pixel.c	/^rt_pixtype_alignment(rt_pixtype pixtype) {$/;"	f
rt_pixtype_compare_clamped_values	raster/rt_core/rt_pixel.c	/^rt_errorstate rt_pixtype_compare_clamped_values($/;"	f
rt_pixtype_get_min_value	raster/rt_core/rt_pixel.c	/^rt_pixtype_get_min_value(rt_pixtype pixtype) {$/;"	f
rt_pixtype_index_from_name	raster/rt_core/rt_pixel.c	/^rt_pixtype_index_from_name(const char* pixname) {$/;"	f
rt_pixtype_name	raster/rt_core/rt_pixel.c	/^rt_pixtype_name(rt_pixtype pixtype) {$/;"	f
rt_pixtype_size	raster/rt_core/rt_pixel.c	/^rt_pixtype_size(rt_pixtype pixtype) {$/;"	f
rt_properties_test	raster/test/regress/rt_dimensions.sql	/^CREATE TABLE rt_properties_test ($/;"	t
rt_properties_test	raster/test/regress/rt_georeference.sql	/^CREATE TABLE rt_properties_test ($/;"	t
rt_properties_test	raster/test/regress/rt_pixelsize.sql	/^CREATE TABLE rt_properties_test ($/;"	t
rt_properties_test	raster/test/regress/rt_rotation.sql	/^CREATE TABLE rt_properties_test ($/;"	t
rt_properties_test	raster/test/regress/rt_scale.sql	/^CREATE TABLE rt_properties_test ($/;"	t
rt_properties_test	raster/test/regress/rt_set_properties.sql	/^CREATE TABLE rt_properties_test ($/;"	t
rt_properties_test	raster/test/regress/rt_upperleft.sql	/^CREATE TABLE rt_properties_test ($/;"	t
rt_properties_test.height	raster/test/regress/rt_dimensions.sql	/^    height integer,$/;"	F
rt_properties_test.height	raster/test/regress/rt_georeference.sql	/^    height integer,$/;"	F
rt_properties_test.height	raster/test/regress/rt_pixelsize.sql	/^    height integer,$/;"	F
rt_properties_test.height	raster/test/regress/rt_rotation.sql	/^    height integer,$/;"	F
rt_properties_test.height	raster/test/regress/rt_scale.sql	/^    height integer,$/;"	F
rt_properties_test.height	raster/test/regress/rt_set_properties.sql	/^    height integer,$/;"	F
rt_properties_test.height	raster/test/regress/rt_upperleft.sql	/^    height integer,$/;"	F
rt_properties_test.id	raster/test/regress/rt_dimensions.sql	/^    id numeric,$/;"	F
rt_properties_test.id	raster/test/regress/rt_georeference.sql	/^    id numeric,$/;"	F
rt_properties_test.id	raster/test/regress/rt_pixelsize.sql	/^    id numeric,$/;"	F
rt_properties_test.id	raster/test/regress/rt_rotation.sql	/^    id numeric,$/;"	F
rt_properties_test.id	raster/test/regress/rt_scale.sql	/^    id numeric,$/;"	F
rt_properties_test.id	raster/test/regress/rt_set_properties.sql	/^    id numeric,$/;"	F
rt_properties_test.id	raster/test/regress/rt_upperleft.sql	/^    id numeric,$/;"	F
rt_properties_test.ipx	raster/test/regress/rt_dimensions.sql	/^    ipx double precision,$/;"	F
rt_properties_test.ipx	raster/test/regress/rt_georeference.sql	/^    ipx double precision,$/;"	F
rt_properties_test.ipx	raster/test/regress/rt_pixelsize.sql	/^    ipx double precision,$/;"	F
rt_properties_test.ipx	raster/test/regress/rt_rotation.sql	/^    ipx double precision,$/;"	F
rt_properties_test.ipx	raster/test/regress/rt_scale.sql	/^    ipx double precision,$/;"	F
rt_properties_test.ipx	raster/test/regress/rt_set_properties.sql	/^    ipx double precision,$/;"	F
rt_properties_test.ipx	raster/test/regress/rt_upperleft.sql	/^    ipx double precision,$/;"	F
rt_properties_test.ipy	raster/test/regress/rt_dimensions.sql	/^    ipy double precision,$/;"	F
rt_properties_test.ipy	raster/test/regress/rt_georeference.sql	/^    ipy double precision,$/;"	F
rt_properties_test.ipy	raster/test/regress/rt_pixelsize.sql	/^    ipy double precision,$/;"	F
rt_properties_test.ipy	raster/test/regress/rt_rotation.sql	/^    ipy double precision,$/;"	F
rt_properties_test.ipy	raster/test/regress/rt_scale.sql	/^    ipy double precision,$/;"	F
rt_properties_test.ipy	raster/test/regress/rt_set_properties.sql	/^    ipy double precision,$/;"	F
rt_properties_test.ipy	raster/test/regress/rt_upperleft.sql	/^    ipy double precision,$/;"	F
rt_properties_test.name	raster/test/regress/rt_dimensions.sql	/^    name text,$/;"	F
rt_properties_test.name	raster/test/regress/rt_georeference.sql	/^    name text,$/;"	F
rt_properties_test.name	raster/test/regress/rt_pixelsize.sql	/^    name text,$/;"	F
rt_properties_test.name	raster/test/regress/rt_rotation.sql	/^    name text,$/;"	F
rt_properties_test.name	raster/test/regress/rt_scale.sql	/^    name text,$/;"	F
rt_properties_test.name	raster/test/regress/rt_set_properties.sql	/^    name text,$/;"	F
rt_properties_test.name	raster/test/regress/rt_upperleft.sql	/^    name text,$/;"	F
rt_properties_test.rast	raster/test/regress/rt_dimensions.sql	/^    rast raster$/;"	F
rt_properties_test.rast	raster/test/regress/rt_georeference.sql	/^    rast raster$/;"	F
rt_properties_test.rast	raster/test/regress/rt_pixelsize.sql	/^    rast raster$/;"	F
rt_properties_test.rast	raster/test/regress/rt_rotation.sql	/^    rast raster$/;"	F
rt_properties_test.rast	raster/test/regress/rt_scale.sql	/^    rast raster$/;"	F
rt_properties_test.rast	raster/test/regress/rt_set_properties.sql	/^    rast raster$/;"	F
rt_properties_test.rast	raster/test/regress/rt_upperleft.sql	/^    rast raster$/;"	F
rt_properties_test.scalex	raster/test/regress/rt_dimensions.sql	/^    scalex double precision,$/;"	F
rt_properties_test.scalex	raster/test/regress/rt_georeference.sql	/^    scalex double precision,$/;"	F
rt_properties_test.scalex	raster/test/regress/rt_pixelsize.sql	/^    scalex double precision,$/;"	F
rt_properties_test.scalex	raster/test/regress/rt_rotation.sql	/^    scalex double precision,$/;"	F
rt_properties_test.scalex	raster/test/regress/rt_scale.sql	/^    scalex double precision,$/;"	F
rt_properties_test.scalex	raster/test/regress/rt_set_properties.sql	/^    scalex double precision,$/;"	F
rt_properties_test.scalex	raster/test/regress/rt_upperleft.sql	/^    scalex double precision,$/;"	F
rt_properties_test.scaley	raster/test/regress/rt_dimensions.sql	/^    scaley double precision,$/;"	F
rt_properties_test.scaley	raster/test/regress/rt_georeference.sql	/^    scaley double precision,$/;"	F
rt_properties_test.scaley	raster/test/regress/rt_pixelsize.sql	/^    scaley double precision,$/;"	F
rt_properties_test.scaley	raster/test/regress/rt_rotation.sql	/^    scaley double precision,$/;"	F
rt_properties_test.scaley	raster/test/regress/rt_scale.sql	/^    scaley double precision,$/;"	F
rt_properties_test.scaley	raster/test/regress/rt_set_properties.sql	/^    scaley double precision,$/;"	F
rt_properties_test.scaley	raster/test/regress/rt_upperleft.sql	/^    scaley double precision,$/;"	F
rt_properties_test.skewx	raster/test/regress/rt_dimensions.sql	/^    skewx double precision,$/;"	F
rt_properties_test.skewx	raster/test/regress/rt_georeference.sql	/^    skewx double precision,$/;"	F
rt_properties_test.skewx	raster/test/regress/rt_pixelsize.sql	/^    skewx double precision,$/;"	F
rt_properties_test.skewx	raster/test/regress/rt_rotation.sql	/^    skewx double precision,$/;"	F
rt_properties_test.skewx	raster/test/regress/rt_scale.sql	/^    skewx double precision,$/;"	F
rt_properties_test.skewx	raster/test/regress/rt_set_properties.sql	/^    skewx double precision,$/;"	F
rt_properties_test.skewx	raster/test/regress/rt_upperleft.sql	/^    skewx double precision,$/;"	F
rt_properties_test.skewy	raster/test/regress/rt_dimensions.sql	/^    skewy double precision,$/;"	F
rt_properties_test.skewy	raster/test/regress/rt_georeference.sql	/^    skewy double precision,$/;"	F
rt_properties_test.skewy	raster/test/regress/rt_pixelsize.sql	/^    skewy double precision,$/;"	F
rt_properties_test.skewy	raster/test/regress/rt_rotation.sql	/^    skewy double precision,$/;"	F
rt_properties_test.skewy	raster/test/regress/rt_scale.sql	/^    skewy double precision,$/;"	F
rt_properties_test.skewy	raster/test/regress/rt_set_properties.sql	/^    skewy double precision,$/;"	F
rt_properties_test.skewy	raster/test/regress/rt_upperleft.sql	/^    skewy double precision,$/;"	F
rt_properties_test.srid	raster/test/regress/rt_dimensions.sql	/^    srid integer,$/;"	F
rt_properties_test.srid	raster/test/regress/rt_georeference.sql	/^    srid integer,$/;"	F
rt_properties_test.srid	raster/test/regress/rt_pixelsize.sql	/^    srid integer,$/;"	F
rt_properties_test.srid	raster/test/regress/rt_rotation.sql	/^    srid integer,$/;"	F
rt_properties_test.srid	raster/test/regress/rt_scale.sql	/^    srid integer,$/;"	F
rt_properties_test.srid	raster/test/regress/rt_set_properties.sql	/^    srid integer,$/;"	F
rt_properties_test.srid	raster/test/regress/rt_upperleft.sql	/^    srid integer,$/;"	F
rt_properties_test.width	raster/test/regress/rt_dimensions.sql	/^    width integer,$/;"	F
rt_properties_test.width	raster/test/regress/rt_georeference.sql	/^    width integer,$/;"	F
rt_properties_test.width	raster/test/regress/rt_pixelsize.sql	/^    width integer,$/;"	F
rt_properties_test.width	raster/test/regress/rt_rotation.sql	/^    width integer,$/;"	F
rt_properties_test.width	raster/test/regress/rt_scale.sql	/^    width integer,$/;"	F
rt_properties_test.width	raster/test/regress/rt_set_properties.sql	/^    width integer,$/;"	F
rt_properties_test.width	raster/test/regress/rt_upperleft.sql	/^    width integer,$/;"	F
rt_quantile	raster/rt_core/librtcore.h	/^typedef struct rt_quantile_t* rt_quantile;$/;"	t	typeref:struct:rt_quantile_t
rt_quantile_t	raster/rt_core/librtcore.h	/^struct rt_quantile_t {$/;"	s
rt_raster	raster/rt_core/librtcore.h	/^typedef struct rt_raster_t* rt_raster;$/;"	t	typeref:struct:rt_raster_t
rt_raster_add_band	raster/rt_core/rt_raster.c	/^rt_raster_add_band(rt_raster raster, rt_band band, int index) {$/;"	f
rt_raster_calc_gt_coeff	raster/rt_core/rt_raster.c	/^rt_raster_calc_gt_coeff(double i_mag, double j_mag, double theta_i, double theta_ij,$/;"	f
rt_raster_calc_phys_params	raster/rt_core/rt_raster.c	/^rt_raster_calc_phys_params(double xscale, double xskew, double yskew, double yscale,$/;"	f
rt_raster_cell_to_geopoint	raster/rt_core/rt_raster.c	/^rt_raster_cell_to_geopoint($/;"	f
rt_raster_clone	raster/rt_core/rt_raster.c	/^rt_raster_clone(rt_raster raster, uint8_t deep) {$/;"	f
rt_raster_colormap	raster/rt_core/rt_mapalgebra.c	/^rt_raster rt_raster_colormap($/;"	f
rt_raster_compute_skewed_raster	raster/rt_core/rt_raster.c	/^rt_raster_compute_skewed_raster($/;"	f
rt_raster_contains	raster/rt_core/rt_spatial_relationship.c	/^rt_errorstate rt_raster_contains($/;"	f
rt_raster_contains_properly	raster/rt_core/rt_spatial_relationship.c	/^rt_errorstate rt_raster_contains_properly($/;"	f
rt_raster_copy_band	raster/rt_core/rt_raster.c	/^rt_raster_copy_band($/;"	f
rt_raster_coveredby	raster/rt_core/rt_spatial_relationship.c	/^rt_errorstate rt_raster_coveredby($/;"	f
rt_raster_covers	raster/rt_core/rt_spatial_relationship.c	/^rt_errorstate rt_raster_covers($/;"	f
rt_raster_deserialize	raster/rt_core/rt_serialize.c	/^rt_raster_deserialize(void* serialized, int header_only) {$/;"	f
rt_raster_destroy	raster/rt_core/rt_raster.c	/^rt_raster_destroy(rt_raster raster) {$/;"	f
rt_raster_from_band	raster/rt_core/rt_raster.c	/^rt_raster_from_band(rt_raster raster, uint32_t *bandNums, int count) {$/;"	f
rt_raster_from_gdal_dataset	raster/rt_core/rt_raster.c	/^rt_raster_from_gdal_dataset(GDALDatasetH ds) {$/;"	f
rt_raster_from_hexwkb	raster/rt_core/rt_wkb.c	/^rt_raster_from_hexwkb(const char* hexwkb, uint32_t hexwkbsize) {$/;"	f
rt_raster_from_two_rasters	raster/rt_core/rt_raster.c	/^rt_raster_from_two_rasters($/;"	f
rt_raster_from_wkb	raster/rt_core/rt_wkb.c	/^rt_raster_from_wkb(const uint8_t* wkb, uint32_t wkbsize) {$/;"	f
rt_raster_fully_within_distance	raster/rt_core/rt_spatial_relationship.c	/^rt_errorstate rt_raster_fully_within_distance($/;"	f
rt_raster_gdal_drivers	raster/rt_core/rt_raster.c	/^rt_raster_gdal_drivers(uint32_t *drv_count, uint8_t cancc) {$/;"	f
rt_raster_gdal_polygonize	raster/rt_core/rt_geometry.c	/^rt_raster_gdal_polygonize($/;"	f
rt_raster_gdal_rasterize	raster/rt_core/rt_raster.c	/^rt_raster_gdal_rasterize($/;"	f
rt_raster_gdal_warp	raster/rt_core/rt_warp.c	/^rt_raster rt_raster_gdal_warp($/;"	f
rt_raster_generate_new_band	raster/rt_core/rt_raster.c	/^rt_raster_generate_new_band($/;"	f
rt_raster_geopoint_to_cell	raster/rt_core/rt_raster.c	/^rt_raster_geopoint_to_cell($/;"	f
rt_raster_geos_spatial_relationship	raster/rt_core/rt_spatial_relationship.c	/^rt_errorstate rt_raster_geos_spatial_relationship($/;"	f	file:
rt_raster_get_band	raster/rt_core/rt_raster.c	/^rt_raster_get_band(rt_raster raster, int n) {$/;"	f
rt_raster_get_convex_hull	raster/rt_core/rt_geometry.c	/^rt_raster_get_convex_hull(rt_raster raster, LWGEOM **hull) {$/;"	f
rt_raster_get_envelope	raster/rt_core/rt_raster.c	/^rt_raster_get_envelope($/;"	f
rt_raster_get_geotransform_matrix	raster/rt_core/rt_raster.c	/^rt_raster_get_geotransform_matrix(rt_raster raster,$/;"	f
rt_raster_get_height	raster/rt_core/rt_raster.c	/^rt_raster_get_height(rt_raster raster) {$/;"	f
rt_raster_get_inverse_geotransform_matrix	raster/rt_core/rt_raster.c	/^rt_errorstate rt_raster_get_inverse_geotransform_matrix($/;"	f
rt_raster_get_num_bands	raster/rt_core/rt_raster.c	/^rt_raster_get_num_bands(rt_raster raster) {$/;"	f
rt_raster_get_perimeter	raster/rt_core/rt_geometry.c	/^rt_errorstate rt_raster_get_perimeter($/;"	f
rt_raster_get_phys_params	raster/rt_core/rt_raster.c	/^rt_raster_get_phys_params(rt_raster rast,$/;"	f
rt_raster_get_srid	raster/rt_core/rt_raster.c	/^rt_raster_get_srid(rt_raster raster) {$/;"	f
rt_raster_get_width	raster/rt_core/rt_raster.c	/^rt_raster_get_width(rt_raster raster) {$/;"	f
rt_raster_get_x_offset	raster/rt_core/rt_raster.c	/^rt_raster_get_x_offset(rt_raster raster) {$/;"	f
rt_raster_get_x_scale	raster/rt_core/rt_raster.c	/^rt_raster_get_x_scale(rt_raster raster) {$/;"	f
rt_raster_get_x_skew	raster/rt_core/rt_raster.c	/^rt_raster_get_x_skew(rt_raster raster) {$/;"	f
rt_raster_get_y_offset	raster/rt_core/rt_raster.c	/^rt_raster_get_y_offset(rt_raster raster) {$/;"	f
rt_raster_get_y_scale	raster/rt_core/rt_raster.c	/^rt_raster_get_y_scale(rt_raster raster) {$/;"	f
rt_raster_get_y_skew	raster/rt_core/rt_raster.c	/^rt_raster_get_y_skew(rt_raster raster) {$/;"	f
rt_raster_has_band	raster/rt_core/rt_raster.c	/^rt_raster_has_band(rt_raster raster, int nband) {$/;"	f
rt_raster_intersects	raster/rt_core/rt_spatial_relationship.c	/^rt_raster_intersects($/;"	f
rt_raster_intersects_algorithm	raster/rt_core/rt_spatial_relationship.c	/^int rt_raster_intersects_algorithm($/;"	f	file:
rt_raster_is_empty	raster/rt_core/rt_raster.c	/^rt_raster_is_empty(rt_raster raster) {$/;"	f
rt_raster_iterator	raster/rt_core/rt_mapalgebra.c	/^rt_raster_iterator($/;"	f
rt_raster_new	raster/rt_core/rt_raster.c	/^rt_raster_new(uint32_t width, uint32_t height) {$/;"	f
rt_raster_overlaps	raster/rt_core/rt_spatial_relationship.c	/^rt_errorstate rt_raster_overlaps($/;"	f
rt_raster_pixel_as_polygon	raster/rt_core/rt_geometry.c	/^rt_raster_pixel_as_polygon(rt_raster rast, int x, int y)$/;"	f
rt_raster_replace_band	raster/rt_core/rt_raster.c	/^rt_raster_replace_band(rt_raster raster, rt_band band, int index) {$/;"	f
rt_raster_same_alignment	raster/rt_core/rt_spatial_relationship.c	/^rt_raster_same_alignment($/;"	f
rt_raster_serialize	raster/rt_core/rt_serialize.c	/^rt_raster_serialize(rt_raster raster) {$/;"	f
rt_raster_serialized_size	raster/rt_core/rt_serialize.c	/^rt_raster_serialized_size(rt_raster raster) {$/;"	f	file:
rt_raster_serialized_t	raster/rt_core/librtcore.h	/^struct rt_raster_serialized_t {$/;"	s
rt_raster_set_geotransform_matrix	raster/rt_core/rt_raster.c	/^rt_raster_set_geotransform_matrix(rt_raster raster,$/;"	f
rt_raster_set_offsets	raster/rt_core/rt_raster.c	/^rt_raster_set_offsets($/;"	f
rt_raster_set_phys_params	raster/rt_core/rt_raster.c	/^rt_raster_set_phys_params(rt_raster rast,double i_mag, double j_mag, double theta_i, double theta_ij)$/;"	f
rt_raster_set_scale	raster/rt_core/rt_raster.c	/^rt_raster_set_scale($/;"	f
rt_raster_set_skews	raster/rt_core/rt_raster.c	/^rt_raster_set_skews($/;"	f
rt_raster_set_srid	raster/rt_core/rt_raster.c	/^rt_raster_set_srid(rt_raster raster, int32_t srid) {$/;"	f
rt_raster_surface	raster/rt_core/rt_geometry.c	/^rt_errorstate rt_raster_surface(rt_raster raster, int nband, LWMPOLY **surface) {$/;"	f
rt_raster_t	raster/rt_core/librtcore.h	/^struct rt_raster_t {$/;"	s
rt_raster_to_gdal	raster/rt_core/rt_raster.c	/^rt_raster_to_gdal(rt_raster raster, const char *srs,$/;"	f
rt_raster_to_gdal_mem	raster/rt_core/rt_raster.c	/^rt_raster_to_gdal_mem($/;"	f
rt_raster_to_hexwkb	raster/rt_core/rt_wkb.c	/^rt_raster_to_hexwkb(rt_raster raster, int outasin, uint32_t *hexwkbsize) {$/;"	f
rt_raster_to_wkb	raster/rt_core/rt_wkb.c	/^rt_raster_to_wkb(rt_raster raster, int outasin, uint32_t *wkbsize) {$/;"	f
rt_raster_touches	raster/rt_core/rt_spatial_relationship.c	/^rt_errorstate rt_raster_touches($/;"	f
rt_raster_within_distance	raster/rt_core/rt_spatial_relationship.c	/^rt_errorstate rt_raster_within_distance($/;"	f
rt_raster_wkb_size	raster/rt_core/rt_wkb.c	/^rt_raster_wkb_size(rt_raster raster, int outasin) {$/;"	f	file:
rt_reallocator	raster/rt_core/librtcore.h	/^typedef void* (*rt_reallocator)(void *mem, size_t size);$/;"	t
rt_reclassexpr	raster/rt_core/librtcore.h	/^typedef struct rt_reclassexpr_t* rt_reclassexpr;$/;"	t	typeref:struct:rt_reclassexpr_t
rt_reclassexpr_t	raster/rt_core/librtcore.h	/^struct rt_reclassexpr_t {$/;"	s
rt_reclassrange	raster/rt_core/librtcore.h	/^	struct rt_reclassrange {$/;"	s	struct:rt_reclassexpr_t
rt_set_handlers	raster/rt_core/rt_context.c	/^rt_set_handlers(rt_allocator allocator, rt_reallocator reallocator,$/;"	f
rt_util_clamp_to_16BSI	raster/rt_core/rt_util.c	/^rt_util_clamp_to_16BSI(double value) {$/;"	f
rt_util_clamp_to_16BUI	raster/rt_core/rt_util.c	/^rt_util_clamp_to_16BUI(double value) {$/;"	f
rt_util_clamp_to_1BB	raster/rt_core/rt_util.c	/^rt_util_clamp_to_1BB(double value) {$/;"	f
rt_util_clamp_to_2BUI	raster/rt_core/rt_util.c	/^rt_util_clamp_to_2BUI(double value) {$/;"	f
rt_util_clamp_to_32BSI	raster/rt_core/rt_util.c	/^rt_util_clamp_to_32BSI(double value) {$/;"	f
rt_util_clamp_to_32BUI	raster/rt_core/rt_util.c	/^rt_util_clamp_to_32BUI(double value) {$/;"	f
rt_util_clamp_to_32F	raster/rt_core/rt_util.c	/^rt_util_clamp_to_32F(double value) {$/;"	f
rt_util_clamp_to_4BUI	raster/rt_core/rt_util.c	/^rt_util_clamp_to_4BUI(double value) {$/;"	f
rt_util_clamp_to_8BSI	raster/rt_core/rt_util.c	/^rt_util_clamp_to_8BSI(double value) {$/;"	f
rt_util_clamp_to_8BUI	raster/rt_core/rt_util.c	/^rt_util_clamp_to_8BUI(double value) {$/;"	f
rt_util_dbl_trunc_warning	raster/rt_core/rt_util.c	/^rt_util_dbl_trunc_warning($/;"	f
rt_util_envelope_to_lwpoly	raster/rt_core/rt_util.c	/^rt_util_envelope_to_lwpoly($/;"	f
rt_util_extent_type	raster/rt_core/rt_util.c	/^rt_util_extent_type(const char *name) {$/;"	f
rt_util_from_ogr_envelope	raster/rt_core/rt_util.c	/^rt_util_from_ogr_envelope($/;"	f
rt_util_gdal_configured	raster/rt_core/rt_util.c	/^int rt_util_gdal_configured(void) {$/;"	f
rt_util_gdal_convert_sr	raster/rt_core/rt_util.c	/^rt_util_gdal_convert_sr(const char *srs, int proj4) {$/;"	f
rt_util_gdal_datatype_to_pixtype	raster/rt_core/rt_util.c	/^rt_util_gdal_datatype_to_pixtype(GDALDataType gdt) {$/;"	f
rt_util_gdal_driver_registered	raster/rt_core/rt_util.c	/^rt_util_gdal_driver_registered(const char *drv) {$/;"	f
rt_util_gdal_register_all	raster/rt_core/rt_util.c	/^rt_util_gdal_register_all(void) {$/;"	f
rt_util_gdal_resample_alg	raster/rt_core/rt_util.c	/^rt_util_gdal_resample_alg(const char *algname) {$/;"	f
rt_util_gdal_sr_auth_info	raster/rt_core/rt_util.c	/^rt_util_gdal_sr_auth_info(GDALDatasetH hds, char **authname, char **authcode) {$/;"	f
rt_util_gdal_supported_sr	raster/rt_core/rt_util.c	/^rt_util_gdal_supported_sr(const char *srs) {$/;"	f
rt_util_gdal_version	raster/rt_core/rt_util.c	/^rt_util_gdal_version(const char *request) {$/;"	f
rt_util_hsv_to_rgb	raster/rt_core/rt_util.c	/^rt_util_hsv_to_rgb(double hsv[3], double rgb[3]) {$/;"	f
rt_util_pixtype_to_gdal_datatype	raster/rt_core/rt_util.c	/^rt_util_pixtype_to_gdal_datatype(rt_pixtype pt) {$/;"	f
rt_util_rgb_to_hsv	raster/rt_core/rt_util.c	/^rt_util_rgb_to_hsv(double rgb[3], double hsv[3]) {$/;"	f
rt_util_same_geotransform_matrix	raster/rt_core/rt_util.c	/^rt_util_same_geotransform_matrix(double *gt1, double *gt2) {$/;"	f
rt_util_to_ogr_envelope	raster/rt_core/rt_util.c	/^rt_util_to_ogr_envelope($/;"	f
rt_utility_test	raster/test/regress/rt_utility.sql	/^CREATE TABLE rt_utility_test ($/;"	t
rt_utility_test.height	raster/test/regress/rt_utility.sql	/^    height integer,$/;"	F
rt_utility_test.id	raster/test/regress/rt_utility.sql	/^    id numeric,$/;"	F
rt_utility_test.ipx	raster/test/regress/rt_utility.sql	/^    ipx double precision,$/;"	F
rt_utility_test.ipy	raster/test/regress/rt_utility.sql	/^    ipy double precision,$/;"	F
rt_utility_test.name	raster/test/regress/rt_utility.sql	/^    name text,$/;"	F
rt_utility_test.rast	raster/test/regress/rt_utility.sql	/^    rast raster$/;"	F
rt_utility_test.scalex	raster/test/regress/rt_utility.sql	/^    scalex double precision,$/;"	F
rt_utility_test.scaley	raster/test/regress/rt_utility.sql	/^    scaley double precision,$/;"	F
rt_utility_test.skewx	raster/test/regress/rt_utility.sql	/^    skewx double precision,$/;"	F
rt_utility_test.skewy	raster/test/regress/rt_utility.sql	/^    skewy double precision,$/;"	F
rt_utility_test.srid	raster/test/regress/rt_utility.sql	/^    srid integer,$/;"	F
rt_utility_test.width	raster/test/regress/rt_utility.sql	/^    width integer,$/;"	F
rt_valuecount	raster/rt_core/librtcore.h	/^typedef struct rt_valuecount_t* rt_valuecount;$/;"	t	typeref:struct:rt_valuecount_t
rt_valuecount_t	raster/rt_core/librtcore.h	/^struct rt_valuecount_t {$/;"	s
rtalloc	raster/rt_core/rt_context.c	/^rtalloc(size_t size) {$/;"	f
rtband	raster/rt_core/rt_mapalgebra.c	/^		rt_band *rtband;$/;"	m	struct:_rti_iterator_arg_t::__anon45	file:
rtdealloc	raster/rt_core/rt_context.c	/^rtdealloc(void * mem) {$/;"	f
rtdealloc_config	raster/loader/raster2pgsql.c	/^rtdealloc_config(RTLOADERCFG *config) {$/;"	f	file:
rtdealloc_rastinfo	raster/loader/raster2pgsql.c	/^rtdealloc_rastinfo(RASTERINFO *info) {$/;"	f	file:
rtdealloc_stringbuffer	raster/loader/raster2pgsql.c	/^rtdealloc_stringbuffer(STRINGBUFFER *buffer, int freebuffer) {$/;"	f	file:
rterror	raster/rt_core/rt_context.c	/^rterror(const char *fmt, ...) {$/;"	f
rtinfo	raster/rt_core/rt_context.c	/^rtinfo(const char *fmt, ...) {$/;"	f
rtpg_assignHookGDALDataPath	raster/rt_pg/rtpostgis.c	/^rtpg_assignHookGDALDataPath(const char *newpath, void *extra) {$/;"	f	file:
rtpg_chartrim	raster/rt_pg/rtpg_internal.c	/^rtpg_chartrim(const char *input, char *remove) {$/;"	f
rtpg_clip_arg	raster/rt_pg/rtpg_mapalgebra.c	/^typedef struct rtpg_clip_arg_t *rtpg_clip_arg;$/;"	t	typeref:struct:rtpg_clip_arg_t	file:
rtpg_clip_arg_destroy	raster/rt_pg/rtpg_mapalgebra.c	/^static void rtpg_clip_arg_destroy(rtpg_clip_arg arg) {$/;"	f	file:
rtpg_clip_arg_init	raster/rt_pg/rtpg_mapalgebra.c	/^static rtpg_clip_arg rtpg_clip_arg_init() {$/;"	f	file:
rtpg_clip_arg_t	raster/rt_pg/rtpg_mapalgebra.c	/^struct rtpg_clip_arg_t {$/;"	s	file:
rtpg_clip_band	raster/rt_pg/rtpg_mapalgebra.c	/^typedef struct rtpg_clip_band_t *rtpg_clip_band;$/;"	t	typeref:struct:rtpg_clip_band_t	file:
rtpg_clip_band_t	raster/rt_pg/rtpg_mapalgebra.c	/^struct rtpg_clip_band_t {$/;"	s	file:
rtpg_clip_callback	raster/rt_pg/rtpg_mapalgebra.c	/^static int rtpg_clip_callback($/;"	f	file:
rtpg_colormap_arg	raster/rt_pg/rtpg_mapalgebra.c	/^typedef struct rtpg_colormap_arg_t *rtpg_colormap_arg;$/;"	t	typeref:struct:rtpg_colormap_arg_t	file:
rtpg_colormap_arg_destroy	raster/rt_pg/rtpg_mapalgebra.c	/^rtpg_colormap_arg_destroy(rtpg_colormap_arg arg) {$/;"	f	file:
rtpg_colormap_arg_init	raster/rt_pg/rtpg_mapalgebra.c	/^rtpg_colormap_arg_init() {$/;"	f	file:
rtpg_colormap_arg_t	raster/rt_pg/rtpg_mapalgebra.c	/^struct rtpg_colormap_arg_t {$/;"	s	file:
rtpg_dumpvalues_arg	raster/rt_pg/rtpg_pixel.c	/^typedef struct rtpg_dumpvalues_arg_t *rtpg_dumpvalues_arg;$/;"	t	typeref:struct:rtpg_dumpvalues_arg_t	file:
rtpg_dumpvalues_arg_destroy	raster/rt_pg/rtpg_pixel.c	/^static void rtpg_dumpvalues_arg_destroy(rtpg_dumpvalues_arg arg) {$/;"	f	file:
rtpg_dumpvalues_arg_init	raster/rt_pg/rtpg_pixel.c	/^static rtpg_dumpvalues_arg rtpg_dumpvalues_arg_init() {$/;"	f	file:
rtpg_dumpvalues_arg_t	raster/rt_pg/rtpg_pixel.c	/^struct rtpg_dumpvalues_arg_t {$/;"	s	file:
rtpg_getSR	raster/rt_pg/rtpg_internal.c	/^rtpg_getSR(int srid) {$/;"	f
rtpg_nmapalgebra_arg	raster/rt_pg/rtpg_mapalgebra.c	/^typedef struct rtpg_nmapalgebra_arg_t *rtpg_nmapalgebra_arg;$/;"	t	typeref:struct:rtpg_nmapalgebra_arg_t	file:
rtpg_nmapalgebra_arg_destroy	raster/rt_pg/rtpg_mapalgebra.c	/^static void rtpg_nmapalgebra_arg_destroy(rtpg_nmapalgebra_arg arg) {$/;"	f	file:
rtpg_nmapalgebra_arg_init	raster/rt_pg/rtpg_mapalgebra.c	/^static rtpg_nmapalgebra_arg rtpg_nmapalgebra_arg_init() {$/;"	f	file:
rtpg_nmapalgebra_arg_t	raster/rt_pg/rtpg_mapalgebra.c	/^struct rtpg_nmapalgebra_arg_t {$/;"	s	file:
rtpg_nmapalgebra_callback	raster/rt_pg/rtpg_mapalgebra.c	/^static int rtpg_nmapalgebra_callback($/;"	f	file:
rtpg_nmapalgebra_callback_arg	raster/rt_pg/rtpg_mapalgebra.c	/^} rtpg_nmapalgebra_callback_arg;$/;"	t	typeref:struct:__anon49	file:
rtpg_nmapalgebra_rastbandarg_process	raster/rt_pg/rtpg_mapalgebra.c	/^static int rtpg_nmapalgebra_rastbandarg_process(rtpg_nmapalgebra_arg arg, ArrayType *array, int *allnull, int *allempty, int *noband) {$/;"	f	file:
rtpg_nmapalgebraexpr_arg	raster/rt_pg/rtpg_mapalgebra.c	/^typedef struct rtpg_nmapalgebraexpr_arg_t *rtpg_nmapalgebraexpr_arg;$/;"	t	typeref:struct:rtpg_nmapalgebraexpr_arg_t	file:
rtpg_nmapalgebraexpr_arg_destroy	raster/rt_pg/rtpg_mapalgebra.c	/^static void rtpg_nmapalgebraexpr_arg_destroy(rtpg_nmapalgebraexpr_arg arg) {$/;"	f	file:
rtpg_nmapalgebraexpr_arg_init	raster/rt_pg/rtpg_mapalgebra.c	/^static rtpg_nmapalgebraexpr_arg rtpg_nmapalgebraexpr_arg_init(int cnt, char **kw) {$/;"	f	file:
rtpg_nmapalgebraexpr_arg_t	raster/rt_pg/rtpg_mapalgebra.c	/^struct rtpg_nmapalgebraexpr_arg_t {$/;"	s	file:
rtpg_nmapalgebraexpr_callback	raster/rt_pg/rtpg_mapalgebra.c	/^static int rtpg_nmapalgebraexpr_callback($/;"	f	file:
rtpg_nmapalgebraexpr_callback_arg	raster/rt_pg/rtpg_mapalgebra.c	/^} rtpg_nmapalgebraexpr_callback_arg;$/;"	t	typeref:struct:__anon50	file:
rtpg_removespaces	raster/rt_pg/rtpg_internal.c	/^rtpg_removespaces(char *str) {$/;"	f
rtpg_setvalues_geomval_callback	raster/rt_pg/rtpg_pixel.c	/^static int rtpg_setvalues_geomval_callback($/;"	f	file:
rtpg_setvaluesgv_arg	raster/rt_pg/rtpg_pixel.c	/^typedef struct rtpg_setvaluesgv_arg_t *rtpg_setvaluesgv_arg;$/;"	t	typeref:struct:rtpg_setvaluesgv_arg_t	file:
rtpg_setvaluesgv_arg_destroy	raster/rt_pg/rtpg_pixel.c	/^static void rtpg_setvaluesgv_arg_destroy(rtpg_setvaluesgv_arg arg) {$/;"	f	file:
rtpg_setvaluesgv_arg_init	raster/rt_pg/rtpg_pixel.c	/^static rtpg_setvaluesgv_arg rtpg_setvaluesgv_arg_init() {$/;"	f	file:
rtpg_setvaluesgv_arg_t	raster/rt_pg/rtpg_pixel.c	/^struct rtpg_setvaluesgv_arg_t {$/;"	s	file:
rtpg_setvaluesgv_geomval	raster/rt_pg/rtpg_pixel.c	/^typedef struct rtpg_setvaluesgv_geomval_t *rtpg_setvaluesgv_geomval;$/;"	t	typeref:struct:rtpg_setvaluesgv_geomval_t	file:
rtpg_setvaluesgv_geomval_t	raster/rt_pg/rtpg_pixel.c	/^struct rtpg_setvaluesgv_geomval_t {$/;"	s	file:
rtpg_strreplace	raster/rt_pg/rtpg_internal.c	/^rtpg_strreplace($/;"	f
rtpg_strsplit	raster/rt_pg/rtpg_internal.c	/^rtpg_strsplit(const char *str, const char *delimiter, int *n) {$/;"	f
rtpg_strtoupper	raster/rt_pg/rtpg_internal.c	/^rtpg_strtoupper(char * str) {$/;"	f
rtpg_trim	raster/rt_pg/rtpg_internal.c	/^rtpg_trim(const char *input) {$/;"	f
rtpg_union_arg	raster/rt_pg/rtpg_mapalgebra.c	/^typedef struct rtpg_union_arg_t *rtpg_union_arg;$/;"	t	typeref:struct:rtpg_union_arg_t	file:
rtpg_union_arg_destroy	raster/rt_pg/rtpg_mapalgebra.c	/^static void rtpg_union_arg_destroy(rtpg_union_arg arg) {$/;"	f	file:
rtpg_union_arg_t	raster/rt_pg/rtpg_mapalgebra.c	/^struct rtpg_union_arg_t {$/;"	s	file:
rtpg_union_band_arg	raster/rt_pg/rtpg_mapalgebra.c	/^typedef struct rtpg_union_band_arg_t *rtpg_union_band_arg;$/;"	t	typeref:struct:rtpg_union_band_arg_t	file:
rtpg_union_band_arg_t	raster/rt_pg/rtpg_mapalgebra.c	/^struct rtpg_union_band_arg_t {$/;"	s	file:
rtpg_union_callback	raster/rt_pg/rtpg_mapalgebra.c	/^static int rtpg_union_callback($/;"	f	file:
rtpg_union_mean_callback	raster/rt_pg/rtpg_mapalgebra.c	/^static int rtpg_union_mean_callback($/;"	f	file:
rtpg_union_noarg	raster/rt_pg/rtpg_mapalgebra.c	/^static int rtpg_union_noarg(rtpg_union_arg arg, rt_raster raster) {$/;"	f	file:
rtpg_union_range_callback	raster/rt_pg/rtpg_mapalgebra.c	/^static int rtpg_union_range_callback($/;"	f	file:
rtpg_union_type	raster/rt_pg/rtpg_mapalgebra.c	/^} rtpg_union_type;$/;"	t	typeref:enum:__anon54	file:
rtpg_union_unionarg_process	raster/rt_pg/rtpg_mapalgebra.c	/^static int rtpg_union_unionarg_process(rtpg_union_arg arg, ArrayType *array) {$/;"	f	file:
rtpg_uniontype_index_from_name	raster/rt_pg/rtpg_mapalgebra.c	/^static rtpg_union_type rtpg_uniontype_index_from_name(const char *cutype) {$/;"	f	file:
rtrealloc	raster/rt_core/rt_context.c	/^rtrealloc(void * mem, size_t size) {$/;"	f
rtree_node	postgis/lwgeom_rtree.h	/^typedef struct rtree_node$/;"	s
rtwarn	raster/rt_core/rt_context.c	/^rtwarn(const char *fmt, ...) {$/;"	f
run_dumper_and_check_output	regress/run_test	/^run_dumper_and_check_output()$/;"	f
run_dumper_and_check_output	regress/run_test.pl	/^sub run_dumper_and_check_output$/;"	s
run_loader_and_check_output	regress/run_test	/^run_loader_and_check_output()$/;"	f
run_loader_and_check_output	regress/run_test.pl	/^sub run_loader_and_check_output$/;"	s
run_loader_test	regress/run_test	/^run_loader_test ()$/;"	f
run_loader_test	regress/run_test.pl	/^sub run_loader_test $/;"	s
run_raster_loader_and_check_output	regress/run_test	/^run_raster_loader_and_check_output()$/;"	f
run_raster_loader_and_check_output	regress/run_test.pl	/^sub run_raster_loader_and_check_output$/;"	s
run_raster_loader_test	regress/run_test	/^run_raster_loader_test ()$/;"	f
run_raster_loader_test	regress/run_test.pl	/^sub run_raster_loader_test$/;"	s
run_simple_sql	regress/run_test	/^run_simple_sql ()$/;"	f
run_simple_sql	regress/run_test.pl	/^sub run_simple_sql$/;"	s
run_simple_test	regress/run_test	/^run_simple_test ()$/;"	f
run_simple_test	regress/run_test.pl	/^sub run_simple_test$/;"	s
s	liblwgeom/cunit/cu_in_wkt.c	/^char *s;$/;"	v
s	liblwgeom/cunit/cu_out_wkb.c	/^char *s;$/;"	v
s	liblwgeom/cunit/cu_out_wkt.c	/^char *s = NULL; $/;"	v
sHooks	loader/shapefil.h	/^    SAHooks sHooks;$/;"	m	struct:__anon64
sHooks	loader/shapefil.h	/^    SAHooks sHooks;$/;"	m	struct:__anon67
s_getvarint_size	liblwgeom/lwout_twkb.c	/^int s_getvarint_size(long val)$/;"	f
s_varint_to_twkb_buf	liblwgeom/lwout_twkb.c	/^static uint8_t* s_varint_to_twkb_buf(long val, uint8_t *buf)$/;"	f	file:
sample	raster/rt_core/librtcore.h	/^	double sample;$/;"	m	struct:rt_bandstats_t
sample_features	postgis/gserialized_estimate.c	/^	float4 sample_features;$/;"	m	struct:ND_STATS_T	file:
save_edges	topology/test/regress/st_remedgemodface.sql	/^CREATE OR REPLACE FUNCTION save_edges()$/;"	f
save_edges	topology/test/regress/st_remedgenewface.sql	/^CREATE OR REPLACE FUNCTION save_edges()$/;"	f
save_faces	topology/test/regress/st_remedgemodface.sql	/^CREATE OR REPLACE FUNCTION save_faces()$/;"	f
save_faces	topology/test/regress/st_remedgenewface.sql	/^CREATE OR REPLACE FUNCTION save_faces()$/;"	f
save_nodes	topology/test/regress/st_remedgemodface.sql	/^CREATE OR REPLACE FUNCTION save_nodes()$/;"	f
save_nodes	topology/test/regress/st_remedgenewface.sql	/^CREATE OR REPLACE FUNCTION save_nodes()$/;"	f
scaleX	raster/rt_core/librtcore.h	/^    double scaleX; \/* pixel width *\/$/;"	m	struct:rt_raster_t
scaleX	raster/rt_core/librtcore.h	/^    double scaleX; \/* pixel width: 8 bytes *\/$/;"	m	struct:rt_raster_serialized_t
scaleY	raster/rt_core/librtcore.h	/^    double scaleY; \/* pixel height *\/$/;"	m	struct:rt_raster_t
scaleY	raster/rt_core/librtcore.h	/^    double scaleY; \/* pixel height: 8 bytes *\/$/;"	m	struct:rt_raster_serialized_t
schema	loader/pgsql2shp-core.h	/^	char *schema;$/;"	m	struct:shp_dumper_config
schema	loader/pgsql2shp-core.h	/^	char *schema;$/;"	m	struct:shp_dumper_state
schema	loader/shp2pgsql-core.h	/^	char *schema;$/;"	m	struct:shp_loader_config
schema	raster/loader/raster2pgsql.h	/^	char *schema;$/;"	m	struct:raster_loader_config
searchPolygon	java/ejb2/src/com/geodetix/geo/client/Client.java	/^    private Polygon searchPolygon;$/;"	f	class:Client	file:
secondary_unit_lookup	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE secondary_unit_lookup (name VARCHAR(20) PRIMARY KEY, abbrev VARCHAR(5));$/;"	t
secondary_unit_lookup.abbrev	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE secondary_unit_lookup (name VARCHAR(20) PRIMARY KEY, abbrev VARCHAR(5));$/;"	F
secondary_unit_lookup.name	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE secondary_unit_lookup (name VARCHAR(20) PRIMARY KEY, abbrev VARCHAR(5));$/;"	F
secondary_unit_lookup.secondary_unit_lookup_abbrev_idx	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX secondary_unit_lookup_abbrev_idx ON secondary_unit_lookup (abbrev);$/;"	i
segment	postgis/lwgeom_rtree.h	/^	LWLINE *segment;$/;"	m	struct:rtree_node
segment_locate_along	liblwgeom/lwlinearreferencing.c	/^segment_locate_along(const POINT4D *p1, const POINT4D *p2, double m, double offset, POINT4D *pn)$/;"	f	file:
serialVersionUID	java/ejb3/src/org/postgis/hibernate/ContainsExpression.java	/^	private static final long serialVersionUID = 1L;$/;"	f	class:ContainsExpression	file:
serialVersionUID	java/ejb3/src/org/postgis/hibernate/IntersectsExpression.java	/^	private static final long serialVersionUID = 1L;$/;"	f	class:IntersectsExpression	file:
serialVersionUID	java/ejb3/src/org/postgis/hibernate/WithinExpression.java	/^	private static final long serialVersionUID = 1L;$/;"	f	class:WithinExpression	file:
serialVersionUID	java/jdbc/jtssrc/org/postgis/jts/JtsGeometry.java	/^    private static final long serialVersionUID = 0x100;$/;"	f	class:JtsGeometry	file:
serialVersionUID	java/jdbc/src/examples/TestJava2d.java	/^        private static final long serialVersionUID = 1L;$/;"	f	class:TestJava2d.GisCanvas	file:
serialVersionUID	java/jdbc/src/org/postgis/ComposedGeom.java	/^    private static final long serialVersionUID = 0x100;$/;"	f	class:ComposedGeom	file:
serialVersionUID	java/jdbc/src/org/postgis/Geometry.java	/^	private static final long serialVersionUID = 0x100;$/;"	f	class:Geometry	file:
serialVersionUID	java/jdbc/src/org/postgis/GeometryCollection.java	/^    private static final long serialVersionUID = 0x100;$/;"	f	class:GeometryCollection	file:
serialVersionUID	java/jdbc/src/org/postgis/LineString.java	/^    private static final long serialVersionUID = 0x100;$/;"	f	class:LineString	file:
serialVersionUID	java/jdbc/src/org/postgis/LinearRing.java	/^    private static final long serialVersionUID = 0x100;$/;"	f	class:LinearRing	file:
serialVersionUID	java/jdbc/src/org/postgis/MultiLineString.java	/^    private static final long serialVersionUID = 0x100;$/;"	f	class:MultiLineString	file:
serialVersionUID	java/jdbc/src/org/postgis/MultiPoint.java	/^    private static final long serialVersionUID = 0x100;$/;"	f	class:MultiPoint	file:
serialVersionUID	java/jdbc/src/org/postgis/MultiPolygon.java	/^    private static final long serialVersionUID = 0x100;$/;"	f	class:MultiPolygon	file:
serialVersionUID	java/jdbc/src/org/postgis/PGbox2d.java	/^    private static final long serialVersionUID = 0x100;$/;"	f	class:PGbox2d	file:
serialVersionUID	java/jdbc/src/org/postgis/PGbox3d.java	/^    private static final long serialVersionUID = 0x100;$/;"	f	class:PGbox3d	file:
serialVersionUID	java/jdbc/src/org/postgis/PGboxbase.java	/^    private static final long serialVersionUID = 0x100;$/;"	f	class:PGboxbase	file:
serialVersionUID	java/jdbc/src/org/postgis/PGgeometry.java	/^    private static final long serialVersionUID = 0x100;$/;"	f	class:PGgeometry	file:
serialVersionUID	java/jdbc/src/org/postgis/PGgeometryLW.java	/^    private static final long serialVersionUID = 0x100;$/;"	f	class:PGgeometryLW	file:
serialVersionUID	java/jdbc/src/org/postgis/Point.java	/^    private static final long serialVersionUID = 0x100;$/;"	f	class:Point	file:
serialVersionUID	java/jdbc/src/org/postgis/PointComposedGeom.java	/^    private static final long serialVersionUID = 0x100;$/;"	f	class:PointComposedGeom	file:
serialVersionUID	java/jdbc/src/org/postgis/Polygon.java	/^    private static final long serialVersionUID = 0x100;$/;"	f	class:Polygon	file:
serialVersionUID	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^    private static final long serialVersionUID = 0x100;$/;"	f	class:PGShapeGeometry	file:
serialize_test	regress/sql-mm-serialize.sql	/^CREATE TABLE serialize_test ($/;"	t
serialize_test.description	regress/sql-mm-serialize.sql	/^        description VARCHAR,$/;"	F
serialize_test.ewkt	regress/sql-mm-serialize.sql	/^        ewkt VARCHAR,$/;"	F
serialize_test.id	regress/sql-mm-serialize.sql	/^        id INTEGER,$/;"	F
serialize_test.serialized	regress/sql-mm-serialize.sql	/^        serialized TEXT);$/;"	F
set	java/jdbc/src/org/postgis/binary/ByteSetter.java	/^        public void set(byte b, int index) {$/;"	m	class:ByteSetter.BinaryByteSetter
set	java/jdbc/src/org/postgis/binary/ByteSetter.java	/^        public void set(byte b, int index) {$/;"	m	class:ByteSetter.StringByteSetter
set	java/jdbc/src/org/postgis/binary/ByteSetter.java	/^    public abstract void set(byte b, int index);$/;"	m	class:ByteSetter
setBits	raster/rt_core/rt_serialize.c	/^setBits(char* ch, double val, int bits, int bitOffset) {$/;"	f
setByte	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^    public void setByte(byte value) {$/;"	m	class:ValueSetter
setClassAttr	doc/html/search/search.js	/^function setClassAttr(elem,attr)$/;"	f
setDate	java/ejb3/src/org/postgis/ejb/PersonEntity.java	/^	public void setDate(Date date) {$/;"	m	class:PersonEntity
setDescription	java/ejb2/src/com/geodetix/geo/ejb/GeometryBean.java	/^    public void setDescription(String description) {$/;"	m	class:GeometryBean
setDouble	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^    public void setDouble(double data) {$/;"	m	class:ValueSetter
setGeometry	java/ejb2/src/com/geodetix/geo/ejb/GeometryBean.java	/^    public void setGeometry(org.postgis.Geometry geometry) {$/;"	m	class:GeometryBean
setGeometry	java/jdbc/src/org/postgis/PGgeometry.java	/^    public void setGeometry(Geometry newgeom) {$/;"	m	class:PGgeometry
setId	java/ejb2/src/com/geodetix/geo/ejb/GeometryBean.java	/^    public void setId(Integer id) {$/;"	m	class:GeometryBean
setId	java/ejb3/src/org/postgis/ejb/PersonEntity.java	/^	public void setId(long id) {$/;"	m	class:PersonEntity
setInt	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^        protected void setInt(int value, int index) {$/;"	m	class:ValueSetter.NDR
setInt	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^        protected void setInt(int value, int index) {$/;"	m	class:ValueSetter.XDR
setInt	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^    protected abstract void setInt(int value, int index);$/;"	m	class:ValueSetter
setInt	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^    public void setInt(int value) {$/;"	m	class:ValueSetter
setKeyActions	doc/html/search/search.js	/^function setKeyActions(elem,action)$/;"	f
setLocation	java/ejb3/src/org/postgis/ejb/PersonEntity.java	/^	public void setLocation(Geometry location) {$/;"	m	class:PersonEntity
setLong	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^        protected void setLong(long value, int index) {$/;"	m	class:ValueSetter.NDR
setLong	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^        protected void setLong(long value, int index) {$/;"	m	class:ValueSetter.XDR
setLong	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^    protected abstract void setLong(long data, int index);$/;"	m	class:ValueSetter
setLong	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^    public void setLong(long value) {$/;"	m	class:ValueSetter
setM	java/jdbc/src/org/postgis/Point.java	/^    public void setM(double m) {$/;"	m	class:Point
setName	java/ejb3/src/org/postgis/ejb/PersonEntity.java	/^	public void setName(String name) {$/;"	m	class:PersonEntity
setSessionContext	java/ejb2/src/com/geodetix/geo/ejb/GeometryFacadeBean.java	/^    public void setSessionContext(SessionContext ctx)$/;"	m	class:GeometryFacadeBean
setSrid	java/jdbc/src/org/postgis/ComposedGeom.java	/^    public void setSrid(int srid) {$/;"	m	class:ComposedGeom
setSrid	java/jdbc/src/org/postgis/Geometry.java	/^	public void setSrid(int srid) {$/;"	m	class:Geometry
setSridRecurse	java/jdbc/jtssrc/org/postgis/jts/JtsGeometry.java	/^    public static void setSridRecurse(final Geometry geom, final int srid) {$/;"	m	class:JtsGeometry
setSurname	java/ejb3/src/org/postgis/ejb/PersonEntity.java	/^	public void setSurname(String surname) {$/;"	m	class:PersonEntity
setValue	java/jdbc/jtssrc/org/postgis/jts/JtsGeometry.java	/^    public void setValue(String value) throws SQLException {$/;"	m	class:JtsGeometry
setValue	java/jdbc/src/org/postgis/PGbox2d.java	/^    public void setValue(String value) throws SQLException {$/;"	m	class:PGbox2d
setValue	java/jdbc/src/org/postgis/PGboxbase.java	/^    public void setValue(String value) throws SQLException {$/;"	m	class:PGboxbase
setValue	java/jdbc/src/org/postgis/PGgeometry.java	/^    public void setValue(String value) throws SQLException {$/;"	m	class:PGgeometry
setValue	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^    public void setValue(String value) throws SQLException {$/;"	m	class:PGShapeGeometry
setX	java/jdbc/src/org/postgis/Point.java	/^    public void setX(double x) {$/;"	m	class:Point
setX	java/jdbc/src/org/postgis/Point.java	/^    public void setX(int x) {$/;"	m	class:Point
setY	java/jdbc/src/org/postgis/Point.java	/^    public void setY(double y) {$/;"	m	class:Point
setY	java/jdbc/src/org/postgis/Point.java	/^    public void setY(int y) {$/;"	m	class:Point
setZ	java/jdbc/src/org/postgis/Point.java	/^    public void setZ(double z) {$/;"	m	class:Point
setZ	java/jdbc/src/org/postgis/Point.java	/^    public void setZ(int z) {$/;"	m	class:Point
set_dumper_config_defaults	loader/pgsql2shp-core.c	/^set_dumper_config_defaults(SHPDUMPERCONFIG *config)$/;"	f
set_loader_config_defaults	loader/shp2pgsql-core.c	/^set_loader_config_defaults(SHPLOADERCONFIG *config)$/;"	f
setpoint	liblwgeom/cunit/cu_algorithm.c	100;"	d	file:
sfcgal_area	postgis/lwgeom_sfcgal.c	/^Datum sfcgal_area(PG_FUNCTION_ARGS)$/;"	f
sfcgal_area	postgis/lwgeom_sfcgal.c	/^PG_FUNCTION_INFO_V1(sfcgal_area);$/;"	v
sfcgal_area3D	postgis/lwgeom_sfcgal.c	/^Datum sfcgal_area3D(PG_FUNCTION_ARGS)$/;"	f
sfcgal_area3D	postgis/lwgeom_sfcgal.c	/^PG_FUNCTION_INFO_V1(sfcgal_area3D);$/;"	v
sfcgal_distance	postgis/lwgeom_sfcgal.c	/^Datum sfcgal_distance(PG_FUNCTION_ARGS)$/;"	f
sfcgal_distance	postgis/lwgeom_sfcgal.c	/^PG_FUNCTION_INFO_V1(sfcgal_distance);$/;"	v
sfcgal_distance3D	postgis/lwgeom_sfcgal.c	/^Datum sfcgal_distance3D(PG_FUNCTION_ARGS)$/;"	f
sfcgal_distance3D	postgis/lwgeom_sfcgal.c	/^PG_FUNCTION_INFO_V1(sfcgal_distance3D);$/;"	v
sfcgal_extrude	postgis/lwgeom_sfcgal.c	/^Datum sfcgal_extrude(PG_FUNCTION_ARGS)$/;"	f
sfcgal_extrude	postgis/lwgeom_sfcgal.c	/^PG_FUNCTION_INFO_V1(sfcgal_extrude);$/;"	v
sfcgal_force_lhr	postgis/lwgeom_sfcgal.c	/^Datum sfcgal_force_lhr(PG_FUNCTION_ARGS)$/;"	f
sfcgal_force_lhr	postgis/lwgeom_sfcgal.c	/^PG_FUNCTION_INFO_V1(sfcgal_force_lhr);	$/;"	v
sfcgal_from_ewkt	postgis/lwgeom_sfcgal.c	/^Datum sfcgal_from_ewkt(PG_FUNCTION_ARGS)$/;"	f
sfcgal_from_ewkt	postgis/lwgeom_sfcgal.c	/^PG_FUNCTION_INFO_V1(sfcgal_from_ewkt);$/;"	v
sfcgal_intersection	postgis/lwgeom_sfcgal.c	/^Datum sfcgal_intersection(PG_FUNCTION_ARGS)$/;"	f
sfcgal_intersection	postgis/lwgeom_sfcgal.c	/^PG_FUNCTION_INFO_V1(sfcgal_intersection);	$/;"	v
sfcgal_intersection3D	postgis/lwgeom_sfcgal.c	/^Datum sfcgal_intersection3D(PG_FUNCTION_ARGS)$/;"	f
sfcgal_intersection3D	postgis/lwgeom_sfcgal.c	/^PG_FUNCTION_INFO_V1(sfcgal_intersection3D);	$/;"	v
sfcgal_intersects	postgis/lwgeom_sfcgal.c	/^Datum sfcgal_intersects(PG_FUNCTION_ARGS)$/;"	f
sfcgal_intersects	postgis/lwgeom_sfcgal.c	/^PG_FUNCTION_INFO_V1(sfcgal_intersects);$/;"	v
sfcgal_intersects3D	postgis/lwgeom_sfcgal.c	/^Datum sfcgal_intersects3D(PG_FUNCTION_ARGS)$/;"	f
sfcgal_intersects3D	postgis/lwgeom_sfcgal.c	/^PG_FUNCTION_INFO_V1(sfcgal_intersects3D);$/;"	v
sfcgal_is_planar	postgis/lwgeom_sfcgal.c	/^Datum sfcgal_is_planar(PG_FUNCTION_ARGS)$/;"	f
sfcgal_is_planar	postgis/lwgeom_sfcgal.c	/^PG_FUNCTION_INFO_V1(sfcgal_is_planar);$/;"	v
sfcgal_minkowski_sum	postgis/lwgeom_sfcgal.c	/^Datum sfcgal_minkowski_sum(PG_FUNCTION_ARGS)$/;"	f
sfcgal_minkowski_sum	postgis/lwgeom_sfcgal.c	/^PG_FUNCTION_INFO_V1(sfcgal_minkowski_sum);	$/;"	v
sfcgal_orientation	postgis/lwgeom_sfcgal.c	/^Datum sfcgal_orientation(PG_FUNCTION_ARGS)$/;"	f
sfcgal_orientation	postgis/lwgeom_sfcgal.c	/^PG_FUNCTION_INFO_V1(sfcgal_orientation);$/;"	v
sfcgal_postgis_init	postgis/lwgeom_sfcgal.c	/^void sfcgal_postgis_init(void)$/;"	f
sfcgal_straight_skeleton	postgis/lwgeom_sfcgal.c	/^Datum sfcgal_straight_skeleton(PG_FUNCTION_ARGS)$/;"	f
sfcgal_straight_skeleton	postgis/lwgeom_sfcgal.c	/^PG_FUNCTION_INFO_V1(sfcgal_straight_skeleton);	$/;"	v
sfcgal_suite	liblwgeom/cunit/cu_sfcgal.c	/^CU_SuiteInfo sfcgal_suite = {"SFCGAL",  NULL,  NULL, sfcgal_tests};$/;"	v
sfcgal_tesselate	postgis/lwgeom_sfcgal.c	/^Datum sfcgal_tesselate(PG_FUNCTION_ARGS)$/;"	f
sfcgal_tesselate	postgis/lwgeom_sfcgal.c	/^PG_FUNCTION_INFO_V1(sfcgal_tesselate);	$/;"	v
sfcgal_tests	liblwgeom/cunit/cu_sfcgal.c	/^CU_TestInfo sfcgal_tests[] =$/;"	v
sfcgal_triangulate	postgis/lwgeom_sfcgal.c	/^Datum sfcgal_triangulate(PG_FUNCTION_ARGS)$/;"	f
sfcgal_triangulate	postgis/lwgeom_sfcgal.c	/^PG_FUNCTION_INFO_V1(sfcgal_triangulate);	$/;"	v
shape_tree_node	loader/shapefil.h	/^typedef struct shape_tree_node$/;"	s
shapetypename	loader/pgsql2shp-core.c	/^shapetypename(int num)$/;"	f
short	liblwgeom/lwin_wkt_parse.c	297;"	d	file:
short_name	raster/rt_core/librtcore.h	/^	char *short_name;$/;"	m	struct:rt_gdaldriver_t
showGeometry	java/ejb2/src/com/geodetix/geo/client/Client.java	/^    private void showGeometry(Geometry geometry) {$/;"	m	class:Client	file:
showGeometry	java/ejb2/src/com/geodetix/geo/client/Client.java	/^    private void showGeometry(GeometryValue geometryValue) {$/;"	m	class:Client	file:
show_progress	regress/run_test	/^show_progress()$/;"	f
show_progress	regress/run_test.pl	/^sub show_progress$/;"	s
shp	loader/pgsql2shp-core.h	/^	SHPHandle shp;$/;"	m	struct:shp_dumper_state
shp_connection_state	loader/shpcommon.h	/^typedef struct shp_connection_state$/;"	s
shp_dumper_config	loader/pgsql2shp-core.h	/^typedef struct shp_dumper_config$/;"	s
shp_dumper_state	loader/pgsql2shp-core.h	/^typedef struct shp_dumper_state$/;"	s
shp_file	loader/pgsql2shp-core.h	/^	char *shp_file;$/;"	m	struct:shp_dumper_config
shp_file	loader/pgsql2shp-core.h	/^	char *shp_file;$/;"	m	struct:shp_dumper_state
shp_file	loader/shp2pgsql-core.h	/^	char *shp_file;$/;"	m	struct:shp_loader_config
shp_loader_config	loader/shp2pgsql-core.h	/^typedef struct shp_loader_config$/;"	s
shp_loader_state	loader/shp2pgsql-core.h	/^typedef struct shp_loader_state$/;"	s
shp_sr_id	loader/shp2pgsql-core.h	/^	int shp_sr_id;$/;"	m	struct:shp_loader_config
shpfiletype	loader/shp2pgsql-core.h	/^	int shpfiletype;$/;"	m	struct:shp_loader_state
signum	liblwgeom/lwalgorithm.c	/^int signum(double n)$/;"	f
signum	liblwgeom/lwgeodetic.h	66;"	d
simple_geometries	loader/shp2pgsql-core.h	/^	int simple_geometries;$/;"	m	struct:shp_loader_config
size	postgis/gserialized_estimate.c	/^	float4 size[ND_DIMS];$/;"	m	struct:ND_STATS_T	file:
size	raster/rt_core/librtcore.h	/^    uint32_t size; \/* required by postgresql: 4 bytes *\/$/;"	m	struct:rt_raster_serialized_t
size	raster/rt_core/librtcore.h	/^    uint32_t size;$/;"	m	struct:rt_raster_t
skewX	raster/rt_core/librtcore.h	/^    double skewX; \/* skew about the X axis*\/$/;"	m	struct:rt_raster_t
skewX	raster/rt_core/librtcore.h	/^    double skewX; \/* skew about the X axis: 8 bytes *\/$/;"	m	struct:rt_raster_serialized_t
skewY	raster/rt_core/librtcore.h	/^    double skewY; \/* skew about the Y axis *\/$/;"	m	struct:rt_raster_t
skewY	raster/rt_core/librtcore.h	/^    double skewY; \/* skew about the Y axis: 8 bytes *\/$/;"	m	struct:rt_raster_serialized_t
skipZM	java/jdbc/src/org/postgis/java2d/ShapeBinaryParser.java	/^    private void skipZM(ValueGetter data, boolean haveZ, boolean haveM) {$/;"	m	class:ShapeBinaryParser	file:
snprintf	loader/shpopen.c	290;"	d	file:
sorted	raster/rt_core/librtcore.h	/^	int sorted; \/* flag indicating that values is sorted ascending by value *\/$/;"	m	struct:rt_bandstats_t
spatial_relationship_suite	raster/test/cunit/cu_spatial_relationship.c	/^CU_SuiteInfo spatial_relationship_suite = {"spatial_relationship",  NULL,  NULL, spatial_relationship_tests};$/;"	v
spatial_relationship_tests	raster/test/cunit/cu_spatial_relationship.c	/^CU_TestInfo spatial_relationship_tests[] = {$/;"	v
sphere_angle	liblwgeom/lwgeodetic.c	/^sphere_angle(const GEOGRAPHIC_POINT *a, const GEOGRAPHIC_POINT *b,  const GEOGRAPHIC_POINT *c)$/;"	f	file:
sphere_direction	liblwgeom/lwgeodetic.c	/^double sphere_direction(const GEOGRAPHIC_POINT *s, const GEOGRAPHIC_POINT *e, double d)$/;"	f
sphere_distance	liblwgeom/lwgeodetic.c	/^double sphere_distance(const GEOGRAPHIC_POINT *s, const GEOGRAPHIC_POINT *e)$/;"	f
sphere_distance_cartesian	liblwgeom/lwgeodetic.c	/^double sphere_distance_cartesian(const POINT3D *s, const POINT3D *e)$/;"	f
sphere_project	liblwgeom/lwgeodetic.c	/^int sphere_project(const GEOGRAPHIC_POINT *r, double distance, double azimuth, GEOGRAPHIC_POINT *n)$/;"	f
sphere_signed_area	liblwgeom/lwgeodetic.c	/^sphere_signed_area(const GEOGRAPHIC_POINT *a, const GEOGRAPHIC_POINT *b, const GEOGRAPHIC_POINT *c)$/;"	f	file:
spheroid_big_a	liblwgeom/lwspheroid.c	/^static double spheroid_big_a(double u2)$/;"	f	file:
spheroid_big_b	liblwgeom/lwspheroid.c	/^static double spheroid_big_b(double u2)$/;"	f	file:
spheroid_boundingbox_area	liblwgeom/lwspheroid.c	/^static double spheroid_boundingbox_area(const GEOGRAPHIC_POINT *southWestCorner, const GEOGRAPHIC_POINT *northEastCorner, const SPHEROID *spheroid)$/;"	f	file:
spheroid_direction	liblwgeom/lwspheroid.c	/^double spheroid_direction(const GEOGRAPHIC_POINT *r, const GEOGRAPHIC_POINT *s, const SPHEROID *spheroid)$/;"	f
spheroid_distance	liblwgeom/lwspheroid.c	/^double spheroid_distance(const GEOGRAPHIC_POINT *a, const GEOGRAPHIC_POINT *b, const SPHEROID *spheroid)$/;"	f
spheroid_init	liblwgeom/lwspheroid.c	/^void spheroid_init(SPHEROID *s, double a, double b)$/;"	f
spheroid_init_from_srid	libpgcommon/lwgeom_transform.c	/^spheroid_init_from_srid(FunctionCallInfo fcinfo, int srid, SPHEROID *s)$/;"	f
spheroid_mu2	liblwgeom/lwspheroid.c	/^static double spheroid_mu2(double alpha, const SPHEROID *s)$/;"	f	file:
spheroid_parallel_arc_length	liblwgeom/lwspheroid.c	/^static inline double spheroid_parallel_arc_length(double latitude, double deltaLongitude, const SPHEROID *spheroid)$/;"	f	file:
spheroid_prime_vertical_radius_of_curvature	liblwgeom/lwspheroid.c	/^static inline double spheroid_prime_vertical_radius_of_curvature(double latitude, const SPHEROID *spheroid)$/;"	f	file:
spheroid_project	liblwgeom/lwspheroid.c	/^int spheroid_project(const GEOGRAPHIC_POINT *r, const SPHEROID *spheroid, double distance, double azimuth, GEOGRAPHIC_POINT *g)$/;"	f
spheroid_striparea	liblwgeom/lwspheroid.c	/^static double spheroid_striparea(const GEOGRAPHIC_POINT *a, const GEOGRAPHIC_POINT *b, double latitude_min, const SPHEROID *spheroid)$/;"	f	file:
spi_argcount	raster/rt_pg/rtpg_mapalgebra.c	/^		uint32_t spi_argcount;$/;"	m	struct:__anon50::__anon51	file:
spi_argpos	raster/rt_pg/rtpg_mapalgebra.c	/^		uint8_t *spi_argpos;$/;"	m	struct:__anon50::__anon51	file:
spi_plan	raster/rt_pg/rtpg_mapalgebra.c	/^		SPIPlanPtr spi_plan;$/;"	m	struct:__anon50::__anon51	file:
splitSRID	java/jdbc/src/org/postgis/PGgeometry.java	/^    public static String[] splitSRID(String whole) throws SQLException {$/;"	m	class:PGgeometry
split_extent	utils/profile_intersects.pl	/^sub split_extent$/;"	s
split_extent	utils/test_estimation.pl	/^sub split_extent$/;"	s
split_extent	utils/test_geography_estimation.pl	/^sub split_extent$/;"	s
split_extent	utils/test_geography_joinestimation.pl	/^sub split_extent$/;"	s
split_extent	utils/test_joinestimation.pl	/^sub split_extent$/;"	s
split_suite	liblwgeom/cunit/cu_split.c	/^CU_SuiteInfo split_suite = {"split",  NULL,  NULL, split_tests};$/;"	v
split_tests	liblwgeom/cunit/cu_split.c	/^CU_TestInfo split_tests[] =$/;"	v
sql	regress/run_test.pl	/^sub sql$/;"	s
sqlTypes	java/ejb3/src/org/postgis/hibernate/GeometryType.java	/^	public int[] sqlTypes() {$/;"	m	class:GeometryType
sr_id	loader/shp2pgsql-core.h	/^	int sr_id;$/;"	m	struct:shp_loader_config
src	raster/rt_core/librtcore.h	/^	} src, dst;$/;"	m	struct:rt_reclassexpr_t	typeref:struct:rt_reclassexpr_t::rt_reclassrange
src	raster/rt_core/rt_warp.c	/^	} src, dst;$/;"	m	struct:_rti_warp_arg_t	typeref:struct:_rti_warp_arg_t::__anon41	file:
src_band	raster/scripts/python/pixval.py	/^        src_band = band.GetOverview(noverview - 1)$/;"	v
src_band	raster/scripts/python/pixval.py	/^    src_band = band$/;"	v
src_ds	raster/scripts/python/ovdump.py	/^src_ds = None$/;"	v
src_ds	raster/scripts/python/ovdump.py	/^src_ds = gdal.Open(opts.raster, gdalc.GA_ReadOnly);$/;"	v
src_pixel	raster/rt_core/librtcore.h	/^	int **src_pixel;$/;"	m	struct:rt_iterator_arg_t
srid	java/jdbc/src/org/postgis/Geometry.java	/^	public int srid = UNKNOWN_SRID;$/;"	f	class:Geometry
srid	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^    private int srid;$/;"	f	class:PGShapeGeometry	file:
srid	liblwgeom/lwin_wkb.c	/^	uint32_t srid; \/* Current SRID we are handling *\/$/;"	m	struct:__anon24	file:
srid	libpgcommon/lwgeom_cache.h	/^	int srid;$/;"	m	struct:struct_PROJ4SRSCacheItem
srid	postgis/lwgeom_in_gml.c	/^	int srid;$/;"	m	struct:struct_gmlSrs	file:
srid	raster/loader/raster2pgsql.h	/^	int srid;$/;"	m	struct:raster_loader_config
srid	raster/loader/raster2pgsql.h	/^	int srid;$/;"	m	struct:rasterinfo_t
srid	raster/rt_core/librtcore.h	/^    int32_t srid; \/* Spatial reference id: 4 bytes *\/$/;"	m	struct:rt_raster_serialized_t
srid	raster/rt_core/librtcore.h	/^    int32_t srid; \/* spatial reference id *\/$/;"	m	struct:rt_raster_t
srid_is_latlong	libpgcommon/lwgeom_transform.c	/^void srid_is_latlong(FunctionCallInfo fcinfo, int srid)$/;"	f
srs	raster/loader/raster2pgsql.h	/^	char *srs;$/;"	m	struct:rasterinfo_t
srs	raster/rt_core/rt_warp.c	/^		char *srs;$/;"	m	struct:_rti_warp_arg_t::__anon41	file:
stack	postgis/lwgeom_dump.c	/^	GEOMDUMPNODE *stack[MAXDEPTH];$/;"	m	struct:GEOMDUMPSTATE	file:
stack	postgis/lwgeom_dumppoints.c	/^	struct	dumpnode stack[MAXDEPTH];$/;"	m	struct:dumpstate	typeref:struct:dumpstate::dumpnode	file:
stacklen	postgis/lwgeom_dump.c	/^	int stacklen;$/;"	m	struct:GEOMDUMPSTATE	file:
stacklen	postgis/lwgeom_dumppoints.c	/^	int	stacklen; \/* collections\/geoms on stack *\/$/;"	m	struct:dumpstate	file:
start	liblwgeom/lwgeodetic.h	/^	GEOGRAPHIC_POINT start;$/;"	m	struct:__anon22
start_test	regress/run_test	/^start_test ()$/;"	f
start_test	regress/run_test.pl	/^sub start_test$/;"	s
state	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE state$/;"	t
state.aland	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  aland bigint,$/;"	F
state.awater	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  awater bigint,$/;"	F
state.division	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  division character varying(2),$/;"	F
state.funcstat	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  funcstat character varying(1),$/;"	F
state.gid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  gid serial NOT NULL,$/;"	F
state.idx_tiger_state_the_geom_gist	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX idx_tiger_state_the_geom_gist ON state USING gist(the_geom);$/;"	i
state.intptlat	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  intptlat character varying(11),$/;"	F
state.intptlon	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  intptlon character varying(12),$/;"	F
state.lsad	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  lsad character varying(2),$/;"	F
state.mtfcc	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  mtfcc character varying(5),$/;"	F
state.name	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  "name" character varying(100),$/;"	F
state.region	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  region character varying(2),$/;"	F
state.statefp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  statefp character varying(2),$/;"	F
state.statens	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  statens character varying(8),$/;"	F
state.stusps	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  stusps character varying(2) NOT NULL,$/;"	F
state.the_geom	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  the_geom geometry,$/;"	F
state_extract	extras/tiger_geocoder/tiger_2011/normalize/state_extract.sql	/^CREATE OR REPLACE FUNCTION state_extract(rawInput VARCHAR) RETURNS VARCHAR$/;"	f
state_lookup	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE state_lookup (st_code INTEGER PRIMARY KEY, name VARCHAR(40) UNIQUE, abbrev VARCHAR(3) UNIQUE, statefp char(2) UNIQUE);$/;"	t
state_lookup.abbrev	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE state_lookup (st_code INTEGER PRIMARY KEY, name VARCHAR(40) UNIQUE, abbrev VARCHAR(3) UNIQUE, statefp char(2) UNIQUE);$/;"	F
state_lookup.name	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE state_lookup (st_code INTEGER PRIMARY KEY, name VARCHAR(40) UNIQUE, abbrev VARCHAR(3) UNIQUE, statefp char(2) UNIQUE);$/;"	F
state_lookup.st_code	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE state_lookup (st_code INTEGER PRIMARY KEY, name VARCHAR(40) UNIQUE, abbrev VARCHAR(3) UNIQUE, statefp char(2) UNIQUE);$/;"	F
state_lookup.statefp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE state_lookup (st_code INTEGER PRIMARY KEY, name VARCHAR(40) UNIQUE, abbrev VARCHAR(3) UNIQUE, statefp char(2) UNIQUE);$/;"	F
stddev	postgis/gserialized_estimate.c	/^stddev(const int *vals, int nvals)$/;"	f	file:
stddev	raster/rt_core/librtcore.h	/^	double stddev;$/;"	m	struct:rt_bandstats_t
store	java/ejb2/src/com/geodetix/geo/dao/PostGisGeometryDAOImpl.java	/^    public void store(com.geodetix.geo.ejb.GeometryBean ejb)$/;"	m	class:PostGisGeometryDAOImpl
str_end	liblwgeom/stringbuffer.h	/^	char *str_end;$/;"	m	struct:__anon26
str_start	liblwgeom/stringbuffer.h	/^	char *str_start;$/;"	m	struct:__anon26
str_to_upper	loader/dbfopen.c	/^static void str_to_upper (char *string)$/;"	f	file:
streams	extras/ogc_test_suite/1_schema.sql	/^CREATE TABLE streams ($/;"	t
streams.fid	extras/ogc_test_suite/1_schema.sql	/^       fid             INTEGER NOT NULL PRIMARY KEY,$/;"	F
streams.name	extras/ogc_test_suite/1_schema.sql	/^       name            VARCHAR(64)$/;"	F
street_type_lookup	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE street_type_lookup (name VARCHAR(50) PRIMARY KEY, abbrev VARCHAR(50), is_hw boolean NOT NULL DEFAULT false);$/;"	t
street_type_lookup.abbrev	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE street_type_lookup (name VARCHAR(50) PRIMARY KEY, abbrev VARCHAR(50), is_hw boolean NOT NULL DEFAULT false);$/;"	F
street_type_lookup.is_hw	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE street_type_lookup (name VARCHAR(50) PRIMARY KEY, abbrev VARCHAR(50), is_hw boolean NOT NULL DEFAULT false);$/;"	F
street_type_lookup.name	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE street_type_lookup (name VARCHAR(50) PRIMARY KEY, abbrev VARCHAR(50), is_hw boolean NOT NULL DEFAULT false);$/;"	F
street_type_lookup.street_type_lookup_abbrev_idx	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE INDEX street_type_lookup_abbrev_idx ON street_type_lookup (abbrev);$/;"	i
stricmp	raster/rt_core/librtcore.h	114;"	d
stringbuffer_append	liblwgeom/stringbuffer.c	/^stringbuffer_append(stringbuffer_t *s, const char *a)$/;"	f
stringbuffer_aprintf	liblwgeom/stringbuffer.c	/^stringbuffer_aprintf(stringbuffer_t *s, const char *fmt, ...)$/;"	f
stringbuffer_avprintf	liblwgeom/stringbuffer.c	/^stringbuffer_avprintf(stringbuffer_t *s, const char *fmt, va_list ap)$/;"	f	file:
stringbuffer_clear	liblwgeom/stringbuffer.c	/^stringbuffer_clear(stringbuffer_t *s)$/;"	f
stringbuffer_copy	liblwgeom/stringbuffer.c	/^stringbuffer_copy(stringbuffer_t *dst, stringbuffer_t *src)$/;"	f
stringbuffer_create	liblwgeom/stringbuffer.c	/^stringbuffer_create(void)$/;"	f
stringbuffer_create_with_size	liblwgeom/stringbuffer.c	/^stringbuffer_create_with_size(size_t size)$/;"	f
stringbuffer_destroy	liblwgeom/stringbuffer.c	/^stringbuffer_destroy(stringbuffer_t *s)$/;"	f
stringbuffer_getlength	liblwgeom/stringbuffer.c	/^stringbuffer_getlength(stringbuffer_t *s)$/;"	f
stringbuffer_getstring	liblwgeom/stringbuffer.c	/^stringbuffer_getstring(stringbuffer_t *s)$/;"	f
stringbuffer_getstringcopy	liblwgeom/stringbuffer.c	/^stringbuffer_getstringcopy(stringbuffer_t *s)$/;"	f
stringbuffer_lastchar	liblwgeom/stringbuffer.c	/^stringbuffer_lastchar(stringbuffer_t *s)$/;"	f
stringbuffer_makeroom	liblwgeom/stringbuffer.c	/^stringbuffer_makeroom(stringbuffer_t *s, size_t size_to_add)$/;"	f	file:
stringbuffer_set	liblwgeom/stringbuffer.c	/^stringbuffer_set(stringbuffer_t *s, const char *str)$/;"	f
stringbuffer_suite	liblwgeom/cunit/cu_stringbuffer.c	/^CU_SuiteInfo stringbuffer_suite = {"stringbuffer", NULL, NULL, stringbuffer_tests };$/;"	v
stringbuffer_t	liblwgeom/stringbuffer.h	/^stringbuffer_t;$/;"	t	typeref:struct:__anon26
stringbuffer_t	raster/loader/raster2pgsql.h	/^typedef struct stringbuffer_t {$/;"	s
stringbuffer_tests	liblwgeom/cunit/cu_stringbuffer.c	/^CU_TestInfo stringbuffer_tests[] =$/;"	v
stringbuffer_trim_trailing_white	liblwgeom/stringbuffer.c	/^stringbuffer_trim_trailing_white(stringbuffer_t *s)$/;"	f
stringbuffer_trim_trailing_zeroes	liblwgeom/stringbuffer.c	/^stringbuffer_trim_trailing_zeroes(stringbuffer_t *s)$/;"	f
stringvalue	liblwgeom/lwin_wkt_parse.c	/^	char *stringvalue;$/;"	m	union:YYSTYPE	file:
stringvalue	liblwgeom/lwin_wkt_parse.h	/^	char *stringvalue;$/;"	m	union:YYSTYPE
strip_default	utils/create_undef.pl	/^sub strip_default {$/;"	s
strnicmp	raster/rt_core/librtcore.h	117;"	d
strreplace	raster/loader/raster2pgsql.c	/^strreplace($/;"	f	file:
strsplit	raster/loader/raster2pgsql.c	/^strsplit(const char *str, const char *delimiter, int *n) {$/;"	f	file:
strtolower	loader/shp2pgsql-core.c	/^strtolower(char *s)$/;"	f
strtolower	raster/loader/raster2pgsql.c	/^strtolower(char * str) {$/;"	f	file:
struct_PJHashEntry	libpgcommon/lwgeom_transform.c	/^typedef struct struct_PJHashEntry$/;"	s	file:
struct_PROJ4PortalCache	libpgcommon/lwgeom_cache.h	/^typedef struct struct_PROJ4PortalCache$/;"	s
struct_PROJ4SRSCacheItem	libpgcommon/lwgeom_cache.h	/^typedef struct struct_PROJ4SRSCacheItem$/;"	s
struct_cmp_by_measure	liblwgeom/measures.c	/^struct_cmp_by_measure(const void *a, const void *b)$/;"	f
struct_gmlSrs	postgis/lwgeom_in_gml.c	/^typedef struct struct_gmlSrs$/;"	s	file:
struct_point	loader/shp2pgsql-core.c	/^typedef struct struct_point$/;"	s	file:
struct_psurface_arcs	liblwgeom/lwpsurface.c	/^struct struct_psurface_arcs$/;"	s	file:
struct_ring	loader/shp2pgsql-core.c	/^typedef struct struct_ring$/;"	s	file:
struct_tin_arcs	liblwgeom/lwtin.c	/^struct struct_tin_arcs$/;"	s	file:
styleName	doc/html/image_src/styles.h	/^	char *styleName; \/\/ A unique name$/;"	m	struct:layerStyle
subgeoms	java/jdbc/src/org/postgis/ComposedGeom.java	/^    protected Geometry[] subgeoms = EMPTY;$/;"	f	class:ComposedGeom
sum	raster/rt_core/librtcore.h	/^	double sum;$/;"	m	struct:rt_bandstats_t
sum1	raster/rt_core/librtcore.h	/^	uint64_t sum1; \/* N1H *\/$/;"	m	struct:quantile_llist
sum2	raster/rt_core/librtcore.h	/^	uint64_t sum2; \/* N2H *\/$/;"	m	struct:quantile_llist
supportsEWKB	java/jdbc/src/org/postgis/DriverWrapperAutoprobe.java	/^    public static boolean supportsEWKB(Connection conn) throws SQLException {$/;"	m	class:DriverWrapperAutoprobe
surface_dimension	liblwgeom/cunit/cu_surface.c	/^surface_dimension(void)$/;"	f
surface_list	liblwgeom/lwin_wkt_parse.y	/^surface_list :$/;"	l
surface_suite	liblwgeom/cunit/cu_surface.c	/^CU_SuiteInfo surface_suite = {"surface",  NULL,  NULL, surface_tests};$/;"	v
surface_tests	liblwgeom/cunit/cu_surface.c	/^CU_TestInfo surface_tests[] =$/;"	v
surname	java/ejb3/src/org/postgis/ejb/PersonEntity.java	/^	private String surname;$/;"	f	class:PersonEntity	file:
swap_bytes	liblwgeom/lwin_wkb.c	/^	int swap_bytes; \/* Do an endian flip? *\/$/;"	m	struct:__anon24	file:
swap_char	extras/wkb_reader/printwkb.c	/^void swap_char(char	*a,char *b)$/;"	f
swap_char	raster/rt_core/rt_serialize.c	/^swap_char(uint8_t *a, uint8_t *b) {$/;"	f
symdifference	postgis/lwgeom_geos.c	/^Datum symdifference(PG_FUNCTION_ARGS)$/;"	f
symdifference	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(symdifference);$/;"	v
t	regress/sfcgal/tickets.sql	/^create table t(g geometry);$/;"	t
t	regress/tickets.sql	/^create table t(g geometry);$/;"	t
t.g	regress/sfcgal/tickets.sql	/^create table t(g geometry);$/;"	F
t.g	regress/tickets.sql	/^create table t(g geometry);$/;"	F
t1f	topology/test/regress/droptopology.sql	/^CREATE TABLE t1f (id int);$/;"	t
t1f.id	topology/test/regress/droptopology.sql	/^CREATE TABLE t1f (id int);$/;"	F
t2f	topology/test/regress/droptopology.sql	/^CREATE TABLE t2f (id int);$/;"	t
t2f.id	topology/test/regress/droptopology.sql	/^CREATE TABLE t2f (id int);$/;"	F
ta72	java/jdbc/src/org/postgis/DriverWrapper.java	/^    protected static TypesAdder ta72 = null;$/;"	f	class:DriverWrapper
ta74	java/jdbc/src/org/postgis/DriverWrapper.java	/^    protected static TypesAdder ta74 = null;$/;"	f	class:DriverWrapper
ta80	java/jdbc/src/org/postgis/DriverWrapper.java	/^    protected static TypesAdder ta80 = null;$/;"	f	class:DriverWrapper
table	loader/pgsql2shp-core.h	/^	char *table;$/;"	m	struct:shp_dumper_config
table	loader/pgsql2shp-core.h	/^	char *table;$/;"	m	struct:shp_dumper_state
table	loader/shp2pgsql-core.h	/^	char *table;$/;"	m	struct:shp_loader_config
table	raster/loader/raster2pgsql.h	/^	char *table;$/;"	m	struct:raster_loader_config
table	raster/scripts/python/rtreader.py	/^    table = property(fget = lambda self: self._table)$/;"	v	class:RasterReader
table_chooser_visibility_func	loader/shp2pgsql-gui.c	/^table_chooser_visibility_func(GtkTreeModel *model, GtkTreeIter *iter, gpointer data)$/;"	f	file:
table_features	postgis/gserialized_estimate.c	/^	float4 table_features;$/;"	m	struct:ND_STATS_T	file:
table_from_filename	extras/tiger_geocoder/tiger_2011/legacy_import/tiger2008/import_tiger_shps.sh	/^function table_from_filename () {$/;"	f
tablespace	loader/shp2pgsql-core.h	/^	char *tablespace;$/;"	m	struct:shp_loader_config
tablespace	raster/loader/raster2pgsql.h	/^	char *tablespace;$/;"	m	struct:raster_loader_config
tail	raster/rt_core/librtcore.h	/^	struct quantile_llist_element *tail; \/* H index last *\/$/;"	m	struct:quantile_llist	typeref:struct:quantile_llist::quantile_llist_element
tau	raster/rt_core/librtcore.h	/^	uint64_t tau; \/* position in sequence *\/$/;"	m	struct:quantile_llist
temp_geos_version	raster/test/regress/rt_polygon.sql	/^CREATE OR REPLACE FUNCTION temp_geos_version()$/;"	f
test	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    public static void test(String WKT, Connection[] conns, String flags) throws SQLException {$/;"	m	class:JtsTestParser
test	java/jdbc/src/examples/TestBoxes.java	/^    public static void test(String orig, PGobject candidate, Connection[] conns,$/;"	m	class:TestBoxes
test	java/jdbc/src/examples/TestParser.java	/^    public static void test(String WKT, Connection[] conns, String flags) throws SQLException {$/;"	m	class:TestParser
test	regress/regress_lots_of_nulls.sql	/^CREATE TABLE "test" ($/;"	t
test	regress/regress_lots_of_points.sql	/^CREATE TABLE "test" ($/;"	t
test.num	regress/regress_lots_of_nulls.sql	/^	"num" integer,$/;"	F
test.num	regress/regress_lots_of_points.sql	/^	"num" integer,$/;"	F
test.quick_gist	regress/regress_index.sql	/^CREATE INDEX quick_gist on test using gist (the_geom);$/;"	i
test.test_geom_idx	regress/regress_index_nulls.sql	/^CREATE INDEX "test_geom_idx" ON "test" using gist (the_geom);$/;"	i
test.the_geom	regress/regress_lots_of_nulls.sql	/^	"the_geom" geometry$/;"	F
test.the_geom	regress/regress_lots_of_points.sql	/^	"the_geom" geometry$/;"	F
testRasterIterator1_callback	raster/test/cunit/cu_mapalgebra.c	/^static int testRasterIterator1_callback(rt_iterator_arg arg, void *userarg, double *value, int *nodata) {$/;"	f	file:
testRasterIterator2_callback	raster/test/cunit/cu_mapalgebra.c	/^static int testRasterIterator2_callback(rt_iterator_arg arg, void *userarg, double *value, int *nodata) {$/;"	f	file:
testRasterIterator3_callback	raster/test/cunit/cu_mapalgebra.c	/^static int testRasterIterator3_callback(rt_iterator_arg arg, void *userarg, double *value, int *nodata) {$/;"	f	file:
testRasterIterator4_callback	raster/test/cunit/cu_mapalgebra.c	/^static int testRasterIterator4_callback(rt_iterator_arg arg, void *userarg, double *value, int *nodata) {$/;"	f	file:
testRasterIterator5_callback	raster/test/cunit/cu_mapalgebra.c	/^static int testRasterIterator5_callback(rt_iterator_arg arg, void *userarg, double *value, int *nodata) {$/;"	f	file:
testRasterIterator6_callback	raster/test/cunit/cu_mapalgebra.c	/^static int testRasterIterator6_callback(rt_iterator_arg arg, void *userarg, double *value, int *nodata) {$/;"	f	file:
testRasterIterator7_callback	raster/test/cunit/cu_mapalgebra.c	/^static int testRasterIterator7_callback(rt_iterator_arg arg, void *userarg, double *value, int *nodata) {$/;"	f	file:
test_ShpDumperCreate	loader/cunit/cu_pgsql2shp.c	/^void test_ShpDumperCreate(void)$/;"	f
test_ShpDumperDestroy	loader/cunit/cu_pgsql2shp.c	/^void test_ShpDumperDestroy(void)$/;"	f
test_ShpLoaderCreate	loader/cunit/cu_shp2pgsql.c	/^void test_ShpLoaderCreate(void)$/;"	f
test_ShpLoaderDestroy	loader/cunit/cu_shp2pgsql.c	/^void test_ShpLoaderDestroy(void)$/;"	f
test_band_get_nearest_pixel	raster/test/cunit/cu_band_misc.c	/^static void test_band_get_nearest_pixel() {$/;"	f	file:
test_band_get_pixel_line	raster/test/cunit/cu_band_basics.c	/^static void test_band_get_pixel_line() {$/;"	f	file:
test_band_get_pixel_of_value	raster/test/cunit/cu_band_misc.c	/^static void test_band_get_pixel_of_value() {$/;"	f	file:
test_band_metadata	raster/test/cunit/cu_band_basics.c	/^static void test_band_metadata() {$/;"	f	file:
test_band_pixtype_16BSI	raster/test/cunit/cu_band_basics.c	/^static void test_band_pixtype_16BSI() {$/;"	f	file:
test_band_pixtype_16BUI	raster/test/cunit/cu_band_basics.c	/^static void test_band_pixtype_16BUI() {$/;"	f	file:
test_band_pixtype_1BB	raster/test/cunit/cu_band_basics.c	/^static void test_band_pixtype_1BB() {$/;"	f	file:
test_band_pixtype_2BUI	raster/test/cunit/cu_band_basics.c	/^static void test_band_pixtype_2BUI() {$/;"	f	file:
test_band_pixtype_32BF	raster/test/cunit/cu_band_basics.c	/^static void test_band_pixtype_32BF() {$/;"	f	file:
test_band_pixtype_32BSI	raster/test/cunit/cu_band_basics.c	/^static void test_band_pixtype_32BSI() {$/;"	f	file:
test_band_pixtype_32BUI	raster/test/cunit/cu_band_basics.c	/^static void test_band_pixtype_32BUI() {$/;"	f	file:
test_band_pixtype_4BUI	raster/test/cunit/cu_band_basics.c	/^static void test_band_pixtype_4BUI() {$/;"	f	file:
test_band_pixtype_64BF	raster/test/cunit/cu_band_basics.c	/^static void test_band_pixtype_64BF() {$/;"	f	file:
test_band_pixtype_8BSI	raster/test/cunit/cu_band_basics.c	/^static void test_band_pixtype_8BSI() {$/;"	f	file:
test_band_pixtype_8BUI	raster/test/cunit/cu_band_basics.c	/^static void test_band_pixtype_8BUI() {$/;"	f	file:
test_band_reclass	raster/test/cunit/cu_mapalgebra.c	/^static void test_band_reclass() {$/;"	f	file:
test_band_stats	raster/test/cunit/cu_band_stats.c	/^static void test_band_stats() {$/;"	f	file:
test_band_value_count	raster/test/cunit/cu_band_stats.c	/^static void test_band_value_count() {$/;"	f	file:
test_clairaut	liblwgeom/cunit/cu_geodetic.c	/^static void test_clairaut(void)$/;"	f	file:
test_coll_coll	liblwgeom/cunit/cu_homogenize.c	/^static void test_coll_coll(void)$/;"	f	file:
test_coll_curve	liblwgeom/cunit/cu_homogenize.c	/^static void test_coll_curve(void)$/;"	f	file:
test_coll_line	liblwgeom/cunit/cu_homogenize.c	/^static void test_coll_line(void)$/;"	f	file:
test_coll_point	liblwgeom/cunit/cu_homogenize.c	/^static void test_coll_point(void)$/;"	f	file:
test_coll_poly	liblwgeom/cunit/cu_homogenize.c	/^static void test_coll_poly(void)$/;"	f	file:
test_data	regress/lwgeom_regress.sql	/^CREATE TABLE test_data ($/;"	t
test_data.id	regress/lwgeom_regress.sql	/^    id integer,$/;"	F
test_data.wkb_ndr	regress/lwgeom_regress.sql	/^    wkb_ndr text$/;"	F
test_data.wkb_xdr	regress/lwgeom_regress.sql	/^    wkb_xdr text,$/;"	F
test_data.wkt	regress/lwgeom_regress.sql	/^    wkt text,$/;"	F
test_distance	utils/profile_intersects.pl	/^sub test_distance$/;"	s
test_edge_distance_to_edge	liblwgeom/cunit/cu_geodetic.c	/^static void test_edge_distance_to_edge(void)$/;"	f	file:
test_edge_distance_to_point	liblwgeom/cunit/cu_geodetic.c	/^static void test_edge_distance_to_point(void)$/;"	f	file:
test_edge_intersection	liblwgeom/cunit/cu_geodetic.c	/^static void test_edge_intersection(void)$/;"	f	file:
test_edge_intersects	liblwgeom/cunit/cu_geodetic.c	/^static void test_edge_intersects(void)$/;"	f	file:
test_extent	utils/test_estimation.pl	/^sub test_extent$/;"	s
test_extent	utils/test_geography_estimation.pl	/^sub test_extent$/;"	s
test_f2d	liblwgeom/cunit/cu_libgeom.c	/^static void test_f2d(void)$/;"	f	file:
test_flags_macros	liblwgeom/cunit/cu_libgeom.c	/^static void test_flags_macros(void)$/;"	f	file:
test_gbox_from_spherical_coordinates	liblwgeom/cunit/cu_geodetic.c	/^static void test_gbox_from_spherical_coordinates(void)$/;"	f	file:
test_gbox_serialized_size	liblwgeom/cunit/cu_libgeom.c	/^static void test_gbox_serialized_size(void)$/;"	f	file:
test_gbox_utils	liblwgeom/cunit/cu_geodetic.c	/^static void test_gbox_utils(void)$/;"	f	file:
test_gdal_configured	raster/test/cunit/cu_gdal.c	/^static void test_gdal_configured() {$/;"	f	file:
test_gdal_drivers	raster/test/cunit/cu_gdal.c	/^static void test_gdal_drivers() {$/;"	f	file:
test_gdal_polygonize	raster/test/cunit/cu_gdal.c	/^static void test_gdal_polygonize() {$/;"	f	file:
test_gdal_rasterize	raster/test/cunit/cu_gdal.c	/^static void test_gdal_rasterize() {$/;"	f	file:
test_gdal_to_raster	raster/test/cunit/cu_gdal.c	/^static void test_gdal_to_raster() {$/;"	f	file:
test_gdal_warp	raster/test/cunit/cu_gdal.c	/^static void test_gdal_warp() {$/;"	f	file:
test_geohash	liblwgeom/cunit/cu_algorithm.c	/^static void test_geohash(void)$/;"	f	file:
test_geohash_point	liblwgeom/cunit/cu_algorithm.c	/^static void test_geohash_point(void)$/;"	f	file:
test_geohash_point_as_int	liblwgeom/cunit/cu_algorithm.c	/^static void test_geohash_point_as_int(void)$/;"	f	file:
test_geohash_precision	liblwgeom/cunit/cu_algorithm.c	/^static void test_geohash_precision(void)$/;"	f	file:
test_geom	liblwgeom/cunit/cu_homogenize.c	/^static void test_geom(void)$/;"	f	file:
test_geometry_type_from_string	liblwgeom/cunit/cu_libgeom.c	/^static void test_geometry_type_from_string(void)$/;"	f	file:
test_geos_noop	liblwgeom/cunit/cu_geos.c	/^static void test_geos_noop(void)$/;"	f	file:
test_gserialized_from_lwgeom	liblwgeom/cunit/cu_geodetic.c	/^static void test_gserialized_from_lwgeom(void)$/;"	f	file:
test_gserialized_from_lwgeom_size	liblwgeom/cunit/cu_libgeom.c	/^static void test_gserialized_from_lwgeom_size(void)$/;"	f	file:
test_gserialized_get_gbox_geocentric	liblwgeom/cunit/cu_geodetic.c	/^static void test_gserialized_get_gbox_geocentric(void)$/;"	f	file:
test_hsv_to_rgb	raster/test/cunit/cu_misc.c	/^static void test_hsv_to_rgb() {$/;"	f	file:
test_intersects	utils/profile_intersects.pl	/^sub test_intersects$/;"	s
test_isclosed	liblwgeom/cunit/cu_algorithm.c	/^static void test_isclosed(void)$/;"	f	file:
test_join	utils/test_geography_joinestimation.pl	/^sub test_join$/;"	s
test_join	utils/test_joinestimation.pl	/^sub test_join$/;"	s
test_locks	extras/WFS_locks/test.sql	/^CREATE TABLE test_locks (id serial, b char(16), c char(16) );$/;"	t
test_locks	regress/long_xact.sql	/^CREATE TABLE test_locks (id numeric, state varchar);$/;"	t
test_locks.b	extras/WFS_locks/test.sql	/^CREATE TABLE test_locks (id serial, b char(16), c char(16) );$/;"	F
test_locks.c	extras/WFS_locks/test.sql	/^CREATE TABLE test_locks (id serial, b char(16), c char(16) );$/;"	F
test_locks.id	extras/WFS_locks/test.sql	/^CREATE TABLE test_locks (id serial, b char(16), c char(16) );$/;"	F
test_locks.id	regress/long_xact.sql	/^CREATE TABLE test_locks (id numeric, state varchar);$/;"	F
test_locks.state	regress/long_xact.sql	/^CREATE TABLE test_locks (id numeric, state varchar);$/;"	F
test_lw_arc_length	liblwgeom/cunit/cu_measures.c	/^test_lw_arc_length(void)$/;"	f	file:
test_lw_dist2d_arc_arc	liblwgeom/cunit/cu_measures.c	/^test_lw_dist2d_arc_arc(void)$/;"	f	file:
test_lw_dist2d_pt_arc	liblwgeom/cunit/cu_measures.c	/^test_lw_dist2d_pt_arc(void)$/;"	f	file:
test_lw_dist2d_pt_ptarrayarc	liblwgeom/cunit/cu_measures.c	/^test_lw_dist2d_pt_ptarrayarc(void)$/;"	f	file:
test_lw_dist2d_ptarray_ptarrayarc	liblwgeom/cunit/cu_measures.c	/^test_lw_dist2d_ptarray_ptarrayarc(void)$/;"	f	file:
test_lw_dist2d_seg_arc	liblwgeom/cunit/cu_measures.c	/^test_lw_dist2d_seg_arc(void)$/;"	f	file:
test_lw_segment_intersects	liblwgeom/cunit/cu_algorithm.c	/^static void test_lw_segment_intersects(void)$/;"	f	file:
test_lw_segment_side	liblwgeom/cunit/cu_algorithm.c	/^static void test_lw_segment_side(void)$/;"	f	file:
test_lwcollection_extract	liblwgeom/cunit/cu_libgeom.c	/^static void test_lwcollection_extract(void)$/;"	f	file:
test_lwgeom_area_sphere	liblwgeom/cunit/cu_geodetic.c	/^static void test_lwgeom_area_sphere(void)$/;"	f	file:
test_lwgeom_as_curve	liblwgeom/cunit/cu_libgeom.c	/^static void test_lwgeom_as_curve(void)$/;"	f	file:
test_lwgeom_calculate_gbox	liblwgeom/cunit/cu_libgeom.c	/^static void test_lwgeom_calculate_gbox(void)$/;"	f	file:
test_lwgeom_check_geodetic	liblwgeom/cunit/cu_geodetic.c	/^static void test_lwgeom_check_geodetic(void)$/;"	f	file:
test_lwgeom_clone	liblwgeom/cunit/cu_libgeom.c	/^static void test_lwgeom_clone(void)$/;"	f	file:
test_lwgeom_count_vertices	liblwgeom/cunit/cu_libgeom.c	/^static void test_lwgeom_count_vertices(void)$/;"	f	file:
test_lwgeom_delaunay_triangulation	liblwgeom/cunit/cu_triangulate.c	/^static void test_lwgeom_delaunay_triangulation(void)$/;"	f	file:
test_lwgeom_distance_sphere	liblwgeom/cunit/cu_geodetic.c	/^static void test_lwgeom_distance_sphere(void)$/;"	f	file:
test_lwgeom_flip_coordinates	liblwgeom/cunit/cu_libgeom.c	/^static void test_lwgeom_flip_coordinates(void)$/;"	f	file:
test_lwgeom_force_clockwise	liblwgeom/cunit/cu_libgeom.c	/^static void test_lwgeom_force_clockwise(void)$/;"	f	file:
test_lwgeom_free	liblwgeom/cunit/cu_libgeom.c	/^static void test_lwgeom_free(void)$/;"	f	file:
test_lwgeom_from_gserialized	liblwgeom/cunit/cu_libgeom.c	/^static void test_lwgeom_from_gserialized(void)$/;"	f	file:
test_lwgeom_is_empty	liblwgeom/cunit/cu_libgeom.c	/^static void test_lwgeom_is_empty(void)$/;"	f	file:
test_lwgeom_locate_along	liblwgeom/cunit/cu_measures.c	/^test_lwgeom_locate_along(void)$/;"	f	file:
test_lwgeom_make_valid	liblwgeom/cunit/cu_clean.c	/^static void test_lwgeom_make_valid(void)$/;"	f	file:
test_lwgeom_node	liblwgeom/cunit/cu_node.c	/^static void test_lwgeom_node(void)$/;"	f	file:
test_lwgeom_same	liblwgeom/cunit/cu_libgeom.c	/^static void test_lwgeom_same(void)$/;"	f	file:
test_lwgeom_segmentize2d	liblwgeom/cunit/cu_measures.c	/^test_lwgeom_segmentize2d(void)$/;"	f	file:
test_lwgeom_segmentize_sphere	liblwgeom/cunit/cu_geodetic.c	/^static void test_lwgeom_segmentize_sphere(void)$/;"	f	file:
test_lwgeom_split	liblwgeom/cunit/cu_split.c	/^static void test_lwgeom_split(void)$/;"	f	file:
test_lwline_clip	liblwgeom/cunit/cu_algorithm.c	/^static void test_lwline_clip(void)$/;"	f	file:
test_lwline_clip_big	liblwgeom/cunit/cu_algorithm.c	/^static void test_lwline_clip_big(void)$/;"	f	file:
test_lwline_crossing_bugs	liblwgeom/cunit/cu_algorithm.c	/^static void test_lwline_crossing_bugs(void)$/;"	f	file:
test_lwline_crossing_long_lines	liblwgeom/cunit/cu_algorithm.c	/^static void test_lwline_crossing_long_lines(void)$/;"	f	file:
test_lwline_crossing_short_lines	liblwgeom/cunit/cu_algorithm.c	/^static void test_lwline_crossing_short_lines(void)$/;"	f	file:
test_lwline_split_by_point_to	liblwgeom/cunit/cu_split.c	/^static void test_lwline_split_by_point_to(void)$/;"	f	file:
test_lwmline_clip	liblwgeom/cunit/cu_algorithm.c	/^static void test_lwmline_clip(void)$/;"	f	file:
test_lwpoint_get_ordinate	liblwgeom/cunit/cu_algorithm.c	/^static void test_lwpoint_get_ordinate(void)$/;"	f	file:
test_lwpoint_set_ordinate	liblwgeom/cunit/cu_algorithm.c	/^static void test_lwpoint_set_ordinate(void)$/;"	f	file:
test_lwpoly_covers_point2d	liblwgeom/cunit/cu_geodetic.c	/^static void test_lwpoly_covers_point2d(void)$/;"	f	file:
test_lwprint_assert_error	liblwgeom/cunit/cu_print.c	/^static void test_lwprint_assert_error(char * point_wkt, const char * format)$/;"	f	file:
test_lwprint_assert_format	liblwgeom/cunit/cu_print.c	/^static void test_lwprint_assert_format(char * point_wkt, const char * format, const char * expected)$/;"	f	file:
test_lwprint_bad_formats	liblwgeom/cunit/cu_print.c	/^static void test_lwprint_bad_formats(void)$/;"	f	file:
test_lwprint_default_format	liblwgeom/cunit/cu_print.c	/^static void test_lwprint_default_format(void)$/;"	f	file:
test_lwprint_format_orders	liblwgeom/cunit/cu_print.c	/^static void test_lwprint_format_orders(void)$/;"	f	file:
test_lwprint_oddball_formats	liblwgeom/cunit/cu_print.c	/^static void test_lwprint_oddball_formats(void)$/;"	f	file:
test_lwprint_optional_format	liblwgeom/cunit/cu_print.c	/^static void test_lwprint_optional_format(void)$/;"	f	file:
test_mindistance2d_tolerance	liblwgeom/cunit/cu_measures.c	/^static void test_mindistance2d_tolerance(void)$/;"	f	file:
test_misc_area	liblwgeom/cunit/cu_misc.c	/^static void test_misc_area(void)$/;"	f	file:
test_misc_count_vertices	liblwgeom/cunit/cu_misc.c	/^static void test_misc_count_vertices(void)$/;"	f	file:
test_misc_force_2d	liblwgeom/cunit/cu_misc.c	/^static void test_misc_force_2d(void)$/;"	f	file:
test_misc_simplify	liblwgeom/cunit/cu_misc.c	/^static void test_misc_simplify(void)$/;"	f	file:
test_misc_wkb	liblwgeom/cunit/cu_misc.c	/^static void test_misc_wkb(void)$/;"	f	file:
test_on_gser_lwgeom_count_vertices	liblwgeom/cunit/cu_libgeom.c	/^static void test_on_gser_lwgeom_count_vertices(void)$/;"	f	file:
test_pixtype_alignment	raster/test/cunit/cu_pixtype.c	/^static void test_pixtype_alignment() {$/;"	f	file:
test_pixtype_compare_clamped_values	raster/test/cunit/cu_pixtype.c	/^static void test_pixtype_compare_clamped_values() {$/;"	f	file:
test_pixtype_get_min_value	raster/test/cunit/cu_pixtype.c	/^static void test_pixtype_get_min_value() {$/;"	f	file:
test_pixtype_index_from_name	raster/test/cunit/cu_pixtype.c	/^static void test_pixtype_index_from_name() {$/;"	f	file:
test_pixtype_name	raster/test/cunit/cu_pixtype.c	/^static void test_pixtype_name() {$/;"	f	file:
test_pixtype_size	raster/test/cunit/cu_pixtype.c	/^static void test_pixtype_size() {$/;"	f	file:
test_point_interpolate	liblwgeom/cunit/cu_algorithm.c	/^static void test_point_interpolate(void)$/;"	f	file:
test_pt	regress/regress_management.sql	/^CREATE TABLE test_pt(gid SERIAL PRIMARY KEY, geom geometry);$/;"	t
test_pt.geom	regress/regress_management.sql	/^CREATE TABLE test_pt(gid SERIAL PRIMARY KEY, geom geometry);$/;"	F
test_pt.gid	regress/regress_management.sql	/^CREATE TABLE test_pt(gid SERIAL PRIMARY KEY, geom geometry);$/;"	F
test_ptarray_append_point	liblwgeom/cunit/cu_ptarray.c	/^static void test_ptarray_append_point(void)$/;"	f	file:
test_ptarray_append_ptarray	liblwgeom/cunit/cu_ptarray.c	/^static void test_ptarray_append_ptarray(void)$/;"	f	file:
test_ptarray_contains_point	liblwgeom/cunit/cu_ptarray.c	/^static void test_ptarray_contains_point() $/;"	f	file:
test_ptarray_contains_point_sphere	liblwgeom/cunit/cu_geodetic.c	/^static void test_ptarray_contains_point_sphere(void)$/;"	f	file:
test_ptarray_contains_point_sphere_iowa	liblwgeom/cunit/cu_geodetic.c	/^static void test_ptarray_contains_point_sphere_iowa(void)$/;"	f	file:
test_ptarray_desegmentize	liblwgeom/cunit/cu_ptarray.c	/^static void test_ptarray_desegmentize() $/;"	f	file:
test_ptarray_insert_point	liblwgeom/cunit/cu_ptarray.c	/^static void test_ptarray_insert_point(void)$/;"	f	file:
test_ptarray_isccw	liblwgeom/cunit/cu_ptarray.c	/^static void test_ptarray_isccw(void)$/;"	f	file:
test_ptarray_locate_point	liblwgeom/cunit/cu_ptarray.c	/^static void test_ptarray_locate_point(void)$/;"	f	file:
test_ptarray_signed_area	liblwgeom/cunit/cu_ptarray.c	/^static void test_ptarray_signed_area() $/;"	f	file:
test_ptarrayarc_contains_point	liblwgeom/cunit/cu_ptarray.c	/^static void test_ptarrayarc_contains_point() $/;"	f	file:
test_raster_cell_to_geopoint	raster/test/cunit/cu_raster_misc.c	/^static void test_raster_cell_to_geopoint() {$/;"	f	file:
test_raster_clone	raster/test/cunit/cu_raster_basics.c	/^static void test_raster_clone() {$/;"	f	file:
test_raster_colormap	raster/test/cunit/cu_mapalgebra.c	/^static void test_raster_colormap() {$/;"	f	file:
test_raster_columns	raster/test/regress/check_raster_columns.sql	/^CREATE TABLE test_raster_columns ($/;"	t
test_raster_columns	raster/test/regress/check_raster_overviews.sql	/^CREATE TABLE test_raster_columns ($/;"	t
test_raster_columns.rast	raster/test/regress/check_raster_columns.sql	/^	rast raster$/;"	F
test_raster_columns.rast	raster/test/regress/check_raster_overviews.sql	/^	rast raster$/;"	F
test_raster_columns.rid	raster/test/regress/check_raster_columns.sql	/^	rid integer,$/;"	F
test_raster_columns.rid	raster/test/regress/check_raster_overviews.sql	/^	rid integer,$/;"	F
test_raster_columns.test_raster_columns_rast_gist	raster/test/regress/check_raster_columns.sql	/^CREATE INDEX test_raster_columns_rast_gist$/;"	i
test_raster_compute_skewed_raster	raster/test/cunit/cu_raster_misc.c	/^static void test_raster_compute_skewed_raster() {$/;"	f	file:
test_raster_convex_hull	raster/test/cunit/cu_raster_geometry.c	/^static void test_raster_convex_hull() {$/;"	f	file:
test_raster_empty	raster/test/cunit/cu_raster_basics.c	/^static void test_raster_empty() {$/;"	f	file:
test_raster_from_band	raster/test/cunit/cu_raster_basics.c	/^static void test_raster_from_band() {$/;"	f	file:
test_raster_from_two_rasters	raster/test/cunit/cu_raster_misc.c	/^static void test_raster_from_two_rasters() {$/;"	f	file:
test_raster_fully_within_distance	raster/test/cunit/cu_spatial_relationship.c	/^static void test_raster_fully_within_distance() {$/;"	f	file:
test_raster_geopoint_to_cell	raster/test/cunit/cu_raster_misc.c	/^static void test_raster_geopoint_to_cell() {$/;"	f	file:
test_raster_geos_contains	raster/test/cunit/cu_spatial_relationship.c	/^static void test_raster_geos_contains() {$/;"	f	file:
test_raster_geos_contains_properly	raster/test/cunit/cu_spatial_relationship.c	/^static void test_raster_geos_contains_properly() {$/;"	f	file:
test_raster_geos_covered_by	raster/test/cunit/cu_spatial_relationship.c	/^static void test_raster_geos_covered_by() {$/;"	f	file:
test_raster_geos_covers	raster/test/cunit/cu_spatial_relationship.c	/^static void test_raster_geos_covers() {$/;"	f	file:
test_raster_geos_overlaps	raster/test/cunit/cu_spatial_relationship.c	/^static void test_raster_geos_overlaps() {$/;"	f	file:
test_raster_geos_touches	raster/test/cunit/cu_spatial_relationship.c	/^static void test_raster_geos_touches() {$/;"	f	file:
test_raster_intersects	raster/test/cunit/cu_spatial_relationship.c	/^static void test_raster_intersects() {$/;"	f	file:
test_raster_iterator	raster/test/cunit/cu_mapalgebra.c	/^static void test_raster_iterator() {$/;"	f	file:
test_raster_metadata	raster/test/cunit/cu_raster_basics.c	/^static void test_raster_metadata() {$/;"	f	file:
test_raster_new	raster/test/cunit/cu_raster_basics.c	/^static void test_raster_new() {$/;"	f	file:
test_raster_perimeter	raster/test/cunit/cu_raster_geometry.c	/^static void test_raster_perimeter() {$/;"	f	file:
test_raster_pixel_as_polygon	raster/test/cunit/cu_raster_geometry.c	/^static void test_raster_pixel_as_polygon() {$/;"	f	file:
test_raster_replace_band	raster/test/cunit/cu_raster_basics.c	/^static void test_raster_replace_band() {$/;"	f	file:
test_raster_same_alignment	raster/test/cunit/cu_spatial_relationship.c	/^static void test_raster_same_alignment() {$/;"	f	file:
test_raster_surface	raster/test/cunit/cu_raster_geometry.c	/^static void test_raster_surface() {$/;"	f	file:
test_raster_to_gdal	raster/test/cunit/cu_gdal.c	/^static void test_raster_to_gdal() {$/;"	f	file:
test_raster_within_distance	raster/test/cunit/cu_spatial_relationship.c	/^static void test_raster_within_distance() {$/;"	f	file:
test_raster_wkb	raster/test/cunit/cu_raster_wkb.c	/^static void test_raster_wkb() {$/;"	f	file:
test_rect_tree_contains_point	liblwgeom/cunit/cu_measures.c	/^static void test_rect_tree_contains_point(void)$/;"	f	file:
test_rect_tree_intersects_tree	liblwgeom/cunit/cu_measures.c	/^static void test_rect_tree_intersects_tree(void)$/;"	f	file:
test_rgb_to_hsv	raster/test/cunit/cu_misc.c	/^static void test_rgb_to_hsv() {$/;"	f	file:
test_serialized_srid	liblwgeom/cunit/cu_libgeom.c	/^static void test_serialized_srid(void)$/;"	f	file:
test_sfcgal_noop	liblwgeom/cunit/cu_sfcgal.c	/^static void test_sfcgal_noop(void)$/;"	f	file:
test_sfs_11	liblwgeom/cunit/cu_force_sfs.c	/^static void test_sfs_11(void)$/;"	f	file:
test_sfs_12	liblwgeom/cunit/cu_force_sfs.c	/^static void test_sfs_12(void)$/;"	f	file:
test_signum	liblwgeom/cunit/cu_geodetic.c	/^static void test_signum(void)$/;"	f	file:
test_sphere_direction	liblwgeom/cunit/cu_geodetic.c	/^static void test_sphere_direction(void)$/;"	f	file:
test_sphere_project	liblwgeom/cunit/cu_geodetic.c	/^static void test_sphere_project(void)$/;"	f	file:
test_spheroid_area	liblwgeom/cunit/cu_geodetic.c	/^static void test_spheroid_area(void)$/;"	f	file:
test_spheroid_distance	liblwgeom/cunit/cu_geodetic.c	/^static void test_spheroid_distance(void)$/;"	f	file:
test_sqlmm	liblwgeom/cunit/cu_force_sfs.c	/^static void test_sqlmm(void)$/;"	f	file:
test_stringbuffer_append	liblwgeom/cunit/cu_stringbuffer.c	/^static void test_stringbuffer_append(void)$/;"	f	file:
test_stringbuffer_aprintf	liblwgeom/cunit/cu_stringbuffer.c	/^static void test_stringbuffer_aprintf(void)$/;"	f	file:
test_tree_circ_create	liblwgeom/cunit/cu_tree.c	/^static void test_tree_circ_create(void)$/;"	f	file:
test_tree_circ_distance	liblwgeom/cunit/cu_tree.c	/^static void test_tree_circ_distance(void)$/;"	f	file:
test_tree_circ_pip	liblwgeom/cunit/cu_tree.c	/^static void test_tree_circ_pip(void)$/;"	f	file:
test_tree_circ_pip2	liblwgeom/cunit/cu_tree.c	/^static void test_tree_circ_pip2(void)$/;"	f	file:
test_typmod_macros	liblwgeom/cunit/cu_libgeom.c	/^static void test_typmod_macros(void)$/;"	f	file:
test_vector_angle	liblwgeom/cunit/cu_geodetic.c	/^static void test_vector_angle(void)$/;"	f	file:
test_vector_rotate	liblwgeom/cunit/cu_geodetic.c	/^static void test_vector_rotate(void)$/;"	f	file:
test_wkb_in_circularstring	liblwgeom/cunit/cu_in_wkb.c	/^static void test_wkb_in_circularstring(void) $/;"	f	file:
test_wkb_in_collection	liblwgeom/cunit/cu_in_wkb.c	/^static void test_wkb_in_collection(void)$/;"	f	file:
test_wkb_in_compoundcurve	liblwgeom/cunit/cu_in_wkb.c	/^static void test_wkb_in_compoundcurve(void) $/;"	f	file:
test_wkb_in_curvpolygon	liblwgeom/cunit/cu_in_wkb.c	/^static void test_wkb_in_curvpolygon(void) $/;"	f	file:
test_wkb_in_linestring	liblwgeom/cunit/cu_in_wkb.c	/^static void test_wkb_in_linestring(void)$/;"	f	file:
test_wkb_in_malformed	liblwgeom/cunit/cu_in_wkb.c	/^static void test_wkb_in_malformed(void)$/;"	f	file:
test_wkb_in_multicurve	liblwgeom/cunit/cu_in_wkb.c	/^static void test_wkb_in_multicurve(void) {}$/;"	f	file:
test_wkb_in_multilinestring	liblwgeom/cunit/cu_in_wkb.c	/^static void test_wkb_in_multilinestring(void) {}$/;"	f	file:
test_wkb_in_multipoint	liblwgeom/cunit/cu_in_wkb.c	/^static void test_wkb_in_multipoint(void) $/;"	f	file:
test_wkb_in_multipolygon	liblwgeom/cunit/cu_in_wkb.c	/^static void test_wkb_in_multipolygon(void)$/;"	f	file:
test_wkb_in_multisurface	liblwgeom/cunit/cu_in_wkb.c	/^static void test_wkb_in_multisurface(void) {}$/;"	f	file:
test_wkb_in_point	liblwgeom/cunit/cu_in_wkb.c	/^static void test_wkb_in_point(void)$/;"	f	file:
test_wkb_in_polygon	liblwgeom/cunit/cu_in_wkb.c	/^static void test_wkb_in_polygon(void)$/;"	f	file:
test_wkb_out_circularstring	liblwgeom/cunit/cu_out_wkb.c	/^static void test_wkb_out_circularstring(void) $/;"	f	file:
test_wkb_out_collection	liblwgeom/cunit/cu_out_wkb.c	/^static void test_wkb_out_collection(void)$/;"	f	file:
test_wkb_out_compoundcurve	liblwgeom/cunit/cu_out_wkb.c	/^static void test_wkb_out_compoundcurve(void) $/;"	f	file:
test_wkb_out_curvpolygon	liblwgeom/cunit/cu_out_wkb.c	/^static void test_wkb_out_curvpolygon(void) $/;"	f	file:
test_wkb_out_linestring	liblwgeom/cunit/cu_out_wkb.c	/^static void test_wkb_out_linestring(void)$/;"	f	file:
test_wkb_out_multicurve	liblwgeom/cunit/cu_out_wkb.c	/^static void test_wkb_out_multicurve(void) {}$/;"	f	file:
test_wkb_out_multilinestring	liblwgeom/cunit/cu_out_wkb.c	/^static void test_wkb_out_multilinestring(void) {}$/;"	f	file:
test_wkb_out_multipoint	liblwgeom/cunit/cu_out_wkb.c	/^static void test_wkb_out_multipoint(void) $/;"	f	file:
test_wkb_out_multipolygon	liblwgeom/cunit/cu_out_wkb.c	/^static void test_wkb_out_multipolygon(void)$/;"	f	file:
test_wkb_out_multisurface	liblwgeom/cunit/cu_out_wkb.c	/^static void test_wkb_out_multisurface(void) {}$/;"	f	file:
test_wkb_out_point	liblwgeom/cunit/cu_out_wkb.c	/^static void test_wkb_out_point(void)$/;"	f	file:
test_wkb_out_polygon	liblwgeom/cunit/cu_out_wkb.c	/^static void test_wkb_out_polygon(void)$/;"	f	file:
test_wkb_out_polyhedralsurface	liblwgeom/cunit/cu_out_wkb.c	/^static void test_wkb_out_polyhedralsurface(void) $/;"	f	file:
test_wkt_in_circularstring	liblwgeom/cunit/cu_in_wkt.c	/^static void test_wkt_in_circularstring(void)$/;"	f	file:
test_wkt_in_collection	liblwgeom/cunit/cu_in_wkt.c	/^static void test_wkt_in_collection(void)$/;"	f	file:
test_wkt_in_compoundcurve	liblwgeom/cunit/cu_in_wkt.c	/^static void test_wkt_in_compoundcurve(void)$/;"	f	file:
test_wkt_in_curvpolygon	liblwgeom/cunit/cu_in_wkt.c	/^static void test_wkt_in_curvpolygon(void)$/;"	f	file:
test_wkt_in_errlocation	liblwgeom/cunit/cu_in_wkt.c	/^static void test_wkt_in_errlocation(void)$/;"	f	file:
test_wkt_in_linestring	liblwgeom/cunit/cu_in_wkt.c	/^static void test_wkt_in_linestring(void)$/;"	f	file:
test_wkt_in_multicurve	liblwgeom/cunit/cu_in_wkt.c	/^static void test_wkt_in_multicurve(void)$/;"	f	file:
test_wkt_in_multilinestring	liblwgeom/cunit/cu_in_wkt.c	/^static void test_wkt_in_multilinestring(void)$/;"	f	file:
test_wkt_in_multipoint	liblwgeom/cunit/cu_in_wkt.c	/^static void test_wkt_in_multipoint(void)$/;"	f	file:
test_wkt_in_multipolygon	liblwgeom/cunit/cu_in_wkt.c	/^static void test_wkt_in_multipolygon(void)$/;"	f	file:
test_wkt_in_multisurface	liblwgeom/cunit/cu_in_wkt.c	/^static void test_wkt_in_multisurface(void)$/;"	f	file:
test_wkt_in_point	liblwgeom/cunit/cu_in_wkt.c	/^static void test_wkt_in_point(void)$/;"	f	file:
test_wkt_in_polygon	liblwgeom/cunit/cu_in_wkt.c	/^static void test_wkt_in_polygon(void)$/;"	f	file:
test_wkt_in_polyhedralsurface	liblwgeom/cunit/cu_in_wkt.c	/^static void test_wkt_in_polyhedralsurface(void)$/;"	f	file:
test_wkt_in_tin	liblwgeom/cunit/cu_in_wkt.c	/^static void test_wkt_in_tin(void)$/;"	f	file:
test_wkt_out_circularstring	liblwgeom/cunit/cu_out_wkt.c	/^static void test_wkt_out_circularstring(void)$/;"	f	file:
test_wkt_out_collection	liblwgeom/cunit/cu_out_wkt.c	/^static void test_wkt_out_collection(void)$/;"	f	file:
test_wkt_out_compoundcurve	liblwgeom/cunit/cu_out_wkt.c	/^static void test_wkt_out_compoundcurve(void)$/;"	f	file:
test_wkt_out_curvpolygon	liblwgeom/cunit/cu_out_wkt.c	/^static void test_wkt_out_curvpolygon(void)$/;"	f	file:
test_wkt_out_linestring	liblwgeom/cunit/cu_out_wkt.c	/^static void test_wkt_out_linestring(void)$/;"	f	file:
test_wkt_out_multicurve	liblwgeom/cunit/cu_out_wkt.c	/^static void test_wkt_out_multicurve(void)$/;"	f	file:
test_wkt_out_multilinestring	liblwgeom/cunit/cu_out_wkt.c	/^static void test_wkt_out_multilinestring(void)$/;"	f	file:
test_wkt_out_multipoint	liblwgeom/cunit/cu_out_wkt.c	/^static void test_wkt_out_multipoint(void)$/;"	f	file:
test_wkt_out_multipolygon	liblwgeom/cunit/cu_out_wkt.c	/^static void test_wkt_out_multipolygon(void)$/;"	f	file:
test_wkt_out_multisurface	liblwgeom/cunit/cu_out_wkt.c	/^static void test_wkt_out_multisurface(void)$/;"	f	file:
test_wkt_out_point	liblwgeom/cunit/cu_out_wkt.c	/^static void test_wkt_out_point(void)$/;"	f	file:
test_wkt_out_polygon	liblwgeom/cunit/cu_out_wkt.c	/^static void test_wkt_out_polygon(void)$/;"	f	file:
testset	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    public static final String[][] testset = new String[][] {$/;"	f	class:JtsTestParser
testset	java/jdbc/src/examples/TestParser.java	/^    public static final String[][] testset = new String[][]{$/;"	f	class:TestParser
text2cstring	libpgcommon/lwgeom_pg.c	/^text2cstring(const text *textptr)$/;"	f
text_p_get_mode	postgis/gserialized_estimate.c	/^text_p_get_mode(const text *txt)$/;"	f	file:
textbuffer_log	loader/shp2pgsql-gui.c	/^static GtkTextBuffer *textbuffer_log = NULL;$/;"	v	file:
textview_log	loader/shp2pgsql-gui.c	/^static GtkWidget *textview_log = NULL;$/;"	v	file:
tflags	liblwgeom/lwgeom_debug.c	/^static char tflags[6];$/;"	v	file:
themeasure	liblwgeom/measures.h	/^	double	themeasure;	\/*a value calculated to compare distances*\/$/;"	m	struct:__anon30
tile_size	raster/loader/raster2pgsql.h	/^	int tile_size[2];$/;"	m	struct:raster_loader_config
tile_size	raster/loader/raster2pgsql.h	/^	int tile_size[2];$/;"	m	struct:rasterinfo_t
tin	liblwgeom/lwin_wkt_parse.y	/^tin :$/;"	l
tin	regress/typmod.sql	/^CREATE TABLE tm.tin (id serial, g geometry(tin) );$/;"	t
tin.g	regress/typmod.sql	/^CREATE TABLE tm.tin (id serial, g geometry(tin) );$/;"	F
tin.id	regress/typmod.sql	/^CREATE TABLE tm.tin (id serial, g geometry(tin) );$/;"	F
tin0	regress/typmod.sql	/^CREATE TABLE tm.tin0 (id serial, g geometry(tin, 0) );$/;"	t
tin0.g	regress/typmod.sql	/^CREATE TABLE tm.tin0 (id serial, g geometry(tin, 0) );$/;"	F
tin0.id	regress/typmod.sql	/^CREATE TABLE tm.tin0 (id serial, g geometry(tin, 0) );$/;"	F
tin4326	regress/typmod.sql	/^CREATE TABLE tm.tin4326 (id serial, g geometry(tin, 4326) );$/;"	t
tin4326.g	regress/typmod.sql	/^CREATE TABLE tm.tin4326 (id serial, g geometry(tin, 4326) );$/;"	F
tin4326.id	regress/typmod.sql	/^CREATE TABLE tm.tin4326 (id serial, g geometry(tin, 4326) );$/;"	F
tin_arcs	liblwgeom/lwtin.c	/^typedef struct struct_tin_arcs *tin_arcs;$/;"	t	typeref:struct:struct_tin_arcs	file:
tin_parse	liblwgeom/cunit/cu_surface.c	/^void tin_parse(void)$/;"	f
tinm	regress/typmod.sql	/^CREATE TABLE tm.tinm (id serial, g geometry(tinm) );$/;"	t
tinm.g	regress/typmod.sql	/^CREATE TABLE tm.tinm (id serial, g geometry(tinm) );$/;"	F
tinm.id	regress/typmod.sql	/^CREATE TABLE tm.tinm (id serial, g geometry(tinm) );$/;"	F
tinm0	regress/typmod.sql	/^CREATE TABLE tm.tinm0 (id serial, g geometry(tinm, 0) );$/;"	t
tinm0.g	regress/typmod.sql	/^CREATE TABLE tm.tinm0 (id serial, g geometry(tinm, 0) );$/;"	F
tinm0.id	regress/typmod.sql	/^CREATE TABLE tm.tinm0 (id serial, g geometry(tinm, 0) );$/;"	F
tinm4326	regress/typmod.sql	/^CREATE TABLE tm.tinm4326 (id serial, g geometry(tinm, 4326) );$/;"	t
tinm4326.g	regress/typmod.sql	/^CREATE TABLE tm.tinm4326 (id serial, g geometry(tinm, 4326) );$/;"	F
tinm4326.id	regress/typmod.sql	/^CREATE TABLE tm.tinm4326 (id serial, g geometry(tinm, 4326) );$/;"	F
tinz	regress/typmod.sql	/^CREATE TABLE tm.tinz (id serial, g geometry(tinz) );$/;"	t
tinz.g	regress/typmod.sql	/^CREATE TABLE tm.tinz (id serial, g geometry(tinz) );$/;"	F
tinz.id	regress/typmod.sql	/^CREATE TABLE tm.tinz (id serial, g geometry(tinz) );$/;"	F
tinz0	regress/typmod.sql	/^CREATE TABLE tm.tinz0 (id serial, g geometry(tinz, 0) );$/;"	t
tinz0.g	regress/typmod.sql	/^CREATE TABLE tm.tinz0 (id serial, g geometry(tinz, 0) );$/;"	F
tinz0.id	regress/typmod.sql	/^CREATE TABLE tm.tinz0 (id serial, g geometry(tinz, 0) );$/;"	F
tinz4326	regress/typmod.sql	/^CREATE TABLE tm.tinz4326 (id serial, g geometry(tinz, 4326) );$/;"	t
tinz4326.g	regress/typmod.sql	/^CREATE TABLE tm.tinz4326 (id serial, g geometry(tinz, 4326) );$/;"	F
tinz4326.id	regress/typmod.sql	/^CREATE TABLE tm.tinz4326 (id serial, g geometry(tinz, 4326) );$/;"	F
tinzm	regress/typmod.sql	/^CREATE TABLE tm.tinzm (id serial, g geometry(tinzm) );$/;"	t
tinzm.g	regress/typmod.sql	/^CREATE TABLE tm.tinzm (id serial, g geometry(tinzm) );$/;"	F
tinzm.id	regress/typmod.sql	/^CREATE TABLE tm.tinzm (id serial, g geometry(tinzm) );$/;"	F
tinzm0	regress/typmod.sql	/^CREATE TABLE tm.tinzm0 (id serial, g geometry(tinzm, 0) );$/;"	t
tinzm0.g	regress/typmod.sql	/^CREATE TABLE tm.tinzm0 (id serial, g geometry(tinzm, 0) );$/;"	F
tinzm0.id	regress/typmod.sql	/^CREATE TABLE tm.tinzm0 (id serial, g geometry(tinzm, 0) );$/;"	F
tinzm4326	regress/typmod.sql	/^CREATE TABLE tm.tinzm4326 (id serial, g geometry(tinzm, 4326) );$/;"	t
tinzm4326.g	regress/typmod.sql	/^CREATE TABLE tm.tinzm4326 (id serial, g geometry(tinzm, 4326) );$/;"	F
tinzm4326.id	regress/typmod.sql	/^CREATE TABLE tm.tinzm4326 (id serial, g geometry(tinzm, 4326) );$/;"	F
tmp	regress/snaptogrid.sql	/^CREATE TEMP TABLE tmp (orig geometry);$/;"	t
tmp.orig	regress/snaptogrid.sql	/^CREATE TEMP TABLE tmp (orig geometry);$/;"	F
toSqlString	java/ejb3/src/org/postgis/hibernate/ContainsExpression.java	/^	public String toSqlString(Criteria criteria, CriteriaQuery criteriaQuery) throws HibernateException {$/;"	m	class:ContainsExpression
toSqlString	java/ejb3/src/org/postgis/hibernate/IntersectsExpression.java	/^	public String toSqlString(Criteria criteria, CriteriaQuery criteriaQuery) throws HibernateException {$/;"	m	class:IntersectsExpression
toSqlString	java/ejb3/src/org/postgis/hibernate/WithinExpression.java	/^	public String toSqlString(Criteria criteria, CriteriaQuery criteriaQuery) throws HibernateException {$/;"	m	class:WithinExpression
toString	java/ejb3/src/org/postgis/hibernate/ContainsExpression.java	/^	public String toString()$/;"	m	class:ContainsExpression
toString	java/ejb3/src/org/postgis/hibernate/IntersectsExpression.java	/^	public String toString()$/;"	m	class:IntersectsExpression
toString	java/ejb3/src/org/postgis/hibernate/WithinExpression.java	/^	public String toString()$/;"	m	class:WithinExpression
toString	java/jdbc/jtssrc/org/postgis/jts/JtsGeometry.java	/^    public String toString() {$/;"	m	class:JtsGeometry
toString	java/jdbc/src/org/postgis/Geometry.java	/^	public String toString() {$/;"	m	class:Geometry
toString	java/jdbc/src/org/postgis/PGboxbase.java	/^    public String toString() {$/;"	m	class:PGboxbase
toString	java/jdbc/src/org/postgis/PGgeometry.java	/^    public String toString() {$/;"	m	class:PGgeometry
toString	java/jdbc/src/org/postgis/PGgeometryLW.java	/^    public String toString() {$/;"	m	class:PGgeometryLW
toString	java/jdbc/src/org/postgis/binary/ByteSetter.java	/^        public String toString() {$/;"	m	class:ByteSetter.BinaryByteSetter
toString	java/jdbc/src/org/postgis/binary/ByteSetter.java	/^        public String toString() {$/;"	m	class:ByteSetter.StringByteSetter
toString	java/jdbc/src/org/postgis/binary/ValueSetter.java	/^    public String toString() {$/;"	m	class:ValueSetter
toString	java/jdbc/src/org/postgis/java2d/PGShapeGeometry.java	/^    public String toString() {$/;"	m	class:PGShapeGeometry
to_dec	liblwgeom/lwgeom_transform.c	/^to_dec(POINT4D *pt)$/;"	f	file:
to_rad	liblwgeom/lwgeom_transform.c	/^to_rad(POINT4D *pt)$/;"	f	file:
to_srid	loader/shp2pgsql-core.h	/^	int to_srid;$/;"	m	struct:shp_loader_state
to_twkb_buf	liblwgeom/lwout_twkb.c	/^static uint8_t* to_twkb_buf(uint8_t *iptr, uint8_t *buf, uint8_t variant, int the_size)$/;"	f	file:
tolerance	liblwgeom/measures.h	/^	double tolerance; \/*the tolerance for dwithin and dfullywithin*\/$/;"	m	struct:__anon29
tolerance	liblwgeom/measures3d.h	/^	double tolerance; \/*the tolerance for 3ddwithin and 3ddfullywithin*\/$/;"	m	struct:__anon31
topology_load_tiger	extras/tiger_geocoder/tiger_2011/topology/tiger_topology_loader.sql	/^CREATE OR REPLACE FUNCTION tiger.topology_load_tiger(IN toponame varchar,  $/;"	f
topologypreservesimplify	postgis/lwgeom_geos.c	/^Datum topologypreservesimplify(PG_FUNCTION_ARGS)$/;"	f
topologypreservesimplify	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(topologypreservesimplify);$/;"	v
total_double	postgis/gserialized_estimate.c	/^total_double(const double *vals, int nvals)$/;"	f	file:
total_int	postgis/gserialized_estimate.c	/^total_int(const int *vals, int nvals)$/;"	f	file:
touches	postgis/lwgeom_geos.c	/^Datum touches(PG_FUNCTION_ARGS)$/;"	f
touches	postgis/lwgeom_geos.c	/^PG_FUNCTION_INFO_V1(touches);$/;"	v
traffic_signs	topology/test/load_features.sql	/^CREATE TABLE features.traffic_signs ( -- Traffic signs (selected nodes)$/;"	t
traffic_signs.feature_name	topology/test/load_features.sql	/^  feature_name VARCHAR PRIMARY KEY) with oids;$/;"	F
transaction	raster/loader/raster2pgsql.h	/^	int transaction;$/;"	m	struct:raster_loader_config
transform	postgis/lwgeom_transform.c	/^Datum transform(PG_FUNCTION_ARGS)$/;"	f
transform	postgis/lwgeom_transform.c	/^PG_FUNCTION_INFO_V1(transform);$/;"	v
transform	raster/rt_core/rt_warp.c	/^			void *transform;$/;"	m	struct:_rti_warp_arg_t::__anon42::__anon44	file:
transform	raster/rt_core/rt_warp.c	/^	} transform;$/;"	m	struct:_rti_warp_arg_t	typeref:struct:_rti_warp_arg_t::__anon42	file:
transform_geom	postgis/lwgeom_transform.c	/^Datum transform_geom(PG_FUNCTION_ARGS)$/;"	f
transform_geom	postgis/lwgeom_transform.c	/^PG_FUNCTION_INFO_V1(transform_geom);$/;"	v
tree_suite	liblwgeom/cunit/cu_tree.c	/^CU_SuiteInfo tree_suite = {"Internal Spatial Trees",  NULL,  NULL, tree_tests};$/;"	v
tree_tests	liblwgeom/cunit/cu_tree.c	/^CU_TestInfo tree_tests[] =$/;"	v
triangle	liblwgeom/lwin_wkt_parse.y	/^triangle :$/;"	l
triangle	regress/typmod.sql	/^CREATE TABLE tm.triangle (id serial, g geometry(triangle) );$/;"	t
triangle.g	regress/typmod.sql	/^CREATE TABLE tm.triangle (id serial, g geometry(triangle) );$/;"	F
triangle.id	regress/typmod.sql	/^CREATE TABLE tm.triangle (id serial, g geometry(triangle) );$/;"	F
triangle0	regress/typmod.sql	/^CREATE TABLE tm.triangle0 (id serial, g geometry(triangle, 0) );$/;"	t
triangle0.g	regress/typmod.sql	/^CREATE TABLE tm.triangle0 (id serial, g geometry(triangle, 0) );$/;"	F
triangle0.id	regress/typmod.sql	/^CREATE TABLE tm.triangle0 (id serial, g geometry(triangle, 0) );$/;"	F
triangle4326	regress/typmod.sql	/^CREATE TABLE tm.triangle4326 (id serial, g geometry(triangle, 4326) );$/;"	t
triangle4326.g	regress/typmod.sql	/^CREATE TABLE tm.triangle4326 (id serial, g geometry(triangle, 4326) );$/;"	F
triangle4326.id	regress/typmod.sql	/^CREATE TABLE tm.triangle4326 (id serial, g geometry(triangle, 4326) );$/;"	F
triangle_list	liblwgeom/lwin_wkt_parse.y	/^triangle_list :$/;"	l
triangle_parse	liblwgeom/cunit/cu_surface.c	/^void triangle_parse(void)$/;"	f
triangle_untagged	liblwgeom/lwin_wkt_parse.y	/^triangle_untagged :$/;"	l
trianglem	regress/typmod.sql	/^CREATE TABLE tm.trianglem (id serial, g geometry(trianglem) );$/;"	t
trianglem.g	regress/typmod.sql	/^CREATE TABLE tm.trianglem (id serial, g geometry(trianglem) );$/;"	F
trianglem.id	regress/typmod.sql	/^CREATE TABLE tm.trianglem (id serial, g geometry(trianglem) );$/;"	F
trianglem0	regress/typmod.sql	/^CREATE TABLE tm.trianglem0 (id serial, g geometry(trianglem, 0) );$/;"	t
trianglem0.g	regress/typmod.sql	/^CREATE TABLE tm.trianglem0 (id serial, g geometry(trianglem, 0) );$/;"	F
trianglem0.id	regress/typmod.sql	/^CREATE TABLE tm.trianglem0 (id serial, g geometry(trianglem, 0) );$/;"	F
trianglem4326	regress/typmod.sql	/^CREATE TABLE tm.trianglem4326 (id serial, g geometry(trianglem, 4326) );$/;"	t
trianglem4326.g	regress/typmod.sql	/^CREATE TABLE tm.trianglem4326 (id serial, g geometry(trianglem, 4326) );$/;"	F
trianglem4326.id	regress/typmod.sql	/^CREATE TABLE tm.trianglem4326 (id serial, g geometry(trianglem, 4326) );$/;"	F
trianglez	regress/typmod.sql	/^CREATE TABLE tm.trianglez (id serial, g geometry(trianglez) );$/;"	t
trianglez.g	regress/typmod.sql	/^CREATE TABLE tm.trianglez (id serial, g geometry(trianglez) );$/;"	F
trianglez.id	regress/typmod.sql	/^CREATE TABLE tm.trianglez (id serial, g geometry(trianglez) );$/;"	F
trianglez0	regress/typmod.sql	/^CREATE TABLE tm.trianglez0 (id serial, g geometry(trianglez, 0) );$/;"	t
trianglez0.g	regress/typmod.sql	/^CREATE TABLE tm.trianglez0 (id serial, g geometry(trianglez, 0) );$/;"	F
trianglez0.id	regress/typmod.sql	/^CREATE TABLE tm.trianglez0 (id serial, g geometry(trianglez, 0) );$/;"	F
trianglez4326	regress/typmod.sql	/^CREATE TABLE tm.trianglez4326 (id serial, g geometry(trianglez, 4326) );$/;"	t
trianglez4326.g	regress/typmod.sql	/^CREATE TABLE tm.trianglez4326 (id serial, g geometry(trianglez, 4326) );$/;"	F
trianglez4326.id	regress/typmod.sql	/^CREATE TABLE tm.trianglez4326 (id serial, g geometry(trianglez, 4326) );$/;"	F
trianglezm	regress/typmod.sql	/^CREATE TABLE tm.trianglezm (id serial, g geometry(trianglezm) );$/;"	t
trianglezm.g	regress/typmod.sql	/^CREATE TABLE tm.trianglezm (id serial, g geometry(trianglezm) );$/;"	F
trianglezm.id	regress/typmod.sql	/^CREATE TABLE tm.trianglezm (id serial, g geometry(trianglezm) );$/;"	F
trianglezm0	regress/typmod.sql	/^CREATE TABLE tm.trianglezm0 (id serial, g geometry(trianglezm, 0) );$/;"	t
trianglezm0.g	regress/typmod.sql	/^CREATE TABLE tm.trianglezm0 (id serial, g geometry(trianglezm, 0) );$/;"	F
trianglezm0.id	regress/typmod.sql	/^CREATE TABLE tm.trianglezm0 (id serial, g geometry(trianglezm, 0) );$/;"	F
trianglezm4326	regress/typmod.sql	/^CREATE TABLE tm.trianglezm4326 (id serial, g geometry(trianglezm, 4326) );$/;"	t
trianglezm4326.g	regress/typmod.sql	/^CREATE TABLE tm.trianglezm4326 (id serial, g geometry(trianglezm, 4326) );$/;"	F
trianglezm4326.id	regress/typmod.sql	/^CREATE TABLE tm.trianglezm4326 (id serial, g geometry(trianglezm, 4326) );$/;"	F
triangulate_suite	liblwgeom/cunit/cu_triangulate.c	/^CU_SuiteInfo triangulate_suite = {"triangulate",  NULL,  NULL, triangulate_tests};$/;"	v
triangulate_tests	liblwgeom/cunit/cu_triangulate.c	/^CU_TestInfo triangulate_tests[] =$/;"	v
triga	regress/sfcgal/tickets.sql	/^CREATE OR REPLACE FUNCTION triga() RETURNS trigger AS$/;"	f
triga	regress/tickets.sql	/^CREATE OR REPLACE FUNCTION triga() RETURNS trigger AS$/;"	f
trim	doc/html/image_src/styles.c	/^trim(char* str)$/;"	f
trim	raster/loader/raster2pgsql.c	/^trim(const char *input) {$/;"	f	file:
trim_trailing_zeros	liblwgeom/lwutil.c	/^trim_trailing_zeros(char *str)$/;"	f
twisted	liblwgeom/measures.h	/^	int twisted; \/*To preserve the order of incoming points to match the first and secon point in shortest and longest line*\/$/;"	m	struct:__anon29
twisted	liblwgeom/measures3d.h	/^	int twisted; \/*To preserve the order of incoming points to match the first and second point in 3dshortest and 3dlongest line*\/$/;"	m	struct:__anon31
twkb_state	postgis/lwgeom_accum.c	/^twkb_state;$/;"	t	typeref:struct:__anon10	file:
type	java/jdbc/src/org/postgis/Geometry.java	/^	public final int type;$/;"	f	class:Geometry
type	liblwgeom/g_util.c	/^	int type;$/;"	m	struct:geomtype_struct	file:
type	libpgcommon/lwgeom_cache.c	/^	int type;$/;"	m	struct:__anon5	file:
type	libpgcommon/lwgeom_cache.h	/^	int                         type;$/;"	m	struct:__anon1
type	libpgcommon/lwgeom_cache.h	/^	int type;$/;"	m	struct:struct_PROJ4PortalCache
type	postgis/geography_measurement_trees.c	/^	int                         type;       \/\/ <GeomCache>$/;"	m	struct:__anon11	file:
type	postgis/lwgeom_geos_prepared.h	/^	int                         type;       \/\/ <GeomCache>$/;"	m	struct:__anon7
type	postgis/lwgeom_rtree.h	/^	int                         type;       \/\/ <GeomCache>$/;"	m	struct:__anon14
typename	liblwgeom/g_util.c	/^	char *typename;$/;"	m	struct:geomtype_struct	file:
types	loader/shp2pgsql-core.h	/^	DBFFieldType *types;$/;"	m	struct:shp_loader_state
types	regress/typmod.sql	/^CREATE TABLE tm.types (id serial, g geometry);$/;"	t
types.g	regress/typmod.sql	/^CREATE TABLE tm.types (id serial, g geometry);$/;"	F
types.id	regress/typmod.sql	/^CREATE TABLE tm.types (id serial, g geometry);$/;"	F
typesAdder	java/jdbc/src/org/postgis/DriverWrapper.java	/^    protected TypesAdder typesAdder;$/;"	f	class:DriverWrapper
typlen	postgis/lwgeom_dumppoints.c	/^	int16	typlen;$/;"	m	struct:dumpstate	file:
u_getvarint_size	liblwgeom/lwout_twkb.c	/^int u_getvarint_size(unsigned long val)$/;"	f
u_varint_to_twkb_buf	liblwgeom/lwout_twkb.c	/^static uint8_t* u_varint_to_twkb_buf(unsigned long val, uint8_t *buf)$/;"	f	file:
uchar	loader/shpopen.c	/^typedef unsigned char uchar;$/;"	t	file:
ufc_info	raster/rt_pg/rtpg_mapalgebra.c	/^	FunctionCallInfoData ufc_info;$/;"	m	struct:__anon49	file:
ufc_noid	raster/rt_pg/rtpg_mapalgebra.c	/^	Oid ufc_noid;$/;"	m	struct:__anon49	file:
ufc_nullcount	raster/rt_pg/rtpg_mapalgebra.c	/^	int ufc_nullcount;$/;"	m	struct:__anon49	file:
ufl_info	raster/rt_pg/rtpg_mapalgebra.c	/^	FmgrInfo ufl_info;$/;"	m	struct:__anon49	file:
uint32	extras/wkb_reader/wkbtest.h	/^typedef unsigned int uint32;    \/* == 32 bits *\/$/;"	t
uint8_to_twkb_buf	liblwgeom/lwout_twkb.c	/^static uint8_t* uint8_to_twkb_buf(const uint8_t ival, uint8_t *buf)$/;"	f	file:
ulp	raster/scripts/python/window.py	/^ulp = ( gt[0], gt[3] ) # X\/Y upper left pixel corner$/;"	v
unescapedattrs	loader/pgsql2shp-core.h	/^	int unescapedattrs;$/;"	m	struct:shp_dumper_config
unhex	java/jdbc/src/org/postgis/binary/ByteGetter.java	/^        public static byte unhex(char c) {$/;"	m	class:ByteGetter.StringByteGetter
uninstall_spatial	regress/run_test	/^uninstall_spatial()$/;"	f
uninstall_spatial	regress/run_test.pl	/^sub uninstall_spatial$/;"	s
uniontype	raster/rt_pg/rtpg_mapalgebra.c	/^	rtpg_union_type uniontype;$/;"	m	struct:rtpg_union_band_arg_t	file:
unit_normal	liblwgeom/lwgeodetic.c	/^void unit_normal(const POINT3D *P1, const POINT3D *P2, POINT3D *normal)$/;"	f
unput	liblwgeom/lwin_wkt_lex.c	204;"	d	file:
unzip_files_matching	extras/tiger_geocoder/tiger_2011/legacy_import/tiger2008/import_tiger_shps.sh	/^function unzip_files_matching () {$/;"	f
update_conn_config_from_conn_ui	loader/shp2pgsql-gui.c	/^update_conn_config_from_conn_ui(void)$/;"	f	file:
update_conn_ui_from_conn_config	loader/shp2pgsql-gui.c	/^update_conn_ui_from_conn_config(void)$/;"	f	file:
update_dumper_config_globals_from_options_ui	loader/shp2pgsql-gui.c	/^update_dumper_config_globals_from_options_ui(SHPDUMPERCONFIG *config)$/;"	f	file:
update_dumper_table_config_from_listview_iter	loader/shp2pgsql-gui.c	/^update_dumper_table_config_from_listview_iter(GtkTreeIter *iter, SHPDUMPERCONFIG *dumper_table_config)$/;"	f	file:
update_filename_field_width	loader/shp2pgsql-gui.c	/^update_filename_field_width(void)$/;"	f	file:
update_loader_config_globals_from_options_ui	loader/shp2pgsql-gui.c	/^update_loader_config_globals_from_options_ui(SHPLOADERCONFIG *config)$/;"	f	file:
update_loader_file_config_from_listview_iter	loader/shp2pgsql-gui.c	/^update_loader_file_config_from_listview_iter(GtkTreeIter *iter, SHPLOADERCONFIG *loader_file_config)$/;"	f	file:
update_options_ui_from_dumper_config_globals	loader/shp2pgsql-gui.c	/^update_options_ui_from_dumper_config_globals(void)$/;"	f	file:
update_options_ui_from_loader_config_globals	loader/shp2pgsql-gui.c	/^update_options_ui_from_loader_config_globals(void)$/;"	f	file:
update_table_chooser_from_database	loader/shp2pgsql-gui.c	/^update_table_chooser_from_database()$/;"	f	file:
upgrade_spatial	regress/run_test	/^upgrade_spatial ()$/;"	f
upgrade_spatial	regress/run_test.pl	/^sub upgrade_spatial$/;"	s
upper	postgis/gserialized_gist_2d.c	/^				upper;$/;"	m	struct:__anon19	file:
urt	java/jdbc/src/org/postgis/PGboxbase.java	/^    protected Point urt;$/;"	f	class:PGboxbase
usage	doc/html/installdox	/^sub usage {$/;"	s
usage	extras/tiger_geocoder/tiger_2011/legacy_import/tiger2008/import_tiger_shps.sh	/^function usage () {$/;"	f
usage	loader/pgsql2shp-cli.c	/^usage(int status)$/;"	f	file:
usage	loader/shp2pgsql-cli.c	/^usage()$/;"	f	file:
usage	loader/shp2pgsql-gui.c	/^usage()$/;"	f	file:
usage	raster/loader/raster2pgsql.c	/^usage() {$/;"	f	file:
usage	raster/scripts/python/ovdump.py	/^                   usage="%prog -r <RASTER> -v <OVERVIEW>",$/;"	v
usage	raster/scripts/python/rtrowdump.py	/^                       usage="%prog -d <DB> -t <TABLE> [-c <COLUMN>]",$/;"	v
usage	regress/run_test.pl	/^sub usage $/;"	s
usage	utils/profile_intersects.pl	/^sub usage$/;"	s
usage	utils/test_estimation.pl	/^sub usage$/;"	s
usage	utils/test_geography_estimation.pl	/^sub usage$/;"	s
usage	utils/test_geography_joinestimation.pl	/^sub usage$/;"	s
usage	utils/test_joinestimation.pl	/^sub usage$/;"	s
useLW	java/jdbc/src/org/postgis/DriverWrapper.java	/^    protected boolean useLW(Connection result) {$/;"	m	class:DriverWrapper
useLW	java/jdbc/src/org/postgis/DriverWrapperAutoprobe.java	/^    protected boolean useLW(Connection conn) {$/;"	m	class:DriverWrapperAutoprobe
useLW	java/jdbc/src/org/postgis/DriverWrapperLW.java	/^    protected boolean useLW(Connection result) {$/;"	m	class:DriverWrapperLW
use_wkt	loader/shp2pgsql-core.h	/^	int use_wkt;$/;"	m	struct:shp_loader_config
username	loader/shpcommon.h	/^	char *username;$/;"	m	struct:shp_connection_state
usetransaction	loader/shp2pgsql-core.h	/^	int usetransaction;$/;"	m	struct:shp_loader_config
usrquery	loader/pgsql2shp-core.h	/^	char *usrquery;$/;"	m	struct:shp_dumper_config
utf8	loader/shp2pgsql-core.c	/^utf8(const char *fromcode, char *inputbuf, char **outputbuf)$/;"	f	file:
utm_dots	regress/sfcgal/tickets.sql	/^CREATE TABLE utm_dots ( the_geog geography, utm_srid integer);$/;"	t
utm_dots	regress/tickets.sql	/^CREATE TABLE utm_dots ( the_geog geography, utm_srid integer);$/;"	t
utm_dots.the_geog	regress/sfcgal/tickets.sql	/^CREATE TABLE utm_dots ( the_geog geography, utm_srid integer);$/;"	F
utm_dots.the_geog	regress/tickets.sql	/^CREATE TABLE utm_dots ( the_geog geography, utm_srid integer);$/;"	F
utm_dots.utm_dots_gix	regress/sfcgal/tickets.sql	/^CREATE INDEX utm_dots_gix ON utm_dots USING GIST (the_geog);$/;"	i
utm_dots.utm_dots_gix	regress/tickets.sql	/^CREATE INDEX utm_dots_gix ON utm_dots USING GIST (the_geog);$/;"	i
utm_dots.utm_srid	regress/sfcgal/tickets.sql	/^CREATE TABLE utm_dots ( the_geog geography, utm_srid integer);$/;"	F
utm_dots.utm_srid	regress/tickets.sql	/^CREATE TABLE utm_dots ( the_geog geography, utm_srid integer);$/;"	F
utmzone	extras/tiger_geocoder/tiger_2011/utility/utmzone.sql	/^CREATE OR REPLACE FUNCTION utmzone(geometry) RETURNS integer AS$/;"	f
utmzone	regress/sfcgal/tickets.sql	/^CREATE OR REPLACE FUNCTION utmzone(geometry)$/;"	f
utmzone	regress/tickets.sql	/^CREATE OR REPLACE FUNCTION utmzone(geometry)$/;"	f
va_copy	liblwgeom/vsprintf.c	40;"	d	file:
va_copy	liblwgeom/vsprintf.c	42;"	d	file:
vacuum	utils/test_geography_joinestimation.pl	/^sub vacuum$/;"	s
vacuum	utils/test_joinestimation.pl	/^sub vacuum$/;"	s
vacuum_table	raster/loader/raster2pgsql.c	/^vacuum_table($/;"	f	file:
val	raster/rt_core/librtcore.h	/^	double val;$/;"	m	struct:rt_geomval_t
val	raster/rt_pg/rtpg_mapalgebra.c	/^		char **val;$/;"	m	struct:__anon50::__anon53	file:
val	raster/rt_pg/rtpg_mapalgebra.c	/^		double val;$/;"	m	struct:__anon50::__anon51	file:
val	raster/rt_pg/rtpg_mapalgebra.c	/^		double val;$/;"	m	struct:__anon50::__anon52	file:
valid_connection	loader/shp2pgsql-gui.c	/^static int valid_connection = 0;$/;"	v	file:
validate_remote_loader_columns	loader/shp2pgsql-gui.c	/^validate_remote_loader_columns(SHPLOADERCONFIG *config, PGresult *result)$/;"	f	file:
validate_shape_column_against_pg_column	loader/shp2pgsql-gui.c	/^validate_shape_column_against_pg_column(int dbf_fieldtype, char *pg_fieldtype)$/;"	f	file:
value	liblwgeom/lwgeom_api.c	/^	float value;$/;"	m	union:__anon28	file:
value	postgis/gserialized_estimate.c	/^	float4 value[1];$/;"	m	struct:ND_STATS_T	file:
value	raster/rt_core/librtcore.h	/^	double value;$/;"	m	struct:quantile_llist_element
value	raster/rt_core/librtcore.h	/^	double value;$/;"	m	struct:rt_colormap_entry_t
value	raster/rt_core/librtcore.h	/^	double value;$/;"	m	struct:rt_pixel_t
value	raster/rt_core/librtcore.h	/^	double value;$/;"	m	struct:rt_quantile_t
value	raster/rt_core/librtcore.h	/^	double value;$/;"	m	struct:rt_valuecount_t
value	raster/rt_core/rt_raster.c	/^	double *value;$/;"	m	struct:_rti_rasterize_arg_t	file:
value	raster/rt_pg/rtpg_pixel.c	/^		double value;$/;"	m	struct:rtpg_setvaluesgv_geomval_t::__anon55	file:
value	raster/scripts/python/genraster.py	/^            value = count * colour_step$/;"	v
value	raster/scripts/python/genraster.py	/^            value = random.randrange(0, 255)$/;"	v
valueGetterForEndian	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryParser.java	/^    public static ValueGetter valueGetterForEndian(ByteGetter bytes) {$/;"	m	class:JtsBinaryParser
valueGetterForEndian	java/jdbc/src/org/postgis/binary/BinaryParser.java	/^    public static ValueGetter valueGetterForEndian(ByteGetter bytes) {$/;"	m	class:BinaryParser
valueGetterForEndian	java/jdbc/src/org/postgis/java2d/ShapeBinaryParser.java	/^    public static ValueGetter valueGetterForEndian(ByteGetter bytes) {$/;"	m	class:ShapeBinaryParser
valueSetterForEndian	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    public static ValueSetter valueSetterForEndian(ByteSetter bytes, byte endian) {$/;"	m	class:JtsBinaryWriter
valueSetterForEndian	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    public static ValueSetter valueSetterForEndian(ByteSetter bytes, byte endian) {$/;"	m	class:BinaryWriter
value_text	raster/scripts/python/genraster.py	/^            value_text = 0;$/;"	v
value_text	raster/scripts/python/genraster.py	/^            value_text = 255$/;"	v
values	raster/rt_core/librtcore.h	/^	double ***values;$/;"	m	struct:rt_iterator_arg_t
values	raster/rt_core/librtcore.h	/^	double *values;$/;"	m	struct:rt_bandstats_t
values	raster/rt_core/rt_mapalgebra.c	/^		double **values;$/;"	m	struct:_rti_iterator_arg_t::__anon48	file:
values	raster/rt_pg/rtpg_pixel.c	/^	Datum **values;$/;"	m	struct:rtpg_dumpvalues_arg_t	file:
variant	postgis/lwgeom_accum.c	/^	uint8_t variant;$/;"	m	struct:__anon10	file:
varsize	libpgcommon/gserialized_gist.h	/^	int32 varsize;$/;"	m	struct:__anon3
vasbappend	loader/shp2pgsql-core.c	/^vasbappend(stringbuffer_t *sb, char *fmt, ... )$/;"	f
vector_angle	liblwgeom/lwgeodetic.c	/^double vector_angle(const POINT3D* v1, const POINT3D* v2)$/;"	f
vector_difference	liblwgeom/lwgeodetic.c	/^static void vector_difference(const POINT3D *a, const POINT3D *b, POINT3D *n)$/;"	f	file:
vector_magnitude	liblwgeom/lwgeodetic.c	/^static inline double vector_magnitude(const POINT3D* v)$/;"	f	file:
vector_rotate	liblwgeom/lwgeodetic.c	/^void vector_rotate(const POINT3D* v1, const POINT3D* v2, double angle, POINT3D* n)$/;"	f
vector_scale	liblwgeom/lwgeodetic.c	/^static void vector_scale(POINT3D *n, double scale)$/;"	f	file:
vector_sum	liblwgeom/lwgeodetic.c	/^void vector_sum(const POINT3D *a, const POINT3D *b, POINT3D *n)$/;"	f
version	raster/loader/raster2pgsql.h	/^	int version;$/;"	m	struct:raster_loader_config
version	raster/rt_core/librtcore.h	/^    uint16_t version; \/* format version (this is version 0): 2 bytes *\/$/;"	m	struct:rt_raster_serialized_t
version	raster/rt_core/librtcore.h	/^    uint16_t version;$/;"	m	struct:rt_raster_t
viaPrepSQL	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    private static Geometry viaPrepSQL(Geometry geom, Connection conn) throws SQLException {$/;"	m	class:JtsTestParser	file:
viaPrepSQL	java/jdbc/src/examples/TestParser.java	/^    private static Geometry viaPrepSQL(Geometry geom, Connection conn) throws SQLException {$/;"	m	class:TestParser	file:
viaSQL	java/jdbc/jtssrc/examples/JtsTestParser.java	/^    private static Geometry viaSQL(String rep, Statement stat) throws SQLException {$/;"	m	class:JtsTestParser	file:
viaSQL	java/jdbc/src/examples/TestBoxes.java	/^    private static PGobject viaSQL(PGobject obj, Statement stat) throws SQLException {$/;"	m	class:TestBoxes	file:
viaSQL	java/jdbc/src/examples/TestParser.java	/^    private static Geometry viaSQL(String rep, Statement stat) throws SQLException {$/;"	m	class:TestParser	file:
visited	topology/test/regress/gml.sql	/^CREATE TABLE visited (element_type int, element_id int);$/;"	t
visited.element_id	topology/test/regress/gml.sql	/^CREATE TABLE visited (element_type int, element_id int);$/;"	F
visited.element_type	topology/test/regress/gml.sql	/^CREATE TABLE visited (element_type int, element_id int);$/;"	F
warn	raster/rt_core/rt_context.c	/^    rt_message_handler warn;$/;"	m	struct:rt_context_t	file:
width	raster/rt_core/librtcore.h	/^    uint16_t width; \/* pixel columns - max 65535 *\/$/;"	m	struct:rt_raster_t
width	raster/rt_core/librtcore.h	/^    uint16_t width; \/* pixel columns: 2 bytes *\/$/;"	m	struct:rt_raster_serialized_t
width	raster/rt_core/librtcore.h	/^    uint16_t width;$/;"	m	struct:rt_band_t
width	raster/rt_core/rt_mapalgebra.c	/^	int *width;$/;"	m	struct:_rti_iterator_arg_t	file:
width	raster/scripts/python/rtreader.py	/^    width = property(fget = lambda self: self._get_width())$/;"	v	class:RasterReader
widths	loader/shp2pgsql-core.h	/^	int *widths;$/;"	m	struct:shp_loader_state
windowActivated	java/jdbc/src/examples/TestJava2d.java	/^        public void windowActivated(WindowEvent e) {\/\/$/;"	m	class:TestJava2d.EventHandler
windowClosed	java/jdbc/src/examples/TestJava2d.java	/^        public void windowClosed(WindowEvent e) {\/\/$/;"	m	class:TestJava2d.EventHandler
windowClosing	java/jdbc/src/examples/TestJava2d.java	/^        public void windowClosing(WindowEvent e) {$/;"	m	class:TestJava2d.EventHandler
windowDeactivated	java/jdbc/src/examples/TestJava2d.java	/^        public void windowDeactivated(WindowEvent e) {\/\/$/;"	m	class:TestJava2d.EventHandler
windowDeiconified	java/jdbc/src/examples/TestJava2d.java	/^        public void windowDeiconified(WindowEvent e) {\/\/$/;"	m	class:TestJava2d.EventHandler
windowIconified	java/jdbc/src/examples/TestJava2d.java	/^        public void windowIconified(WindowEvent e) {\/\/$/;"	m	class:TestJava2d.EventHandler
windowOpened	java/jdbc/src/examples/TestJava2d.java	/^        public void windowOpened(WindowEvent e) {\/\/$/;"	m	class:TestJava2d.EventHandler
window_conn	loader/shp2pgsql-gui.c	/^static GtkWidget *window_conn = NULL;$/;"	v	file:
window_main	loader/shp2pgsql-gui.c	/^static GtkWidget *window_main = NULL;$/;"	v	file:
wkb	liblwgeom/lwin_wkb.c	/^	const uint8_t *wkb; \/* Points to start of WKB *\/$/;"	m	struct:__anon24	file:
wkb_in_suite	liblwgeom/cunit/cu_in_wkb.c	/^CU_SuiteInfo wkb_in_suite = {"WKB In Suite",  init_wkb_in_suite,  clean_wkb_in_suite, wkb_in_tests};$/;"	v
wkb_in_tests	liblwgeom/cunit/cu_in_wkb.c	/^CU_TestInfo wkb_in_tests[] =$/;"	v
wkb_out_suite	liblwgeom/cunit/cu_out_wkb.c	/^CU_SuiteInfo wkb_out_suite = {"WKB Out Suite",  init_wkb_out_suite,  clean_wkb_out_suite, wkb_out_tests};$/;"	v
wkb_out_tests	liblwgeom/cunit/cu_out_wkb.c	/^CU_TestInfo wkb_out_tests[] =$/;"	v
wkb_parse_state	liblwgeom/lwin_wkb.c	/^} wkb_parse_state;$/;"	t	typeref:struct:__anon24	file:
wkb_parse_state_check	liblwgeom/lwin_wkb.c	/^static inline void wkb_parse_state_check(wkb_parse_state *s, size_t next)$/;"	f	file:
wkb_size	liblwgeom/lwin_wkb.c	/^	size_t wkb_size; \/* Expected size of WKB *\/$/;"	m	struct:__anon24	file:
wkb_swap_bytes	liblwgeom/lwout_twkb.c	/^static inline int wkb_swap_bytes(uint8_t variant)$/;"	f	file:
wkb_swap_bytes	liblwgeom/lwout_wkb.c	/^static inline int wkb_swap_bytes(uint8_t variant)$/;"	f	file:
wkblify	raster/scripts/python/raster2pgsql.py	/^def wkblify(fmt, data):$/;"	f
wkblify_band	raster/scripts/python/raster2pgsql.py	/^def wkblify_band(options, band, level, xoff, yoff, read_block_size, block_size, infile, bandidx):$/;"	f
wkblify_band_header	raster/scripts/python/raster2pgsql.py	/^def wkblify_band_header(options, band):$/;"	f
wkblify_raster	raster/scripts/python/raster2pgsql.py	/^def wkblify_raster(options, infile, i, previous_gt = None):$/;"	f
wkblify_raster_header	raster/scripts/python/raster2pgsql.py	/^def wkblify_raster_header(options, ds, level, ulp, xsize = None, ysize = None):$/;"	f
wkblify_raster_level	raster/scripts/python/raster2pgsql.py	/^def wkblify_raster_level(options, ds, level, band_range, infile, i):$/;"	f
wkt_dimensionality	liblwgeom/lwin_wkt.c	/^static uint8_t wkt_dimensionality(char *dimensionality)$/;"	f	file:
wkt_in_suite	liblwgeom/cunit/cu_in_wkt.c	/^CU_SuiteInfo wkt_in_suite = {"WKT In Suite",  init_wkt_in_suite,  clean_wkt_in_suite, wkt_in_tests};$/;"	v
wkt_in_tests	liblwgeom/cunit/cu_in_wkt.c	/^CU_TestInfo wkt_in_tests[] =$/;"	v
wkt_lexer_close	liblwgeom/lwin_wkt_lex.c	/^void wkt_lexer_close() $/;"	f
wkt_lexer_init	liblwgeom/lwin_wkt_lex.c	/^void wkt_lexer_init(char *src) $/;"	f
wkt_lexer_read_srid	liblwgeom/lwin_wkt.c	/^int wkt_lexer_read_srid(char *str)$/;"	f
wkt_lexer_unknown	liblwgeom/lwin_wkt_lex.c	/^static void wkt_lexer_unknown() $/;"	f	file:
wkt_out_suite	liblwgeom/cunit/cu_out_wkt.c	/^CU_SuiteInfo wkt_out_suite = {"WKT Out Suite",  init_wkt_out_suite,  clean_wkt_out_suite, wkt_out_tests};$/;"	v
wkt_out_tests	liblwgeom/cunit/cu_out_wkt.c	/^CU_TestInfo wkt_out_tests[] =$/;"	v
wkt_parser_circularstring_new	liblwgeom/lwin_wkt.c	/^LWGEOM* wkt_parser_circularstring_new(POINTARRAY *pa, char *dimensionality)$/;"	f
wkt_parser_collection_add_geom	liblwgeom/lwin_wkt.c	/^LWGEOM* wkt_parser_collection_add_geom(LWGEOM *col, LWGEOM *geom)$/;"	f
wkt_parser_collection_finalize	liblwgeom/lwin_wkt.c	/^LWGEOM* wkt_parser_collection_finalize(int lwtype, LWGEOM *col, char *dimensionality) $/;"	f
wkt_parser_collection_new	liblwgeom/lwin_wkt.c	/^LWGEOM* wkt_parser_collection_new(LWGEOM *geom) $/;"	f
wkt_parser_compound_add_geom	liblwgeom/lwin_wkt.c	/^LWGEOM* wkt_parser_compound_add_geom(LWGEOM *col, LWGEOM *geom)$/;"	f
wkt_parser_coord_2	liblwgeom/lwin_wkt.c	/^POINT wkt_parser_coord_2(double c1, double c2)$/;"	f
wkt_parser_coord_3	liblwgeom/lwin_wkt.c	/^POINT wkt_parser_coord_3(double c1, double c2, double c3)$/;"	f
wkt_parser_coord_4	liblwgeom/lwin_wkt.c	/^POINT wkt_parser_coord_4(double c1, double c2, double c3, double c4)$/;"	f
wkt_parser_curvepolygon_add_ring	liblwgeom/lwin_wkt.c	/^LWGEOM* wkt_parser_curvepolygon_add_ring(LWGEOM *poly, LWGEOM *ring)$/;"	f
wkt_parser_curvepolygon_finalize	liblwgeom/lwin_wkt.c	/^LWGEOM* wkt_parser_curvepolygon_finalize(LWGEOM *poly, char *dimensionality)$/;"	f
wkt_parser_curvepolygon_new	liblwgeom/lwin_wkt.c	/^LWGEOM* wkt_parser_curvepolygon_new(LWGEOM *ring) $/;"	f
wkt_parser_geometry_new	liblwgeom/lwin_wkt.c	/^void wkt_parser_geometry_new(LWGEOM *geom, int srid)$/;"	f
wkt_parser_linestring_new	liblwgeom/lwin_wkt.c	/^LWGEOM* wkt_parser_linestring_new(POINTARRAY *pa, char *dimensionality)$/;"	f
wkt_parser_point_new	liblwgeom/lwin_wkt.c	/^LWGEOM* wkt_parser_point_new(POINTARRAY *pa, char *dimensionality)$/;"	f
wkt_parser_polygon_add_ring	liblwgeom/lwin_wkt.c	/^LWGEOM* wkt_parser_polygon_add_ring(LWGEOM *poly, POINTARRAY *pa, char dimcheck)$/;"	f
wkt_parser_polygon_finalize	liblwgeom/lwin_wkt.c	/^LWGEOM* wkt_parser_polygon_finalize(LWGEOM *poly, char *dimensionality)$/;"	f
wkt_parser_polygon_new	liblwgeom/lwin_wkt.c	/^LWGEOM* wkt_parser_polygon_new(POINTARRAY *pa, char dimcheck)$/;"	f
wkt_parser_ptarray_add_coord	liblwgeom/lwin_wkt.c	/^POINTARRAY* wkt_parser_ptarray_add_coord(POINTARRAY *pa, POINT p)$/;"	f
wkt_parser_ptarray_new	liblwgeom/lwin_wkt.c	/^POINTARRAY* wkt_parser_ptarray_new(POINT p)$/;"	f
wkt_parser_set_dims	liblwgeom/lwin_wkt.c	/^static int wkt_parser_set_dims(LWGEOM *geom, uint8_t flags)$/;"	f	file:
wkt_parser_triangle_new	liblwgeom/lwin_wkt.c	/^LWGEOM* wkt_parser_triangle_new(POINTARRAY *pa, char *dimensionality)$/;"	f
wkt_pointarray_dimensionality	liblwgeom/lwin_wkt.c	/^static int wkt_pointarray_dimensionality(POINTARRAY *pa, uint8_t flags)$/;"	f	file:
wkt_yy_buf_state	liblwgeom/lwin_wkt_lex.c	/^static YY_BUFFER_STATE wkt_yy_buf_state; $/;"	v	file:
wkt_yy_create_buffer	liblwgeom/lwin_wkt_lex.c	/^    YY_BUFFER_STATE wkt_yy_create_buffer  (FILE * file, int  size )$/;"	f
wkt_yy_delete_buffer	liblwgeom/lwin_wkt_lex.c	/^    void wkt_yy_delete_buffer (YY_BUFFER_STATE  b )$/;"	f
wkt_yy_flex_debug	liblwgeom/lwin_wkt_lex.c	/^int wkt_yy_flex_debug = 0;$/;"	v
wkt_yy_flush_buffer	liblwgeom/lwin_wkt_lex.c	/^    void wkt_yy_flush_buffer (YY_BUFFER_STATE  b )$/;"	f
wkt_yy_init_buffer	liblwgeom/lwin_wkt_lex.c	/^    static void wkt_yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	f	file:
wkt_yy_load_buffer_state	liblwgeom/lwin_wkt_lex.c	/^static void wkt_yy_load_buffer_state  (void)$/;"	f	file:
wkt_yy_scan_buffer	liblwgeom/lwin_wkt_lex.c	/^YY_BUFFER_STATE wkt_yy_scan_buffer  (char * base, yy_size_t  size )$/;"	f
wkt_yy_scan_bytes	liblwgeom/lwin_wkt_lex.c	/^YY_BUFFER_STATE wkt_yy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len )$/;"	f
wkt_yy_scan_string	liblwgeom/lwin_wkt_lex.c	/^YY_BUFFER_STATE wkt_yy_scan_string (yyconst char * yystr )$/;"	f
wkt_yy_switch_to_buffer	liblwgeom/lwin_wkt_lex.c	/^    void wkt_yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )$/;"	f
wkt_yyalloc	liblwgeom/lwin_wkt_lex.c	/^void *wkt_yyalloc (yy_size_t  size )$/;"	f
wkt_yydebug	liblwgeom/lwin_wkt_parse.c	/^int wkt_yydebug = 0;$/;"	v
wkt_yyensure_buffer_stack	liblwgeom/lwin_wkt_lex.c	/^static void wkt_yyensure_buffer_stack (void)$/;"	f	file:
wkt_yyerror	liblwgeom/lwin_wkt_parse.c	/^void wkt_yyerror(const char *str)$/;"	f
wkt_yyfree	liblwgeom/lwin_wkt_lex.c	/^void wkt_yyfree (void * ptr )$/;"	f
wkt_yyget_debug	liblwgeom/lwin_wkt_lex.c	/^int wkt_yyget_debug  (void)$/;"	f
wkt_yyget_in	liblwgeom/lwin_wkt_lex.c	/^FILE *wkt_yyget_in  (void)$/;"	f
wkt_yyget_leng	liblwgeom/lwin_wkt_lex.c	/^yy_size_t wkt_yyget_leng  (void)$/;"	f
wkt_yyget_lineno	liblwgeom/lwin_wkt_lex.c	/^int wkt_yyget_lineno  (void)$/;"	f
wkt_yyget_out	liblwgeom/lwin_wkt_lex.c	/^FILE *wkt_yyget_out  (void)$/;"	f
wkt_yyget_text	liblwgeom/lwin_wkt_lex.c	/^char *wkt_yyget_text  (void)$/;"	f
wkt_yyin	liblwgeom/lwin_wkt_lex.c	/^FILE *wkt_yyin = (FILE *) 0, *wkt_yyout = (FILE *) 0;$/;"	v
wkt_yyleng	liblwgeom/lwin_wkt_lex.c	/^yy_size_t wkt_yyleng;$/;"	v
wkt_yylex_destroy	liblwgeom/lwin_wkt_lex.c	/^int wkt_yylex_destroy  (void)$/;"	f
wkt_yylineno	liblwgeom/lwin_wkt_lex.c	/^int wkt_yylineno = 1;$/;"	v
wkt_yyout	liblwgeom/lwin_wkt_lex.c	/^FILE *wkt_yyin = (FILE *) 0, *wkt_yyout = (FILE *) 0;$/;"	v
wkt_yypop_buffer_state	liblwgeom/lwin_wkt_lex.c	/^void wkt_yypop_buffer_state (void)$/;"	f
wkt_yypush_buffer_state	liblwgeom/lwin_wkt_lex.c	/^void wkt_yypush_buffer_state (YY_BUFFER_STATE new_buffer )$/;"	f
wkt_yyrealloc	liblwgeom/lwin_wkt_lex.c	/^void *wkt_yyrealloc  (void * ptr, yy_size_t  size )$/;"	f
wkt_yyrestart	liblwgeom/lwin_wkt_lex.c	/^    void wkt_yyrestart  (FILE * input_file )$/;"	f
wkt_yyset_debug	liblwgeom/lwin_wkt_lex.c	/^void wkt_yyset_debug (int  bdebug )$/;"	f
wkt_yyset_in	liblwgeom/lwin_wkt_lex.c	/^void wkt_yyset_in (FILE *  in_str )$/;"	f
wkt_yyset_lineno	liblwgeom/lwin_wkt_lex.c	/^void wkt_yyset_lineno (int  line_number )$/;"	f
wkt_yyset_out	liblwgeom/lwin_wkt_lex.c	/^void wkt_yyset_out (FILE *  out_str )$/;"	f
wkt_yytext	liblwgeom/lwin_wkt_lex.c	/^char *wkt_yytext;$/;"	v
wkt_yywrap	liblwgeom/lwin_wkt_lex.c	354;"	d	file:
wmstest	regress/legacy.sql	/^CREATE TABLE wmstest ( id INTEGER );$/;"	t
wmstest	regress/sfcgal/legacy.sql	/^CREATE TABLE public.wmstest ( id INTEGER );$/;"	t
wmstest	regress/sfcgal/wmsservers.sql	/^CREATE TABLE wmstest ( id INTEGER, pt GEOMETRY(Polygon,4326) );$/;"	t
wmstest	regress/wmsservers.sql	/^CREATE TABLE wmstest ( id INTEGER, pt GEOMETRY(Polygon,4326) );$/;"	t
wmstest.id	regress/legacy.sql	/^CREATE TABLE wmstest ( id INTEGER );$/;"	F
wmstest.id	regress/sfcgal/legacy.sql	/^CREATE TABLE public.wmstest ( id INTEGER );$/;"	F
wmstest.id	regress/sfcgal/wmsservers.sql	/^CREATE TABLE wmstest ( id INTEGER, pt GEOMETRY(Polygon,4326) );$/;"	F
wmstest.id	regress/wmsservers.sql	/^CREATE TABLE wmstest ( id INTEGER, pt GEOMETRY(Polygon,4326) );$/;"	F
wmstest.pt	regress/sfcgal/wmsservers.sql	/^CREATE TABLE wmstest ( id INTEGER, pt GEOMETRY(Polygon,4326) );$/;"	F
wmstest.pt	regress/wmsservers.sql	/^CREATE TABLE wmstest ( id INTEGER, pt GEOMETRY(Polygon,4326) );$/;"	F
wmstest.wmstest_geomidx	regress/legacy.sql	/^CREATE INDEX wmstest_geomidx ON wmstest using gist ( pt );$/;"	i
wmstest.wmstest_geomidx	regress/sfcgal/legacy.sql	/^CREATE INDEX wmstest_geomidx ON wmstest using gist ( pt );$/;"	i
wmstest.wmstest_geomidx	regress/sfcgal/wmsservers.sql	/^CREATE INDEX wmstest_geomidx ON wmstest using gist ( pt );$/;"	i
wmstest.wmstest_geomidx	regress/wmsservers.sql	/^CREATE INDEX wmstest_geomidx ON wmstest using gist ( pt );$/;"	i
wopts	raster/rt_core/rt_warp.c	/^	GDALWarpOptions *wopts;$/;"	m	struct:_rti_warp_arg_t	file:
word	liblwgeom/lwgeom_api.c	/^	uint32_t word;$/;"	m	union:__anon28	file:
writeBinary	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    public byte[] writeBinary(Geometry geom) {$/;"	m	class:JtsBinaryWriter
writeBinary	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    public byte[] writeBinary(Geometry geom, byte REP) {$/;"	m	class:JtsBinaryWriter
writeBinary	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    public synchronized byte[] writeBinary(Geometry geom) {$/;"	m	class:BinaryWriter
writeBinary	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    public synchronized byte[] writeBinary(Geometry geom, byte REP) {$/;"	m	class:BinaryWriter
writeCollection	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    private void writeCollection(GeometryCollection geom, ValueSetter dest) {$/;"	m	class:JtsBinaryWriter	file:
writeCollection	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    private void writeCollection(GeometryCollection geom, ValueSetter dest) {$/;"	m	class:BinaryWriter	file:
writeCoordinates	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    private void writeCoordinates(CoordinateSequence seq, int dims, ValueSetter dest) {$/;"	m	class:JtsBinaryWriter	file:
writeGeometry	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    protected void writeGeometry(Geometry geom, ValueSetter dest) {$/;"	m	class:JtsBinaryWriter
writeGeometry	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    protected void writeGeometry(Geometry geom, ValueSetter dest) {$/;"	m	class:BinaryWriter
writeGeometryArray	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    private void writeGeometryArray(Geometry geom, ValueSetter dest) {$/;"	m	class:JtsBinaryWriter	file:
writeGeometryArray	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    private void writeGeometryArray(Geometry[] container, ValueSetter dest) {$/;"	m	class:BinaryWriter	file:
writeHexed	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    public String writeHexed(Geometry geom) {$/;"	m	class:JtsBinaryWriter
writeHexed	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    public String writeHexed(Geometry geom, byte REP) {$/;"	m	class:JtsBinaryWriter
writeHexed	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    public synchronized String writeHexed(Geometry geom) {$/;"	m	class:BinaryWriter
writeHexed	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    public synchronized String writeHexed(Geometry geom, byte REP) {$/;"	m	class:BinaryWriter
writeLineString	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    private void writeLineString(LineString geom, ValueSetter dest) {$/;"	m	class:JtsBinaryWriter	file:
writeLineString	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    private void writeLineString(LineString geom, ValueSetter dest) {$/;"	m	class:BinaryWriter	file:
writeLinearRing	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    private void writeLinearRing(LinearRing geom, ValueSetter dest) {$/;"	m	class:BinaryWriter	file:
writeMultiLineString	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    private void writeMultiLineString(MultiLineString geom, ValueSetter dest) {$/;"	m	class:JtsBinaryWriter	file:
writeMultiLineString	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    private void writeMultiLineString(MultiLineString geom, ValueSetter dest) {$/;"	m	class:BinaryWriter	file:
writeMultiPoint	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    private void writeMultiPoint(MultiPoint geom, ValueSetter dest) {$/;"	m	class:JtsBinaryWriter	file:
writeMultiPoint	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    private void writeMultiPoint(MultiPoint geom, ValueSetter dest) {$/;"	m	class:BinaryWriter	file:
writeMultiPolygon	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    private void writeMultiPolygon(MultiPolygon geom, ValueSetter dest) {$/;"	m	class:JtsBinaryWriter	file:
writeMultiPolygon	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    private void writeMultiPolygon(MultiPolygon geom, ValueSetter dest) {$/;"	m	class:BinaryWriter	file:
writePoint	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    private void writePoint(Point geom, ValueSetter dest) {$/;"	m	class:JtsBinaryWriter	file:
writePoint	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    private void writePoint(Point geom, ValueSetter dest) {$/;"	m	class:BinaryWriter	file:
writePointArray	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    private void writePointArray(Point[] geom, ValueSetter dest) {$/;"	m	class:BinaryWriter	file:
writePolygon	java/jdbc/jtssrc/org/postgis/jts/JtsBinaryWriter.java	/^    private void writePolygon(Polygon geom, ValueSetter dest) {$/;"	m	class:JtsBinaryWriter	file:
writePolygon	java/jdbc/src/org/postgis/binary/BinaryWriter.java	/^    private void writePolygon(Polygon geom, ValueSetter dest) {$/;"	m	class:BinaryWriter	file:
write_defn	utils/svn_repo_revision.pl	/^sub write_defn {$/;"	s
write_uint16	raster/rt_core/rt_serialize.c	/^write_uint16(uint8_t** to, uint8_t littleEndian, uint16_t v) {$/;"	f
x	java/jdbc/src/org/postgis/Point.java	/^    public double x;$/;"	f	class:Point
x	liblwgeom/lwin_wkt.h	/^	double x;$/;"	m	struct:__anon25
x	liblwgeom/measures3d.h	/^	double	x,y,z;  $/;"	m	struct:__anon32
x	loader/shp2pgsql-core.c	/^	double x, y, z, m;$/;"	m	struct:struct_point	file:
x	raster/rt_core/librtcore.h	/^	int x; \/* column *\/$/;"	m	struct:rt_pixel_t
x	raster/rt_core/rt_mapalgebra.c	/^		uint16_t x;$/;"	m	struct:_rti_iterator_arg_t::__anon46	file:
x	raster/scripts/python/pixval.py	/^x = int(sys.argv[3])$/;"	v
x_to_z	liblwgeom/lwgeodetic.c	/^void x_to_z(POINT3D *p)$/;"	f
xmax	liblwgeom/lwtree.h	/^	double xmax;$/;"	m	struct:rect_node
xmax	libpgcommon/gserialized_gist.h	/^	float xmin, xmax, ymin, ymax;$/;"	m	struct:__anon4
xmin	liblwgeom/lwtree.h	/^	double xmin;$/;"	m	struct:rect_node
xmin	libpgcommon/gserialized_gist.h	/^	float xmin, xmax, ymin, ymax;$/;"	m	struct:__anon4
xsize	postgis/lwgeom_functions_analytic.c	/^	double xsize;$/;"	m	struct:gridspec_t	file:
xsize	raster/scripts/python/window.py	/^xsize = ds.RasterXSize$/;"	v
y	java/jdbc/src/org/postgis/Point.java	/^    public double y;$/;"	f	class:Point
y	liblwgeom/lwin_wkt.h	/^	double y;$/;"	m	struct:__anon25
y	liblwgeom/measures3d.h	/^	double	x,y,z;  $/;"	m	struct:__anon32
y	loader/shp2pgsql-core.c	/^	double x, y, z, m;$/;"	m	struct:struct_point	file:
y	raster/rt_core/librtcore.h	/^	int y; \/* line *\/$/;"	m	struct:rt_pixel_t
y	raster/rt_core/rt_mapalgebra.c	/^		uint16_t y;$/;"	m	struct:_rti_iterator_arg_t::__anon46	file:
y	raster/scripts/python/pixval.py	/^y = int(sys.argv[4])$/;"	v
y_to_z	liblwgeom/lwgeodetic.c	/^void y_to_z(POINT3D *p)$/;"	f
ymax	liblwgeom/lwtree.h	/^	double ymax;$/;"	m	struct:rect_node
ymax	libpgcommon/gserialized_gist.h	/^	float xmin, xmax, ymin, ymax;$/;"	m	struct:__anon4
ymin	liblwgeom/lwtree.h	/^	double ymin;$/;"	m	struct:rect_node
ymin	libpgcommon/gserialized_gist.h	/^	float xmin, xmax, ymin, ymax;$/;"	m	struct:__anon4
ysize	postgis/lwgeom_functions_analytic.c	/^	double ysize;$/;"	m	struct:gridspec_t	file:
ysize	raster/scripts/python/window.py	/^ysize = ds.RasterYSize$/;"	v
yy_accept	liblwgeom/lwin_wkt_lex.c	/^static yyconst flex_int16_t yy_accept[172] =$/;"	v	file:
yy_at_bol	liblwgeom/lwin_wkt_lex.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:
yy_base	liblwgeom/lwin_wkt_lex.c	/^static yyconst flex_int16_t yy_base[172] =$/;"	v	file:
yy_bs_column	liblwgeom/lwin_wkt_lex.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_lineno	liblwgeom/lwin_wkt_lex.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_pos	liblwgeom/lwin_wkt_lex.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_size	liblwgeom/lwin_wkt_lex.c	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:
yy_buffer_stack	liblwgeom/lwin_wkt_lex.c	/^static YY_BUFFER_STATE * yy_buffer_stack = 0; \/**< Stack as an array. *\/$/;"	v	file:
yy_buffer_stack_max	liblwgeom/lwin_wkt_lex.c	/^static size_t yy_buffer_stack_max = 0; \/**< capacity of stack. *\/$/;"	v	file:
yy_buffer_stack_top	liblwgeom/lwin_wkt_lex.c	/^static size_t yy_buffer_stack_top = 0; \/**< index of top of stack. *\/$/;"	v	file:
yy_buffer_state	liblwgeom/lwin_wkt_lex.c	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_status	liblwgeom/lwin_wkt_lex.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:
yy_c_buf_p	liblwgeom/lwin_wkt_lex.c	/^static char *yy_c_buf_p = (char *) 0;$/;"	v	file:
yy_ch_buf	liblwgeom/lwin_wkt_lex.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_chk	liblwgeom/lwin_wkt_lex.c	/^static yyconst flex_int16_t yy_chk[419] =$/;"	v	file:
yy_create_buffer	liblwgeom/lwin_wkt_lex.c	9;"	d	file:
yy_def	liblwgeom/lwin_wkt_lex.c	/^static yyconst flex_int16_t yy_def[172] =$/;"	v	file:
yy_delete_buffer	liblwgeom/lwin_wkt_lex.c	10;"	d	file:
yy_did_buffer_switch_on_eof	liblwgeom/lwin_wkt_lex.c	/^static int yy_did_buffer_switch_on_eof;$/;"	v	file:
yy_ec	liblwgeom/lwin_wkt_lex.c	/^static yyconst flex_int32_t yy_ec[256] =$/;"	v	file:
yy_fatal_error	liblwgeom/lwin_wkt_lex.c	/^static void yy_fatal_error (yyconst char* msg )$/;"	f	file:
yy_fill_buffer	liblwgeom/lwin_wkt_lex.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_flex_debug	liblwgeom/lwin_wkt_lex.c	11;"	d	file:
yy_flex_strlen	liblwgeom/lwin_wkt_lex.c	/^static int yy_flex_strlen (yyconst char * s )$/;"	f	file:
yy_flex_strncpy	liblwgeom/lwin_wkt_lex.c	/^static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )$/;"	f	file:
yy_flush_buffer	liblwgeom/lwin_wkt_lex.c	13;"	d	file:
yy_get_next_buffer	liblwgeom/lwin_wkt_lex.c	/^static int yy_get_next_buffer (void)$/;"	f	file:
yy_get_previous_state	liblwgeom/lwin_wkt_lex.c	/^    static yy_state_type yy_get_previous_state (void)$/;"	f	file:
yy_hold_char	liblwgeom/lwin_wkt_lex.c	/^static char yy_hold_char;$/;"	v	file:
yy_init	liblwgeom/lwin_wkt_lex.c	/^static int yy_init = 0;		\/* whether we need to initialize *\/$/;"	v	file:
yy_init_buffer	liblwgeom/lwin_wkt_lex.c	12;"	d	file:
yy_init_globals	liblwgeom/lwin_wkt_lex.c	/^static int yy_init_globals (void)$/;"	f	file:
yy_input_file	liblwgeom/lwin_wkt_lex.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:
yy_is_interactive	liblwgeom/lwin_wkt_lex.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:
yy_is_our_buffer	liblwgeom/lwin_wkt_lex.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_last_accepting_cpos	liblwgeom/lwin_wkt_lex.c	/^static char *yy_last_accepting_cpos;$/;"	v	file:
yy_last_accepting_state	liblwgeom/lwin_wkt_lex.c	/^static yy_state_type yy_last_accepting_state;$/;"	v	file:
yy_load_buffer_state	liblwgeom/lwin_wkt_lex.c	14;"	d	file:
yy_meta	liblwgeom/lwin_wkt_lex.c	/^static yyconst flex_int32_t yy_meta[53] =$/;"	v	file:
yy_n_chars	liblwgeom/lwin_wkt_lex.c	/^	yy_size_t yy_n_chars;$/;"	m	struct:yy_buffer_state	file:
yy_n_chars	liblwgeom/lwin_wkt_lex.c	/^static yy_size_t yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	file:
yy_new_buffer	liblwgeom/lwin_wkt_lex.c	328;"	d	file:
yy_nxt	liblwgeom/lwin_wkt_lex.c	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:
yy_nxt	liblwgeom/lwin_wkt_lex.c	/^static yyconst flex_int16_t yy_nxt[419] =$/;"	v	file:
yy_reduce_print	liblwgeom/lwin_wkt_parse.c	/^yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule)$/;"	f	file:
yy_set_bol	liblwgeom/lwin_wkt_lex.c	340;"	d	file:
yy_set_interactive	liblwgeom/lwin_wkt_lex.c	330;"	d	file:
yy_size_t	liblwgeom/lwin_wkt_lex.c	/^typedef size_t yy_size_t;$/;"	t	file:
yy_stack_print	liblwgeom/lwin_wkt_parse.c	/^yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)$/;"	f	file:
yy_start	liblwgeom/lwin_wkt_lex.c	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	file:
yy_state_type	liblwgeom/lwin_wkt_lex.c	/^typedef int yy_state_type;$/;"	t	file:
yy_switch_to_buffer	liblwgeom/lwin_wkt_lex.c	15;"	d	file:
yy_symbol_print	liblwgeom/lwin_wkt_parse.c	/^yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp)$/;"	f	file:
yy_symbol_value_print	liblwgeom/lwin_wkt_parse.c	/^yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp)$/;"	f	file:
yy_trans_info	liblwgeom/lwin_wkt_lex.c	/^struct yy_trans_info$/;"	s	file:
yy_try_NUL_trans	liblwgeom/lwin_wkt_lex.c	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )$/;"	f	file:
yy_verify	liblwgeom/lwin_wkt_lex.c	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:
yyalloc	liblwgeom/lwin_wkt_lex.c	24;"	d	file:
yyalloc	liblwgeom/lwin_wkt_parse.c	/^union yyalloc$/;"	u	file:
yychar	liblwgeom/lwin_wkt_parse.c	/^int yychar;$/;"	v
yychar	liblwgeom/lwin_wkt_parse.c	69;"	d	file:
yycheck	liblwgeom/lwin_wkt_parse.c	/^static const yytype_uint8 yycheck[] =$/;"	v	file:
yyclearin	liblwgeom/lwin_wkt_parse.c	934;"	d	file:
yyconst	liblwgeom/lwin_wkt_lex.c	125;"	d	file:
yyconst	liblwgeom/lwin_wkt_lex.c	127;"	d	file:
yydebug	liblwgeom/lwin_wkt_parse.c	/^int yydebug;$/;"	v
yydebug	liblwgeom/lwin_wkt_parse.c	70;"	d	file:
yydefact	liblwgeom/lwin_wkt_parse.c	/^static const yytype_uint8 yydefact[] =$/;"	v	file:
yydefgoto	liblwgeom/lwin_wkt_parse.c	/^static const yytype_int16 yydefgoto[] =$/;"	v	file:
yydestruct	liblwgeom/lwin_wkt_parse.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp)$/;"	f	file:
yyerrok	liblwgeom/lwin_wkt_parse.c	933;"	d	file:
yyerror	liblwgeom/lwin_wkt_parse.c	67;"	d	file:
yyfree	liblwgeom/lwin_wkt_lex.c	26;"	d	file:
yyin	liblwgeom/lwin_wkt_lex.c	16;"	d	file:
yyinput	liblwgeom/lwin_wkt_lex.c	/^    static int yyinput (void)$/;"	f	file:
yyleng	liblwgeom/lwin_wkt_lex.c	17;"	d	file:
yyless	liblwgeom/lwin_wkt_lex.c	1848;"	d	file:
yyless	liblwgeom/lwin_wkt_lex.c	1849;"	d	file:
yyless	liblwgeom/lwin_wkt_lex.c	191;"	d	file:
yylex	liblwgeom/lwin_wkt_lex.c	18;"	d	file:
yylex	liblwgeom/lwin_wkt_parse.c	66;"	d	file:
yylineno	liblwgeom/lwin_wkt_lex.c	19;"	d	file:
yylloc	liblwgeom/lwin_wkt_parse.c	/^YYLTYPE yylloc;$/;"	v
yylloc	liblwgeom/lwin_wkt_parse.c	72;"	d	file:
yyls_alloc	liblwgeom/lwin_wkt_parse.c	/^  YYLTYPE yyls_alloc;$/;"	m	union:yyalloc	file:
yyltype	liblwgeom/lwin_wkt_parse.c	284;"	d	file:
yyltype	liblwgeom/lwin_wkt_parse.h	127;"	d
yylval	liblwgeom/lwin_wkt_parse.c	/^YYSTYPE yylval;$/;"	v
yylval	liblwgeom/lwin_wkt_parse.c	68;"	d	file:
yymore	liblwgeom/lwin_wkt_lex.c	615;"	d	file:
yynerrs	liblwgeom/lwin_wkt_parse.c	/^int yynerrs;$/;"	v
yynerrs	liblwgeom/lwin_wkt_parse.c	71;"	d	file:
yyout	liblwgeom/lwin_wkt_lex.c	20;"	d	file:
yypact	liblwgeom/lwin_wkt_parse.c	/^static const yytype_int16 yypact[] =$/;"	v	file:
yypact_value_is_default	liblwgeom/lwin_wkt_parse.c	860;"	d	file:
yyparse	liblwgeom/lwin_wkt_parse.c	/^yyparse (void *YYPARSE_PARAM)$/;"	f
yyparse	liblwgeom/lwin_wkt_parse.c	65;"	d	file:
yypgoto	liblwgeom/lwin_wkt_parse.c	/^static const yytype_int16 yypgoto[] =$/;"	v	file:
yyprhs	liblwgeom/lwin_wkt_parse.c	/^static const yytype_uint16 yyprhs[] =$/;"	v	file:
yyr1	liblwgeom/lwin_wkt_parse.c	/^static const yytype_uint8 yyr1[] =$/;"	v	file:
yyr2	liblwgeom/lwin_wkt_parse.c	/^static const yytype_uint8 yyr2[] =$/;"	v	file:
yyrealloc	liblwgeom/lwin_wkt_lex.c	25;"	d	file:
yyrestart	liblwgeom/lwin_wkt_lex.c	21;"	d	file:
yyrhs	liblwgeom/lwin_wkt_parse.c	/^static const yytype_int8 yyrhs[] =$/;"	v	file:
yyrline	liblwgeom/lwin_wkt_parse.c	/^static const yytype_uint16 yyrline[] =$/;"	v	file:
yyss_alloc	liblwgeom/lwin_wkt_parse.c	/^  yytype_int16 yyss_alloc;$/;"	m	union:yyalloc	file:
yystos	liblwgeom/lwin_wkt_parse.c	/^static const yytype_uint8 yystos[] =$/;"	v	file:
yystpcpy	liblwgeom/lwin_wkt_parse.c	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	file:
yystpcpy	liblwgeom/lwin_wkt_parse.c	1245;"	d	file:
yystrlen	liblwgeom/lwin_wkt_parse.c	/^yystrlen (const char *yystr)$/;"	f	file:
yystrlen	liblwgeom/lwin_wkt_parse.c	1222;"	d	file:
yystype	liblwgeom/lwin_wkt_parse.c	272;"	d	file:
yystype	liblwgeom/lwin_wkt_parse.h	113;"	d
yysyntax_error	liblwgeom/lwin_wkt_parse.c	/^yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,$/;"	f	file:
yytable	liblwgeom/lwin_wkt_parse.c	/^static const yytype_uint16 yytable[] =$/;"	v	file:
yytable_value_is_error	liblwgeom/lwin_wkt_parse.c	863;"	d	file:
yyterminate	liblwgeom/lwin_wkt_lex.c	806;"	d	file:
yytext	liblwgeom/lwin_wkt_lex.c	22;"	d	file:
yytext_ptr	liblwgeom/lwin_wkt_lex.c	368;"	d	file:
yytname	liblwgeom/lwin_wkt_parse.c	/^static const char *const yytname[] =$/;"	v	file:
yytnamerr	liblwgeom/lwin_wkt_parse.c	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	file:
yytokentype	liblwgeom/lwin_wkt_parse.c	/^   enum yytokentype {$/;"	g	file:
yytokentype	liblwgeom/lwin_wkt_parse.h	/^   enum yytokentype {$/;"	g
yytoknum	liblwgeom/lwin_wkt_parse.c	/^static const yytype_uint16 yytoknum[] =$/;"	v	file:
yytranslate	liblwgeom/lwin_wkt_parse.c	/^static const yytype_uint8 yytranslate[] =$/;"	v	file:
yytype_int16	liblwgeom/lwin_wkt_parse.c	/^typedef YYTYPE_INT16 yytype_int16;$/;"	t	file:
yytype_int16	liblwgeom/lwin_wkt_parse.c	/^typedef short int yytype_int16;$/;"	t	file:
yytype_int8	liblwgeom/lwin_wkt_parse.c	/^typedef YYTYPE_INT8 yytype_int8;$/;"	t	file:
yytype_int8	liblwgeom/lwin_wkt_parse.c	/^typedef short int yytype_int8;$/;"	t	file:
yytype_int8	liblwgeom/lwin_wkt_parse.c	/^typedef signed char yytype_int8;$/;"	t	file:
yytype_uint16	liblwgeom/lwin_wkt_parse.c	/^typedef YYTYPE_UINT16 yytype_uint16;$/;"	t	file:
yytype_uint16	liblwgeom/lwin_wkt_parse.c	/^typedef unsigned short int yytype_uint16;$/;"	t	file:
yytype_uint8	liblwgeom/lwin_wkt_parse.c	/^typedef YYTYPE_UINT8 yytype_uint8;$/;"	t	file:
yytype_uint8	liblwgeom/lwin_wkt_parse.c	/^typedef unsigned char yytype_uint8;$/;"	t	file:
yyvs_alloc	liblwgeom/lwin_wkt_parse.c	/^  YYSTYPE yyvs_alloc;$/;"	m	union:yyalloc	file:
yywrap	liblwgeom/lwin_wkt_lex.c	23;"	d	file:
z	doc/html/jquery.js	/^(function(){var l=this,g,y=l.jQuery,p=l.$,o=l.jQuery=l.$=function(E,F){return new o.fn.init(E,F)},D=\/^[^<]*(<(.|\\s)+>)[^>]*$|^#([\\w-]+)$\/,f=\/^.[^:#\\[\\.,]*$\/;o.fn=o.prototype={init:function(E,H){E=E||document;if(E.nodeType){this[0]=E;this.length=1;this.context=E;return this}if(typeof E==="string"){var G=D.exec(E);if(G&&(G[1]||!H)){if(G[1]){E=o.clean([G[1]],H)}else{var I=document.getElementById(G[3]);if(I&&I.id!=G[3]){return o().find(E)}var F=o(I||[]);F.context=document;F.selector=E;return F}}else{return o(H).find(E)}}else{if(o.isFunction(E)){return o(document).ready(E)}}if(E.selector&&E.context){this.selector=E.selector;this.context=E.context}return this.setArray(o.isArray(E)?E:o.makeArray(E))},selector:"",jquery:"1.3.2",size:function(){return this.length},get:function(E){return E===g?Array.prototype.slice.call(this):this[E]},pushStack:function(F,H,E){var G=o(F);G.prevObject=this;G.context=this.context;if(H==="find"){G.selector=this.selector+(this.selector?" ":"")+E}else{if(H){G.selector=this.selector+"."+H+"("+E+")"}}return G},setArray:function(E){this.length=0;Array.prototype.push.apply(this,E);return this},each:function(F,E){return o.each(this,F,E)},index:function(E){return o.inArray(E&&E.jquery?E[0]:E,this)},attr:function(F,H,G){var E=F;if(typeof F==="string"){if(H===g){return this[0]&&o[G||"attr"](this[0],F)}else{E={};E[F]=H}}return this.each(function(I){for(F in E){o.attr(G?this.style:this,F,o.prop(this,E[F],G,I,F))}})},css:function(E,F){if((E=="width"||E=="height")&&parseFloat(F)<0){F=g}return this.attr(E,F,"curCSS")},text:function(F){if(typeof F!=="object"&&F!=null){return this.empty().append((this[0]&&this[0].ownerDocument||document).createTextNode(F))}var E="";o.each(F||this,function(){o.each(this.childNodes,function(){if(this.nodeType!=8){E+=this.nodeType!=1?this.nodeValue:o.fn.text([this])}})});return E},wrapAll:function(E){if(this[0]){var F=o(E,this[0].ownerDocument).clone();if(this[0].parentNode){F.insertBefore(this[0])}F.map(function(){var G=this;while(G.firstChild){G=G.firstChild}return G}).append(this)}return this},wrapInner:function(E){return this.each(function(){o(this).contents().wrapAll(E)})},wrap:function(E){return this.each(function(){o(this).wrapAll(E)})},append:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.appendChild(E)}})},prepend:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.insertBefore(E,this.firstChild)}})},before:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this)})},after:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this.nextSibling)})},end:function(){return this.prevObject||o([])},push:[].push,sort:[].sort,splice:[].splice,find:function(E){if(this.length===1){var F=this.pushStack([],"find",E);F.length=0;o.find(E,this[0],F);return F}else{return this.pushStack(o.unique(o.map(this,function(G){return o.find(E,G)})),"find",E)}},clone:function(G){var E=this.map(function(){if(!o.support.noCloneEvent&&!o.isXMLDoc(this)){var I=this.outerHTML;if(!I){var J=this.ownerDocument.createElement("div");J.appendChild(this.cloneNode(true));I=J.innerHTML}return o.clean([I.replace(\/ jQuery\\d+="(?:\\d+|null)"\/g,"").replace(\/^\\s*\/,"")])[0]}else{return this.cloneNode(true)}});if(G===true){var H=this.find("*").andSelf(),F=0;E.find("*").andSelf().each(function(){if(this.nodeName!==H[F].nodeName){return}var I=o.data(H[F],"events");for(var K in I){for(var J in I[K]){o.event.add(this,K,I[K][J],I[K][J].data)}}F++})}return E},filter:function(E){return this.pushStack(o.isFunction(E)&&o.grep(this,function(G,F){return E.call(G,F)})||o.multiFilter(E,o.grep(this,function(F){return F.nodeType===1})),"filter",E)},closest:function(E){var G=o.expr.match.POS.test(E)?o(E):null,F=0;return this.map(function(){var H=this;while(H&&H.ownerDocument){if(G?G.index(H)>-1:o(H).is(E)){o.data(H,"closest",F);return H}H=H.parentNode;F++}})},not:function(E){if(typeof E==="string"){if(f.test(E)){return this.pushStack(o.multiFilter(E,this,true),"not",E)}else{E=o.multiFilter(E,this)}}var F=E.length&&E[E.length-1]!==g&&!E.nodeType;return this.filter(function(){return F?o.inArray(this,E)<0:this!=E})},add:function(E){return this.pushStack(o.unique(o.merge(this.get(),typeof E==="string"?o(E):o.makeArray(E))))},is:function(E){return !!E&&o.multiFilter(E,this).length>0},hasClass:function(E){return !!E&&this.is("."+E)},val:function(K){if(K===g){var E=this[0];if(E){if(o.nodeName(E,"option")){return(E.attributes.value||{}).specified?E.value:E.text}if(o.nodeName(E,"select")){var I=E.selectedIndex,L=[],M=E.options,H=E.type=="select-one";if(I<0){return null}for(var F=H?I:0,J=H?I+1:M.length;F<J;F++){var G=M[F];if(G.selected){K=o(G).val();if(H){return K}L.push(K)}}return L}return(E.value||"").replace(\/\\r\/g,"")}return g}if(typeof K==="number"){K+=""}return this.each(function(){if(this.nodeType!=1){return}if(o.isArray(K)&&\/radio|checkbox\/.test(this.type)){this.checked=(o.inArray(this.value,K)>=0||o.inArray(this.name,K)>=0)}else{if(o.nodeName(this,"select")){var N=o.makeArray(K);o("option",this).each(function(){this.selected=(o.inArray(this.value,N)>=0||o.inArray(this.text,N)>=0)});if(!N.length){this.selectedIndex=-1}}else{this.value=K}}})},html:function(E){return E===g?(this[0]?this[0].innerHTML.replace(\/ jQuery\\d+="(?:\\d+|null)"\/g,""):null):this.empty().append(E)},replaceWith:function(E){return this.after(E).remove()},eq:function(E){return this.slice(E,+E+1)},slice:function(){return this.pushStack(Array.prototype.slice.apply(this,arguments),"slice",Array.prototype.slice.call(arguments).join(","))},map:function(E){return this.pushStack(o.map(this,function(G,F){return E.call(G,F,G)}))},andSelf:function(){return this.add(this.prevObject)},domManip:function(J,M,L){if(this[0]){var I=(this[0].ownerDocument||this[0]).createDocumentFragment(),F=o.clean(J,(this[0].ownerDocument||this[0]),I),H=I.firstChild;if(H){for(var G=0,E=this.length;G<E;G++){L.call(K(this[G],H),this.length>1||G>0?I.cloneNode(true):I)}}if(F){o.each(F,z)}}return this;function K(N,O){return M&&o.nodeName(N,"table")&&o.nodeName(O,"tr")?(N.getElementsByTagName("tbody")[0]||N.appendChild(N.ownerDocument.createElement("tbody"))):N}}};o.fn.init.prototype=o.fn;function z(E,F){if(F.src){o.ajax({url:F.src,async:false,dataType:"script"})}else{o.globalEval(F.text||F.textContent||F.innerHTML||"")}if(F.parentNode){F.parentNode.removeChild(F)}}function e(){return +new Date}o.extend=o.fn.extend=function(){var J=arguments[0]||{},H=1,I=arguments.length,E=false,G;if(typeof J==="boolean"){E=J;J=arguments[1]||{};H=2}if(typeof J!=="object"&&!o.isFunction(J)){J={}}if(I==H){J=this;--H}for(;H<I;H++){if((G=arguments[H])!=null){for(var F in G){var K=J[F],L=G[F];if(J===L){continue}if(E&&L&&typeof L==="object"&&!L.nodeType){J[F]=o.extend(E,K||(L.length!=null?[]:{}),L)}else{if(L!==g){J[F]=L}}}}}return J};var b=\/z-?index|font-?weight|opacity|zoom|line-?height\/i,q=document.defaultView||{},s=Object.prototype.toString;o.extend({noConflict:function(E){l.$=p;if(E){l.jQuery=y}return o},isFunction:function(E){return s.call(E)==="[object Function]"},isArray:function(E){return s.call(E)==="[object Array]"},isXMLDoc:function(E){return E.nodeType===9&&E.documentElement.nodeName!=="HTML"||!!E.ownerDocument&&o.isXMLDoc(E.ownerDocument)},globalEval:function(G){if(G&&\/\\S\/.test(G)){var F=document.getElementsByTagName("head")[0]||document.documentElement,E=document.createElement("script");E.type="text\/javascript";if(o.support.scriptEval){E.appendChild(document.createTextNode(G))}else{E.text=G}F.insertBefore(E,F.firstChild);F.removeChild(E)}},nodeName:function(F,E){return F.nodeName&&F.nodeName.toUpperCase()==E.toUpperCase()},each:function(G,K,F){var E,H=0,I=G.length;if(F){if(I===g){for(E in G){if(K.apply(G[E],F)===false){break}}}else{for(;H<I;){if(K.apply(G[H++],F)===false){break}}}}else{if(I===g){for(E in G){if(K.call(G[E],E,G[E])===false){break}}}else{for(var J=G[0];H<I&&K.call(J,H,J)!==false;J=G[++H]){}}}return G},prop:function(H,I,G,F,E){if(o.isFunction(I)){I=I.call(H,F)}return typeof I==="number"&&G=="curCSS"&&!b.test(E)?I+"px":I},className:{add:function(E,F){o.each((F||"").split(\/\\s+\/),function(G,H){if(E.nodeType==1&&!o.className.has(E.className,H)){E.className+=(E.className?" ":"")+H}})},remove:function(E,F){if(E.nodeType==1){E.className=F!==g?o.grep(E.className.split(\/\\s+\/),function(G){return !o.className.has(F,G)}).join(" "):""}},has:function(F,E){return F&&o.inArray(E,(F.className||F).toString().split(\/\\s+\/))>-1}},swap:function(H,G,I){var E={};for(var F in G){E[F]=H.style[F];H.style[F]=G[F]}I.call(H);for(var F in G){H.style[F]=E[F]}},css:function(H,F,J,E){if(F=="width"||F=="height"){var L,G={position:"absolute",visibility:"hidden",display:"block"},K=F=="width"?["Left","Right"]:["Top","Bottom"];function I(){L=F=="width"?H.offsetWidth:H.offsetHeight;if(E==="border"){return}o.each(K,function(){if(!E){L-=parseFloat(o.curCSS(H,"padding"+this,true))||0}if(E==="margin"){L+=parseFloat(o.curCSS(H,"margin"+this,true))||0}else{L-=parseFloat(o.curCSS(H,"border"+this+"Width",true))||0}})}if(H.offsetWidth!==0){I()}else{o.swap(H,G,I)}return Math.max(0,Math.round(L))}return o.curCSS(H,F,J)},curCSS:function(I,F,G){var L,E=I.style;if(F=="opacity"&&!o.support.opacity){L=o.attr(E,"opacity");return L==""?"1":L}if(F.match(\/float\/i)){F=w}if(!G&&E&&E[F]){L=E[F]}else{if(q.getComputedStyle){if(F.match(\/float\/i)){F="float"}F=F.replace(\/([A-Z])\/g,"-$1").toLowerCase();var M=q.getComputedStyle(I,null);if(M){L=M.getPropertyValue(F)}if(F=="opacity"&&L==""){L="1"}}else{if(I.currentStyle){var J=F.replace(\/\\-(\\w)\/g,function(N,O){return O.toUpperCase()});L=I.currentStyle[F]||I.currentStyle[J];if(!\/^\\d+(px)?$\/i.test(L)&&\/^\\d\/.test(L)){var H=E.left,K=I.runtimeStyle.left;I.runtimeStyle.left=I.currentStyle.left;E.left=L||0;L=E.pixelLeft+"px";E.left=H;I.runtimeStyle.left=K}}}}return L},clean:function(F,K,I){K=K||document;if(typeof K.createElement==="undefined"){K=K.ownerDocument||K[0]&&K[0].ownerDocument||document}if(!I&&F.length===1&&typeof F[0]==="string"){var H=\/^<(\\w+)\\s*\\\/?>$\/.exec(F[0]);if(H){return[K.createElement(H[1])]}}var G=[],E=[],L=K.createElement("div");o.each(F,function(P,S){if(typeof S==="number"){S+=""}if(!S){return}if(typeof S==="string"){S=S.replace(\/(<(\\w+)[^>]*?)\\\/>\/g,function(U,V,T){return T.match(\/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$\/i)?U:V+"><\/"+T+">"});var O=S.replace(\/^\\s+\/,"").substring(0,10).toLowerCase();var Q=!O.indexOf("<opt")&&[1,"<select multiple='multiple'>","<\/select>"]||!O.indexOf("<leg")&&[1,"<fieldset>","<\/fieldset>"]||O.match(\/^<(thead|tbody|tfoot|colg|cap)\/)&&[1,"<table>","<\/table>"]||!O.indexOf("<tr")&&[2,"<table><tbody>","<\/tbody><\/table>"]||(!O.indexOf("<td")||!O.indexOf("<th"))&&[3,"<table><tbody><tr>","<\/tr><\/tbody><\/table>"]||!O.indexOf("<col")&&[2,"<table><tbody><\/tbody><colgroup>","<\/colgroup><\/table>"]||!o.support.htmlSerialize&&[1,"div<div>","<\/div>"]||[0,"",""];L.innerHTML=Q[1]+S+Q[2];while(Q[0]--){L=L.lastChild}if(!o.support.tbody){var R=\/<tbody\/i.test(S),N=!O.indexOf("<table")&&!R?L.firstChild&&L.firstChild.childNodes:Q[1]=="<table>"&&!R?L.childNodes:[];for(var M=N.length-1;M>=0;--M){if(o.nodeName(N[M],"tbody")&&!N[M].childNodes.length){N[M].parentNode.removeChild(N[M])}}}if(!o.support.leadingWhitespace&&\/^\\s\/.test(S)){L.insertBefore(K.createTextNode(S.match(\/^\\s*\/)[0]),L.firstChild)}S=o.makeArray(L.childNodes)}if(S.nodeType){G.push(S)}else{G=o.merge(G,S)}});if(I){for(var J=0;G[J];J++){if(o.nodeName(G[J],"script")&&(!G[J].type||G[J].type.toLowerCase()==="text\/javascript")){E.push(G[J].parentNode?G[J].parentNode.removeChild(G[J]):G[J])}else{if(G[J].nodeType===1){G.splice.apply(G,[J+1,0].concat(o.makeArray(G[J].getElementsByTagName("script"))))}I.appendChild(G[J])}}return E}return G},attr:function(J,G,K){if(!J||J.nodeType==3||J.nodeType==8){return g}var H=!o.isXMLDoc(J),L=K!==g;G=H&&o.props[G]||G;if(J.tagName){var F=\/href|src|style\/.test(G);if(G=="selected"&&J.parentNode){J.parentNode.selectedIndex}if(G in J&&H&&!F){if(L){if(G=="type"&&o.nodeName(J,"input")&&J.parentNode){throw"type property can't be changed"}J[G]=K}if(o.nodeName(J,"form")&&J.getAttributeNode(G)){return J.getAttributeNode(G).nodeValue}if(G=="tabIndex"){var I=J.getAttributeNode("tabIndex");return I&&I.specified?I.value:J.nodeName.match(\/(button|input|object|select|textarea)\/i)?0:J.nodeName.match(\/^(a|area)$\/i)&&J.href?0:g}return J[G]}if(!o.support.style&&H&&G=="style"){return o.attr(J.style,"cssText",K)}if(L){J.setAttribute(G,""+K)}var E=!o.support.hrefNormalized&&H&&F?J.getAttribute(G,2):J.getAttribute(G);return E===null?g:E}if(!o.support.opacity&&G=="opacity"){if(L){J.zoom=1;J.filter=(J.filter||"").replace(\/alpha\\([^)]*\\)\/,"")+(parseInt(K)+""=="NaN"?"":"alpha(opacity="+K*100+")")}return J.filter&&J.filter.indexOf("opacity=")>=0?(parseFloat(J.filter.match(\/opacity=([^)]*)\/)[1])\/100)+"":""}G=G.replace(\/-([a-z])\/ig,function(M,N){return N.toUpperCase()});if(L){J[G]=K}return J[G]},trim:function(E){return(E||"").replace(\/^\\s+|\\s+$\/g,"")},makeArray:function(G){var E=[];if(G!=null){var F=G.length;if(F==null||typeof G==="string"||o.isFunction(G)||G.setInterval){E[0]=G}else{while(F){E[--F]=G[F]}}}return E},inArray:function(G,H){for(var E=0,F=H.length;E<F;E++){if(H[E]===G){return E}}return -1},merge:function(H,E){var F=0,G,I=H.length;if(!o.support.getAll){while((G=E[F++])!=null){if(G.nodeType!=8){H[I++]=G}}}else{while((G=E[F++])!=null){H[I++]=G}}return H},unique:function(K){var F=[],E={};try{for(var G=0,H=K.length;G<H;G++){var J=o.data(K[G]);if(!E[J]){E[J]=true;F.push(K[G])}}}catch(I){F=K}return F},grep:function(F,J,E){var G=[];for(var H=0,I=F.length;H<I;H++){if(!E!=!J(F[H],H)){G.push(F[H])}}return G},map:function(E,J){var F=[];for(var G=0,H=E.length;G<H;G++){var I=J(E[G],G);if(I!=null){F[F.length]=I}}return F.concat.apply([],F)}});var C=navigator.userAgent.toLowerCase();o.browser={version:(C.match(\/.+(?:rv|it|ra|ie)[\\\/: ]([\\d.]+)\/)||[0,"0"])[1],safari:\/webkit\/.test(C),opera:\/opera\/.test(C),msie:\/msie\/.test(C)&&!\/opera\/.test(C),mozilla:\/mozilla\/.test(C)&&!\/(compatible|webkit)\/.test(C)};o.each({parent:function(E){return E.parentNode},parents:function(E){return o.dir(E,"parentNode")},next:function(E){return o.nth(E,2,"nextSibling")},prev:function(E){return o.nth(E,2,"previousSibling")},nextAll:function(E){return o.dir(E,"nextSibling")},prevAll:function(E){return o.dir(E,"previousSibling")},siblings:function(E){return o.sibling(E.parentNode.firstChild,E)},children:function(E){return o.sibling(E.firstChild)},contents:function(E){return o.nodeName(E,"iframe")?E.contentDocument||E.contentWindow.document:o.makeArray(E.childNodes)}},function(E,F){o.fn[E]=function(G){var H=o.map(this,F);if(G&&typeof G=="string"){H=o.multiFilter(G,H)}return this.pushStack(o.unique(H),E,G)}});o.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(E,F){o.fn[E]=function(G){var J=[],L=o(G);for(var K=0,H=L.length;K<H;K++){$/;"	f
z	java/jdbc/src/org/postgis/Point.java	/^    public double z;$/;"	f	class:Point
z	liblwgeom/g_util.c	/^	int z;$/;"	m	struct:geomtype_struct	file:
z	liblwgeom/lwin_wkt.h	/^	double z;$/;"	m	struct:__anon25
z	liblwgeom/measures3d.h	/^	double	x,y,z;  $/;"	m	struct:__anon32
z	loader/shp2pgsql-core.c	/^	double x, y, z, m;$/;"	m	struct:struct_point	file:
z_to_latitude	liblwgeom/lwgeodetic.c	/^double z_to_latitude(double z, int top)$/;"	f
zcta5	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE zcta5$/;"	t
zcta5	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^CREATE TABLE zcta5$/;"	t
zcta5.aland	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  aland double precision,$/;"	F
zcta5.aland	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  aland double precision,$/;"	F
zcta5.awater	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  awater double precision,$/;"	F
zcta5.awater	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  awater double precision,$/;"	F
zcta5.classfp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  classfp character varying(2),$/;"	F
zcta5.classfp	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  classfp character varying(2),$/;"	F
zcta5.funcstat	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  funcstat character varying(1),$/;"	F
zcta5.funcstat	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  funcstat character varying(1),$/;"	F
zcta5.gid	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  gid serial NOT NULL,$/;"	F
zcta5.gid	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  gid serial NOT NULL,$/;"	F
zcta5.intptlat	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  intptlat character varying(11),$/;"	F
zcta5.intptlat	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  intptlat character varying(11),$/;"	F
zcta5.intptlon	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  intptlon character varying(12),$/;"	F
zcta5.intptlon	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  intptlon character varying(12),$/;"	F
zcta5.mtfcc	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  mtfcc character varying(5),$/;"	F
zcta5.mtfcc	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  mtfcc character varying(5),$/;"	F
zcta5.partflg	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  partflg character varying(1),$/;"	F
zcta5.partflg	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  partflg character varying(1),$/;"	F
zcta5.statefp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  statefp character varying(2),$/;"	F
zcta5.statefp	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  statefp character varying(2),$/;"	F
zcta5.the_geom	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  the_geom geometry,$/;"	F
zcta5.the_geom	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  the_geom geometry,$/;"	F
zcta5.zcta5ce	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  zcta5ce character varying(5),$/;"	F
zcta5.zcta5ce	extras/tiger_geocoder/tiger_2011/upgrade_geocode.sql	/^  zcta5ce character varying(5),$/;"	F
zip_lookup	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE zip_lookup ($/;"	t
zip_lookup.cnt	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    cnt     INTEGER,$/;"	F
zip_lookup.co_code	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    co_code INTEGER,$/;"	F
zip_lookup.county	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    county  VARCHAR(90),$/;"	F
zip_lookup.cousub	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    cousub  VARCHAR(90),$/;"	F
zip_lookup.cs_code	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    cs_code INTEGER,$/;"	F
zip_lookup.pl_code	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    pl_code INTEGER,$/;"	F
zip_lookup.place	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    place   VARCHAR(90),$/;"	F
zip_lookup.st_code	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    st_code INTEGER,$/;"	F
zip_lookup.state	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    state   VARCHAR(2),$/;"	F
zip_lookup.zip	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    zip     INTEGER,$/;"	F
zip_lookup_all	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE zip_lookup_all ($/;"	t
zip_lookup_all.cnt	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    cnt     INTEGER$/;"	F
zip_lookup_all.co_code	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    co_code INTEGER,$/;"	F
zip_lookup_all.county	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    county  VARCHAR(90),$/;"	F
zip_lookup_all.cousub	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    cousub  VARCHAR(90),$/;"	F
zip_lookup_all.cs_code	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    cs_code INTEGER,$/;"	F
zip_lookup_all.pl_code	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    pl_code INTEGER,$/;"	F
zip_lookup_all.place	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    place   VARCHAR(90),$/;"	F
zip_lookup_all.st_code	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    st_code INTEGER,$/;"	F
zip_lookup_all.state	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    state   VARCHAR(2),$/;"	F
zip_lookup_all.zip	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    zip     INTEGER,$/;"	F
zip_lookup_base	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE zip_lookup_base ($/;"	t
zip_lookup_base.city	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    city    VARCHAR(90),$/;"	F
zip_lookup_base.county	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    county  VARCHAR(90),$/;"	F
zip_lookup_base.state	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    state   VARCHAR(40),$/;"	F
zip_lookup_base.statefp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    statefp varchar(2),$/;"	F
zip_lookup_base.zip	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^    zip     varchar(5),$/;"	F
zip_state	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE zip_state$/;"	t
zip_state.statefp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  statefp character varying(2),$/;"	F
zip_state.stusps	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  stusps character varying(2) NOT NULL,$/;"	F
zip_state.zip	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  zip character varying(5) NOT NULL,$/;"	F
zip_state_loc	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^CREATE TABLE zip_state_loc$/;"	t
zip_state_loc.place	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  place varchar(100),$/;"	F
zip_state_loc.statefp	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  statefp character varying(2),$/;"	F
zip_state_loc.stusps	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  stusps character varying(2) NOT NULL,$/;"	F
zip_state_loc.zip	extras/tiger_geocoder/tiger_2011/tables/lookup_tables_2011.sql	/^  zip character varying(5) NOT NULL,$/;"	F
zsize	postgis/lwgeom_functions_analytic.c	/^	double zsize;$/;"	m	struct:gridspec_t	file:
